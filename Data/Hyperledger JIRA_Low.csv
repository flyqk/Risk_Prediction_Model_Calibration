Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Description,Environment,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Blocks),Outward issue link (Cloners),Outward issue link (Duplicate),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Epic Link),Custom field (Rank),Custom field (Root Cause Analysis),Sprint,Sprint,Sprint,Sprint,Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Workaround),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitCommitsReferenced),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
`make images` results in goimports failures,FAB-1,12251,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,bgorman,bgorman,bgorman,7/28/2016 5:40,8/12/2016 1:52,4/26/2018 6:50,8/12/2016 1:52,,,,,,,,,,,0,,,,,"When running `make images` on a cleanly provisioned vagrant VM, I often run into goimports causing fatal errors in the build.

From manually running goimports across some of the files it seems all of the files in ""vendor"" have not been added to the $GOPATH. Goimports seems to assume, if it cannot find the source files, that the package names will be based off the directory name. The go-logging package does not meet this, as its package name is ""logging"". The spf13/viper package is also not found, but uses the expected package name, thus is not removed by goimports.

Short of being able to install the ""vendor"" files into the $GOPATH (I'm not sure if this is desired or not) prior to running goimports, this can be worked around by explicitly labeling go-logging with a custom package name of ""logging"". 

E.g.

import (
    logging ""github.com/op/go-logging""
)

-------------------
build/bin/peer
CGO_CFLAGS="" "" CGO_LDFLAGS=""-lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy"" GOBIN=/hyperledger/build/bin go install github.com/hyperledger/fabric/peer
Binary available as build/bin/peer
build/bin/membersrvc
CGO_CFLAGS="" "" CGO_LDFLAGS=""-lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy"" GOBIN=/hyperledger/build/bin go install github.com/hyperledger/fabric/membersrvc
Binary available as build/bin/membersrvc
cd gotools && make
make[1]: Entering directory `/hyperledger/gotools'
make[2]: Entering directory `/hyperledger/gotools'
Building gomega
go get github.com/onsi/gomega
make[2]: Leaving directory `/hyperledger/gotools'
make[1]: Leaving directory `/hyperledger/gotools'
LINT: Running code checks..
Running go vet
go vet ./consensus/...
go vet ./core/...
go vet ./events/...
go vet ./examples/...
go vet ./membersrvc/...
go vet ./peer/...
go vet ./protos/...
Running goimports
The following files contain goimports errors
consensus/controller/controller.go consensus/executor/executor.go consensus/executor/executor_test.go consensus/helper/handler.go consensus/noops/noops.go consensus/pbft/batch.go consensus/pbft/fuzz_test.go consensus/pbft/pbft-core.go consensus/pbft/pbft-core_test.go consensus/util/events/events.go consensus/util/messagefan.go
The goimports command must be run for these files
The following files contain goimports errors
core/admin.go core/chaincode/config.go core/chaincode/handler.go core/chaincode/platforms/golang/hash.go core/chaincode/shim/chaincode.go core/chaincode/shim/shim_test.go core/comm/connection.go core/config/config.go core/config.go core/container/config.go core/container/dockercontroller/dockercontroller.go core/container/dockercontroller/dockercontroller_test.go core/container/inproccontroller/inproccontroller.go core/container/util/dockerutil.go core/container/util/writer.go core/container/vm.go core/crypto/client_tca.go core/crypto/crypto_settings.go core/crypto/crypto_settings_test.go core/crypto/crypto_test.go core/crypto/node_eca.go core/crypto/node_tlsca.go core/db/db.go core/devops.go core/ledger/blockchain_indexes.go core/ledger/genesis/genesis.go core/ledger/ledger.go core/ledger/perf_test.go core/ledger/perfstat/stat_holder.go core/ledger/statemgmt/buckettree/bucket_cache_test.go core/ledger/statemgmt/buckettree/perf_test.go core/ledger/statemgmt/buckettree/state_impl.go core/ledger/statemgmt/commons.go core/ledger/statemgmt/state/state.go core/ledger/statemgmt/trie/state_trie.go core/ledger/test/ledger_suite_test.go core/ledger/testutil/test_util.go core/logging.go core/logging_test.go core/peer/peer.go core/peer/statetransfer/statetransfer.go core/peer/statetransfer/statetransfer_test.go core/rest/api.go core/rest/api_test.go core/rest/rest_api.go core/system_chaincode/api/sysccapi.go core/system_chaincode/config.go
The goimports command must be run for these files
The following files contain goimports errors
events/config.go events/producer/producer.go
The goimports command must be run for these files
The following files contain goimports errors
examples/chaincode/go/asset_management/app/app.go examples/chaincode/go/asset_management/app/app_internal.go examples/chaincode/go/asset_management/asset_management.go examples/chaincode/go/asset_management02/asset_management02.go examples/chaincode/go/asset_management02/asset_management02_test.go examples/chaincode/go/asset_management_with_roles/asset_management_with_roles.go examples/chaincode/go/asset_management_with_roles/asset_management_with_roles_test.go examples/chaincode/go/chaincode_example02/chaincode_example02_test.go examples/chaincode/go/chaincode_example03/chaincode_example03_test.go examples/chaincode/go/chaincode_example04/chaincode_example04_test.go examples/chaincode/go/chaincode_example05/chaincode_example05_test.go examples/chaincode/go/rbac_tcerts_no_attrs/rbac.go examples/chaincode/go/rbac_tcerts_no_attrs/rbac_test.go
The goimports command must be run for these files
The following files contain goimports errors
membersrvc/ca/aca.go membersrvc/ca/aca_test.go membersrvc/ca/eca_test.go membersrvc/ca/ecap.go membersrvc/ca/tca_test.go membersrvc/ca/tcap.go membersrvc/ca/tlsca_test.go
The goimports command must be run for these files
The following files contain goimports errors
peer/main.go
The goimports command must be run for these files
The following files contain goimports errors
protos/init.go
The goimports command must be run for these files
------------------

vagrant@hyperledger-devenv:v0.0.10-0716064:/hyperledger$ goimports -v -d events/config.go
2016/07/28 04:53:21.992158 fixImports(filename=""events/config.go""), abs=""/hyperledger/events/config.go"", srcDir=""/hyperledger/events"" ...
2016/07/28 04:53:21.993427 importPathToNameGoPathParse(""github.com/op/go-logging"", srcDir=""/hyperledger/events"") = """", cannot find package ""github.com/op/go-logging"" in any of:
        /opt/go/src/github.com/op/go-logging (from $GOROOT)
        /opt/gopath/src/github.com/op/go-logging (from $GOPATH)
2016/07/28 04:53:21.994737 importPathToNameGoPathParse(""github.com/spf13/viper"", srcDir=""/hyperledger/events"") = """", cannot find package ""github.com/spf13/viper"" in any of:
        /opt/go/src/github.com/spf13/viper (from $GOROOT)
        /opt/gopath/src/github.com/spf13/viper (from $GOPATH)
2016/07/28 04:53:21.995069 open /opt/gopath/src/.goimportsignore: no such file or directory
2016/07/28 04:53:21.995241 scanning $GOPATH
2016/07/28 04:53:21.995489 scanning $GOROOT
2016/07/28 04:53:22.019560 scanned $GOROOT
2016/07/28 04:53:22.408786 scanned $GOPATH
diff events/config.go gofmt/events/config.go
--- /tmp/gofmt583448441 2016-07-28 04:53:22.443013329 +0000
+++ /tmp/gofmt079091332 2016-07-28 04:53:22.443013329 +0000
@@ -22,7 +22,6 @@
        ""runtime""
        ""strings""

-       ""github.com/op/go-logging""
        ""github.com/spf13/viper""
 )
---------------------------","Windows 7, running vagrant VM with commit level 0716064b25428ea2426fa589db365c419726b24b",3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,0|i00dvb:,,,,,,bgorman,grapebaba,juliancarrivick,,,,,feature/ca,feature/convergence,master,TRUE,"28/Jul/16 9:49 AM;grapebaba;Yep, I also came across this issue",29/Jul/16 3:23 AM;bgorman;A quick way to test this is `make linter`,"29/Jul/16 3:56 AM;bgorman;Submitted a review: https://gerrit.hyperledger.org/r/#/c/325/

If anyone cares to take a look (or fix it in a better manner) that would be welcome.",29/Jul/16 3:58 AM;juliancarrivick;I think the reason for this is that goimports doesn't seem to search the vendors folder for packages.,29/Jul/16 5:23 AM;bgorman;[~juliancarrivick] yeah you're likely right judging by the goimports output. Perhaps GOPATH should be set correctly in scripts/goimports.sh instead?,"03/Aug/16 3:31 AM;juliancarrivick;Update - [~bgorman] and I figured out what was going on here. When you are in the vagrant machine and you go to `/hyperledger`, `make linter` will fail with the above error. If you go to `$GOPATH/src/github.com/hyperledger/fabric` and run it then it will pass.

Hence `goimports` expects you to be inside the gopath.","03/Aug/16 3:43 AM;bgorman;Found a way simpler method to resolve this. Rather than trying to enforce the package names == directory names that goimports assumes, we can fix the vendoring behaviour in goimports by using `goimports -srcdir $GOPATH/src/github.com/hyperledger/fabric`",04/Aug/16 12:34 AM;bgorman;Changeset got merged in.,,,,,,,,,,,,,,
"When only 1 peer is up, `peer network list` is an empty object",FAB-3,12301,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,jiangyaoguo,juliancarrivick,juliancarrivick,8/5/2016 0:33,8/25/2016 2:04,4/26/2018 6:50,8/25/2016 2:02,,,,,,,,,,,0,,,,,"When the peer is the only peer in the fabric {{peer network list}} results in a response of
{noformat}
{}
{noformat}
When one peer is up it responds with
{noformat}
{""peers"":[{""ID"":{""name"":""vp1""},""address"":""172.17.0.6:7051"",""type"":1}]}
{noformat}

I would expect that when it is the only peer, it would respond with 
{noformat}
{""peers"":[]}
{noformat}",Inside peer,,,,,,,,,,,,,,,,,,,,,,,,,0|i00dvr:,,,,,,jiangyaoguo,juliancarrivick,,,,,,feature/ca,feature/convergence,master,TRUE,"11/Aug/16 6:23 AM;jiangyaoguo;Is there anyone working on this? If no, I can look into it.","11/Aug/16 6:39 AM;juliancarrivick;Go for it!
If you can, assign the issue to yourself (there should be a button above), otherwise I think I can.",25/Aug/16 12:47 AM;juliancarrivick;I believe this is fixed now?,25/Aug/16 2:02 AM;jiangyaoguo;Yes. This has been fixed by https://gerrit.hyperledger.org/r/#/c/485/. I'm not familiar with JIRA. Change status to Done?,25/Aug/16 2:04 AM;juliancarrivick;Yep! :),,,,,,,,,,,,,,,,,
[api] REST /network/peers not consistent with CLI network list,FAB-122,12421,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,angrbrd,angrbrd,8/16/2016 20:33,4/2/2017 12:31,4/26/2018 6:50,4/2/2017 12:31,v0.6,,,,WON'T FIX,,,,,,0,api,,,,"There is an inconsistency between two ways of getting what should be the same information:

REST API /network/peers returns info for all peers.
CLI peer network list excludes the peer running the request.

This API on both REST and CLI should return info for all the nodes.

This issue was originally tracked in GitHub here: https://github.com/hyperledger/fabric/issues/1647",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00edj:,,,,,,angrbrd,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
busywork: Timer overflow,FAB-139,12438,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,bcbrock,bcbrock,bcbrock,8/16/2016 22:42,10/21/2016 22:34,4/26/2018 6:50,10/4/2016 23:52,,,,,,,,,,,0,,,,,See github issue #2379,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00ehb:,,,,,,bcbrock,,,,,,,v0.6,feature/convergence,master,TRUE,,,,,,,,,,,,,,,,,,,,,,
Query result of a string which contains '%' (percent symbol) is converted unexpectedly in the REST API,FAB-240,12541,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,ryokawajp,ryokawajp,8/24/2016 12:26,4/9/2017 21:03,4/26/2018 6:50,4/9/2017 21:03,,,,,,,,,,,0,REST,,,,"h3. Migrated from GitHub:
Query result of a string which contains '%' (percent symbol) is converted unexpectedly in the REST API. · Issue #1517 · hyperledger/fabric
https://github.com/hyperledger/fabric/issues/1517
Please consult the link above for additional comments.

h2. Description
When a Query method of a chaincode returns a string which includes '%' character, it causes a problem that the letters after % is converted to unexpected string, or sometimes removed.
For example, ""100% yuki"" becomes ""100%!y(MISSING)uki"".

This happens in REST API only. CLI is OK.

This behavior is similar to that of fmt.Printf(), where % is a special character.
I tried to read the Fabric source code, but I could not identify the code which causes this conversion.
Is this a known issue?
Any comments are welcome.

h2. Describe How to Reproduce
- Deploy the following chaincode.
- Run a query from REST API. The returned value will be ""100%!y(MISSING)uki"", while the expected value is ""100% yuki"".
- Run a query from CLI. The returned value will be ""100% yuki"". This is correct.
- I used --peer-chaincodedev option.
- I obtained the source code of Fabric on April 24th.
- Go version 1.6 linux/amd64
- security = off

{code}
package main
import (
	""fmt""
	""github.com/hyperledger/fabric/core/chaincode/shim""
)
type SimpleChaincode struct {
}
func (t *SimpleChaincode) Init(stub *shim.ChaincodeStub, function string, args []string) ([]byte, error) {
	return nil, nil
}
func (t *SimpleChaincode) Invoke(stub *shim.ChaincodeStub, function string, args []string) ([]byte, error) {
	return nil, nil
}
func (t *SimpleChaincode) Query(stub *shim.ChaincodeStub, function string, args []string) ([]byte, error) {
	response := ""100% yuki""
	return []byte(response), nil
}
func main() {
	err := shim.Start(new(SimpleChaincode))
	if err != nil {
		fmt.Printf(""Error starting Simple chaincode: %s"", err)
	}
}
{code}
POST /chaincode  body
{code}
{
  ""jsonrpc"": ""2.0"",
  ""method"": ""query"",
  ""params"": {
      ""type"": 1,
      ""chaincodeID"":{
          ""name"":""chaincode_percentbug""
      },
      ""ctorMsg"": {
         ""function"":""query"",
         ""args"":[]
      },
      ""secureContext"": ""test_user0""
  },
  ""id"": 5
}
{code}","- I obtained the source code of Fabric on April 24th.
- Go version 1.6 linux/amd64
- security = off
",,,,,,,,,,,,,,,,,,,,,,,,,0|i00f3b:,,,,,,binhn,corecode,ryokawajp,ynamiki,,,,,,,,24/Aug/16 1:40 PM;corecode;This was https://github.com/hyperledger/fabric/issues/1517,"22/Feb/17 2:35 AM;ynamiki;I cannot reproduce this problem with Docker image ""hyperledger/fabric-peer:x86_64-0.6.1-preview."" Fabric replies ""100% yuki"" for the query.

Already fixed?",09/Apr/17 9:03 PM;binhn;There is no longer REST APIs in Fabric.,,,,,,,,,,,,,,,,,,,
fail to run the process as the github document  says.,FAB-246,12547,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,dongzhuoyao,dongzhuoyao,8/25/2016 4:49,4/12/2017 18:01,4/26/2018 6:50,4/12/2017 18:00,,,,,WON'T FIX,,fabric-docs,,,,0,Documentation,,,,"I have read the doc from [https://github.com/hyperledger/fabric/tree/master/docs|https://github.com/hyperledger/fabric/tree/master/docs],

in the page [https://github.com/hyperledger/fabric/blob/master/docs/Setup/Chaincode-setup.md|https://github.com/hyperledger/fabric/blob/master/docs/Setup/Chaincode-setup.md]:

I will leverage the docker files,and follow the steps,when I  go to :

!question.png|thumbnail! 

CORE_CHAINCODE_ID_NAME=mycc CORE_PEER_ADDRESS=0.0.0.0:30303 ./chaincode_example02

I run it in my host machine,and also run a  ""docker-composer up"" as the Docs say.

but I got the following errors:
{color:red}{color:#59afe1}
chaincode_example02 CORE_CHAINCODE_ID_NAME=mycc CORE_PEER_ADDRESS=0.0.0.0:30303 ./chaincode_example02
09:39:45.942 [shim] DEBU : Peer address: 0.0.0.0:30303
09:39:45.944 [shim] DEBU : os.Args returns: [./chaincode_example02]
09:39:45.947 [shim] DEBU : Registering.. sending REGISTER
2016/08/25 09:39:45 transport: http2Client.notifyError got notified that the client transport was broken read tcp 127.0.0.1:55988->127.0.0.1:30303: read: connection reset by peer.
09:39:45.951 [shim] ERRO : Received error from server: rpc error: code = 13 desc = ""transport is closing"", ending chaincode stream
Error starting Simple chaincode: rpc error: code = 13 desc = ""transport is closing""%
{color}{color}

what shall I do?that's a really simple example but I cannot run it successfully.



",,3600,3600,,0%,3600,3600,,,,,,25/Aug/16 4:44 AM;dongzhuoyao;question.png;https://jira.hyperledger.org/secure/attachment/10045/question.png,,,,,,,,,,,,,0|i00dx3:4,,,,,,ChristopherFerris,dongzhuoyao,,,,,,,,,,"28/Aug/16 10:33 PM;ChristopherFerris;The GitHub repository was transferred to Gerrit, and we left things frozen on GitHub to allow for pull requests and issues to be transferred. It is likely that you had a mismatched version of the software from the documentation. The documentation [1] and the GitHub source [2]  and the DockerHub images [3] have been re-aligned, and you'll notice that we've updated the port assignments. Please try the current documentation
as it carries the correct port assignments.

[1] http://hyperledger-fabric.readthedocs.io/en/latest/
[2] https://github.com/hyperledger/fabric
[3] https://hub.docker.com/u/hyperledger/",12/Apr/17 6:01 PM;ChristopherFerris;Closing because no longer relevant,,,,,,,,,,,,,,,,,,,,
[node-SDK] chain.addPeer() invalid pem parameter accepted,FAB-433,12734,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,harrisob@us.ibm.com,jjjjibm,jjjjibm,9/24/2016 6:49,2/8/2017 15:25,4/26/2018 6:50,2/8/2017 15:25,,,,,,,fabric-sdk-node,,,,0,node-SDK,,,,"I added invalid pem parameters to chain-tests.js

if (chain.addPeer(""grpc://localhost:303030"", """")) {
			// This parameter is optional, so probably empty string should be allowed
			if (chain.addPeer(""grpc://localhost:303031"", bogusPem)) {
				// not a string, so why was it accepted?
				if (typeof bogusPem == 'string' || bogusPem instanceof String) {
					console.log(""BogusPem is a strong"");
				}
				else {
					console.log(""BogusPem is not a string"");
				}
				fail(t, ""peer pem: pem= "" + bogusPem + "" unexpectedly accepted"");
			}
			else {
				pass(t, ""peer pem"");
			}
		}
		else {
			fail(t, ""peer pem: null pem was rejected"");
		}

Here is the output:
# peer pem
BogusPem is not a string
not ok 32 Failure: [peer pem: pem= -12 unexpectedly accepted]: [undefined]

You can also hard code -12 into the test case for a similar result.

How to recreate:
Add the code fragment to one of the sdk/node/test/unit/*.js tests
Run make node-sdk-unit-tests as usual. ",vLaunch VM running master ,,,,,,,,,,,,,,,,,,,,,,,,,0|i00g33:,,,,,,jjjjibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The log is confusing when setting confidentiality level for transaction in newInvokeOrQueryTransaction,FAB-735,13039,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,hanhzf,hanhzf,hanhzf,10/17/2016 23:47,11/17/2016 21:13,4/26/2018 6:50,11/17/2016 21:12,,,,,v0.6,,fabric-peer,,,,0,node-SDK,,,,"Currently the log looks like below: 

       // Set confidentiality level
        if (request.confidential) {
            debug('Set confidentiality on');
            tx.setConfidentialityLevel(_fabricProto.ConfidentialityLevel.CONFIDENTIAL)
        } else {
           {color:red} debug('Set confidentiality on');{color}
            tx.setConfidentialityLevel(_fabricProto.ConfidentialityLevel.PUBLIC)
        }


Both CONFIDENTIAL and PUBLIC are logged as ('Set confidentiality on'), should log as :

{color:#14892c}debug(""Set confidentiality level to CONFIDENTIAL"");
debug(""Set confidentiality level to PUBLIC"");{color}",,14400,14400,,0%,14400,14400,,,,,,,,,,,,,,,,,,,0|hzzztj:,,Sprint 3,Sprint 4 - nodeSDK,Sprint 5 - nodeSDK,,hanhzf,jimthematrix,,,,,,,,,,18/Oct/16 12:18 AM;hanhzf;Fix has been submitted to https://gerrit.hyperledger.org/r/#/c/1823/,17/Nov/16 9:13 PM;jimthematrix;marking this as done (there's no better status to use) as this is not needed any longer in v1.0 code base since confidentiality with encryption is not supported anymore.,,,,,,,,,,,,,,,,,,,,
"""make docker"" failed with error, the ""docker"" command was missed from ""build -t hyperledger/fabric-sdk-py .""",FAB-739,13043,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,hanhzf,hanhzf,hanhzf,10/18/2016 7:28,10/19/2016 13:05,4/26/2018 6:50,10/19/2016 13:05,,,,,v0.6,,fabric-sdk-py,,,,0,,,,,"Current the makefile is:

# Generate the hyperledger/fabric-sdk-py image
.PHONY: docker
docker:
{color:#d04437}        build -t hyperledger/fabric-sdk-py .
{color}


should use {color:#14892c}""docker build -t hyperledger/fabric-sdk-py .""{color}",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00hdl:,,Sprint 2,,,,hanhzf,,,,,,,,,,,18/Oct/16 7:49 AM;hanhzf;code submitted: https://gerrit.hyperledger.org/r/#/c/1833/1,,,,,,,,,,,,,,,,,,,,,
Modifying fabric code and rebuilding docker target(make docker) fails,FAB-1305,13712,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,pmullaney,pmullaney,12/7/2016 23:08,5/11/2017 20:36,4/26/2018 6:50,5/11/2017 20:36,v1.0.0,,,,Unverifiable,,fabric-build,,,,0,,,,,"Updating fabric code and rebuilding with the docker target doesn't seem to update fabric binaries - here is a log:
vagrant@hyperledger-devenv:v0.2.1-3ea19f3:/opt/gopath/src/github.com/hyperledger/fabric$ touch events/producer/eventhelper.go
vagrant@hyperledger-devenv:v0.2.1-3ea19f3:/opt/gopath/src/github.com/hyperledger/fabric$ make docker      
Building build/docker/bin/peer
mkdir -p build/image/peer/payload
cp build/docker/bin/peer peer/core.yaml msp/peer-config.json build/image/peer/payload
Building build/docker/bin/orderer
mkdir -p build/image/orderer/payload
cp build/docker/bin/orderer orderer/orderer.yaml build/image/orderer/payload
vagrant@hyperledger-devenv:v0.2.1-3ea19f3:/opt/gopath/src/github.com/hyperledger/fabric$",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00kgx:,,,,,,ChristopherFerris,greg.haskins,pmullaney,smithbk,,,,,,,,"08/Feb/17 1:06 PM;greg.haskins;Workaround should be ""make clean"" first, thus marking lower priority.","19/Apr/17 1:11 AM;smithbk;Greg, assigning to Anil.  If you want to do this, pls feel free to grab it back.

Anil, I think the only thing needed here is to make the binaries dependent upon the source files, so a change to the source files triggers a rebuild of the binaries which should then trigger a rebuild of the docker image.  You can reproduce the problem as follows:

# make fabric-ca-server
   to build the executable
# touch cmd/fabric-ca-server/main.go
# make fabric-ca-server
   will say it is up-to-date, but it should rebuild
",11/May/17 8:36 PM;ChristopherFerris;this currently works as expected. closing,,,,,,,,,,,,,,,,,,,
"""make peer"" failed when using proxy in curl-style (socks*://) protocol prefixes",FAB-1411,13820,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,oldsharp,oldsharp,oldsharp,12/15/2016 12:08,4/13/2017 23:30,4/26/2018 6:50,4/13/2017 23:30,v1.0.0-alpha1,,,,,,fabric-build,,,,0,proxy,,,,"When run ""make peer"" in the VM env with cmd like:

{{http_proxy='socks5h://socks-proxy.example.com:8080' https_proxy=$http_proxy make peer}}

the build process would fail with error info like:

{quote}make[1]: Entering directory '/opt/gopath/src/github.com/hyperledger/fabric/gotools'
Building github.com/golang/lint/golint -> golint
package golang.org/x/tools/go/gcimporter15: unrecognized import path ""golang.org/x/tools/go/gcimporter15"" (https fetch: Get https://golang.org/x/tools/go/gcimporter15?go-get=1: http: error connecting to proxy http://socks5h://socks-proxy.example.com:8080: dial tcp: lookup socks5h on 10.0.2.3:53: no such host)
Makefile:51: recipe for target 'gotool.golint' failed
make[1]: Leaving directory '/opt/gopath/src/github.com/hyperledger/fabric/gotools'
make[1]: *** [gotool.golint] Error 1
Makefile:56: recipe for target '/opt/gotools/obj/gopath/bin/golint' failed
make: *** [/opt/gotools/obj/gopath/bin/golint] Error 2
Makefile:149: recipe for target 'build/docker/gotools' failed
make: *** [build/docker/gotools] Error 2{quote}

and

{quote}Sending build context to Docker daemon 35.84 kB
Step 1 : FROM hyperledger/fabric-baseimage:x86_64-0.2.2
 ---> 4ac07a26ca7a
Step 2 : RUN wget https://services.gradle.org/distributions/gradle-2.12-bin.zip -P /tmp --quiet
 ---> Running in a65e56a36ff7
The command '/bin/sh -c wget https://services.gradle.org/distributions/gradle-2.12-bin.zip -P /tmp --quiet' returned a non-zero code: 8
Makefile:196: recipe for target 'build/image/javaenv/.dummy-x86_64-0.7.0-snapshot-4cd79b1' failed
make: *** [build/image/javaenv/.dummy-x86_64-0.7.0-snapshot-4cd79b1] Error 8{quote}

The reason could be:
1. ""go get"" doesn't understand the curl-style proxy protocol prefixes.
2. Docker doesn't understand the curl-style proxy protocol prefixes.
3. wget is used to fetch the gradle zip package from remote, which does not understand the curl-style proxy protocol prefixes.

The simplest solution would be switching to a http proxy instead of socks proxy (e.g. http://http-proxy.example.com:8080/).
The 'socks5h' prefix supported by curl which force the proxy resolve the host name could be extremely useful in some situation, however, especially when facing network env with a high DNS spoofing possibility.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00l21:,,,,,,oldsharp,,,,,,,master,,,TRUE,15/Dec/16 1:44 PM;oldsharp;I'm working on this issue: https://gerrit.hyperledger.org/r/#/c/3325/,,,,,,,,,,,,,,,,,,,,,
Unstable re-compiling after `make peer` fails ,FAB-1412,13821,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,greg.haskins,baohua,baohua,12/15/2016 12:43,11/1/2017 15:26,4/26/2018 6:50,11/1/2017 15:26,v1.0.0,,,,Future,,fabric-peer,,,,0,won't-fix,,,,"With latest master branch code (0eadb03506cfde78ea790c6d98d7eb0af98e5842).

1. install those git/go env.

2. run `make peer`. It may fail on getting gcimporter15 pkg due to network problem sometimes. Or other reason to let the make progress fail once.
```sh
$ make peer                                                                                                  1 ↵
make[1]: Entering directory '/opt/gopath/src/github.com/hyperledger/fabric/gotools'
Building github.com/golang/lint/golint -> golint
package golang.org/x/tools/go/gcimporter15: unrecognized import path ""golang.org/x/tools/go/gcimporter15"" (https fetch: Get https://golang.org/x/tools/go/gcimporter15?go-get=1: dial tcp 74.125.130.141:443: i/o timeout)
make[1]: *** [gotool.golint] Error 1
Makefile:51: recipe for target 'gotool.golint' failed
make[1]: Leaving directory '/opt/gopath/src/github.com/hyperledger/fabric/gotools'
Makefile:56: recipe for target '/opt/gotools/obj/gopath/bin/golint' failed
make: *** [/opt/gotools/obj/gopath/bin/golint] Error 2
make: *** [build/docker/gotools] Error 2
```

3. Manually install the gcimporter15 pkg through `go get`, or just ignore.

4. Re-run `make peer` without `make clean`.
```sh
$ make peer
Installing chaintool
curl -L https://github.com/hyperledger/fabric-chaintool/releases/download/v0.10.0/chaintool > build/bin/chaintool
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   582    0   582    0     0    442      0 --:--:--  0:00:01 --:--:--   442
100 14.6M  100 14.6M    0     0   166k      0  0:01:30  0:01:30 --:--:--  288k
chmod +x build/bin/chaintool
Creating build/goshim.tar.bz2
mkdir -p build/image/ccenv/payload
cp build/docker/gotools/bin/protoc-gen-go build/bin/chaintool build/goshim.tar.bz2 build/image/ccenv/payload
cp: cannot stat ‘build/docker/gotools/bin/protoc-gen-go’: No such file or directory
make: *** [build/image/ccenv/payload] Error 1
```
",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00l29:,,Sprint 4,,,,baohua,greg.haskins,jeffgarratt,,,,,,,,,"15/Dec/16 12:55 PM;baohua;It seems the `make peer` cannot repeat when error happens. 

We need to run `make clean` first.

However, we may try to see how to make the progress more robust.","16/Dec/16 5:47 AM;baohua;Even run `make linter`, will building the images like baseimage. 

I suggest we move those image building part to `make images`, instead of triggering implicitly.","08/Feb/17 1:05 PM;greg.haskins;Moving to low priority since workaround is to ""make clean"" first.","09/Feb/17 3:26 AM;baohua;Thanks, Greg.
Any idea to decouple those image building steps from the binary building?",26/Oct/17 7:51 PM;jeffgarratt;[~greg.haskins] is this something we can close?,01/Nov/17 3:26 PM;jeffgarratt;[~baohua] [~greg.haskins] Closing.. reopen if necessary.,,,,,,,,,,,,,,,,
unit test failure with sbft,FAB-1450,13859,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,hgabre,pmullaney,pmullaney,12/19/2016 20:07,10/2/2017 11:55,4/26/2018 6:50,10/2/2017 11:55,,,,,Future,,fabric-orderer,,,,0,sbft,,,,"I am experiencing a build failure unrelated to my change(https://gerrit.hyperledger.org/r/#/c/3307/1). Log shows failure in sbft:

19:34:04 [33munit-tests_1  |[0m 2016/12/19 19:34:04 replica 6: executing seq:2  e69469048407c1c8540cbf6553add76054d189104c8334703fd02d60c8c78f80
19:34:04 [33munit-tests_1  |[0m FAIL
19:34:04 [33munit-tests_1  |[0m coverage: 76.0% of statements
19:34:04 [33munit-tests_1  |[0m FAIL	github.com/hyperledger/fabric/orderer/sbft/simplebft	0.393s
19:34:04 [33munit-tests_1  |[0m error: exit status 1
19:34:04 [33munit-tests_1  |[0m panic: EOF
19:34:04 [33munit-tests_1  |[0m 
19:34:04 [33munit-tests_1  |[0m goroutine 1 [running]:
19:34:04 [33munit-tests_1  |[0m panic(0x4daca0, 0xc42006c020)
19:34:04 [33munit-tests_1  |[0m 	/opt/go/src/runtime/panic.go:500 +0x1a1
19:34:04 [33munit-tests_1  |[0m main.main()
19:34:04 [33munit-tests_1  |[0m 	/opt/gotools/obj/gopath/src/github.com/AlekSi/gocov-xml/gocov-xml.go:60 +0x15fd
19:34:06 [33munittest_unit-tests_1 exited with code 2
19:34:06 [0mStopping unittest_vp_1 ... 
19:34:17 [1A[2K
Stopping unittest_vp_1 ... done",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00jb1:,,,,,,ChristopherFerris,kchristidis,pmullaney,vukolic,,,,,,,,11/Apr/17 6:18 PM;kchristidis;There is no reason for this to be tagged with v1.0.0 since sbft is not a valid option for v1.0.0 to begin with.,14/Apr/17 12:39 AM;ChristopherFerris;[~kchristidis] that may have been me. If sbft is for v1.1 then please mark as affects v1.1 and fixVersion v1.1.,,,,,,,,,,,,,,,,,,,,
"Fix unnessary errorf, fatalf statement in configtx package",FAB-1482,13891,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,grapebaba,grapebaba,grapebaba,12/28/2016 7:19,12/31/2016 12:33,4/26/2018 6:50,12/31/2016 12:33,,,,,v1.0.0,,fabric-peer,,,,0,,,,,"Fix unnessary errorf, fatalf statement, use errors.New, t.Error, t.Fatal instead",,14400,14400,,0%,14400,14400,,,,,,,,,,,,,,,,,,,0|i00lft:,,Sprint 4,,,,grapebaba,mastersingh24,,,,,,master,,,TRUE,28/Dec/16 4:03 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/3551/,,,,,,,,,,,,,,,,,,,,,
"Go version dependency has been changed in v1.0, but the devenv.md is not updated yet",FAB-1498,13907,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,hanhzf,hanhzf,hanhzf,1/2/2017 13:07,1/6/2017 1:25,4/26/2018 6:50,1/6/2017 1:25,,,,,v1.0.0,,,,,,0,Documentation,,,,"I pulled the latest code of hyperledger and tried to build the peer binary, then following error was met:


	vagrant@hyperledger-devenv:v0.0.10-e3b2d3f:/hyperledger$ make peer

	/opt/gopath/src/github.com/hyperledger/fabric/core/committer/txvalidator/validator.go:20:2: cannot find package ""context"" in any of:
		/opt/gopath/src/github.com/hyperledger/fabric/vendor/context (vendor tree)
		/opt/go/src/context (from $GOROOT)
		/opt/gopath/src/context (from $GOPATH)
	make: *** [build/bin/peer] Error 1

This is because the Go version fabric depends on is 1.7 and later. Also I found thisin fabric-baseimage, the Golang has been moved to v1.7.3. I met this problem because my local fabric base-image is not updated.

but the dev environment setup guide(fabric/docs/dev-setup/devenv.md) is not updated, which confuses me.

	Prerequisites
	* [Git client](https://git-scm.com/downloads)
	* [Go](https://golang.org/) - 1.6 or later


I suggest update the Go version in devenv.md.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00lj5:,,,,,,hanhzf,,,,,,,master,,,TRUE,02/Jan/17 2:28 PM;hanhzf;doc updated by: https://gerrit.hyperledger.org/r/#/c/3587/,"06/Jan/17 1:25 AM;hanhzf;code merged, close this issue.",,,,,,,,,,,,,,,,,,,,
Documentation for contribution points to deprecated git repo ,FAB-1532,13942,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,RichardHill,RichardHill,RichardHill,1/6/2017 0:36,4/2/2017 13:51,4/26/2018 6:50,4/2/2017 13:51,,,,,v1.0.0,,fabric-quality,,,1/6/2017 0:00,0,Documentation,,,,"Documentation for contribution points to deprecated git repo 

The file CONTRIBUTING.md  in  https://gerrit.hyperledger.org/r/gitweb?p=fabric.git;a=blob_plain;f=docs/CONTRIBUTING.md;hb=HEAD  points to github when jira is being used to store issues needing work.",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,0|i00lpl:,,,,,,RichardHill,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Able to create a channel without running a peer,FAB-1988,14490,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,muralisr,latitiah,latitiah,2/1/2017 16:16,4/2/2017 16:40,4/26/2018 6:50,4/2/2017 16:39,,,,,v1.0.0,,fabric-peer,,,,0,,,,,"Stumbled upon this while trying to set up a channel between 2 peers. It is possible to create a channel before a peer is running. An error is displayed only when trying to join the channel. ```Error: Error getting endorser client channel: PEER_CONNECTIONERROR - Error trying to connect to local peer: grpc: timed out when dialing```

An error or at least a warning should be generated if a peer is not running when a channel is created.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00ohl:,,,,,,C0rWin,latitiah,mastersingh24,,,,,,,,,"28/Feb/17 7:54 AM;C0rWin;Hi, 

The ability of creating a channel is not really related to the fact whenever peer is running or not, since channel created by submitting genesis block to the ordering service. In fact the peer doesn't have to be up and running, moreover later when peer joins the channel ordering service doesn't have to be available.",02/Apr/17 1:49 PM;mastersingh24;[~latitiah] - is this still an issue?,02/Apr/17 4:40 PM;latitiah;Closing this issue as this works as designed.  Thanks! ,,,,,,,,,,,,,,,,,,,
proto code generator has indent problems,FAB-2039,14542,Bug,Backlog,FAB,Fabric,software,ChristopherFerris,,,Low,,greg.haskins,greg.haskins,greg.haskins,2/4/2017 14:02,4/5/2018 17:43,4/26/2018 6:50,,,,,,v1.2,,fabric-chaintool,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00os1:,,,,,,ChristopherFerris,greg.haskins,,,,,,,,,,"19/Jan/18 2:11 PM;Clayton Sims;this was marked future a while back,  you ok with this post v1.1?   we are trying to lock down v1.1 ",05/Apr/18 5:16 PM;ChristopherFerris;[~greg.haskins] is this still valid?,"05/Apr/18 5:43 PM;greg.haskins;Yeah, im making some other passes through chaintool so lets just mark any outstanding ones as v1.2 and shoot for that.",,,,,,,,,,,,,,,,,,,
ccenv/goshim build is overzealous in files selected for inclusion,FAB-2211,14769,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,greg.haskins,greg.haskins,2/13/2017 15:20,2/28/2017 2:17,4/26/2018 6:50,2/28/2017 2:17,,,,,v1.0.0,,fabric-peer,,,,0,,,,,"The current build uses a combination of ""go list .Deps"" and ""find"" to build a list of files to include in the ccenv container.  This means that files like core/chaincode/shim/java/*.class might be included since core/chaincode/shim is subordinate to the chaincode shim.  Aside from being suboptimal/confusing, this may sometimes lead to problems compiling.  This should be cleaned up.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00pqp:,,,,,,greg.haskins,,,,,,,master,,,TRUE,14/Feb/17 3:27 PM;greg.haskins;Fix submitted: https://gerrit.hyperledger.org/r/#/c/5953/,,,,,,,,,,,,,,,,,,,,,
Missing formatting for peer debug log messages,FAB-2244,14804,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,murrekatt,murrekatt,murrekatt,2/15/2017 12:48,4/11/2017 19:33,4/26/2018 6:50,4/11/2017 19:33,,,,,,,fabric-endorser,,,,0,,,,,Should use debug logging with formatting.,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzhy:zz9xr6r,,,,,,murrekatt,,,,,,,master,,,TRUE,,,,,,,,,,,,,,,,,,,,,,
License header comment missing from test code files,FAB-2252,14812,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,pschnap,pschnap,2/15/2017 16:48,2/15/2017 20:01,4/26/2018 6:50,2/15/2017 18:52,,,,,v1.0.0,,fabric-sdk-java,,,,0,v1.0,,,,"Some of the code files in the SDK tests, e.g. End2endIT.java, are missing the licensing header comment.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00q01:,,,,,,pschnap,rickr,tuand,,,,,master,,,TRUE,15/Feb/17 5:20 PM;rickr;trying to get this addressed with https://gerrit.hyperledger.org/r/#/c/6007/https://gerrit.hyperledger.org/r/#/c/6007/ yet,15/Feb/17 6:51 PM;tuand;https://gerrit.hyperledger.org/r/#/c/6065/,,,,,,,,,,,,,,,,,,,,
Search doesn't maintain apostrophe in heading name,FAB-2338,14900,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,joshhus,joshhus,2/17/2017 16:46,4/16/2017 13:19,4/26/2018 6:50,4/16/2017 13:19,,,,,v1.0.0,WON'T FIX,fabric-docs,,,,0,,,,,"Strange (minor) bug in the RTD search results: they don't pick up / display punctuation in a heading name. e.g. What's Included >> What s Included in the search results.

See ""The pieces"" section:

http://fabric-rtd.readthedocs.io/en/latest/search.html?q=v1.0",,,,,,,,,,,,,,,,,,,,,,,,,FAB-2277,0|hzzz8a:zzzz,,Sprint 12 - Documentation,Sprint 13 - Documentation,Sprint 14 - Documentation,Sprint 15 - Documenation,ChristopherFerris,joshhus,,,,,,,,,,"16/Apr/17 1:19 PM;ChristopherFerris;This is not a Fabric bug, but a RTD bug if anything. closing.",,,,,,,,,,,,,,,,,,,,,
[FAB-DOC]character ` is put in a wrong position in the capture Architecture Deep Dive section 2.11,FAB-2398,14961,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,alexliu,alexliu,alexliu,2/21/2017 4:34,5/12/2017 16:45,4/26/2018 6:50,4/21/2017 20:30,,,,,v1.0.0,,fabric-docs,,,,0,Documentation,,,,"in the Capture `Architecture Deep Dive` Section `2.11`,i found a character ""`"" outside.
marked it in pic attachment.",,,,,,,,,,,,,21/Feb/17 4:34 AM;alexliu;Screen Shot 2017-02-20 at 10.17.35 PM.png;https://jira.hyperledger.org/secure/attachment/10524/Screen+Shot+2017-02-20+at+10.17.35+PM.png,,,,,,,,,,,,,0|i00qux:,,,,,,alexliu,ChristopherFerris,,,,,,master,,,TRUE,21/Feb/17 6:20 AM;alexliu;commit https://gerrit.hyperledger.org/r/#/c/6309/,21/Feb/17 6:32 AM;alexliu;https://gerrit.hyperledger.org/r/#/c/6309/,16/Apr/17 1:38 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/#/c/8083/,,,,,,,,,,,,,,,,,,,
Use preferred form of CMD instruction in Dockerfile.in,FAB-2500,15067,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,sanchezl,sanchezl,sanchezl,2/27/2017 15:29,2/28/2017 17:53,4/26/2018 6:50,2/28/2017 17:53,,,,,,,fabric-devenv,,,,0,quality,,,,"The array form of the Dockerfile CMD instruction is preferred over the ""shell"" form of the instruction. The shell form of the instruction starts a shell first, and then executes the command, resulting in an extra process in the container. ",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00rft:,,,,,,sanchezl,,,,,,,master,,,TRUE,,,,,,,,,,,,,,,,,,,,,,
proposal with 0 endorsers returns cryptic error,FAB-2538,15105,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,harrisob@us.ibm.com,greg.haskins,greg.haskins,2/28/2017 16:23,8/9/2017 19:42,4/26/2018 6:50,7/14/2017 21:43,,,,,v1.0.1,,fabric-sdk-node,,,,0,help-wanted,,,,"passing a proposalResponse to chain.sendTransaction() with 0 endorsers will return a very cryptic error:

{noformat}
Error: Illegal value for [object Object] of type message: object (object expected)
{noformat}

While trying to commit a proposal with 0 endorsers is not a valid use case, the code should probably gracefully handle this scenario with a more appropriate error.
",,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz6a:rhw9,,Sprint 13 - SDK node,Sprint 14 - SDK node,Sprint 15 - SDK node,,greg.haskins,harrisob@us.ibm.com,,,,,,release-1.0,master,,TRUE,13/Jul/17 9:42 PM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/11637/,,,,,,,,,,,,,,,,,,,,,
node sdk isn't always using the file keystore requested,FAB-2593,15160,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,davidkel,davidkel,3/2/2017 11:33,3/17/2017 8:48,4/26/2018 6:50,3/17/2017 8:48,,,,,v1.0.0,,fabric-sdk-node,,,,0,node-SDK,,,,"In our code we provide a directory to use for the filekeystore to use as follows

{code:javascript}
           LOG.debug(method, 'Using key value store', connectOptions.keyValStore);
            result = Client.newDefaultKeyValueStore({
                path: connectOptions.keyValStore
            })
            .then((store) => {
                client.setStateStore(store);
                return store;
            })
            .catch((error) => {
                LOG.error(method, error);
                throw error;
            });
        }

        return result.then((store) => {

            // Create a CA client.
            const caClient = HLFConnectionManager.createCAClient(connectOptions.ca, {
                path: connectOptions.keyValStore
            });
{code}
However it would appear that the default of .hfc-key-store is still being used as I see this being created and a public key has been ceated in the directory.

in our defined keystore
{quote}
-rw-rw-r--  1 vagrant vagrant  246 Mar  2 09:06 81c34cc4a7a2b034ab43d5c41a8738f02d1ebee40ca18bc8818c71db223d063b-priv
-rw-rw-r--  1 vagrant vagrant  968 Mar  2 09:06 admin
{quote}

in .hfc-key-store
{quote}
-rw-rw-r--  1 vagrant vagrant  182 Mar  2 09:06 81c34cc4a7a2b034ab43d5c41a8738f02d1ebee40ca18bc8818c71db223d063b-pub
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzbe:zzv,,Sprint 13 - SDK node,Sprint 14 - SDK node,,,davidkel,,,,,,,,,,,"02/Mar/17 11:47 AM;davidkel;With the latest (downloaded today 2nd March) I get the following error if I try to define a keystore path other than ~/.hfc-key-store

{code}
2017-03-02T10:11:04.963Z ERROR   HLFConnection            :login()                   {""message"":""Private key missing from key store. Can not establish the signing identity for user admin"",""stack"":""Error: Private key missing from key store. Can not establish the signing identity for user admin\n    at cryptoPrimitives.importKey.then.then (/home/vagrant/src/fabric-sdk-node/fabric-client/lib/User.js:234:11)""}$
Error: Private key missing from key store. Can not establish the signing identity for user admin
{code}
The only solution is to define the keystore path to be .hfc-key-store.","16/Mar/17 5:08 PM;davidkel;As of 16th March, using the fabric-client and fabric-ca-client 0.2.3 I still cannot define a keystore other than .hfc-key-store. To clarify our code does the following
{code}
result = Client.newDefaultKeyValueStore({
    path: connectOptions.keyValStore
})
{code}
and
{code}
static createCAClient(ca, keyValStore) {
    return new FabricCAClientImpl(ca, keyValStore);
}
const caClient = HLFConnectionManager.createCAClient(connectOptions.ca, {
    path: connectOptions.keyValStore
});
{code}
so I think I am setting everything up correctly, but things still fail. The error I get now is
{code}
2017-03-16T15:50:11.465Z ERROR   HLFConnection            :login()                   {""message"":""Invalid parameter. Must have a valid mspId."",""stack"":""Error: Invalid parameter. Must have a valid mspId.\n    at User.setEnrollment (/home/vagrant/src/fabric-composer/packages/composer-connector-hlfv1/node_modules/fabric-client/lib/User.js:162:10)\n    at caClient.enroll.then (/home/vagrant/src/fabric-composer/packages/composer-connector-hlfv1/lib/hlfconnection.js:156:29)\n    at process._tickCallback (internal/process/next_tick.js:103:7)""}$
{code}

If I use .hfc-key-store as my connectOptions.keyValStore then everything works fine.
 ","17/Mar/17 8:48 AM;davidkel;Ahh, I see the api has changed and that if you are the actual code to enroll then you must provide an MSPid. If already enrolled then you don't. made changes for that and now it's working as required. 
I've changed code to accomodate and now tests pass.
Many thanks",,,,,,,,,,,,,,,,,,,
"TX redelivered when stop kafka brokers 0 1 2 start 2 1 0, when 500,000 TX",FAB-2604,15171,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,scottz,scottz,scottz,3/2/2017 17:16,9/28/2017 15:43,4/26/2018 6:50,9/28/2017 15:43,v1.0.0-beta,,,,Unverifiable,,fabric-orderer,,,,0,kafka,,,,"An extra transaction is delivered. It seems it may be happening after kafka brokers restart, after having been stopped. It is hard to reproduce and seems to require lots of traffic running (500,000 TX, but not reproduced with 300,000). 

Execute OTE test ORD97, sending 500,000 TXs to 3 orderers (and 3 kafka brokers), using this sequence:
###       docker stop kafka0 && sleep 20 && docker stop kafka1 && sleep 20 && docker stop kafka2 && sleep 20 && docker start kafka2 && sleep 20 && docker start kafka1 && sleep 20 && docker start kafka0

 .../fabric/bddtests/regression/go/ote$     go test -timeout 30m -run ORD97
========== OTE testname=ORD-97 TX=500000 Channels=1 Orderers=3 ordererType=kafka kafka-brokers=3 oteSpy=OFF
Using DEFAULT channelID = testchainid
",,,,,,,,,,,,,06/Jun/17 7:21 PM;suryalnvs;docker-compose-base.yaml;https://jira.hyperledger.org/secure/attachment/10961/docker-compose-base.yaml,06/Jun/17 7:21 PM;suryalnvs;docker-compose-cli.yaml;https://jira.hyperledger.org/secure/attachment/10960/docker-compose-cli.yaml,02/Mar/17 5:58 PM;scottz;fail_PlusExtraTX_ORD97.txt;https://jira.hyperledger.org/secure/attachment/10554/fail_PlusExtraTX_ORD97.txt,02/Mar/17 5:14 PM;scottz;fail_extraTX_ORD97_3.txt;https://jira.hyperledger.org/secure/attachment/10553/fail_extraTX_ORD97_3.txt,06/Jun/17 7:21 PM;suryalnvs;kafka0.log;https://jira.hyperledger.org/secure/attachment/10962/kafka0.log,06/Jun/17 7:21 PM;suryalnvs;kafka1.log;https://jira.hyperledger.org/secure/attachment/10963/kafka1.log,06/Jun/17 7:21 PM;suryalnvs;kafka2.log;https://jira.hyperledger.org/secure/attachment/10964/kafka2.log,06/Jun/17 7:21 PM;suryalnvs;kafka3.log;https://jira.hyperledger.org/secure/attachment/10965/kafka3.log,06/Jun/17 7:22 PM;suryalnvs;orderer0.log;https://jira.hyperledger.org/secure/attachment/10966/orderer0.log,06/Jun/17 7:22 PM;suryalnvs;orderer1.log;https://jira.hyperledger.org/secure/attachment/10967/orderer1.log,06/Jun/17 7:22 PM;suryalnvs;orderer2.log;https://jira.hyperledger.org/secure/attachment/10968/orderer2.log,06/Jun/17 7:27 PM;suryalnvs;ote_FAB2604.log;https://jira.hyperledger.org/secure/attachment/10969/ote_FAB2604.log,,0|i00s29:,,,,,,kchristidis,scottz,suryalnvs,,,,,,,,,"02/Mar/17 6:08 PM;scottz;Attached test output logs fail_PlusExtraTX_ORD97.txt, where you can see a block delivered at 17:54:06 containing less than 10 TXs, approx 11 seconds after the last kafka-broker was restarted (and 30 seconds after the 2nd one was restarted). The funny thing is that (refer to FAB-2575) there are no more transactions being acknowledged by the orderers after 17:52:55, when the service became unavailable. So this blocknyumber 4106 with 4 Transactions must have been sitting in the kafka-brokers when they were stopped and only got delivered after the KBs recovered.

Note this (extra/duplicate TX delivered) does not happen every time. Sometimes the orderers all stay in sync and all deliver the same number of transactions that were ACKd.","04/Jun/17 11:20 PM;suryalnvs;I tried the above scenario multiple times using *OTE testname=ORD-97 TX=100000 Channels=1 Orderers=3 ordererType=kafka kafka-brokers=3 oteSpy=OFF producersPerCh=1* on commit *3b40efaee8584fd2662c59c0f7fc5a1a18c38f58*, Date: Fri Jun 2 03:00:52 2017 +0000 in vagrant and TLS enabled. I can see an extra transaction being delivered described as above. Also attaching the log for reference.","05/Jun/17 3:44 AM;kchristidis;Thanks for re-running this. I have the following questions:
 # What is your setup? Can you please attach your docker-compose.yml file? You bring down 3 brokers and the log says ""All the kafka brokers are restarted"" but the default configuration we should be using employs 4 brokers. Why the difference?
 # You send 500K transactions to the ordering service. Do you wait for a SUCCESS response before sending the next transaction? (Not implying you should, but trying to get a better sense of _how_ the test works.)
 # I'll also need an almost line-by-line explanation of the attached log. Which lines in the log are considered OK, and which are normal? Is ""Producer-o2-c0 failed to broadcast TX 19488 (ACK=19488 NACK=1), 2017-06-04 23:07:16.629858188 +0000 UTC, err: Got unexpected status: SERVICE_UNAVAILABLE"" an expected line? I don't know. What does ""Producer-o2-c0 broadcast error delay period (120) ended (ACK=19488 NACK=120), 2017-06-04 23:09:16.776974927 +0000 UTC"" mean? What does ""Broadcast error on last TX 166666 of Producer-o2-c0: EOF"" mean? What does ""Producer-o2-c0 finished sending broadcast msgs: ACKs 19488 NACK 147178 (errDelayCntr 120) Other 0 , 2017-06-04 23:09:27.425772331 +0000 UTC"" mean?
 # Does each transaction carry a unique payload? If not, can we make it unique? And then, can we modify the test so that it returns a list of the ACK'd transactions? This way we can compare that list with the list retrieved by the orderers (via a Deliver RPC with start = oldest and stop = newest) and quickly identify the extra transaction.
 # Related to the above, the title refers to this extra transaction as ""redelivered"". How are we certain that this is the case? Do we already use a method such as the one described in step 4? If not, it may well be a transaction from the NACK set, or a Kafka-internal CONNECT or TTX transaction that gets packaged into the blocks when it shouldn't.

Given the difficulty of reproducing this, it is important that we get detailed logs from the faulty run, by setting `ORDERER_KAFKA_VERBOSE=true` as in the [preferred configuration files|https://github.com/hyperledger/fabric/blob/master/bddtests/dc-orderer-base.yml#L17] and following the suggestion in step 4. Please also attach the logs from every ordering service node used in this run.","05/Jun/17 8:46 PM;suryalnvs;[~kchristidis] Attached the docker-compose files, kafka3 and orderer0 logs with kafka verbose set to true.","05/Jun/17 8:53 PM;kchristidis;[~suryalnvs]: Thank you for this. Can you please have a look at the questions I posted above, and let me know what the answers are?","05/Jun/17 9:00 PM;kchristidis;Also, can you please provide the orderer logs for all OSNs?","06/Jun/17 1:41 AM;scottz; 
1. docker-compose.yml file was attached today. We reran the test and obtained new logs using VERBOSE and 4 or 5 kafka brokers. Surya can explain exactly the details, if you would like to sit and review together.
 
2. Producer client sends a msg, waits for a TX Ack (i.e. not a delivery), and proceeds to next one.
 
3. We can get together tomorrow and explain it. Agree it can be confusing at first. When we take down an orderer to which a producer is connected, that producer will see NACKs counted thereafter until it finishes sending the planned number of transactions. (It slows down to 1 per second for a couple minutes, to give the restarted orderer or KB a chance to recover and have possible success in future transactions; otherwise it zips through the rest of its allotment too quickly.) The 503 is when kafkabrokers are not available, and also leads to a NACK, although in this case the orderer is still working fine (and knows there are not enough KBs to provide a service).
 
4.Yes, each transaction includes a string with the producer/orderer/channel and a timestamp. That could be a huge number of transactions to dump for each orderer. Do you really need to see ACKd transactions? I would think you want to see the Delivered blocks of transactions, and just check them for duplicates.
 
5. We are not certain; we are just counting delivered TXs. How could orderer deliver a NACK'd transaction? If you know what the kafka-internal transactions differ from ours, we might be able to quickly search for them too.","06/Jun/17 7:45 PM;suryalnvs;I reran the above scenario multiple times with the modifications suggested to use 4 KBs and set MIN_ISR=2. The goal is still to stop enough KBs such that the network halts for a time period, in this case we stop 3 out of the 4.

So today we were using *OTE testname=ORD-97 TX=500000 Channels=1 Orderers=3 ordererType=kafka kafka-brokers=4 oteSpy=OFF producersPerCh=1* on commit *c50e0dd1ca1ea96cb69503fc83a302c53eff96a6**,* ***Date: Tue Jun 6 13:36:08 2017 +0000* in vagrant and TLS enabled. 
The test is to basically restart the 3 kafka brokers out of 4 when sending the traffic to orderers (kafka_min_insync=2). The restart of the kafka brokers is done using the command ""{color:#14892c}docker stop kafka0 && sleep 20 && docker stop kafka1 && sleep 20 && docker restart kafka2 && sleep 20 && docker start kafka1 && sleep 20 && docker start kafka0{color}"" among the available 4 kafka brokers and observed successful delivery of all the transactions to orderers and batching up transactions into blocks in the orderers. The test is able to pass successfully and this issue is not reproducible.  

 ","06/Jun/17 7:56 PM;kchristidis;Thank you both for your help in figuring this out. Closing this, but if you see something fishy, feel free to reopen.","21/Jun/17 7:31 PM;scottz;Reproduced again today using beta+ load. As suggested previously, we will proceed to try to identify the extra transactions, to confirm if they are actually extra or redelivered transactions or if they are some other thing causing counts to be incorrect.","21/Jun/17 9:32 PM;suryalnvs;ubuntu@hyperledger-devenv:307c903:/opt/gopath/src/github.com/hyperledger/fabric/test/tools/OTE$ *go test -run ORD97 -timeout 120m*
==========
========== OTE testname=ORD-97 TX=500000 Channels=1 Orderers=3 ordererType=kafka kafka-brokers=4 oteSpy=DEFER producersPerCh=1
OTE_MASTERSPY=<ignored>                            masterSpy=DEFER
OTE_SPY_ORDERER=                                   spyOrd=0
CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=        batchSize=500
CONFIGTX_ORDERER_BATCHTIMEOUT=                     batchTimeout=30
CORE_LOGGING_LEVEL=
CORE_LEDGER_STATE_STATEDATABASE=
Launching network:  cd ../../../examples/fabric-docker-compose-svt && ./network_setup.sh -s -n 1
Results of exec command: docker ps -a
stdout=CONTAINER ID        IMAGE                          COMMAND                  CREATED             STATUS                              PORTS                                              NAMES
85268eb965cf        hyperledger/fabric-testenv     ""/bin/bash -c 'sle...""   47 seconds ago      Exited (0) Less than a second ago                                                      cli
2d78b9204bae        hyperledger/fabric-orderer     ""orderer""                48 seconds ago      Up 47 seconds                       0.0.0.0:9050->7050/tcp                             orderer2.example.com
94d4ca1d6047        hyperledger/fabric-orderer     ""orderer""                48 seconds ago      Up 47 seconds                       0.0.0.0:7050->7050/tcp                             orderer0.example.com
d74c63593c10        hyperledger/fabric-orderer     ""orderer""                48 seconds ago      Up 47 seconds                       0.0.0.0:8050->7050/tcp                             orderer1.example.com
fea725a956b7        hyperledger/fabric-kafka       ""/docker-entrypoin...""   50 seconds ago      Up 49 seconds                       9093/tcp, 0.0.0.0:9094->9092/tcp                   kafka1
5934f071f92f        hyperledger/fabric-kafka       ""/docker-entrypoin...""   50 seconds ago      Up 49 seconds                       9093/tcp, 0.0.0.0:9096->9092/tcp                   kafka2
e0a02835dca1        hyperledger/fabric-kafka       ""/docker-entrypoin...""   50 seconds ago      Up 49 seconds                       0.0.0.0:9092->9092/tcp, 9093/tcp                   kafka0
2835dd643611        hyperledger/fabric-kafka       ""/docker-entrypoin...""   50 seconds ago      Up 48 seconds                       9093/tcp, 0.0.0.0:9098->9092/tcp                   kafka3
0523b6a2361f        hyperledger/fabric-peer        ""peer node start -...""   53 seconds ago      Up 50 seconds                       0.0.0.0:9051->7051/tcp, 0.0.0.0:9053->7053/tcp     peer0.org2.example.com
19be3bde454d        hyperledger/fabric-peer        ""peer node start -...""   53 seconds ago      Up 50 seconds                       0.0.0.0:8051->7051/tcp, 0.0.0.0:8053->7053/tcp     peer1.org1.example.com
d2c7c705bfbf        hyperledger/fabric-peer        ""peer node start -...""   53 seconds ago      Up 51 seconds                       0.0.0.0:7051->7051/tcp, 0.0.0.0:7053->7053/tcp     peer0.org1.example.com
ec946d519f69        hyperledger/fabric-ca          ""sh -c 'fabric-ca-...""   53 seconds ago      Up 50 seconds                       0.0.0.0:8054->7054/tcp                             ca_peerOrg2
4a16752c9542        hyperledger/fabric-peer        ""peer node start -...""   53 seconds ago      Up 49 seconds                       0.0.0.0:10051->7051/tcp, 0.0.0.0:10053->7053/tcp   peer1.org2.example.com
60a70a7a0ab1        hyperledger/fabric-zookeeper   ""/docker-entrypoin...""   53 seconds ago      Up 51 seconds                       2181/tcp, 2888/tcp, 3888/tcp                       zookeeper2
5b2d7e8c24f5        hyperledger/fabric-zookeeper   ""/docker-entrypoin...""   53 seconds ago      Up 52 seconds                       2181/tcp, 2888/tcp, 3888/tcp                       zookeeper0
8f90cfb1eeb6        hyperledger/fabric-zookeeper   ""/docker-entrypoin...""   53 seconds ago      Up 52 seconds                       2181/tcp, 2888/tcp, 3888/tcp                       zookeeper1
77b79a0a911a        hyperledger/fabric-ca          ""sh -c 'fabric-ca-...""   53 seconds ago      Up 52 seconds                       0.0.0.0:7054->7054/tcp                             ca_peerOrg1

Using 1 new channelIDs, e.g. testchan321
Finished creating all CONSUMERS clients
Producer-o1-c0 successfully broadcast TX 0 (ACK=1 NACK=0), 2017-06-21 21:09:57.705905229 +0000 UTC
Producer-o2-c0 successfully broadcast TX 0 (ACK=1 NACK=0), 2017-06-21 21:09:57.71177524 +0000 UTC
Producer-o0-c0 successfully broadcast TX 0 (ACK=1 NACK=0), 2017-06-21 21:09:57.736477814 +0000 UTC
stop all the Kafka brokers, 0 1 2 3, 2017-06-21 21:10:29.658083787 +0000 UTC
*docker stop kafka0 && sleep 20 && docker stop kafka1 && sleep 20 && docker start kafka1 && sleep 20 && docker start kafka0*
Producer-o0-c0 failed to broadcast TX 1788 (ACK=1788 NACK=1), 2017-06-21 21:10:56.396022608 +0000 UTC, err: Got unexpected status: SERVICE_UNAVAILABLE
Producer-o1-c0 failed to broadcast TX 2419 (ACK=2419 NACK=1), 2017-06-21 21:10:56.399470933 +0000 UTC, err: Got unexpected status: SERVICE_UNAVAILABLE
Producer-o2-c0 failed to broadcast TX 2330 (ACK=2330 NACK=1), 2017-06-21 21:10:56.400266684 +0000 UTC, err: Got unexpected status: SERVICE_UNAVAILABLE
All the kafka brokers are restarted, 2017-06-21 21:11:37.156081639 +0000 UTC
===== Test calling startMasterSpy on orderer  1  at  2017-06-21 21:12:34.658159242 +0000 UTC
=== startSpyDefer proceeding to startConsumerMaster to spy on orderer1
2017-06-21 21:12:34.675 UTC [msp] getMspConfig -> INFO 013 intermediate certs folder not found at [../../../examples/fabric-docker-compose-svt/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/intermediatecerts]. Skipping.: [stat ../../../examples/fabric-docker-compose-svt/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/intermediatecerts: no such file or directory]
2017-06-21 21:12:34.676 UTC [msp] getMspConfig -> INFO 014 crls folder not found at [../../../examples/fabric-docker-compose-svt/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/intermediatecerts]. Skipping.: [stat ../../../examples/fabric-docker-compose-svt/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/crls: no such file or directory]
2017-06-21 21:12:34.676 UTC [msp] getMspConfig -> INFO 015 MSP configuration file not found at [../../../examples/fabric-docker-compose-svt/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/config.yaml]: [stat ../../../examples/fabric-docker-compose-svt/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp/config.yaml: no such file or directory]
Producer-o1-c0 broadcast error delay period (120) ended (ACK=2419 NACK=120), 2017-06-21 21:12:56.512982144 +0000 UTC
Producer-o0-c0 broadcast error delay period (120) ended (ACK=1788 NACK=120), 2017-06-21 21:12:56.513045431 +0000 UTC
Producer-o2-c0 broadcast error delay period (120) ended (ACK=2330 NACK=120), 2017-06-21 21:12:56.513295731 +0000 UTC
Broadcast error on last TX 166666 of Producer-o2-c0: EOF
Producer-o2-c0 finished sending broadcast msgs: ACKs       2330  NACK 164336 (errDelayCntr 120)  Other 0 , 2017-06-21 21:13:14.391939496 +0000 UTC
Broadcast error on last TX 166666 of Producer-o1-c0: EOF
Producer-o1-c0 finished sending broadcast msgs: ACKs       2419  NACK 164247 (errDelayCntr 120)  Other 0 , 2017-06-21 21:13:14.84969967 +0000 UTC
Broadcast error on last TX 166668 of Producer-o0-c0: EOF
Producer-o0-c0 finished sending broadcast msgs: ACKs       1788  NACK 164880 (errDelayCntr 120)  Other 0 , 2017-06-21 21:13:14.977187382 +0000 UTC
Send Duration (seconds):  202
Recovery Duration (secs):  46
waitSecs for last batch:   45
PRODUCERS   OrdererIdx  ChannelIdx ChannelID              TX Target         ACK        NACK
                     0           0 mychannel0                166668        1788      164880
                     1           0 mychannel0                166666        2419      164247
                     2           0 mychannel0                166666        2330      164336
Print only the first 3 chans of only the first 3 ordererIdx (and the last ordererIdx if masterSpy is present), plus any others that contain failures.
Totals numOrdIdx=4 numChanIdx=1 numCONSUMERS=4
CONSUMERS   OrdererIdx  ChannelIdx ChannelID                    TXs     Batches
                     0           0 mychannel0                  6545          14
                     1           0 mychannel0                  6545          14
                     2           0 mychannel0                  6545          14
                     3           0 mychannel0                  6545          14  * MasterSpy on orderer 1
Not counting genesis blks (1 per chan)        1
Total TX broadcasts Requested to Send    500000
Total TX broadcasts send success ACK       6537
Total TX broadcasts sendFailed - NACK    493463
Total Send-LOST TX (Not Ack or Nack))         0
Total Recv-LOST TX (Ack but not Recvd)       *-8* 
Total deliveries received TX on each ordrr     [   6545    6545    6545    6545]
Total deliveries received Blocks on each ordrr [     14      14      14      14]
TEST ORD-97 BAD! Some EXTRA TX were delivered by orderer service! RESULT=FAILED: TX Req=500000 BrdcstACK=6537 NACK=493463 DelivBlk=[14 14 14 14] DelivTX=[6545 6545 6545 6545] numChannels=1 batchSize=500
--- FAIL: Test_ORD97_100000TX_1ch_3ord_kafka_3kbs (342.92s)
    ote_test.go:242: TEST ORD-97 BAD! Some EXTRA TX were delivered by orderer service! RESULT=FAILED: TX Req=500000 BrdcstACK=6537 NACK=493463 DelivBlk=[14 14 14 14] DelivTX=[6545 6545 6545 6545] numChannels=1 batchSize=500
FAIL
exit status 1
FAIL    github.com/hyperledger/fabric/test/tools/OTE    342.945s

 

We are calculating the transactions using length of Block.Data.Data in each block. We are getting too many transactions in the above case.","22/Jun/17 2:25 PM;kchristidis;Until this can be reproduced deterministically, and we've got wayyyy more details on what's going on (I know you guys are working on it based on the suggestions given above), I will lower its priority and label it as Unverifiable.",11/Aug/17 1:34 PM;kchristidis;Any updates on this one?,,,,,,,,,
The blockchain go example02 app contains bad blockchain code,FAB-2740,15308,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,mdozturk,mdozturk,3/10/2017 21:09,4/15/2017 12:10,4/26/2018 6:50,4/15/2017 12:10,v1.0.0,,,,v1.0.0,,fabric-endorser,fabric-samples,,,0,,,,,"example02 imitates a payment, where the app decreses A's value and increases B's value by the same amount. Invoke does some error checking, loads A, loads B, decreases A by X and increases B by X. Saves A. Saves B.

The problem with the current code is that the two save actions are not atomic: save to A could succeed and the save to B could fail. The code should be updated to make the save atomic, either they both happen or neither happens.
",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00suh:,,,,,,mastersingh24,mdozturk,,,,,,,,,,"15/Apr/17 12:09 PM;mastersingh24;This actually does end up being ""atomic"" :

1) Chaincode execution only simulates the result and then produces a read/write set which is returned to the client in the proposal response

2) The client then sends the endorsed proposal as a transaction to the ordering service

3) Ordering service delivers the transaction (in a batch) to the peer(s)

4) Peers run validation logic and then commit the entire transaction (i.e. the write set)

Therefore since both ""writes"" are part of the same transaction this is effectively ""atomic""

Going to mark as DONE.

[~mdozturk] Please add any additional comments / questions if I am misunderstanding what you are asking",,,,,,,,,,,,,,,,,,,,,
MockStub must not have efffect on Ledger during a Chaincode-2-Chaincode Invoke Operation containing PutState,FAB-2748,15316,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,Senthil1,rhegde,rhegde,3/12/2017 1:26,1/4/2018 13:15,4/26/2018 6:50,1/4/2018 13:15,,,,,Not a Bug,,fabric-ledger,,,,0,,,,,"I ran chaincode-2-chaincode query interface test using example02, example04 on Fabric-CI Images - 4th March. 1 thing I noticed and as per https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/interfaces.go#L57 - Invoke operation containing PutState will not be recorded to the ledger (irrespective if chaincode is running on the same or different channel of the same peer). And this is what I see as expected.

However looking at the go test written for example04 at https://github.com/hyperledger/fabric/blob/master/examples/chaincode/go/chaincode_example04/chaincode_example04_test.go#L109, the invoke operation containing PutState (transfer 10 unit from A -> B ) gets registered/committed in mock-stub implementation. This need to be corrected.",,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzhy:zz9xr9d,,,,,,denyeart,rhegde,Senthil1,,,,,,,,,24/Aug/17 1:54 PM;denyeart;[~Senthil1] Could you take a look at this one?,"04/Sep/17 7:13 AM;Senthil1;If chaincodes are in same transaction, one chaincode can modify data on another chaincode. If they are on different channels, then it is not possible.",,,,,,,,,,,,,,,,,,,,
Orderer GRPC TLS configuration cannot accept chained certificates,FAB-2749,15317,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,mastersingh24,passkit,passkit,3/12/2017 5:02,5/31/2017 13:58,4/26/2018 6:50,5/26/2017 16:53,v1.0.0-alpha1,,,,v1.0.0,,fabric-orderer,,,,0,,,,,"If a certificate chain is passed as a file argument to any of the TLS: parameters in orderer.yaml the orderer will panic with :

{code}
panic: interface conversion: interface {} is map[interface {}]interface {}, not map[string]interface {}
{code}

Expected behaviour would be to provide either a legible error message or to parse and import the chain.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00s7x:,,,,,,kchristidis,mastersingh24,passkit,,,,,,,,,"12/Mar/17 3:15 PM;mastersingh24;I'm working on some changes as part of getting end to end working with TLS enabled across all components

https://gerrit.hyperledger.org/r/#/c/7141/","11/Apr/17 6:27 PM;kchristidis;[~passkit] [~mastersingh24] Is this an issue only with the orderer, or does it affect any component that uses the gRPC server?",26/May/17 4:53 PM;mastersingh24;I'm closing this as I believe that https://gerrit.hyperledger.org/r/#/c/7141/ resolved this,,,,,,,,,,,,,,,,,,,
Incorrect configtx.yaml selected when environment config paths are available,FAB-2824,15397,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,passkit,passkit,passkit,3/18/2017 14:41,5/31/2017 13:58,4/26/2018 6:50,4/11/2017 18:09,,,,,v1.0.0-alpha1,,fabric-orderer,,,,0,common-components,,,,"When using configtxgen locally, the configtx.yaml from the source folder will always be selected even if Orderer or Peer config paths are specified. 

For loop in localconfig/congif.go is not exited when a valid config path is found.  This is inconsistent with how it is handled in provisional/provisional.go.

{code}
for _, genesisPath := range searchPath {
		logger.Infof(""Checking for configtx.yaml at: %s"", genesisPath)
		if _, err := os.Stat(filepath.Join(genesisPath, ""configtx.yaml"")); err != nil {
			// The yaml file does not exist in this component of the path
			continue
		}
		cfgPath = genesisPath
                // loop continues and value is overwritten on next pass.
	}
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00tch:,,,,,,passkit,,,,,,,master,,,TRUE,18/Mar/17 3:45 PM;passkit;https://gerrit.hyperledger.org/r/#/c/7333/,,,,,,,,,,,,,,,,,,,,,
Build fails if Docker proxy flags contain whitespace,FAB-2829,15402,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,passkit,passkit,passkit,3/19/2017 12:58,5/12/2017 16:45,4/26/2018 6:50,3/20/2017 15:49,,,,,,,fabric-quality,,,,0,,,,,"There are cases where the make script setting DOCKER_BUILD_FLAGS and DOCKER_RUN_FLAGS that are used to set DBUILD and DRUN can generate variables containing whitespace.

This causes the build to break, as in this example:
{code}
Building docker ccenv-image docker build --build-arg no_proxy=*.local, 169.254/16
docker build --build-arg no_proxy=*.local, 169.254/16 -t hyperledger/fabric-ccenv build/image/ccenv
""docker build"" requires exactly 1 argument(s).
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00tdl:,,,,,,passkit,,,,,,,master,,,TRUE,19/Mar/17 3:28 PM;passkit;https://gerrit.hyperledger.org/r/#/c/7341/,,,,,,,,,,,,,,,,,,,,,
Maven WARNING: build is platform dependent,FAB-2833,15406,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,sanchezl,sanchezl,sanchezl,3/20/2017 14:40,3/20/2017 20:25,4/26/2018 6:50,3/20/2017 20:25,,,,,,,fabric-sdk-java,,,,0,build-system,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00teh:,,,,,,sanchezl,,,,,,,master,,,TRUE,,,,,,,,,,,,,,,,,,,,,,
Panic thrown if no GOPATH env on chaincode installer,FAB-2926,15505,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,wlahti,passkit,passkit,3/29/2017 18:50,5/25/2017 11:23,4/26/2018 6:50,5/25/2017 11:22,v1.0.0,,,,v1.0.0,,fabric-peer,,,,0,,,,,"{code}
panic: runtime error: index out of range

goroutine 1 [running]:
github.com/hyperledger/fabric/core/chaincode/platforms/golang.(*Platform).ValidateSpec(0x12d06f8, 0xc4202edb00, 0x12d06f8, 0x0)
	/go/src/github.com/hyperledger/fabric/core/chaincode/platforms/golang/platform.go:87 +0x34b
{code}

Line 87: {{gopath = filepath.SplitList(gopath)\[0\]}} assumes gopath string is not empty.

{code}
//Treat empty scheme as a local filesystem path
	if path.Scheme == """" {
		gopath := os.Getenv(""GOPATH"")
		// Only take the first element of GOPATH
		gopath = filepath.SplitList(gopath)[0]
		pathToCheck := filepath.Join(gopath, ""src"", spec.ChaincodeId.Path)
		exists, err := pathExists(pathToCheck)
		if err != nil {
			return fmt.Errorf(""Error validating chaincode path: %s"", err)
		}
		if !exists {
			return fmt.Errorf(""Path to chaincode does not exist: %s"", spec.ChaincodeId.Path)
		}
	}
{code}

Feels like this is hardcoded for convenience, but should provide a friendly warning if not GOPATH is not set. 

Command line prompts and other documentation should specify that the chaincode path (-p) parameter should be provided relative to the GOPATH ",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00tz5:,,,,,,passkit,wlahti,,,,,,,,,,25/May/17 11:23 AM;wlahti;Completed via https://jira.hyperledger.org/browse/FAB-4146,,,,,,,,,,,,,,,,,,,,,
suggest return more detailed error message when connecting with event hub,FAB-3015,15595,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,hanhzf,hanhzf,hanhzf,4/6/2017 12:27,5/12/2017 16:45,4/26/2018 6:50,4/16/2017 14:53,v1.0.0,,,,v1.0.0,,fabric-peer,,,,0,Usability,,,,"Such as when peer was started with tls enabled, while client try to connect event hub without tls cert or a invalid tls cert, a more detailed error message should be returned. 

The current code just returns the message that ""Could not create client conn to peer address"",  I suggest we should also return the error message back to client. as below:

```
func (ec *EventsClient) Start() error {
	conn, err := newEventsClientConnectionWithAddress(ec.peerAddress)
	if err != nil {
                {color:#d04437}-return fmt.Errorf(""Could not create client conn to %s:%s"", ec.peerAddress, err)-{color}
		{color:#59afe1}return fmt.Errorf(""Could not create client conn to %s:%s"", ec.peerAddress, err){color}
	}
```

{color:#d04437}-RED-{color} code are original code.
{color:#59afe1}BLUE{color} code are fixes.",,7200,3600,,0%,7200,3600,,,,,,,,,,,,,,,,,,,0|i00uhd:,,,,,,hanhzf,muralisr,,,,,,master,,,TRUE,06/Apr/17 12:43 PM;hanhzf;change-set submitted: https://gerrit.hyperledger.org/r/#/c/7785/,13/Apr/17 5:58 AM;muralisr;[~hanhzf] thanks Frank. Have reviewed and +2ed in Gerrit. Once merged can you close this please ?,,,,,,,,,,,,,,,,,,,,
suggest return more detailed error message when connecting with event hub,FAB-3018,15598,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,hanhzf,hanhzf,hanhzf,4/6/2017 13:47,4/7/2017 3:53,4/26/2018 6:50,4/7/2017 3:53,,,,,v1.0.0,,fabric-sdk-go,,,,0,,,,,"Such as when peer was started with tls enabled, while client try to connect event hub without tls cert or a invalid tls cert, a more detailed error message should be returned.
The current code just returns the message that ""Could not create client conn to peer address"", I suggest we should also return the error message back to client. as below:
```
func (ec *EventsClient) Start() error {
conn, err := newEventsClientConnectionWithAddress(ec.peerAddress)
if err != nil {
return fmt.Errorf(""Could not create client conn to %s:%s"", ec.peerAddress, err)
return fmt.Errorf(""Could not create client conn to %s:%s"", ec.peerAddress, err)
}
```
RED code are original code.
BLUE code are fixes.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00uhl:,,,,,,hanhzf,,,,,,,master,,,TRUE,06/Apr/17 1:56 PM;hanhzf;commit submitted: http://gerrit.hyperledger.org/r/7791,,,,,,,,,,,,,,,,,,,,,
fix fabric-ca document typo (docker/examples/client-server-flow/README.md),FAB-3020,15600,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,hanhzf,hanhzf,hanhzf,4/6/2017 14:12,5/12/2017 16:55,4/26/2018 6:50,4/23/2017 12:51,,,,,v1.0.0,,fabric-ca,,,,0,,,,,"in files *docker/examples/client-server-flow/README.md*, 

```
If you are using certificates or config files outside of the default values,
be sure to save the desired files to the developer's local directories. The
certificates should be saved to the `/var/hyperledger/fabric/.fabric-ca` directory
and the config files should be saved to the `{color:#d04437}var/hyperledger/fabric_ca_config{color}`
directory.
```

I think we have missed the preceding '/' in the {color:#d04437}RED{color} part, that should be {color:#59afe1}""/var/hyperledger/fabric_ca_config""{color}",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00ui1:,,,,,,hanhzf,,,,,,,master,,,TRUE,06/Apr/17 2:15 PM;hanhzf;fix submitted: http://gerrit.hyperledger.org/r/7795,,,,,,,,,,,,,,,,,,,,,
Duplicate ChaincodeID in Block,FAB-3148,15735,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,Senthil1,Senthil1,4/13/2017 16:06,6/7/2017 17:11,4/26/2018 6:50,5/11/2017 23:46,v1.0.0,,,,WON'T FIX,,fabric-ledger,,,,0,,,,,"The following two structs are stored in the Block. ChaincodeID is duplicated here. 
type ChaincodeSpec struct {
    Type        ChaincodeSpec_Type 
    ChaincodeId *ChaincodeID       
    Input       *ChaincodeInput    
    Timeout     int32              
}

type ChaincodeHeaderExtension struct {
    PayloadVisibility []byte 
    ChaincodeId       *ChaincodeID
}

Attached a document contains the whole block data as JSON. Refer to ""chaincode_id"" fields.",,,,,,,,,,,,,13/Apr/17 4:05 PM;Senthil1;duplicate_signature_header.txt;https://jira.hyperledger.org/secure/attachment/10661/duplicate_signature_header.txt,,,,,,,,,,,,,0|hzzz76:zzzssyr,,Sprint 16  - Ledger,,,,ChristopherFerris,Senthil1,,,,,,,,,,13/Apr/17 4:07 PM;Senthil1;[~manish-sethi] [~denyeart] [~binhn] ,13/Apr/17 7:18 PM;ChristopherFerris;Unclear that this is a bug. ,,,,,,,,,,,,,,,,,,,,
fabric-ca-server needs to implement/document pathlen usage,FAB-3228,15817,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,smithbk,rennman,rennman,4/18/2017 18:19,6/5/2017 18:08,4/26/2018 6:50,6/5/2017 18:08,v1.0.0-alpha1,,,,v1.0.0,,fabric-ca,,,,0,,,,,"We don't document the pathlen option. Moreover, it appears that we aren't doing anything with it either. Regardless of what I explicitly code for pathlength, e.g.
   ca:
      pathlen: 2
      pathlenzero: false
      expiry:
I don't see that we're actually adding the extension that includes the pathlength constraint. The generated certificate looks the same either way.

Now we have the ability to create resource authority hierarchies, we actually have a use for this. We should be inserting the pathLenConstraint into the BasicConstraints extension.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00vol:,,,,,,rennman,smithbk,,,,,,master,,,TRUE,31/May/17 4:33 PM;smithbk;http://gerrit.hyperledger.org/r/9987,,,,,,,,,,,,,,,,,,,,,
configtxgen tool generates invalid channel config tx binary,FAB-3285,15877,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,kchristidis,jimthematrix,jimthematrix,4/21/2017 3:15,3/7/2018 14:51,4/26/2018 6:50,2/26/2018 18:04,v1.0.0-alpha1,v1.1.0-preview,,,Not a Bug,,fabric-orderer,,,,0,configuration,,,,"when generating using the following command:

./build/bin/configtxgen -outputCreateChannelTx ./mychannel.tx -profile <profilename>

and tried to use the mychannel.tx to submit channel create request, the orderer will return the following error:

2017-04-21 00:19:41.338 UTC [orderer/common/broadcast] Handle -> WARN 1a7 Rejecting CONFIG_UPDATE because: Error validating DeltaSet: Attempt to set key [Policy] /Channel/Orderer/Admins to version 0, but key is at version 0",,,,,,,,,,,,,23/Feb/18 4:35 PM;zamrokk;Archive.zip;https://jira.hyperledger.org/secure/attachment/14678/Archive.zip,23/Feb/18 9:44 AM;zamrokk;ca.yaml;https://jira.hyperledger.org/secure/attachment/14675/ca.yaml,21/Feb/18 9:54 AM;zamrokk;channel1.json;https://jira.hyperledger.org/secure/attachment/14660/channel1.json,21/Feb/18 9:54 AM;zamrokk;channel1.tx;https://jira.hyperledger.org/secure/attachment/14662/channel1.tx,22/Feb/18 6:50 PM;kchristidis;channel1_repr.tx;https://jira.hyperledger.org/secure/attachment/14671/channel1_repr.tx,23/Feb/18 2:38 PM;kchristidis;channel1_repr_alpha.json;https://jira.hyperledger.org/secure/attachment/14676/channel1_repr_alpha.json,23/Feb/18 2:38 PM;kchristidis;channel1_repr_alpha.tx;https://jira.hyperledger.org/secure/attachment/14677/channel1_repr_alpha.tx,21/Feb/18 9:54 AM;zamrokk;configtx.yaml;https://jira.hyperledger.org/secure/attachment/14661/configtx.yaml,,,,,,0|i00w11:,,,,,,denyeart,kchristidis,zamrokk,,,,,,,,,"22/Apr/17 5:06 AM;kchristidis;On the latest master (??d661d11 Merge ""[FAB-3317] Update peer CouchDB timeout""??):

# The E2E CLI test passes w/o issues.
# Created a genesis block for the SampleInsecureSolo profile, launched the orderer, ran the sample broadcast_config client against it (which generates a channel creation transaction using the same library as configtxgen), and the channel was created successfully.

So: so far I am unable to reproduce the problem.

I am currently extending the broadcast_config client so that it can use a channel creation TX produced by the configtxgen binary. This will allow me to get eveb closer to your sequence of steps. Will update.","23/Apr/17 7:51 PM;kchristidis;I extended the broadcast_config client to have it send the channel creation TX produced by the configtxgen binary. Everything works w/o issues.

See the temporary commit I pushed here w/ instructions: https://gerrit.hyperledger.org/r/#/c/8459/

Let me know if I am missing something.

If I am not, let's proceed with closing this.","28/Apr/17 6:32 AM;kchristidis;Marking this as done, if the issue persists, please re-open.","21/Feb/18 9:56 AM;zamrokk;I encounter same issue while generating the binary.

Here attached the files : the config file , the output binary and the json displayed with the option  inspectChannelCreateTx

 

Here is the output log :

Caused by: com.google.protobuf.InvalidProtocolBufferException$InvalidWireTypeException: Protocol message tag had invalid wire type.

 at com.google.protobuf.InvalidProtocolBufferException.invalidWireType(InvalidProtocolBufferException.java:115)

 at com.google.protobuf.CodedInputStream$ArrayDecoder.skipField(CodedInputStream.java:686)

 at org.hyperledger.fabric.protos.common.Common$Envelope.<init>(Common.java:5641)

 

Docker Image version : 1.1.0-preview

 

SDK version : 1.1.0-SNAPSHOT

 

 ","21/Feb/18 1:28 PM;kchristidis;Are you getting the same issue as indicated in this JIRA's description a ""Rejecting CONFIG_UPDATE message"" or an ""invalid wire type"" message, as you indicate on your post?",22/Feb/18 8:19 AM;zamrokk;it is a different error message but the cause might be the same : the .tx binary cannot be parsed (same as the title),"22/Feb/18 3:25 PM;kchristidis;Thanks for clarifying.

When exactly do you get that error?

You write that this happens while generating the binary, but I'm not sure what binary you refer to.

And is this the Java SDK?","22/Feb/18 3:28 PM;zamrokk;Using Java SDK, when try to connect to a channle using a new fresh enrolled user

the binary is the .tx file that is generated by fabric-tools ","22/Feb/18 6:50 PM;kchristidis;Here's what I got:

# The binary file that you have attached ({{channel1.tx}}) is indeed broken. When attempting to decode it, I get an {{bad wiretype for field common.Envelope.Payload: got wiretype 5, want 2}} error. A [length-delimited type|https://developers.google.com/protocol-buffers/docs/encoding#structure] is expected, but a 32-bit value is returned instead.
# The JSON file that you have attached ({{channel1.json}}) works w/o issues. I can encode it into an {{Envelope}}, and decode that envelope just fine.
# Using your {{configtx.yaml}} configuration file and a {{1.1.0-preview}} configtxgen binary, I created a channel creation transaction -- see {{channel1_repr.tx}}. This one works w/o issues -- it can be decoded using {{configtxlator}} just fine.

I've got two questions:

1. How did you generate that {{channel1.tx}} file. What is the output of {{configtx -version}}?
2. How did you generate its JSON representation. What is the output of {{configtxlator version}}?","23/Feb/18 9:34 AM;zamrokk;I am using x86_64-1.1.0-alpha from all images

 

1)  I generate the channel from K8 scripting files , here is the line :

image: byomc/fabric-tools:x86_64-1.1.0-alpha                        <= this is the hyperledger/fabric-tools , just modified the ca.yaml to have only 1 org
imagePullPolicy: Always
command: [""sh"", ""-c"", ""cd /shared && pwd && ls && configtxgen -profile OneOrgsChannel -outputCreateChannelTx channel1.tx -inspectChannelCreateTx channel1.tx -channelID channel1 && touch /shared/status_channeltx_complete ""]

Juste did the same configtxlator commands as yours, get exactly same problem and got also the json displayed well on your channel1_repr.tx file  :s

Do you need also my ca.yaml file ?

2)

root@2edfa1b2b476:/shared# configtxlator version
configtxlator:
 Version: development build
 Go version: go1.9.2
 OS/Arch: linux/amd64

As you see the .json file is taken from the option ""inspectChannelCreateTx"" that displays it on the stdout while generating the binary

 ","23/Feb/18 9:34 AM;zamrokk;For info, my environnement is MacOs, but I ran the scripts on an IBM Cloud Kubernetes cluster",23/Feb/18 9:44 AM;zamrokk;just joined the ca.yaml file,"23/Feb/18 2:31 PM;kchristidis;# You mention 1.1.0-alpha in your latest message, but you wrote 1.1.0-preview in your first message in this thread. Which one is it?
# Your configtxlator version is ""development build"". This suggests that you are not using the binary that comes with whatever version (see question 1) you downloaded. Please use the configtxlator version that comes with the image you downloaded and let me know what you get.

I cannot reproduce this with the info that I have.","23/Feb/18 2:40 PM;kchristidis;Switched to 1.1.0-alpha binaries. I can encode a channel creation transaction using 1.1.0-alpha configtxgen, and then decode it using configtxlator v1.1.0-alpha without issues. {{channel1_repr_alpha.tx}} gives me {{channel1_repr_alpha.json}}. See attached files.","23/Feb/18 4:36 PM;zamrokk;It seems linked to this issue too : https://jira.hyperledger.org/browse/FAB-7585?page=com.atlassian.jira.plugin.system.issuetabpanels%3Aall-tabpanel

 

I am uploading a very light archive containing : configtx.yaml, crypto-config.yaml and docker-compose.yaml

just run a : docker-compose -f docker-compose.yaml up

and tell me if you get the same logs as mine    [^Archive.zip]",26/Feb/18 11:58 AM;denyeart;Deferring to 1.2 since we have not been able to reproduce on latest master.,"26/Feb/18 5:17 PM;kchristidis;Unable to reproduce.

Using the {{hyperledger/fabric-tools:x86_64-1.1.0-alpha}} image (same as in your Docker Compose file), I cd'd to directory {{3285}} (see https://github.com/kchristidis/fabric/tree/fab-3285-dc/3285) and did the following: https://pastebin.com/Lwnawjtd",26/Feb/18 5:28 PM;zamrokk;I created configtx.yaml back from scratch and now the binary is ok. Maybe something with a space or invisible character on file   o.O   . You can close for my case.,,,,
Fix failing multi-broker Kafka bootstrap test,FAB-3289,15881,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,kchristidis,kchristidis,kchristidis,4/21/2017 5:35,6/22/2017 10:43,4/26/2018 6:50,6/22/2017 10:43,v1.0.0-alpha1,,,,v1.0.0,,fabric-orderer,,,,0,kafka,,,,The `bootstrap.feature` test fails in the case of a multi-broker Kafka-based ordering service. We'll need to correct the timing assumptions and orderer references to fix that.,,,,,,,,,,FAB-3291,,,,,,,,,,,,,,,,0|i00w1x:,,,,,,kchristidis,,,,,,,master,,,TRUE,21/Apr/17 5:39 AM;kchristidis;WIP: https://gerrit.hyperledger.org/r/#/c/8335/,"05/May/17 11:34 PM;kchristidis;Fixed the issues with the feature that were causing the Kafka case to fail. They had to do with timing and with targeting the wrong orderer.

Only thing remaining is to have the test automatically detect the addresses of the Kafka brokers and encode them in the system genesis block — [~jeffgarratt]'s on it.",09/May/17 6:14 PM;kchristidis;Not sure why the priority of this one was changed?,11/May/17 2:56 PM;kchristidis;https://gerrit.hyperledger.org/r/#/c/9229/,,,,,,,,,,,,,,,,,,
"Node SDK reports ""logger.warning is not a function""",FAB-3290,15882,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,YingShi,YingShi,4/21/2017 5:40,5/3/2017 21:03,4/26/2018 6:50,5/3/2017 12:21,v1.0.0,,,,v1.0.0,,fabric-sdk-node,,,,0,node-SDK,,,,"When trying commit b00a5234891766111613a5235b21a3136cf7321d, doing instantiate-chaincode reports ""logger.warning is not a function"".

Caused by line 1972 of fabric-sdk-node/fabric-client/lib/Chain.js:
logger.warning('compareProposalResponseResults - read/writes result sets do not match index=%s',i);

which is merged in commit 9e92c637cb80a8ac838c3fa26815bfad0ef94d3e.

The same occurs in line 338 of fabric-sdk-node/fabric-client/lib/Block.js.

Guess it should be logger.warn().","os: win7
node: 6.9.1
log4js: 0.6.38
node-sdk: b00a5234891766111613a5235b21a3136cf7321d",,,,,,,,,,,FAB-3392,,,,,,,,,,,,,,0|i00w4b:,,,,,,YingShi,,,,,,,master,,,TRUE,26/Apr/17 3:58 PM;jimthematrix;http://gerrit.hyperledger.org/r/8551,,,,,,,,,,,,,,,,,,,,,
logger.warning() does not exist in Chain.js,FAB-3392,15986,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,jtrayfield,jtrayfield,4/25/2017 16:21,4/26/2017 15:59,4/26/2018 6:50,4/26/2017 15:47,v1.0.0,,,,DUPLICATE,,fabric-sdk-node,,,,0,,,,,"jtrayfield 12:06 PM
2017-04-25T16:00:02.629Z - error: blockchain.js::invoke() Problem: TypeError: logger.warning is not a function
at Chain.compareProposalResponseResults (/Users/jtray/git/bales/node_modules/fabric-client/lib/Chain.js:1772:12)
possible bug in Chain.js

bretharrison 12:12 PM   
@jtrayfield Yes I think you are correct, that is an issue. For now you should change `logger.warning` to `logger.error",node 6.10,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,0|i00wlx:,,,,,,jtrayfield,,,,,,,,,,,26/Apr/17 3:47 PM;jimthematrix;[~jtrayfield] thanks for reporting this: http://gerrit.hyperledger.org/r/8551,,,,,,,,,,,,,,,,,,,,,
*.db files are not listed in .gitignore,FAB-3393,15987,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,david_dornseifer,david_dornseifer,david_dornseifer,4/25/2017 16:46,4/26/2017 1:29,4/26/2018 6:50,4/26/2017 1:29,,,,,v1.0.0,,fabric-sdk-py,,,,0,,,,,After running tests the .db files will show up as untracked files in git status. ,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzhq:zwir,,,,,,david_dornseifer,,,,,,,master,,,TRUE,25/Apr/17 7:55 PM;david_dornseifer;http://gerrit.hyperledger.org/r/8521,,,,,,,,,,,,,,,,,,,,,
fabric-ca-client - typo in error message,FAB-3425,16020,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,smithbk,rennman,rennman,4/26/2017 16:16,5/26/2017 14:29,4/26/2018 6:50,5/26/2017 14:29,v1.0.0-alpha1,,,,v1.0.0,,fabric-ca,,,,0,,,,,"Minor, but externalized:

Error response from server was: Unlimited enrollments not allowed, value must be equal to or less {color:#d04437}then{color} 1",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00wst:,,,,,,rennman,smithbk,,,,,,master,,,TRUE,26/May/17 1:02 AM;smithbk;http://gerrit.hyperledger.org/r/9849,,,,,,,,,,,,,,,,,,,,,
peer/channel package not using logging,FAB-3528,16125,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,raidinesh80,ChristopherFerris,ChristopherFerris,4/30/2017 13:47,6/5/2017 21:06,4/26/2018 6:50,6/5/2017 21:06,v1.0.0-alpha1,,,,v1.0.0,,fabric-peer,,,,0,quality,,,,"cbf$ grep fmt.Print *
channel.go:			fmt.Println(""Error connecting:"", err)
deliverclient.go:		fmt.Printf(""Error signing envelope %s\n"", err)
deliverclient.go:			fmt.Println(""Error receiving:"", err)
deliverclient.go:			fmt.Println(""Got status "", t)
deliverclient.go:			fmt.Println(""Received block: "", t.Block)
deliverclient.go:		fmt.Println(""Received error:"", err)
join.go:	fmt.Println(""Peer joined the channel!"")
list.go:		fmt.Println(""Channels peers has joined to:"")
list.go:			fmt.Println(""\t"", channel.ChannelId)",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,0|i00xf9:,,,,,,ChristopherFerris,,,,,,,master,,,TRUE,,,,,,,,,,,,,,,,,,,,,,
Error: ltdl.h: No such file or directory,FAB-3573,16171,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,raheelz,raheelz,5/2/2017 20:05,5/4/2017 5:55,4/26/2018 6:50,5/4/2017 5:55,v1.0.0-alpha1,,,,v1.0.0-alpha1,,fabric-build,,,,0,,,,,"Following instructions from here:
https://github.com/IBM-Blockchain/marbles/blob/v3.0/docs/env_setup.md

When running the command to build, receiving the following error:
{{{quote}AzureAD+RaheelZubairy@DESKTOP-3POP4OS MINGW64 ~/go/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 ((14055d70...))
$ go build -tags nopkcs11 .
\# github.com/hyperledger/fabric/vendor/github.com/miekg/pkcs11
..\..\..\..\vendor\github.com\miekg\pkcs11\pkcs11.go:29:18: fatal error: ltdl.h: No such file or directory
 #include <ltdl.h>
                  ^
compilation terminated.{quote}}}

Trying to build on a Windows OS.
Thanks.

",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00xyl:,,,,,,raheelz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fail to connect to peer2 and peer3 from cli when run getlevel and setlevel,FAB-3608,16223,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,amber-zhang,amber-zhang,amber-zhang,5/3/2017 5:46,5/8/2017 12:04,4/26/2018 6:50,5/8/2017 12:04,,,,,,,fabric-peer,,,,0,,,,,"
---------getlevel-------------------
root@3385917a20a4:/opt/gopath/src/github.com/hyperledger/fabric/peer# CORE_PEER_ADDRESS=peer0:7051 peer logging getlevel gossip/pull#peer0:7051
2017-05-03 05:39:43.060 UTC [cli/logging] getLevel -> INFO 001 Current log level for peer module 'gossip/pull#peer0:7051': CRITICAL
2017-05-03 05:39:43.060 UTC [main] main -> INFO 002 Exiting.....
root@3385917a20a4:/opt/gopath/src/github.com/hyperledger/fabric/peer# CORE_PEER_ADDRESS=peer1:7051 peer logging getlevel gossip/pull#peer1:7051
2017-05-03 05:39:52.906 UTC [cli/logging] getLevel -> INFO 001 Current log level for peer module 'gossip/pull#peer1:7051': WARNING
2017-05-03 05:39:52.906 UTC [main] main -> INFO 002 Exiting.....
root@3385917a20a4:/opt/gopath/src/github.com/hyperledger/fabric/peer# CORE_PEER_ADDRESS=peer2:7051 peer logging getlevel gossip/pull#peer2:7051
2017-05-03 05:40:06.385 UTC [cli/logging] getLevel -> WARN 001 PER:404 - Error trying to connect to local peer
/opt/gopath/src/github.com/hyperledger/fabric/peer/common/common.go:82 github.com/hyperledger/fabric/peer/common.GetAdminClient
/opt/gopath/src/github.com/hyperledger/fabric/peer/clilogging/getlevel.go:46 github.com/hyperledger/fabric/peer/clilogging.getLevel
/opt/gopath/src/github.com/hyperledger/fabric/peer/clilogging/getlevel.go:37 github.com/hyperledger/fabric/peer/clilogging.glob..func1
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:605 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute
/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:118 main.main
/opt/go/src/runtime/proc.go:192 runtime.main
/opt/go/src/runtime/asm_amd64.s:2087 runtime.goexit
Caused by: grpc: timed out when dialing
2017-05-03 05:40:06.385 UTC [main] main -> INFO 002 Exiting.....
root@3385917a20a4:/opt/gopath/src/github.com/hyperledger/fabric/peer# CORE_PEER_ADDRESS=peer3:7051 peer logging getlevel gossip/pull#peer3:7051
2017-05-03 05:40:19.738 UTC [cli/logging] getLevel -> WARN 001 PER:404 - Error trying to connect to local peer
/opt/gopath/src/github.com/hyperledger/fabric/peer/common/common.go:82 github.com/hyperledger/fabric/peer/common.GetAdminClient
/opt/gopath/src/github.com/hyperledger/fabric/peer/clilogging/getlevel.go:46 github.com/hyperledger/fabric/peer/clilogging.getLevel
/opt/gopath/src/github.com/hyperledger/fabric/peer/clilogging/getlevel.go:37 github.com/hyperledger/fabric/peer/clilogging.glob..func1
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:605 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute
/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:118 main.main
/opt/go/src/runtime/proc.go:192 runtime.main
/opt/go/src/runtime/asm_amd64.s:2087 runtime.goexit
Caused by: grpc: timed out when dialing
2017-05-03 05:40:19.738 UTC [main] main -> INFO 002 Exiting.....


---------------------------------setlevel---------------------

root@3385917a20a4:/opt/gopath/src/github.com/hyperledger/fabric/peer# CORE_PEER_ADDRESS=peer0:7051 peer logging setlevel gossip info         
2017-05-03 05:41:03.139 UTC [cli/logging] setLevel -> INFO 001 Log level set for peer module 'gossip': INFO
2017-05-03 05:41:03.139 UTC [main] main -> INFO 002 Exiting.....
root@3385917a20a4:/opt/gopath/src/github.com/hyperledger/fabric/peer# CORE_PEER_ADDRESS=peer1:7051 peer logging setlevel gossip info
2017-05-03 05:41:11.881 UTC [cli/logging] setLevel -> INFO 001 Log level set for peer module 'gossip': INFO
2017-05-03 05:41:11.881 UTC [main] main -> INFO 002 Exiting.....
root@3385917a20a4:/opt/gopath/src/github.com/hyperledger/fabric/peer# CORE_PEER_ADDRESS=peer2:7051 peer logging setlevel gossip info
2017-05-03 05:41:21.731 UTC [cli/logging] setLevel -> WARN 001 PER:404 - Error trying to connect to local peer
/opt/gopath/src/github.com/hyperledger/fabric/peer/common/common.go:82 github.com/hyperledger/fabric/peer/common.GetAdminClient
/opt/gopath/src/github.com/hyperledger/fabric/peer/clilogging/setlevel.go:47 github.com/hyperledger/fabric/peer/clilogging.setLevel
/opt/gopath/src/github.com/hyperledger/fabric/peer/clilogging/setlevel.go:38 github.com/hyperledger/fabric/peer/clilogging.glob..func4
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:605 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute
/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:118 main.main
/opt/go/src/runtime/proc.go:192 runtime.main
/opt/go/src/runtime/asm_amd64.s:2087 runtime.goexit
Caused by: grpc: timed out when dialing
2017-05-03 05:41:21.731 UTC [main] main -> INFO 002 Exiting.....
root@3385917a20a4:/opt/gopath/src/github.com/hyperledger/fabric/peer# CORE_PEER_ADDRESS=peer3:7051 peer logging setlevel gossip info
2017-05-03 05:41:38.769 UTC [cli/logging] setLevel -> WARN 001 PER:404 - Error trying to connect to local peer
/opt/gopath/src/github.com/hyperledger/fabric/peer/common/common.go:82 github.com/hyperledger/fabric/peer/common.GetAdminClient
/opt/gopath/src/github.com/hyperledger/fabric/peer/clilogging/setlevel.go:47 github.com/hyperledger/fabric/peer/clilogging.setLevel
/opt/gopath/src/github.com/hyperledger/fabric/peer/clilogging/setlevel.go:38 github.com/hyperledger/fabric/peer/clilogging.glob..func4
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:605 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute
/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:118 main.main
/opt/go/src/runtime/proc.go:192 runtime.main
/opt/go/src/runtime/asm_amd64.s:2087 runtime.goexit
Caused by: grpc: timed out when dialing
2017-05-03 05:41:38.770 UTC [main] main -> INFO 002 Exiting.....",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00y05:,,,,,,amber-zhang,wlahti,,,,,,,,,,"03/May/17 5:20 PM;wlahti;Finally got around to investigating this one. It isn't actually a bug but instead a usage (or maybe a little bit of configuration) problem.

peer0 and peer1 are defined in docker-compose.yaml to include a few more environment variables, which is what allows CLI to run easily for those peers. 

peer2 and peer3 do not have those environment variables, so they either need to be added to your local docker-compose.yaml or specified when making the CLI calls.

For example:
{code}
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/examples/e2e_cli/crypto/peer/peer2/localMspConfig CORE_PEER_ADDRESS=peer2:7051 CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/examples/e2e_cli/crypto/peer/peer2/localMspConfig/cacerts/peerOrg1.pem peer logging getlevel peer
{code}

With those environment variables, I'm able to successfully run the commands against peer2 and peer3. Note: I do notice a few unusual log statements from the 'msp' module but I see those even when running the peer0 and peer1 commands so it's unrelated. 

[~amber-zhang] Can you verify that the commands run after following the above recommendation?","08/May/17 10:56 AM;amber-zhang;Hi Will,

Today I pull latest Fabric merged code. It works well with the env variables. thanks

 

root@f584c2ffab1d:/opt/gopath/src/github.com/hyperledger/fabric/peer# CORE_PEER_LOCALMSPID=""Org2MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_LOCALMSPID=""Org2MSP"" peer logging setlevel gossip warning

2017-05-08 10:50:45.809 UTC [cli/logging] setLevel -> INFO 004 Log level set for peer modules matching regular expression 'gossip': WARNING
2017-05-08 10:50:45.811 UTC [main] main -> INFO 005 Exiting.....

--------------

root@f584c2ffab1d:/opt/gopath/src/github.com/hyperledger/fabric/peer# CORE_PEER_LOCALMSPID=""Org2MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_LOCALMSPID=""Org2MSP"" peer logging getlevel gossip/state
2017-05-08 10:50:54.716 UTC [cli/logging] getLevel -> INFO 004 Current log level for peer module 'gossip/state': WARNING
2017-05-08 10:50:54.716 UTC [main] main -> INFO 005 Exiting.....

---------------------
root@f584c2ffab1d:/opt/gopath/src/github.com/hyperledger/fabric/peer# CORE_PEER_LOCALMSPID=""Org2MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer0.org2.example.com:7051 CORE_PEER_LOCALMSPID=""Org2MSP"" peer logging getlevel gossip/discovery

2017-05-08 10:50:59.343 UTC [cli/logging] getLevel -> INFO 004 Current log level for peer module 'gossip/discovery': WARNING
2017-05-08 10:50:59.343 UTC [main] main -> INFO 005 Exiting.....

 ",,,,,,,,,,,,,,,,,,,,
MSPImpl generates a lot of unformatted output,FAB-3728,16462,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,wlahti,wlahti,wlahti,5/8/2017 16:07,5/12/2017 16:45,4/26/2018 6:50,5/8/2017 17:58,,,,,,,fabric-crypto,,,,0,,,,,"A recent CR, [https://gerrit.hyperledger.org/r/#/c/8961,] contains a fmt.Printf statement that generates a huge amount of output. I spoke with Angelo, the owner of the CR in question, and determined it wasn't meant to be checked in and merged. ",,,,,,,,,,,,,,,,,,,,,,,,,,0|i00zat:,,,,,,wlahti,,,,,,,master,,,TRUE,,,,,,,,,,,,,,,,,,,,,,
"EventHub ctor param ""clientContext"" is not documented",FAB-3956,16774,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,cdaughtr,jtrayfield,jtrayfield,5/16/2017 17:36,5/19/2017 17:32,4/26/2018 6:50,5/19/2017 17:32,,,,,,,fabric-sdk-node,,,,0,,,,,"var EventHub = class \{

/**
 * Constructs an unconnected EventHub
 */

constructor(clientContext) \{

 

 ",,600,600,,0%,600,600,,,,,,,,,,,,,,,,,,,0|i010xh:,,,,,,jtrayfield,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode can't reach Peer when TLS is on and CORE_PEER_ADDRESSAUTODETECT=true,FAB-3986,16821,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,LeoKotschenreuther,LeoKotschenreuther,5/17/2017 17:58,6/4/2017 20:15,4/26/2018 6:50,6/4/2017 20:15,v1.0.0-alpha1,,,,v1.0.0,,fabric-peer,,,,0,,,,,"I was trying to apply the [e2e example|https://github.com/hyperledger/fabric/tree/master/examples/dchackfest/samples/e2e] to my preexisting Hyperledger setup, especially the TLS settings. I was able to create and join channels and to install chaincode. However, when I was trying to instantiate chaincode, the chaincode container would crash about two seconds after it had started. I attached the chaincode container's log output in a file.

It turned out, I had the environment variable CORE_PEER_ADDRESSAUTODETECT set to ""true"" in my peers. Removing the variable and setting CORE_PEER_ADDRESS to the actual address (an URL like ""peer0.org1.example.com"") in the docker-compose network fixed the problem.

From looking at the log file, it seems like the certificates are generated for the full URL and not the actual IP address of the peer (which makes sense since the IP address can change). If CORE_PEER_ADDRESSAUTODETECT is set to true, the peer seems to get his own IP address and pass that one to the chaincode container instead of the full URL.

Is that behavior supposed to be like that or is that a bug?",,,,,,,,,,,,,17/May/17 5:52 PM;LeoKotschenreuther;log.txt;https://jira.hyperledger.org/secure/attachment/10829/log.txt,,,,,,,,,,,,,0|i0116l:,,,,,,LeoKotschenreuther,muralisr,,,,,,,,,,"01/Jun/17 10:51 PM;muralisr;[~LeoKotschenreuther] its working as ... expected. Auto address detect picks the first non-loopback, IPv4 address in the system. It'll certainly not work for Chaincode when TLS enabled (except for the narrow case of matching the address in the cert).",04/Jun/17 8:15 PM;muralisr;[~LeoKotschenreuther] let me close this as Done. Do reopen if you need clarification please.,,,,,,,,,,,,,,,,,,,,
Orderer panic when 1Kafka was in cluster,FAB-4013,16863,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,kchristidis,Nishi,Nishi,5/18/2017 16:06,6/17/2017 0:15,4/26/2018 6:50,6/15/2017 17:08,v1.0.0-alpha2,,,,WON'T FIX,,fabric-docs,,,,0,kafka,,,,"fabric-sdk-node *8e878750e8d9d4a213e976eceb57699393f74aeb*
fabric *217b8f60c625a6ffaddd3219bd60baca415e2b7c*

When orderer failed to recognize newly elected leader as in

https://jira.hyperledger.org/browse/FAB-4012

We tried to start and stop orderer(to recover) when only kafka1 broker (newly created leader) was running.

""docker stop orderer0.example.com""

""docker start order0.example.com""

This time orderer again failed to recognize kafak1 broker and eventually crashed:

Orderer Logs
{code:java}

2017-05-18 15:06:49.944 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 0f4 Remaining bytes=[5840], Going to peek [8] bytes
2017-05-18 15:06:49.944 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 0f5 Returning blockbytes - length=[5838], placementInfo={fileNum=[0], startOffset=[39361], bytesOffset=[39363]}
2017-05-18 15:06:49.944 UTC [orderer/multichain] newChainSupport -> DEBU 0f6 [channel: mychannel] Retrieved metadata for tip of chain (block #5): value:""\010\016""
2017-05-18 15:06:49.944 UTC [orderer/kafka] newChain -> DEBU 0f7 [channel: mychannel] Starting chain with last persisted offset 14 and last recorded block 5
2017-05-18 15:06:52.944 UTC [orderer/kafka] newProducer -> DEBU 0f8 Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:06:55.944 UTC [orderer/kafka] newProducer -> DEBU 0f9 Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:06:58.944 UTC [orderer/kafka] newProducer -> DEBU 0fa Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:01.944 UTC [orderer/kafka] newProducer -> DEBU 0fb Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:04.944 UTC [orderer/kafka] newProducer -> DEBU 0fc Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:07.944 UTC [orderer/kafka] newProducer -> DEBU 0fd Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:10.944 UTC [orderer/kafka] newProducer -> DEBU 0fe Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:13.944 UTC [orderer/kafka] newProducer -> DEBU 0ff Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:16.944 UTC [orderer/kafka] newProducer -> DEBU 100 Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:19.944 UTC [orderer/kafka] newProducer -> DEBU 101 Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:22.944 UTC [orderer/kafka] newProducer -> DEBU 102 Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:25.944 UTC [orderer/kafka] newProducer -> DEBU 103 Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:28.944 UTC [orderer/kafka] newProducer -> DEBU 104 Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:31.944 UTC [orderer/kafka] newProducer -> DEBU 105 Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:34.944 UTC [orderer/kafka] newProducer -> DEBU 106 Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:37.944 UTC [orderer/kafka] newProducer -> DEBU 107 Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:40.944 UTC [orderer/kafka] newProducer -> DEBU 108 Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:43.944 UTC [orderer/kafka] newProducer -> DEBU 109 Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:46.944 UTC [orderer/kafka] newProducer -> DEBU 10a Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:49.944 UTC [orderer/kafka] newProducer -> DEBU 10b Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:07:50.716 UTC [orderer/kafka] newProducer -> CRIT 10c Failed to create Kafka producer: kafka: client has run out of available brokers to talk to (Is your cluster reachable?)
panic: Failed to create Kafka producer: kafka: client has run out of available brokers to talk to (Is your cluster reachable?)


goroutine 1 [running]:
panic(0xb031e0, 0xc4205634b0)
/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc4201e1530, 0xc30f64, 0x23, 0xc420563400, 0x1, 0x1)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x127
github.com/hyperledger/fabric/orderer/kafka.newProducer(0xc420278840, 0x3, 0x4, 0x0, 0x9, 0x0, 0x1, 0xb2d05e00, 0xdf8475800, 0x0, ...)
/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/producer.go:50 +0x283
github.com/hyperledger/fabric/orderer/kafka.glob..func2(0xc420278840, 0x3, 0x4, 0x0, 0x9, 0x0, 0x1, 0xb2d05e00, 0xdf8475800, 0x0, ...)
/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/orderer.go:58 +0xb4
github.com/hyperledger/fabric/orderer/kafka.newChain(0x11b5d40, 0xc420182a50, 0x11b6c40, 0xc420360d70, 0xe, 0xc4207ad650)
/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/orderer.go:118 +0x432
github.com/hyperledger/fabric/orderer/kafka.(*consenterImpl).HandleChain(0xc420182a50, 0x11b6c40, 0xc420360d70, 0xc42019be60, 0x3, 0x3, 0x0, 0x5)
/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/orderer.go:83 +0x8f
github.com/hyperledger/fabric/orderer/multichain.newChainSupport(0xc420098e00, 0xc420098d60, 0xc4202324e0, 0x11acbc0, 0x11f3900, 0x1)
/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/chainsupport.go:136 +0x602
github.com/hyperledger/fabric/orderer/multichain.NewManagerImpl(0x11af3c0, 0xc4203542c0, 0xc4202324e0, 0x11acbc0, 0x11f3900, 0x0, 0x0)
/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/manager.go:131 +0x8d9
main.main()
/opt/gopath/src/github.com/hyperledger/fabric/orderer/main.go:174 +0x179d {code}
 

Note: After we restarted all the Kafka Brokers, and we restarted orderer, it connected to cluster and recognized kafka cluster,
{code:java}

2017-05-18 15:16:06.529 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 1c6 Remaining bytes=[17397], Going to peek [8] bytes
2017-05-18 15:16:06.529 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 1c7 Returning blockbytes - length=[17394], placementInfo={fileNum=[0], startOffset=[6647], bytesOffset=[6650]}
2017-05-18 15:16:06.529 UTC [orderer/multichain] newChainSupport -> DEBU 1c8 [channel: testchainid] Retrieved metadata for tip of chain (block #1): value:""\010\002""
2017-05-18 15:16:06.529 UTC [orderer/kafka] newChain -> DEBU 1c9 [channel: testchainid] Starting chain with last persisted offset 2 and last recorded block 1
2017-05-18 15:16:09.529 UTC [orderer/kafka] newProducer -> DEBU 1ca Connecting to Kafka cluster: [kafka0:9092 kafka1:9092 kafka2:9092]
2017-05-18 15:16:09.536 UTC [orderer/kafka] newProducer -> DEBU 1cb Connected to the Kafka cluster
2017-05-18 15:16:09.536 UTC [orderer/multichain] NewManagerImpl -> INFO 1cc Starting with system channel testchainid and orderer type kafka
2017-05-18 15:16:09.536 UTC [orderer/kafka] Start -> DEBU 1cd [channel: testchainid] Posting the CONNECT message...
2017-05-18 15:16:09.544 UTC [orderer/kafka] Send -> DEBU 1ce [channel testchainid] Posted blob to the Kafka cluster (offset number: 3)
2017-05-18 15:16:09.544 UTC [orderer/kafka] Start -> DEBU 1cf [channel: testchainid] CONNECT message posted successfully
2017-05-18 15:16:09.553 UTC [orderer/kafka] newConsumer -> DEBU 1d0 [channel: testchainid] Created new consumer for session (beginning offset: 3)
2017-05-18 15:16:09.553 UTC [orderer/main] NewServer -> INFO 1d1 Starting orderer
2017-05-18 15:16:09.553 UTC [orderer/main] main -> INFO 1d2 Beginning to serve requests
2017-05-18 15:16:09.554 UTC [orderer/kafka] loop -> DEBU 1d3 [channel: testchainid] Successfully unmarshalled consumed message. Inspecting type...
2017-05-18 15:16:09.554 UTC [orderer/kafka] loop -> DEBU 1d4 [channel: testchainid] It's a connect message - ignoring{code}
 

But network is still left in a messy state, and invoke-transactions fails to process"," 

 ",,,,,,,,,,,,18/May/17 4:06 PM;Nishi;logs.tar.gz;https://jira.hyperledger.org/secure/attachment/10836/logs.tar.gz,19/May/17 3:54 PM;Nishi;orderer0_NON_PANIC_Log.txt;https://jira.hyperledger.org/secure/attachment/10846/orderer0_NON_PANIC_Log.txt,19/May/17 6:48 PM;Nishi;updatedLogs-April19th-2-45pm.tar.gz;https://jira.hyperledger.org/secure/attachment/10848/updatedLogs-April19th-2-45pm.tar.gz,,,,,,,,,,,0|i011ed:,,,,,,kchristidis,latitiah,Nishi,scottz,,,,,,,,18/May/17 9:14 PM;kchristidis;(Same comment applies: https://jira.hyperledger.org/browse/FAB-4012?focusedCommentId=24047&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-24047),"19/May/17 3:34 PM;Nishi;After updating docker-compose-base.yaml to include
{code:java}

 - KAFKA_MIN_INSYNC_REPLICAS=2{code}
 

Reran the test with few changes to send a tx: we need to be running a minimum of 2 kafka brokers.

 

So now we have:

1. Bring up the network. (1 orderer, 3 kafka brokers, 3 zoo-keepers, 2 org with 2 peer each with TLS)
 2. Send a invoke transaction
 3. Query yields successful results as expected
 4. Now identify leader of kafka cluster, from logs in our scenario it was broker1 i.e. kafka0 (kafka0:1, kafka1:2, kafka2: 3)
 5. Pause all kafka brokers in the order below

1. docker pause kafka0
 2. docker pause kafka1
 3. docker pause kafka2 (leader stopped at end)
 6. Wait 30 seconds
 7. docker unpause kafka0 + kafka1(non-leaders)
 8. Issue a transaction

Expected Result:

New leader to be elected (which appears is happening from kafka logs)
 Transaction to complete successfully

 

Actual Result:
 Transaction fails 
 ""error: [Orderer.js]: sendBroadcast - reject with SERVICE_UNAVAILABLE
 not ok 10 Failed to send transaction and get notifications within the timeout""

 

This time when I restarted order, orderer DID NOT PANIC or CRASH but instead, I see
{code:java}
2017-05-19 15:28:49.764 UTC [orderer/common/broadcast] Handle -> INFO 272^[[0m Consenter instructed us to shut down{code}
 

Please find attached orderer logs. Lowering the priority here.","19/May/17 6:48 PM;Nishi;This is what we observed after few more tests (this time with docker stop - so that any state would be transferred graciously)

In step 7 above, when earlier leader in this case (kafka2) was brought back up, along with another non-leader.

Orderer was able to process new transaction.

Please find attached logs (updatedLogs-April19th-2-45pm.tar.gz)

 

We successfully tested happy paths (where previous leader was always brought back so that other kafka broker would be in sync). Here our goal is to check if orderer recognizes leadership transfer which does not seem to be happening.

 ",21/May/17 11:24 PM;kchristidis;Unassigning myself on purpose as I'm only working on one issue at time. Will re-assign when I focus on this.,"10/Jun/17 10:18 AM;kchristidis;That is a valid scenario and not a bug.

Consider the example below with the typical setup described in `bddtests/dc-*.yml`.

Before we pause any brokers, we query the channel:


{{(behave_venv) ubuntu@hyperledger-devenv:472d8bd:/opt/gopath/src/github.com/hyperledger/fabric/bddtests/tmp/kafka_2.11-0.9.0.1$ bin/kafka-topics.sh --zookeeper localhost:33503 --describe --topic com.acme.blockchain.jdoe.Channel1}}
{{Topic:com.acme.blockchain.jdoe.Channel1 PartitionCount:1 ReplicationFactor:3 Configs:}}
{{ Topic: com.acme.blockchain.jdoe.Channel1 Partition: 0 Leader: 2 Replicas: 2,3,0 Isr: 2,3,0}}

 

We see here that broker 2 is the leader for Channel1, and brokers 2,3,0 are in its ISR. (Basically all of the brokers that replicate this partition.)

Now we pause all of the brokers as you did (we don't even have to wait and do the leader last). Then we unpause just brokers 0 and 1 (so the former leader remains paused).

Here's what we get if we query the channel now:


{{(behave_venv) ubuntu@hyperledger-devenv:472d8bd:/opt/gopath/src/github.com/hyperledger/fabric/bddtests/tmp/kafka_2.11-0.9.0.1$ bin/kafka-topics.sh --zookeeper localhost:33503 --describe --topic com.acme.blockchain.jdoe.Channel1}}
{{Topic:com.acme.blockchain.jdoe.Channel1 PartitionCount:1 ReplicationFactor:3 Configs:}}
{{ Topic: com.acme.blockchain.jdoe.Channel1 Partition: 0 Leader: 0 Replicas: 2,3,0 Isr: 0}}

So, we have a new leader, broker 0. However! Check the channel's ISR. It's only got broker 0 in it, and its size is less than the minimum we had asked for when setting up the cluster (min.insync.replicas = 2). (How did we end up here? Because we paused the other two brokers in the channel's ISR.)

As a result, if we attempt to read (Deliver) from this channel it'll work, but if we attempt to write to it (Broadcast), the request will fail with a SERVICE_UNAVAILABLE response.

So the behavior that you see is totally normal.

Closing this, but feel free to ask questions or reopen if you think I missed something.","14/Jun/17 9:15 PM;latitiah;[~kchristidis] Your explanation makes sense here, but I think that there is still an issue. (It may be that this would be more of an improvement than a bug, though) I do believe that we should set up the fabric kafka brokers such that even if they come back up ""out of order"" that the cluster should be functional.","14/Jun/17 9:22 PM;kchristidis;This will not happen. This is basically a call to rewrite the way Apache Kafka works.

We should just add more brokers to prevent such issues from happening.","15/Jun/17 4:34 PM;latitiah;Per a RocketChat discussion with [~kchristidis], when this scenario occurs the current workaround would be to add a new kafka broker to the cluster. Maybe in the future (given the necessary resources and time) a new kafka engine could be written to allow for this sort of failure scenario.

[~nickgaski]: This workaround should be documented as a solution to this issue.","15/Jun/17 5:05 PM;kchristidis;The only relevant directive here is:
{quote}Given the maximum number of faults (i.e. crashed and/or non-responsive brokers) we wish to tolerate --

Have enough brokers up, and configure your default.replication.factor and minimum.insync.replicas so that you can satisfy the minimum.insync.replicas requirement.
{quote}
I wouldn't label this as a workaround, but as _the only deployment strategy_.","15/Jun/17 5:08 PM;kchristidis;This issue should be closed.

Latitia, feel free to add this comment in FAB-3384.","16/Jun/17 11:23 PM;scottz;Before closing this, we need to have a discussion, to make sure we understand the behavior in various scenarios, using the recommended 4 KBs, min_isr=2, replicas=3. And to make sure our product is actually behaving in a useful manner.

If we stop 3, stop 2, stop 1, and then restart 2 or 3, it should work (min_isr=2, and since k0 stays running entire time). Agree?

If we stop 3, stop 2, stop 1, stop 0, then is there any way to get it back functioning? How about start 0, start 1, start 2, start 3?  How about Start 1, start 2, start 3? Either one of those should work, based on my understanding of kafka. Agree?

What is all this talk about problems when a kafka ""leader"" is stopped? The network should continue to provide service (if after a brief respite) (even allowing for the orderers to reconnect to KBs if necessary) (and we can discuss the requirement for the orderer-consumer-clients and orderer-broadcast-clients to reestablish grpc connections) when only one kafkabroker is stopped, regardless of which one it is. If my understandings are incorrect, then please can you point to the Kafka literature that describes about the kafka broker config parameters functional behavior being OVERRIDDEN if a kafkabroker leader encounters trouble.","17/Jun/17 12:15 AM;kchristidis;I assume that in your comment above you refer to a 4-broker setup, since you refer to brokers 0 to 3. This is also the setup that has been available since May 16th in our repo (FAB-3387), the one that I was talking about in my response above (and the only setup we should be exploring anyway).
{quote}If we stop 3, stop 2, stop 1, and then restart 2 or 3, it should work (min_isr=2, and since k0 stays running entire time). Agree?
{quote}
Correct.
{quote}If we stop 3, stop 2, stop 1, stop 0, then is there any way to get it back functioning? How about start 0, start 1, start 2, start 3?  How about Start 1, start 2, start 3? Either one of those should work, based on my understanding of kafka. Agree?
{quote}
Correct.

When Latitia talks about bringing brokers back ""out of order"", she doesn't mean bring _all of them_ back out of order. This is different to what you write in the quote above. Latitia suggests that you can bring just |min.isr| brokers up in any order and the channel should work. I clarified this in a private conversation in Rocket.Chat with Latitia. And as I wrote above, this won't happen and this is not the way Kafka works. This is exactly what my detailed example addresses BTW – you have |min.isr| brokers up but they don't belong to the replication factor set.
{quote}What is all this talk about problems when a kafka ""leader"" is stopped?
{quote}
I didn't say there would be a problem. The original bug report – posted in a piecewise manner and where the claim of killing the leader (which I assume is a reference is to the channel leader) could not be trusted (as we discussed with Nishi a couple of days ago, I think you were actually targeting the Kafka controller) – didn't leave me much to work with. This is why I gave a detailed example above, noting my setup. I clearly state that ""we have a new leader, broker 0"", so again, no problems as far as I can tell.
{quote}The network should continue to provide service (if after a brief respite) (even allowing for the orderers to reconnect to KBs if necessary) (and we can discuss the requirement for the orderer-consumer-clients and orderer-broadcast-clients to reestablish grpc connections) when only one kafkabroker is stopped, regardless of which one it is.{quote}
That is indeed the case.

 ",,,,,,,,,,
Bring your first network (byfn): bootstrap peer setup in org2 is incorrect,FAB-5062,18765,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,6/28/2017 20:01,6/29/2017 16:50,4/26/2018 6:50,6/29/2017 16:50,v1.0.0-rc1,,,,v1.0.0,,fabric-samples,,,,0,quality,Quality,,,"1. in BYFN docker compose, the bootstrap peer for peer1Org2 is set to itself, which is not the intended way of usage of Bootstrap option. BYFN runs without any error as-is, but it inadvertently separates the peer1org2 from other peer of org2 and creates two leaders, instead of one, within the same org.

2. in the same file, the bootstrap to peer0Org2 is set to itself, which is not the intended behavior of bootstrap, and the line has no effect.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01bh9:,,,,,,AdnanChoudhury,,,,,,,master,,,TRUE,28/Jun/17 8:15 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/11233/,,,,,,,,,,,,,,,,,,,,,
unused code in common packages,FAB-5103,18811,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,nnao,ChristopherFerris,ChristopherFerris,6/29/2017 12:54,7/7/2017 2:09,4/26/2018 6:50,7/7/2017 2:09,v1.0.0-rc1,,,,,,fabric-peer,,,,0,,,,,"cbf$ unused github.com/hyperledger/fabric/common/...

common/config/standardvalues_test.go:47:2: field msg is unused (U1000)

common/mocks/peer/mockccstream.go:58:2: field sendOnRecv is unused (U1000)

common/tools/configtxlator/rest/router.go:24:5: var logger is unused (U1000)",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01br1:,,,,,,ChristopherFerris,nnao,,,,,,master,,,TRUE,30/Jun/17 12:23 AM;nnao;https://gerrit.hyperledger.org/r/#/c/11287/,,,,,,,,,,,,,,,,,,,,,
unused code in msp packages,FAB-5104,18812,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,nnao,ChristopherFerris,ChristopherFerris,6/29/2017 12:55,8/28/2017 17:28,4/26/2018 6:50,8/28/2017 17:28,v1.0.0-rc1,,,,,,fabric-crypto,,,,0,,,,,"cbf$ unused github.com/hyperledger/fabric/msp/...

msp/cert.go:33:6: type dsaSignature is unused (U1000)

msp/cert.go:37:6: type ecdsaSignature is unused (U1000)

msp/mspimpl.go:1161:22: func (*bccspmsp).getValidityOptsForTLSCert is unused (U1000)",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01br9:,,,,,,ChristopherFerris,nnao,,,,,,master,,,TRUE,29/Jun/17 11:28 PM;nnao;https://gerrit.hyperledger.org/r/#/c/11275/,,,,,,,,,,,,,,,,,,,,,
unused code in events packages,FAB-5105,18813,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,nnao,ChristopherFerris,ChristopherFerris,6/29/2017 12:57,7/7/2017 2:08,4/26/2018 6:50,7/7/2017 2:08,v1.0.0-rc1,,,,,,fabric-peer,,,,0,,,,,"cbf$ unused github.com/hyperledger/fabric/events/...

events/consumer/consumer_test.go:29:2: field count is unused (U1000)

events/consumer/consumer_test.go:35:2: field count is unused (U1000)

events/consumer/consumer_test.go:41:2: field count is unused (U1000)

events/consumer/consumer_test.go:45:5: var ehServer is unused (U1000)

events/consumer/consumer_test.go:51:5: var zeroAdapter is unused (U1000)

events/consumer/consumer_test.go:52:5: var zeroObcEHClient is unused (U1000)

events/consumer/consumer_test.go:54:5: var badAdapter is unused (U1000)

events/consumer/consumer_test.go:55:5: var badObcEHClient is unused (U1000)

events/producer/producer_test.go:188:6: func createTestBlock is unused (U1000)",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01brh:,,,,,,ChristopherFerris,nnao,,,,,,master,,,TRUE,29/Jun/17 11:27 PM;nnao;https://gerrit.hyperledger.org/r/#/c/11277/,,,,,,,,,,,,,,,,,,,,,
Chaincode GetState API is documentation is not clear.,FAB-5113,18828,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,jyellick,jyellick,jyellick,6/29/2017 18:55,7/1/2017 17:05,4/26/2018 6:50,7/1/2017 17:05,v1.0.0-rc1,,,,v1.0.0,,fabric-peer,,,,0,documentation,,,,"The documentation for the chaincode interface for {{GetState}} reads as follows:

{noformat}
        // GetState returns the value of the specified `key` from the
        // ledger. Note that GetState doesn't read data from the writeset, which
        // has not been committed to the ledger. In other words, GetState doesn't
        // consider data modified by PutState that has not been committed.
        GetState(key string) ([]byte, error)
{noformat}

As a first time chaincode developer, it's not at all clear what the behavior of this function will be when the key does not exist, and whether this is an error or not.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01bud:,,,,,,jyellick,,,,,,,master,,,TRUE,29/Jun/17 6:59 PM;jyellick;In review via: https://gerrit.hyperledger.org/r/#/c/11257/,,,,,,,,,,,,,,,,,,,,,
"PTE Join successfully, but the node process still running",FAB-5123,18850,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,wsh_bob,z21921,z21921,6/30/2017 7:07,7/9/2017 20:40,4/26/2018 6:50,7/9/2017 20:40,,,,,WON'T FIX,,fabric-tools,,,,0,,,,,"PTE join successful:

info: [PTE main]: [joinChannel] join Channel R E S P O N S E : [[\{""version"":0,""timestamp"":null,""response"":\{""status"":200,""message"":"""",""payload"":\{""type"":""Buffer"",""data"":[]}},""payload"":\{""type"":""Buffer"",""data"":[]},""endorsement"":null},\{""version"":0,""timestamp"":null,""response"":\{""status"":200,""message"":"""",""payload"":\{""type"":""Buffer"",""data"":[]}},""payload"":\{""type"":""Buffer"",""data"":[]},""endorsement"":null}],null,null]
info: [PTE main]: [joinChannel] Successfully joined peers in (testorgschannel1:PeerOrg2)
info: [PTE main]: [joinChannel] The new channel has been successfully joined on peer 172.16.35.101:6052
info: [PTE main]: [joinChannel] join Channel R E S P O N S E : [[\{""version"":0,""timestamp"":null,""response"":\{""status"":200,""message"":"""",""payload"":\{""type"":""Buffer"",""data"":[]}},""payload"":\{""type"":""Buffer"",""data"":[]},""endorsement"":null},\{""version"":0,""timestamp"":null,""response"":\{""status"":200,""message"":"""",""payload"":\{""type"":""Buffer"",""data"":[]}},""payload"":\{""type"":""Buffer"",""data"":[]},""endorsement"":null}],null,null]
info: [PTE main]: [joinChannel] Successfully joined peers in (testorgschannel1:PeerOrg1)

 

BUT NODE process do not quit:

 

root@order0:~/gopath/src/github.com/hyperledger/fabric-sdk-node/test/v1performance# ps -ef |grep pte
root 103785 1 0 15:01 pts/3 00:00:00 node pte-main.js 0 userInputs/samplecc-chan1-join1.json 1498806081247
root 103786 1 0 15:01 pts/3 00:00:00 node pte-main.js 1 userInputs/samplecc-chan1-join2.json 1498806081247
root 103818 66854 0 15:03 pts/3 00:00:00 grep --color=auto pte",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01byt:,,,,,,kchristidis,z21921,,,,,,,,,,"01/Jul/17 8:14 PM;kchristidis;Please provide a detailed description of what you're doing (a precise list of steps), what you expect, and what you get instead. Logs are good (in fact, logs are necessary) *but logs alone are not enough*.","09/Jul/17 8:40 PM;kchristidis;No update in more than a week, closing. Please re-open with appropriate level of detail if the issue is still relevant.",,,,,,,,,,,,,,,,,,,,
Fix comment messages in Makefile,FAB-5140,18874,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,yuki-kon,yuki-kon,yuki-kon,6/30/2017 22:34,7/3/2017 17:22,4/26/2018 6:50,7/3/2017 17:22,v1.0.0-rc1,,,,v1.0.0,,fabric-peer,,,,0,,,,,"Comment messages in Makefile is not updated after merging CR10413 ([https://gerrit.hyperledger.org/r/#/c/10413/]).

The following commands don't work as comment suggests.

 - dist-clean

- clean-all

 

We need to update comment messages correctly.",fabric: commit ace2a64b94852bae2219261531b96ef1dff474e6,,,,,,,,,,,,,,,,,,,,,,,,,0|i01c31:,,,,,,yuki-kon,,,,,,,master,,,TRUE,30/Jun/17 11:08 PM;yuki-kon;Submitted here. https://gerrit.hyperledger.org/r/#/c/11325/,,,,,,,,,,,,,,,,,,,,,
"Fix README.md in ""balance-transfer"" example.",FAB-5155,18926,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,yuki-kon,yuki-kon,yuki-kon,7/3/2017 20:52,9/8/2017 20:05,4/26/2018 6:50,9/8/2017 20:05,v1.0.0-rc1,,,,Future,,fabric-docs,fabric-samples,,,0,,,,,"The README in ""balance-transfer"" should be fixed in the section:
https://github.com/hyperledger/fabric-samples/tree/master/balance-transfer#running-the-sample-program

1. Broken link
There is a link to ""Sample REST APIs Requests"" which is broken. This is linked to non-existent path on fabric-sdk-node repository.
I believe the intended link is to https://github.com/hyperledger/fabric-samples/tree/master/balance-transfer#sample-rest-apis-requests


2. Instruction to start node application.
There is no instruction to start node application.
If we execute the REST APIs according to the current README, we can't get any responses since node application is not working.
We need to execute the following steps before calling REST APIs.

 - npm install
 - PORT=4000 node app
",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01ccd:,,,,,,yuki-kon,,,,,,,master,,,TRUE,03/Jul/17 9:58 PM;yuki-kon;Posted here: https://gerrit.hyperledger.org/r/#/c/11345/,,,,,,,,,,,,,,,,,,,,,
PTE installs only to last org in list,FAB-5217,19090,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,Low,,dongming,holocron,holocron,7/8/2017 3:00,7/11/2017 21:02,4/26/2018 6:50,,,,,,,,fabric-test-resources,,,,0,PTE,,,,"When multiple orgs are listed in the user input file, PTE only successfully installs to the last one.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01d8l:,,,,,,dongming,holocron,,,,,,,,,,"11/Jul/17 7:04 PM;dongming;PTE only installs chaincode on one org at a time. Hence use can only specify one org per user input json file.  However, one runCase input can contain multiple user input json.  So user can still install multiple org in one execution.","11/Jul/17 7:30 PM;holocron;Okay – the difficulty here is in that some times PTE will let you specify multiple orgs, and sometimes not... this should be made more clear.","11/Jul/17 9:02 PM;dongming;updated README in v1performance to address that what can be applied to multiple org and what cannot:

*transType*: transaction type
   Channel: channel activities specified in channelOpt.action, multiple org is not permitted on channelOpt:orgName
   Install: install chaincode, multiple org is not permitted on channelOpt:orgName
   Instantiate: instantiate chaincode on the organizations listed in the orgName of channelOpt, multiple org is permitted on channelOpt:orgName
   Invoke: invokes transaction, multiple org is permitted on channelOpt:orgName
   
   notes that in case of multiple org is not permitted, user can specify multiple user input json files in runCases.txt that the desired action (install etc) can be performed on multiple org.

 ",,,,,,,,,,,,,,,,,,,
Vagrant up failed in windows system,FAB-5219,19092,Bug,Invalid,FAB,Fabric,software,ChristopherFerris,,,Low,,matador.hong,matador.hong,matador.hong,7/8/2017 13:37,4/5/2018 17:21,4/26/2018 6:50,,,,,,Not a Bug,,fabric-devenv,,,7/8/2017 0:00,0,vagrant,,,,"On Window system, 
Use Vagrant to set up VM.
Steps:
1 cd $GOPATH/src/github.com/hyperledger/fabric/devenv  
2 vagrant up
 
In some Windows system, which the memory less than 4 GB, and cores less than 2. The 'vagrant up' will fail.
 
I think it should be important for this sense to successful setting up.","WIndows 7 32 bit

Memory 4GB

 ",,,,,,,,,,,,,,,,,,,,,,,,,0|i01d91:,,,,,,ChristopherFerris,matador.hong,sanchezl,,,,,,,,,"25/Jan/18 9:28 PM;sanchezl;You can edit the Vagrantfile for your particular system, but 4096 was determined to be the minimum needed for the devenv.",05/Apr/18 5:21 PM;ChristopherFerris;closing this since there does need to be a minimum. Note that you can develop natively on Windows without Vagrant.,,,,,,,,,,,,,,,,,,,,
chaintool crash when protoc/protoc-gen-go missing,FAB-5228,19108,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,Low,,greg.haskins,greg.haskins,greg.haskins,7/10/2017 12:23,7/10/2017 12:23,4/26/2018 6:50,,,,,,,,fabric-chaintool,,,,0,,,,,"We should not crash, but report a helpful error message.

 

Possible optimization: We could probably auto-install protoc-gen-go if it is missing (e.g. ""go get ../protoc-gen-go"")",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01dbx:,,,,,,greg.haskins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Following instructions in chaincode4ade.html leads to build error,FAB-5275,19195,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,yuki-kon,tkuhrt,tkuhrt,7/11/2017 19:55,10/3/2017 8:45,4/26/2018 6:50,10/1/2017 12:13,v1.0.0,v1.0.1,v1.0.2,,v1.1,,fabric-docs,,,,0,,,,,"I copied the individual source snippets as I went through the [chaincode4ade.html|http://hyperledger-fabric.readthedocs.io/en/latest/chaincode4ade.html] file.  At the end of the document, it says that we must add a main; however, it does not say anything about adding the type for SimpleAsset. Thus, it resulted in the following when I did a build:

{{$ go build --tags nopkcs11}}{{# simple-asset-chaincode}}{{./sacc.go:11: undefined: SimpleAsset}}{{./sacc.go:61: 
}}{{undefined: SimpleAsset}}{{./sacc.go:82: 
undefined: SimpleAsset}}

This is easy to fix, as the full source snippet has the information necessary; however, it would be nice to call out this requirement in one of the steps.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01dt1:,,,,,,tkuhrt,yuki-kon,,,,,,master,,,TRUE,12/Sep/17 11:31 PM;yuki-kon;CR posted here: https://gerrit.hyperledger.org/r/#/c/13383/,,,,,,,,,,,,,,,,,,,,,
Orderer panic on restart,FAB-5286,19208,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,mffrench,mffrench,mffrench,7/12/2017 8:05,9/28/2017 15:43,4/26/2018 6:50,9/28/2017 15:43,v1.0.0,v1.0.0-alpha2,,,Unverifiable,,fabric-orderer,,,,0,,,,,"Hi,

when restarting Orderer Solo with ledger type configured as file, I'm getting a panic on restart (see error trace bellow - I still need to get some easy way to reproduce the issue out of our application). 

I'd like to know, what would be the consequence on the blockchain if I remove the orderer side ledger to enable restart of this component ? As ledger are also stored on the peer side I'm not sure to understand the need to store it on the orderer side also. Is there some available doc explaining the reason to store ledger on the orderer side ?


Best,


{code:java}
2017-06-30 10:00:21.127 UTC [orderer/main] main -> INFO 001 Starting orderer with TLS enabled
2017-06-30 10:00:21.210 UTC [msp] getMspConfig -> INFO 002 MSP configuration file not found at [/etc/hyperledger/fabric/orderer/msp/config.yaml]: [stat /etc/hyperledger/fabric/orderer/msp/config.yaml: no such file or directory]
2017-06-30 10:00:21.276 UTC [orderer/main] main -> INFO 003 Not bootstrapping because of existing chains
2017-06-30 10:00:21.294 UTC [orderer/multichain] newLedgerResources -> CRIT 004 Error creating configtx manager and handlers: Bad envelope: Not a tx of type CONFIG
panic: Error creating configtx manager and handlers: Bad envelope: Not a tx of type CONFIG

goroutine 1 [running]:
panic(0xb035e0, 0xc420349420)
/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc4201b98c0, 0xc3a748, 0x30, 0xc420349370, 0x1, 0x1)
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x127
github.com/hyperledger/fabric/orderer/multichain.(*multiLedger).newLedgerResources(0xc420338000, 0xc420257440, 0xc420257440)
/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/manager.go:159 +0x393
github.com/hyperledger/fabric/orderer/multichain.NewManagerImpl(0x11b03c0, 0xc420358220, 0xc4202565a0, 0x11adbc0, 0x11f4980, 0x0, 0x0)
/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/manager.go:109 +0x23b
main.main()
/opt/gopath/src/github.com/hyperledger/fabric/orderer/main.go:174 +0x179d
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01dvx:,,,,,,kchristidis,mffrench,,,,,,,,,,"12/Jul/17 1:16 PM;kchristidis;> I'd like to know, what would be the consequence on the blockchain if I remove the orderer side ledger to enable restart of this component?

If you remove the orderer-side ledger (and still keep the genesis block around), your orderer will start producing a broken chain. Suppose it produced blocks 1-2-3. You stop the orderer, remove the ledger, restart the orderer with just the genesis block. The next block that the orderer creates is block 1, but this time it's different to the original block 1. You now have a broken chain.

> As ledger are also stored on the peer side I'm not sure to understand the need to store it on the orderer side also.

New org (`orgFoo`) joins with genesis block, how does it catch up to the most recent block? (It cannot reach out to the other orgs in the channel for gossip because orgFoo's gossip module is rejecting the ""join"" channel call because it cannot find `orgFoo`'s info in the genesis block.)

This is why the ordering service needs to keep a copy of the ledger – to allow syncing. (BTW, we'll be working on archiving soon, which means the orderer won't have to keep the entire ledger, but it'll be able to prune it to configuration blocks.)","12/Jul/17 1:18 PM;kchristidis;Any particular reason you're still on alpha-2? Please switch to 1.0.

It's not entirely clear to me whether you were modifying the ledger on the orderer side when you got this error. (As we explained above, this is not allowed.) The error message seems to indicate that you're pointing the orderer to a directory that no longer holds a ledger beginning with a config (genesis) block.

If you did modify the ledger, let's please close this JIRA.","14/Jul/17 7:22 PM;mffrench;Thank you for your answers [~kchristidis]. The orderer ledger is configured as a docker volume pointing to a dedicated directory on the host to store it. We do same for the configuration folder :
{code:java}
volumes:
- ./tmp/conf/Org0/o0:/etc/hyperledger/fabric/orderer
- ./tmp/data/Org0/o0/ledger:/var/hyperledger/production/orderer 
{code}
To reproduce the issue I just docker-compose stop / rm the orderer container and docker-compose up -d again several times. I didn't touch anything in the ledger directory.

That said, I did my test on OSX and some time I notice Docker issue on Volume (where the container don't see the volume configured even if it exists on the host). I will continue investigate this issue and particularly to be sure this bug is not derived from this docker volume issue. 

We're still on alpha2 because we didn't get the time to migrate on beta or new v1.  



About orderer ledger, your input was pretty interesting. Is this the same behavior with Kafka ordering ? Is there some documentation about ledger persistence on the orderer (solo or kafka) ? ","14/Jul/17 8:24 PM;kchristidis;Thanks for following up on this.

I'm tempted to say this might be a Docker issue, as I cannot think of a reason our code would fail because of this.

For good measure, I would also move the the host directory to a path outside of `/tmp` (if you're on `/tmp` – that's not crystal clear).
{quote}About orderer ledger, your input was pretty interesting. Is this the same behavior with Kafka ordering ? Is there some documentation about ledger persistence on the orderer (solo or kafka) ?
{quote}
I captured all the thinking that went behind the Kafka-based solution here: [https://docs.google.com/document/d/1vNMaM7XhOlu9tB_10dKnlrhy5d7b1u8lSY8a-kVjCO4/edit]

This covers the need for a ledger at the orderer.",14/Jul/17 8:26 PM;kchristidis;I'm assigning this JIRA to you – feel free to post your findings when you got them.,15/Jul/17 7:51 AM;mffrench;FYI : the host directory isn't in /tmp but in ./tmp where tmp is a subdirectory of my development directory. Will come back to you when I'm sure this is or not a docker issue.  ,"15/Jul/17 2:47 PM;kchristidis;Ah, got it, thanks for that update.","11/Aug/17 1:36 PM;kchristidis;[~mffrench]: Any updates on this one? If it cannot be reproduced, or is not being investigated I propose that we close.","11/Aug/17 1:42 PM;mffrench;Hi Kostas,

I just didn't get the time to have a new check on this issue - currently I just avoid restart my pre-prod orderer.

Anyway, if you want you can close it if you prefer. When things will calm down on my current project I will take time to upgrade to new fabric version, redo the test and upgrade this ticket to tell about my last tests (reproduced or not).

Kind regards,

 ","11/Aug/17 1:47 PM;kchristidis;Ah, no problem, if you plan to look into this, we'll leave it open, sure.

(Just wanted to make sure it's not forgotten. Will check back in 6 weeks or so.)",,,,,,,,,,,,
Minor jsdoc fixes,FAB-5324,19278,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,ericmvaughn,ericmvaughn,ericmvaughn,7/15/2017 17:49,8/9/2017 19:42,4/26/2018 6:50,7/17/2017 19:07,v1.0.0,,,,v1.0.1,,fabric-sdk-node,,,,0,node-SDK,,,,"Client.js - ChannelRequest is missing the txId parameter
 
Channel.js -  The jsdoc for getChannelConfig() should say that it returns a promise
 
User.js - getCryptoSuite() is missing a jsdoc comment",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01e9h:,,,,,,ericmvaughn,,,,,,,release-1.0,master,,TRUE,15/Jul/17 6:33 PM;ericmvaughn;https://gerrit.hyperledger.org/r/#/c/11667/,,,,,,,,,,,,,,,,,,,,,
"Peer CLI ""channels list"" command should output to stdout",FAB-5357,19325,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,wlahti,jmcnevin,jmcnevin,7/18/2017 14:11,9/19/2017 22:02,4/26/2018 6:50,9/19/2017 22:02,v1.0.0,,,,,,fabric-peer,,,,0,,,,,"Currently, this command does not output the channels list to stdout, so the output cannot be easily piped to other commands/files/etc.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01eil:,,,,,,jmcnevin,wlahti,,,,,,master,,,TRUE,13/Sep/17 8:24 PM;wlahti;https://gerrit.hyperledger.org/r/#/c/13441/,,,,,,,,,,,,,,,,,,,,,
wrong env var setting in first-network/scripts/script.sh,FAB-5381,19357,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,jtrayfield,jtrayfield,7/19/2017 15:14,1/30/2018 12:54,4/26/2018 6:50,1/30/2018 12:54,v1.0.0,,,,,,fabric-samples,,,,0,,,,,"ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem

should be:

ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/tls/ca.crt

 ",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01ep1:,,,,,,jtrayfield,lehors,sujeeban,,,,,,,,,20/Jul/17 3:10 PM;sujeeban;I think those two files are the same certificate.,20/Jul/17 5:06 PM;jtrayfield;my cryptogen does not generate the first file.,21/Jul/17 8:50 AM;sujeeban;Is your cryptogen binary up-to-date ?,"21/Jul/17 4:06 PM;jtrayfield;I recompiled it today:

emdall:first-network jtray$ ll ~/git/tracking/cryptogen 

-rwxr-xr-x  1 jtray  admin  8459284 Jul 21 11:27 /Users/jtray/git/tracking/cryptogen

with this result:



first-network jtray$ ./byfn.sh -m up  -c asdf

....

 ____    _____      _      ____    _____ 

/ ___|  |_   _|    / \    |  _ \  |_   _|

\___ \    | |     / _ \   | |_) |   | | 

 ___) |   | |    / ___ \  |  _ <    | | 

|____/    |_|   /_/   \_\ |_| \_\   |_| 

 

Build your first network (BYFN) end-to-end test

 

Channel name : asdf

Creating channel...

CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt

CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key

CORE_PEER_LOCALMSPID=Org1MSP

CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock

CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt

CORE_PEER_TLS_ENABLED=true

CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp

CORE_PEER_ID=cli

CORE_LOGGING_LEVEL=DEBUG

CORE_PEER_ADDRESS=peer0.org1.example.com:7051

2017-07-21 15:45:27.195 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP

2017-07-21 15:45:27.199 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity

Error: Error connecting to orderer.example.com:7050 due to open /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem: no such file or directory

 

emdall:first-network jtray$ ll crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp

total 0

drwxr-xr-x  3 jtray  admin  102 Jul 21 11:33 admincerts

drwxr-xr-x  3 jtray  admin  102 Jul 21 11:33 cacerts

drwxr-xr-x  3 jtray  admin  102 Jul 21 11:33 keystore

drwxr-xr-x  3 jtray  admin  102 Jul 21 11:33 signcerts

 ","23/Jan/18 8:22 PM;Clayton Sims;This is issue is very old,  did this get solved?","23/Jan/18 8:35 PM;jtrayfield;I haven't had a chance to try the latest version of Fabric.

Close this and if I have any problems I'll file a new Issue....

Thanks

 ","30/Jan/18 12:54 PM;lehors;I just gave this a try and the exact same command worked as expected. The two files are present and the same.

So, per [~jtrayfield] suggestion I think we can close this.

 ",,,,,,,,,,,,,,,
NodeSDK The JSDoc for several methods don't indicate they return a promise.,FAB-5382,19358,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,ericmvaughn,ericmvaughn,ericmvaughn,7/19/2017 15:31,8/9/2017 19:42,4/26/2018 6:50,7/25/2017 18:55,v1.0.0,,,,v1.0.1,,fabric-sdk-node,,,,0,node-SDK,,,,"The JSDoc for the following methods should indicate that they return a promise.
 
BaseClient.js  --  newDefaultKeyValueStore()
 
Channel.js  -- queryBlock(), queryBlockByHash(), queryInfo(), queryTransaction(), and queryInstantiatedChaincodes() ",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01ep9:,,,,,,ericmvaughn,,,,,,,release-1.0,master,,TRUE,20/Jul/17 6:12 PM;ericmvaughn;https://gerrit.hyperledger.org/r/#/c/11755/,,,,,,,,,,,,,,,,,,,,,
NodeSDK The JSDoc for queryByChaincode() should not include a txId,FAB-5403,19389,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,ericmvaughn,ericmvaughn,ericmvaughn,7/20/2017 18:15,8/9/2017 19:42,4/26/2018 6:50,7/25/2017 18:56,v1.0.0,,,,v1.0.1,,fabric-sdk-node,,,,0,node-SDK,,,,Channel.js  -- queryByChaincode() does not require a txId so it can't share the same request definition (ChaincodeInvokeRequest) as the invoke.,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01eyd:,,,,,,ericmvaughn,,,,,,,release-1.0,master,,TRUE,25/Jul/17 6:57 PM;ericmvaughn;https://gerrit.hyperledger.org/r/#/c/11853/,,,,,,,,,,,,,,,,,,,,,
NodeSDK JSDoc - installChaincode() request should include targets,FAB-5409,19395,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,ericmvaughn,ericmvaughn,ericmvaughn,7/20/2017 20:51,8/9/2017 19:42,4/26/2018 6:50,7/27/2017 13:31,v1.0.0,,,,v1.0.1,,fabric-sdk-node,,,,0,node-SDK,,,,Client.js  -- The installChaincode() request (ChaincodeInstallRequest) should include a targets parameter,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01ezh:,,,,,,ericmvaughn,,,,,,,release-1.0,master,,TRUE,27/Jul/17 1:30 PM;ericmvaughn;https://gerrit.hyperledger.org/r/#/c/11919/,,,,,,,,,,,,,,,,,,,,,
NodeSDK JSDoc - TransactionRequest should have 'proposal' instead of 'chaincodeProposal',FAB-5410,19396,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,ericmvaughn,ericmvaughn,ericmvaughn,7/20/2017 20:53,8/9/2017 19:42,4/26/2018 6:50,7/25/2017 18:58,v1.0.0,,,,v1.0.1,,fabric-sdk-node,,,,0,node-SDK,,,,Channel.js  -- The second property in TransactionRequest used by sendTransaction() should be 'proposal' instead of 'chaincodeProposal',,,,,,,,,,,,,,,,,,,,,,,,,,0|i01ezp:,,,,,,ericmvaughn,,,,,,,release-1.0,master,,TRUE,25/Jul/17 12:57 PM;ericmvaughn;https://gerrit.hyperledger.org/r/#/c/11881/,,,,,,,,,,,,,,,,,,,,,
Samples tutorial is missing a sudo,FAB-5486,19509,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,lucasbm88,lucasbm88,lucasbm88,7/26/2017 22:09,10/26/2017 15:53,4/26/2018 6:50,10/26/2017 15:53,,,,,,,fabric-docs,,,,0,,,,,"The following command on the samples documentation is not working properly on most environments:

curl -sSL https://goo.gl/iX9dek | bash

What happens is that, by default, a docker-ce installation only works with sudo. One will not be able to run docker commands without sudo unless he is root or has configured docker for it (not straightforward).

Said that, the previous command will fail in most environments, because the script being executed run docker commands.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01flp:,,,,,,ChristopherFerris,lucasbm88,mastersingh24,,,,,,,,,"07/Aug/17 8:09 AM;mastersingh24;[~lucasbm88]  

Maybe we can add a note about this for Linux users.  For macOS and Windows, this is not an issue.

On Linux, I've always add my user ID to the ""docker"" group",07/Aug/17 4:42 PM;ChristopherFerris;I have added a script to the fabric-samples/bin directory that will allow the user control over the download of docker images independent of installing the binaries [https://gerrit.hyperledger.org/r/c/11843/.|https://gerrit.hyperledger.org/r/c/11843/] It should be available in the default branch on GH when 1.0.1 is formally released.,,,,,,,,,,,,,,,,,,,,
No log is generated in the event of inability to write to peer-ledger file,FAB-5551,19627,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,manish-sethi,AdnanChoudhury,AdnanChoudhury,7/31/2017 16:43,10/20/2017 16:42,4/26/2018 6:50,10/20/2017 16:42,v1.0.0,,,,,,fabric-ledger,,,,0,ledger,quality,Usability,,"The peer-ledger is saved in the file named `blockfile_XXXXX`. In the event that the file become unwritable (e.g. accidentally deleted by some other process), none of the subsequent transactions result in any error/warning log even though the the TXs are not being written in the file anymore.

Expectation: if peer fails to record the TXs in the ledger, it indicates the error somehow, possibly via the logs. The network operators need to be made aware of the error and if any manual recovery actions are necessary.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01g45:,,,,,,AdnanChoudhury,denyeart,manish-sethi,,,,,,,,,24/Aug/17 1:50 PM;denyeart;[~manish-sethi] Could you take a look and get with Adnan as needed?,"18/Oct/17 6:04 PM;manish-sethi;[~AdnanChoudhury] - as discussed sometime ago, if someone has access to the file system and deletes the file to which the ledger is writing the blocks, this is the default behavior of most of the common filesystems.

The process that is writing to a file won't notice a delete from outside. For the writing process (peer process - in this case), the file still exists and it can keep writing as long it has the open file descriptor.

Think it from other perspective, someone can delete the already written files as well. It's is similar to deleting some of the files from the directory of a database. Mostly, dbs would figure this out when either you run some sanity checker tools or those files are read during query execution.

So, I would suggest that if the files are getting generated with the right permission (e.g., no read/write/delete allowed to the user/group other than the one who can manage peer process/machine - we should be fine.

 ","19/Oct/17 6:26 PM;AdnanChoudhury;Thanks [~manish-sethi]. In the writing process, is there any manual flushing? A flushing event should detect the problem of a orphan file descriptor, is this assumption correct?","20/Oct/17 4:42 PM;AdnanChoudhury;As [~manish-sethi] clarified, the flushing is happening after every block, and the files are generated with write permission, and the OS is handling the file-descriptor, the ledger behavior can be considered as ""as expected"". Marking this as *Not a bug*  ",,,,,,,,,,,,,,,,,,
The byfn.sh has some error.,FAB-5776,20187,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,TopJohn,TopJohn,TopJohn,8/15/2017 2:14,10/16/2017 2:19,4/26/2018 6:50,10/16/2017 2:19,,,,,,,fabric-samples,,,,0,,,,,"Line 113 is repeated,so it caused the docker-compose some error.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01jf9:,,,,,,ChristopherFerris,TopJohn,,,,,,,,,,14/Oct/17 7:43 PM;ChristopherFerris;I don't see line 113 as repeated. Possibly your version was inadvertently changed? [~TopJohn],,,,,,,,,,,,,,,,,,,,,
Use 'make behave' in verification build instead of python behave commands,FAB-5891,20364,Bug,Invalid,FAB,Fabric,software,ChristopherFerris,,,Low,,,sudeshrshetty,sudeshrshetty,8/23/2017 15:31,4/6/2018 12:49,4/26/2018 6:50,,v1.0.0,v1.0.1,,,,,fabric-ci,,,,0,,,,,"Currently verification build '[https://jenkins.hyperledger.org/job/fabric-verify-behave-x86_64'] has below commands in execute shell, which should be replaced with existing 'make behave' target.

This is preventing one from adding dependencies to execution of BDD tests without affecting the 'peer' target. Normally, the way to do this should be to to add dependencies to 'behave'.

 

.

.

.

.

#Build Peer and images

make peer && make docker
docker images | grep hyperledger
cd bddtests
behave -k -D logs=force -D cache-deployment-spec
#behave -k -D cache-deployment-spec features/bootstrap.feature

#Deactivate vitrualenv after behave test
deactivate

.

.

.

.

This one causes an issue when someone adds a new feature which requires a specific target to be run before running tests.

For Example: Verification build failure in [https://gerrit.hyperledger.org/r/#/c/12435/] due to missing sample binary file generation target 'make sample-binarycc-files'",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01ke5:,,,,,,ChristopherFerris,rameshthoomu,sudeshrshetty,,,,,,,,,"23/Aug/17 4:36 PM;sudeshrshetty;Make command will somewhat look like this,

 

.

.

#Build Peer and images

make behave BEHAVE_OPTS='-k -D logs=force -D cache-deployment-spec'
docker images | grep hyperledger
cd bddtests

#Deactivate vitrualenv after behave test
deactivate",13/Sep/17 4:03 PM;rameshthoomu;[~sudeshrshetty] this issue has been fixed adding *make behave-deps in behave CI job.* Could you please confirm?,"13/Sep/17 4:36 PM;sudeshrshetty;[~rameshthoomu] *make behave-deps in CI* job fixes the issue when someone needs to add some dependency target for behave.

*make behave* should be the long term solution where it runs behave tests in a build target. No need to put any python behave commands in CI. It will make CI look more clean.",14/Oct/17 7:46 PM;ChristopherFerris;reduced priority to low,06/Apr/18 12:49 PM;ChristopherFerris;no longer relevant because the bdd tests have been removed.,,,,,,,,,,,,,,,,,
Channel Creation Error:  Rejecting CONFIG_UPDATE because: Error authorizing update: Error validating DeltaSet: invalid mod_policy for element [Policy] /Channel/Application/Admins: mod_policy not set,FAB-5970,20525,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,jyellick,sajeevkhan,sajeevkhan,8/30/2017 11:45,10/25/2017 16:15,4/26/2018 6:50,10/25/2017 16:14,,,,,WON'T FIX,,fabric-tools,,,,0,configuration,,,,"Hi,  

We are using configtxgen version 1.0.1 to generate the channel.tx file. On trying to create a channel, we get the following error message: 

As per my assessment, it seems to be an error caused during channel.tx file creation. It would be great if you someone can provide a resolution for this. 

 

 

orderer.example.com       | 2017-08-30 04:30:02.689 UTC [common/configtx] addToMap -> DEBU 1a3 Adding to config map: [Policy] /Channel/Application/Admins

orderer.example.com       | 2017-08-30 04:30:02.689 UTC [common/configtx] addToMap -> DEBU 1a4 Adding to config map: [Policy] /Channel/Application/Writers

orderer.example.com       | 2017-08-30 04:30:02.689 UTC [common/configtx] addToMap -> DEBU 1a5 Adding to config map: [Policy] /Channel/Application/Readers

orderer.example.com       | 2017-08-30 04:30:02.689 UTC [common/configtx] addToMap -> DEBU 1a6 Adding to co{color:#ff0000}nfig map: [Values] /Channel/Consortium{color}

{color:#ff0000}orderer.example.com       *| 2017-08-30 04:30:02.690 UTC [orderer/common/broadcast] Handle -> WARN 1a7 Rejecting CONFIG_UPDATE because: Error authorizing update: Error validating DeltaSet: invalid mod_policy for element [Policy] /Channel/Application/Writers: mod_policy not set*{color}

orderer.example.com       | 2017-08-30 04:30:02.691 UTC [orderer/main] func1 -> DEBU 1a8 Closing Broadcast stream

 

 

Regards

Sajeev

 H",,,,,,,,,,,,,04/Sep/17 7:33 AM;sajeevkhan;foo.json;https://jira.hyperledger.org/secure/attachment/12019/foo.json,04/Sep/17 7:33 AM;sajeevkhan;orderer.json;https://jira.hyperledger.org/secure/attachment/12020/orderer.json,,,,,,,,,,,,0|i01l7p:,,,,,,jyellick,kchristidis,mastersingh24,sajeevkhan,,,,,,,,"03/Sep/17 12:25 PM;mastersingh24;[~sajeevkhan] Are you sure you are using configtxgen 1.0.1 and/or are you sure that the updated artifact(s) is(are) being used?
I believe that we see this error when using configtxgen v1.0.0 to create new channels with Fabric v1.0.1+","04/Sep/17 7:16 AM;sajeevkhan;Hi [~mastersingh24]

Our cryptogen and configtxgen version is 1.0.1 and our Go Version is go1.7  We first encountered this issue on Fabric 1.0.1. After this we upgraded to Fabric 1.0.2. and met with same issue. 

On doing an inspection of the channel.tx and orderer.block we could see ModPolicy defined. 
Attached are the ispection results of the channel and orderer block binary results.

Regards,Sajeev ","07/Sep/17 5:18 PM;kchristidis;Double-checked with [~jyellick] who's written the code for this to make sure I'm not missing anything.

JSON looks good, are you sure you're submitting the right channel.tx file and not an old one? This error message only comes up if the mod policy is empty, which is not the case for the JSON file you've attached here.","08/Sep/17 9:30 AM;sajeevkhan;Hi [~kchristidis],

I have doubvle confirmed that the it is the correct channel.tx file and the configtxgen version is 1.0.2 on a network which runs on fabric 1.0.2 ","17/Oct/17 4:45 PM;kchristidis;Sajeev, I hear you when you say you've double-checked this but I'm unable to reproduce this issue.

There is only one place in the codebase that can trigger this and the path that takes us there looks pretty deterministic to me:

[https://github.com/hyperledger/fabric/blob/release/common/configtx/update.go#L85|https://github.com/hyperledger/fabric/blob/release/common/configtx/update.go#L60]

[https://github.com/hyperledger/fabric/blob/release/common/configtx/update.go#L60]

[~jyellick], I vote that we close. If the issue persists from Sajeev's side, is there are anything else that he can provide to help with debugging?

 

 ","17/Oct/17 4:49 PM;jyellick;If this issue is reproducible, then having the {{configtx.yaml}}, the profile name which was used to bootstrap the ordering system channel, the profile name which was used to create the application channel, and the transaction which is being submitted to create the channel.","17/Oct/17 4:52 PM;kchristidis;I'll keep this open for a week, then close if there are no updates.","25/Oct/17 4:15 PM;jyellick;Since there have been no updates and this cannot be reproduced, closing for now until the reporter provides more details.",,,,,,,,,,,,,,
fabric/examples/configtxupdate/reconfig_membership/ example does not work,FAB-6024,20596,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,pvrbharg,pvrbharg,9/5/2017 1:05,2/21/2018 15:28,4/26/2018 6:50,2/21/2018 15:28,,,,,v1.1,,fabric-examples,,,,0,Usability,,,,"[https://github.com/hyperledger/fabric/tree/release/examples/configtxupdate/reconfig_membership]

The above example did not work for me until Jason provided a work-around that worked for me.

Per Jason's guidance - here is what I did:

A) I deleted the orderer ledger folder @ /var/hyperledger/production/orderer

B) Made suggested update to orderer.yaml file in sampleconfig folder - GenesisProfile=SampleDevModeSolo

 

Thanks.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01ln1:,,,,,,denyeart,lehors,pvrbharg,,,,,,,,,"30/Jan/18 4:30 PM;lehors;Hi,

I tried to reproduce your problem but couldn't. I wonder what you had done before.

I followed the three examples that are now in the README.  I did have some problems but not the same as yours.

On getting the order started for the reconfiguration example, starting the orderer failed because it didn't have the permission to create /var/hyperledger. Then to get the adding organization example going I had to delete the /var/hyperledger/* But that's all. It would help if you could give a bit more info.

Thanks.",13/Feb/18 6:57 PM;Clayton Sims;Are you able to provide more info?   moving to monitor/hold to indicate we are waiting on the originator,"13/Feb/18 9:42 PM;pvrbharg;Hi,

My apologies for being slow in my response.

We can have this item closed - as I was able to work-around with my previously posted updates.

The following work captured our success of getting this issue resolved:

https://www.ibm.com/developerworks/cloud/library/cl-add-an-organization-to-your-hyperledger-fabric-blockchain/index.html

Thanks.","14/Feb/18 5:21 PM;denyeart;[~pvrbharg] Glad you got it working.  Are there any example or doc updates you'd recommend to make this easier?

Anything you could help clarify in the example or docs  [~lehors] ?

If not we will close the issue, just wanted to give you both an opportunity to suggest any improvements.","21/Feb/18 3:28 PM;denyeart;Ok, I will close, but feel free to open a new Jira task for any improvements needed.",,,,,,,,,,,,,,,,,
Typo in variable name: namepart instead of namePart,FAB-6056,20649,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,cbl,cclauss,cclauss,9/6/2017 21:09,10/1/2017 10:06,4/26/2018 6:50,9/21/2017 6:04,v1.0.2,,,,v1.1,,fabric-release,,,,0,,,,,namepart on https://github.com/hyperledger/fabric/blob/release/bddtests/environment.py#L66 should be namePart (capital P).,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,0|i01ly5:,,,,,,cbl,cclauss,mastersingh24,,,,,master,,,TRUE,15/Sep/17 8:01 AM;cbl;https://gerrit.hyperledger.org/r/#/c/13417/,01/Oct/17 10:06 AM;mastersingh24;not going to backport,,,,,,,,,,,,,,,,,,,,
Typo in variable name: block instead of blocks[0],FAB-6057,20650,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,sanchezl,cclauss,cclauss,9/6/2017 21:43,1/30/2018 12:57,4/26/2018 6:50,1/30/2018 12:55,v1.0.5,,,,v1.0.6,v1.1,fabric-quality,,,,0,,,,,In https://github.com/hyperledger/fabric/blob/release/bddtests/steps/bootstrap_util.py#L1235 the `block.data.data` at the end of the line should be `blocks[0].data.data` instead.  `block` (singular) is an undefined name in this context but `blocks[0]` (plural) is used earlier on this same line.,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,0|i01lyd:,,,,,,cclauss,denyeart,,,,,,release-1.0,master,,TRUE,17/Oct/17 8:48 PM;denyeart;[~jeffgarratt] Feel free to re-assign if somebody else is looking after this now.,,,,,,,,,,,,,,,,,,,,,
GetStringArgs() returns function name which is unexpected behavior,FAB-6113,20749,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,dshuffma,dshuffma,9/11/2017 19:09,11/22/2017 22:48,4/26/2018 6:50,11/22/2017 22:48,v1.1,,,,Not a Bug,,fabric-endorser,,,,0,Documentation,HSBN,Usability,,"The shim function GetStringArgs's [documentation |https://github.com/hyperledger/fabric/blob/d9c320297bd2a4eff2eb253ce84dc431ef860972/core/chaincode/shim/interfaces.go#L50] + name implies that I will get the arguments passed to the function.  However when you use this function you also get the function name as the first parameter. 

This is fine, but unexpected.  Either the comments near this function should be updated, or the function name should not be returned.

Tested with fabric 1.1 on HSBN service using fabric-client SDK 1.1

Used this chaincode snippet:
{code:javascript}
        fmt.Println(""Marbles Is Starting Up"")

	funky, args := stub.GetFunctionAndParameters()
	fmt.Println(""Init() GetFunctionAndParameters funky:"", funky)
	fmt.Println(""Init() GetFunctionAndParameters args count:"", len(args))
	fmt.Println(""Init() GetFunctionAndParameters args found:"", args)

	test := stub.GetStringArgs()
	fmt.Println(""Init() GetStringArgs args count:"", len(test))
	fmt.Println(""Init() GetStringArgs args found:"", test)
{code}

instantiated with these settings:
{code:javascript}
fcn: 'init',
args: '346',
{code}

console results:
{code:javascript}
Marbles Is Starting Up
Init() GetFunctionAndParameters funky: init
Init() GetFunctionAndParameters args count: 1
Init() GetFunctionAndParameters args found: [346]
Init() GetStringArgs args count: 2
Init() GetStringArgs args found: [init 346]     //the ""init"" part is unexpected
{code}

^^ I was not expecting ""init, ""346"".  only ""346""",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01mjh:,,,,,,dshuffma,mastersingh24,,,,,,,,,,"22/Nov/17 10:47 PM;mastersingh24;While I definitely understand what [~dshuffma] is saying, the doc for the function

{quote}// GetStringArgs returns the arguments intended for the chaincode Init and
// Invoke as a string array. Only use GetStringArgs if the client passes
// arguments intended to be used as strings.{quote}

does actually state that it is the argument which are passed to Init and Invoke and in the case of Invoke you are typically passing in the function name",,,,,,,,,,,,,,,,,,,,,
Misspelling in Jira navigation document,FAB-6173,20840,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,cbl,cbl,cbl,9/15/2017 7:37,10/3/2017 8:46,4/26/2018 6:50,9/22/2017 2:40,v1.0.2,,,,v1.1,,fabric-docs,,,,0,,,,,"Gerritt in [https://github.com/hyperledger/fabric/blame/release/docs/source/jira_navigation.rst#L51] should be Gerrit

 ",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01n2d:,,,,,,cbl,,,,,,,master,,,TRUE,15/Sep/17 7:58 AM;cbl;https://gerrit.hyperledger.org/r/13495,,,,,,,,,,,,,,,,,,,,,
Misspelling in state_based_validator,FAB-6239,20927,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,cbl,cbl,cbl,9/20/2017 5:25,10/1/2017 10:00,4/26/2018 6:50,10/1/2017 10:00,v1.0.2,,,,v1.1,,,,,,0,,,,,"""Comapring"" in [https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go#L182] should be ""Comparing"".

""phatom"" in [https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go#L204] should be ""phantom"".",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01njh:,,,,,,cbl,mastersingh24,,,,,,master,,,TRUE,22/Sep/17 2:46 AM;cbl;https://gerrit.hyperledger.org/r/#/c/13639/,01/Oct/17 10:00 AM;mastersingh24;Not going to backport this to the 1.0.x releases,,,,,,,,,,,,,,,,,,,,
Misspelling function names in testutils.go,FAB-6240,20928,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,cbl,cbl,cbl,9/20/2017 6:49,10/1/2017 10:05,4/26/2018 6:50,9/22/2017 2:41,v1.0.2,,,,v1.1,,,,,,0,,,,,"""ConstractBytesProposalResponsePayload"" in [https://github.com/hyperledger/fabric/blob/release/protos/testutils/txtestutils.go#L54] should be ""ConstructBytesProposalResponsePayload"".

""ConstructUnsingedTxEnv"" in [https://github.com/hyperledger/fabric/blob/release/protos/testutils/txtestutils.go#L107] should be ""ConstructUnsignedTxEnv"".",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01njp:,,,,,,cbl,mastersingh24,,,,,,master,,,TRUE,20/Sep/17 7:44 AM;cbl;https://gerrit.hyperledger.org/r/#/c/13641/,01/Oct/17 10:05 AM;mastersingh24;not going to backport,,,,,,,,,,,,,,,,,,,,
Fix usage and comments in PTE scripts,FAB-6306,21010,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,yuki-kon,yuki-kon,yuki-kon,9/27/2017 0:12,10/1/2017 9:43,4/26/2018 6:50,10/1/2017 9:43,v1.0.2,,,,v1.1,,fabric-quality,,,,0,,,,,"Usage and comments in PTE scripts are not correct.
We need to modify them for usability improvement.",fabric-test commit: 551302eaed8dbbdeccdee497a5673e67fd9e86ae,,,,,,,,,,,,,,,,,,,,,,,,,0|i01nzx:,,,,,,yuki-kon,,,,,,,master,,,TRUE,27/Sep/17 3:21 AM;yuki-kon;Posted here: https://gerrit.hyperledger.org/r/#/c/13867/,,,,,,,,,,,,,,,,,,,,,
unregister misspelled unRegister in method names,FAB-6312,21021,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,sgdev,clempo,clempo,9/27/2017 13:55,10/9/2017 20:22,4/26/2018 6:50,10/9/2017 20:22,v1.1,,,,v1.1,,fabric-sdk-java,,,,0,,,,,"The methods Channel.unRegisterBlockListener() and Channel.unRegisterChaincodeEventListener() should be renamed to Channel.unregisterBlockListener() and Channel.unregisterChaincodeEventListener() with a small r for register since the prefix un is not a complete word.
These methods are new in v1.1-SNAPSHOT so we can still rename them freely.

The only callers are in Channel and End2endIT.
I don't think there is a need to upload a patch, since it is trivial to rename with refactor in eclipse. I looked and there are no comments that need to be updated except this javadoc which should be also be updated by eclipse
     * @return Handle to be used to unregister the event listener {@link #unRegisterChaincodeEventListener(String)}
",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01o1x:,,,,,,clempo,rickr,sgdev,,,,,master,,,TRUE,"04/Oct/17 2:31 PM;rickr;Hi [~sharad.develop] Are you actively working on this ?   ETA for a patch ?

If not, please unassign",07/Oct/17 10:22 PM;sgdev;Yes working on it.,08/Oct/17 12:37 AM;sgdev;Code is committed. This is my first commit . Let me know if there is anything I missed in the processes.,08/Oct/17 7:30 PM;sgdev;https://gerrit.hyperledger.org/r/#/c/14303/,,,,,,,,,,,,,,,,,,
Misleading documentation and usage of kv_rwset.proto,FAB-6325,21036,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,manish-sethi,bur,bur,9/28/2017 8:19,10/18/2017 18:43,4/26/2018 6:50,10/18/2017 18:43,v1.0.0,,,,,,fabric-docs,fabric-ledger,,,0,Usability,,,,"When accessing the version of a readset the result is of type version as defined in kv_rwset.proto. A version consists of a block number and the position(index) of the transaction that is updated the value.

Block number and tx indexes are monotonic increasing integers starting with 0. However, the documentation of kv_rwset.proto states the following: 
{code:java}
// Version encapsulates the version of a Key
// A version of a committed key is maintained as the height of the transaction that committed the key.
// The height is represenetd as a tuple <blockNum, txNum> where the txNum is the height of the transaction
// (starting with 1) within block
{code}
This seems incorrect. 

Moreover, another issue with with the version proto is that usage is not well documented. When the blockNum or txNum is equals zero, than the fields of version are nil, which may lead to an error. There should be a comment, that proto getters should be used instead. This issue also effects the String() methods.

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01o51:,,,,,,bur,manish-sethi,yacovm,,,,,master,,,TRUE,"28/Sep/17 8:24 AM;yacovm;{quote}(starting with 1) within block{quote}

[~manish-sethi] is the seqInBlock starting from 0 or from 1? Is this the same one in the private data or there is a different semantic for that? ","18/Oct/17 2:31 PM;manish-sethi;Sorry, I missed this earlier.

[~bur] - Good catch. I'll fix the documentation. Earlier in the code, we were starting the counting of trans from 1. Later we changed in the code to start the counting from 0 but missed fixing this comment. 

Regarding `nil`, it is ok because the type of the fields are uint64 and hence initialized to zero by default. About the String(), I am not sure whether it would be good to override default behavior of protobuf (many folks may expect it to print with a behavior of default proto String()). However, still, it does not affect us largely because everywhere in our code, we use an internal representation of version (such as see usage at - [https://github.com/hyperledger/fabric/blob/master/core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go#L182)]

[~yacovm] - For the pvtdata the semantics are same (i.e. seqInBlock starts with 0).",18/Oct/17 2:52 PM;manish-sethi;submitted a CR - https://gerrit.hyperledger.org/r/#/c/14639/,,,,,,,,,,,,,,,,,,,
grpc.WithTimeout deprecated,FAB-6357,21100,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,grapebaba,grapebaba,grapebaba,9/30/2017 9:27,10/19/2017 10:57,4/26/2018 6:50,10/19/2017 10:57,,,,,v1.1,,fabric-gossip,fabric-orderer,fabric-peer,,0,,,,,"{color:#75715e}// Deprecated: use DialContext and context.WithTimeout instead. {color}

{color:#75715e}That method deprecated in grpc-go new version in fabric.
{color}

{color:#f9faf4} {color}",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01ohx:,,,,,,grapebaba,mastersingh24,,,,,,master,,,TRUE,19/Oct/17 10:56 AM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/14681/,,,,,,,,,,,,,,,,,,,,,
Address CI test failure,FAB-6380,21217,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,sanchezl,kchristidis,kchristidis,10/2/2017 12:46,10/12/2017 21:56,4/26/2018 6:50,10/12/2017 21:56,,,,,v1.1,,fabric-orderer,,,,0,kafka,,,,See [https://jenkins.hyperledger.org/job/fabric-verify-z/13105/console] for more info.,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01onh:,,,,,,kchristidis,,,,,,,master,,,TRUE,08/Oct/17 11:20 AM;kchristidis;https://gerrit.hyperledger.org/r/c/14281/,,,,,,,,,,,,,,,,,,,,,
Benign panic in config update computation,FAB-6399,21238,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,wlahti,jyellick,jyellick,10/2/2017 19:04,10/13/2017 23:56,4/26/2018 6:50,10/13/2017 23:55,v1.0.0,v1.0.1,v1.0.2,v1.0.3,v1.1,,fabric-orderer,,,,0,configuration,,,,"As documented here: [https://stackoverflow.com/questions/46073111/hyperledger-fabric-v1-0-configtxlator-add-new-org-error/]

 

When a config update arrives which attempts to modify an element nested beyond an element which does not exist, a panic can occur.  This panic is caught by the orderer and poses no risk of state corruption or being passed to the peer, however, it is still a programming bug which should be isolated and fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01orp:,,,,,,jyellick,,,,,,,master,,,TRUE,,,,,,,,,,,,,,,,,,,,,,
Build warnings indicate statically-linked builds potentially non-portable,FAB-6403,21242,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,aambati,rennman,rennman,10/2/2017 20:12,2/14/2018 18:50,4/26/2018 6:50,2/14/2018 18:50,,,,,v1.2,,fabric-ca,,,,0,,,,,"After upgrading to golang 1.9,  build warning messages are issued (not new, just newly unmasked). The warnings imply limited portability of the statically-linked executable.

make peer-docker
{code:java}
14:39:29 /usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu/libltdl.a(dlopen.o): In function `vm_open':
14:39:29 (.text+0x5e): warning: Using 'dlopen' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
14:39:29 /tmp/go-link-176411200/000000.o: In function `_cgo_b0c710f30cfd_C2func_getaddrinfo':
14:39:29 /tmp/go-build/net/_obj/cgo-gcc-prolog:46: warning: Using 'getaddrinfo' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
{code}

make orderer-docker:
{code:java}
14:41:00 /usr/lib/gcc/x86_64-linux-gnu/5/../../../x86_64-linux-gnu/libltdl.a(dlopen.o): In function `vm_open':
14:41:00 (.text+0x5e): warning: Using 'dlopen' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
14:41:00 /tmp/go-link-344798825/000000.o: In function `_cgo_b0c710f30cfd_C2func_getaddrinfo':
14:41:00 /tmp/go-build/net/_obj/cgo-gcc-prolog:46: warning: Using 'getaddrinfo' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
{code}



The warnings for fabric ca client and server are ever more profuse:
{code:java}
15:38:51  # github.com/hyperledger/fabric-ca/cmd/fabric-ca-client
15:38:51  /tmp/go-link-521788677/000000.o: In function `unixDlOpen':
15:38:51  /opt/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/mattn/go-sqlite3/sqlite3-binding.c:35414: warning: Using 'dlopen' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
15:38:51  /tmp/go-link-521788677/000002.o: In function `mygetgrouplist':
15:38:51  /tmp/workdir/go/src/os/user/getgrouplist_unix.go:15: warning: Using 'getgrouplist' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
15:38:51  /tmp/go-link-521788677/000002.o: In function `mygetgrgid_r':
15:38:51  /tmp/workdir/go/src/os/user/cgo_lookup_unix.go:38: warning: Using 'getgrgid_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
15:38:51  /tmp/go-link-521788677/000002.o: In function `mygetgrnam_r':
15:38:51  /tmp/workdir/go/src/os/user/cgo_lookup_unix.go:43: warning: Using 'getgrnam_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
15:38:51  /tmp/go-link-521788677/000002.o: In function `mygetpwnam_r':
15:38:51  /tmp/workdir/go/src/os/user/cgo_lookup_unix.go:33: warning: Using 'getpwnam_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
15:38:51  /tmp/go-link-521788677/000002.o: In function `mygetpwuid_r':
15:38:51  /tmp/workdir/go/src/os/user/cgo_lookup_unix.go:28: warning: Using 'getpwuid_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
15:38:51  /tmp/go-link-521788677/000001.o: In function `_cgo_b0c710f30cfd_C2func_getaddrinfo':
15:38:51  /tmp/go-build/net/_obj/cgo-gcc-prolog:46: warning: Using 'getaddrinfo' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
15:38:52  Building build/docker/bin/fabric-ca-server
15:39:37  # github.com/hyperledger/fabric-ca/cmd/fabric-ca-server
15:39:37  /tmp/go-link-759930536/000000.o: In function `unixDlOpen':
15:39:37  /opt/gopath/src/github.com/hyperledger/fabric-ca/vendor/github.com/mattn/go-sqlite3/sqlite3-binding.c:35414: warning: Using 'dlopen' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
15:39:37  /tmp/go-link-759930536/000002.o: In function `mygetgrouplist':
15:39:37  /tmp/workdir/go/src/os/user/getgrouplist_unix.go:15: warning: Using 'getgrouplist' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
15:39:37  /tmp/go-link-759930536/000002.o: In function `mygetgrgid_r':
15:39:37  /tmp/workdir/go/src/os/user/cgo_lookup_unix.go:38: warning: Using 'getgrgid_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
15:39:37  /tmp/go-link-759930536/000002.o: In function `mygetgrnam_r':
15:39:37  /tmp/workdir/go/src/os/user/cgo_lookup_unix.go:43: warning: Using 'getgrnam_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
15:39:37  /tmp/go-link-759930536/000002.o: In function `mygetpwnam_r':
15:39:37  /tmp/workdir/go/src/os/user/cgo_lookup_unix.go:33: warning: Using 'getpwnam_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
15:39:37  /tmp/go-link-759930536/000002.o: In function `mygetpwuid_r':
15:39:37  /tmp/workdir/go/src/os/user/cgo_lookup_unix.go:28: warning: Using 'getpwuid_r' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
15:39:37  /tmp/go-link-759930536/000001.o: In function `_cgo_b0c710f30cfd_C2func_getaddrinfo':
15:39:37  /tmp/go-build/net/_obj/cgo-gcc-prolog:46: warning: Using 'getaddrinfo' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01osl:,,,,,,aambati,rennman,smithbk,wutongtree,,,,,,,,"08/Feb/18 10:10 PM;aambati;According to this [https://github.com/golang/go/issues/21421] , this is expected behavior. 

From [https://github.com/zeromq/libzmq/issues/2849] :

You cannot statically link to glibc - it uses runtime plugins for things like DNS resolution.
Also it's licensed under the LGPL, which means you can do dynamic linking, but static linking means your program's source code also has to be released under the LGPL.

Besides that, it looks like a problem with Golang, by searching for that error on google this is the second result:

[golang/go#21421|https://github.com/golang/go/issues/21421]","08/Feb/18 10:13 PM;aambati;Is this really a problem when the program was built in the same docker container that it will run in? [~mastersingh24] [~smithbk] can you pls weigh in on this

 ","14/Feb/18 6:49 PM;smithbk;I agree that this is happening because as Anil said, go1.9 changed to correctly display the warnings.  See the final comment of https://github.com/golang/go/issues/21421.  That said, it is just a warning.  If you set FABRIC_CA_DYNAMIC_LINK=true, there are no warnings.  So I'm going to close.",,,,,,,,,,,,,,,,,,,
Address CI test failure: Error during consumption: <nil>,FAB-6509,21376,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,sanchezl,sanchezl,sanchezl,10/6/2017 19:15,10/8/2017 11:20,4/26/2018 6:50,10/8/2017 11:20,,,,,v1.1,,fabric-orderer,,,,0,kafka,,,,See [https://jenkins.hyperledger.org/job/fabric-verify-z/13105/console] for more info.,,,,,,,,,,,FAB-6380,,,,,,,,,,,,,,,0|i01pjh:,,,,,,kchristidis,sanchezl,,,,,,master,,,TRUE,08/Oct/17 11:20 AM;kchristidis;https://gerrit.hyperledger.org/r/c/14281/,,,,,,,,,,,,,,,,,,,,,
build your first network script get-byfn.sh script cannot get its tar file,FAB-6521,21701,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,nickgaski,mikailcetinkaya,mikailcetinkaya,10/8/2017 19:34,10/27/2017 14:47,4/26/2018 6:50,10/27/2017 14:47,,,,,v1.0.3,,fabric-docs,,,10/10/2017 0:00,0,Documentation,,,,"build your first network script from DOCS do not work

get-byfn.sh script cannot get its tar file from 

https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/examples/hyperledger-fabric-byfn-$(VERSION).tar.gz 

examples directory is deleted.",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,0|i01plx:,,,,,,mikailcetinkaya,nickgaski,,,,,,,,,,"08/Oct/17 7:57 PM;mikailcetinkaya;FAB-6182 is merged but how to get this work , not included only deleted",27/Oct/17 2:47 PM;nickgaski;BYFN is working as designed now; you simply need to install the prereqs and clone the fabric-samples directory and finally issue the supplied curl command at the root of fabric-samples.  This will leave you with stable Docker images and the necessary utilities for crypto generation and configuration.,,,,,,,,,,,,,,,,,,,,
Node-SDK test fails to handle Windows tempdir used for HFC_LOGGING,FAB-6612,22022,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,lehors,lehors,lehors,10/13/2017 15:38,10/20/2017 16:31,4/26/2018 6:50,10/20/2017 16:31,v1.0.3,,,,v1.1,,fabric-sdk-node,,,,0,node-SDK,,,," Running the tests on Windows generate the following error:
{code:java}
$ gulp test-headless

####################################################
# debug log: C:\Users\lehors\AppData\Local\Temp\hfc\test-log\debug.log
####################################################

[17:15:25] Using gulpfile ~\Projects\Go\src\github.com\hyperledger\fabric-sdk-node\gulpfile.js
[17:15:25] Starting 'clean-up'...
...
[17:15:43] Starting 'test-headless'...
warn: Failed to parse environment variable ""HFC_LOGGING"". Returned a winston logger with default configurations. Error: SyntaxError: Unexpected token U in JSON at position 13
    at Object.parse (native)
    at Object.module.exports.getLogger (C:\Users\lehors\Projects\Go\src\github.com\hyperledger\fabric-sdk-node\node_modules\fabric-client\lib\utils.js:176:19)
    at Object.<anonymous> (C:\Users\lehors\Projects\Go\src\github.com\hyperledger\fabric-sdk-node\test\unit\block.js:34:20)
    at Module._compile (module.js:570:32)
    at Object.Module._extensions..js (module.js:579:10)
    at Object.Module._extensions.(anonymous function) [as .js] (C:\Users\lehors\Projects\Go\src\github.com\hyperledger\fabric-sdk-node\node_modules\istanbul\lib\hook.js:109:37)
    at Module.load (module.js:487:32)
    at tryModuleLoad (module.js:446:12)
    at Function.Module._load (module.js:438:3)
    at Module.require (module.js:497:17)
    at require (internal/module.js:20:19)
    at module.exports (C:\Users\lehors\Projects\Go\src\github.com\hyperledger\fabric-sdk-node\node_modules\require-uncached\index.js:28:9)
    at C:\Users\lehors\Projects\Go\src\github.com\hyperledger\fabric-sdk-node\node_modules\gulp-tape\index.js:36:9
    at Array.forEach (native)
    at DestroyableTransform.flush [as _flush] (C:\Users\lehors\Projects\Go\src\github.com\hyperledger\fabric-sdk-node\node_modules\gulp-tape\index.js:35:13)
    at DestroyableTransform.<anonymous> (C:\Users\lehors\Projects\Go\src\github.com\hyperledger\fabric-sdk-node\node_modules\readable-stream\lib\_stream_transform.js:138:49)

...{code}
This leads to an empty debug log:

 
{code:java}
$ ll ~/AppData/Local/Temp/hfc/test-log/debug.log
-rwx------+ 1 lehors None 0 Oct 13 17:15 /home/lehors/AppData/Local/Temp/hfc/test-log/debug.log{code}
 

 

 

 ","Windows 7, node 6.9.5, npm 4.3.0

 ",,,,,,,,,,,,,,,,,,,,,,,,,0|i01qlp:,,,,,,lehors,,,,,,,master,,,TRUE,,,,,,,,,,,,,,,,,,,,,,
fabric-ca mysql database name does not allow for digits,FAB-6615,22026,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,skarim,rennman,rennman,10/13/2017 18:05,10/25/2017 19:48,4/26/2018 6:50,10/25/2017 19:48,v1.1,,,,v1.1,,fabric-ca,,,,0,,,,,"According to the mysql doc, Section 9.2, Schema Object Names, the following characters are allowed:

[0-9,a-z,A-Z$_]

However the parsing code in NewUserRegistryMySQL() in ./lib/dbutil/dbutil.go defines the regexp

[a-zA-z]

 which discounts both digits and the underscore.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01qmd:,,,,,,mastersingh24,rennman,skarim,,,,,,,,,16/Oct/17 10:39 AM;mastersingh24;[~rennman] - Why exactly do we care?  ,"16/Oct/17 5:58 PM;rennman;I would think we want to honor what the user configured, but at any rate it's more convoluted.

We have three relevant vars:
{code:java}
datasource
dbName
connStr{code}


datasource is the raw value taken straight from the configuration.
dbName is extracted from datasource.

In NewUserRegistryMySQL(), we instantiate the DB obejct by making a call to DB.Open() using a generic connection string, which *should* be the datasource minus the dbName. e.g., if
{code:java}
   datasource: root:mysql@tcp(localhost:3306)/fabric_ca2?parseTime=true{code}

then it follows that
{code:java}
   dbName=""fabric_ca2""
   connStr=""root:mysql@tcp(localhost:3306)/?parseTime=true""{code}


We do extract the DB name correctly (correctly, in the sense that we allow literally anything that is not forward slash '/', or colon ':'). However, because we are inconsistent with the rules that build the initial connStr, in the current code we essentially stop when we  see any character that is not in the set the set [a-zA-z], so datasource is transmuted into:
   connStr=""root:mysql@tcp(localhost:3306)/{color:#ff0000}*2*{color}?parseTime=true""


Consequently, when we attempt to instantiate the DB object, we try to connect to a database that doesn't (or with extremely high probability) exist:
{code:java}
2017/10/16 17:10:20 [DEBUG] Connecting to MySQL server, using connection string: ****:****@tcp(localhost:3306)/2?parseTime=true
2017/10/16 17:10:20 [ERROR] Error occurred initializing database: Failed to create user registry for MySQL: Failed to connect to MySQL database: Error 1049: Unknown database '2'{code}
Because we return immediately with an error, we skip the call to createMySQLDatabase() altogether (which ironically, probably would have succeeded since the call to createMySQLDatabase() is made with the raw datasource)

At a minimum, we should allow the same character set for the DB name when building the connStr, as we allow in getDBName, namely
   anything not in the set [/:].
Ideally, we would use the restrictions from the documentation:
   [0-9,a-z,A-Z$_]",19/Oct/17 8:18 PM;skarim;This will be resolved in [FAB-6508]. https://gerrit.hyperledger.org/r/#/c/14715/,,,,,,,,,,,,,,,,,,,
Typo in gossip/private,FAB-6732,22801,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,fennelD7,fennelD7,fennelD7,10/24/2017 8:43,11/27/2017 5:41,4/26/2018 6:50,11/27/2017 5:41,,,,,,,fabric-gossip,,,,0,,,,,"[https://github.com/hyperledger/fabric/blob/1e876e3852a05afb52d25265566baa109537b8b9/gossip/privdata/coordinator.go#L76]

where date should be data.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01rnh:,,,,,,fennelD7,,,,,,,master,,,TRUE,24/Oct/17 8:49 AM;fennelD7;https://gerrit.hyperledger.org/r/#/c/14799/,,,,,,,,,,,,,,,,,,,,,
Build your network example lacks some information in manual steps (steps fail),FAB-6766,22847,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,nickgaski,phillipviana,phillipviana,10/25/2017 21:56,11/21/2017 17:01,4/26/2018 6:50,11/21/2017 17:01,,,,,,,fabric-docs,,,,0,documentation,,,,"The ""Build your network"" example contains a note in the source code about commenting out the `script.sh` line but due to a missing semicolon the text does not appear in the documentation. This leads to failing steps and confusion. A StackOverflow question with regards to this was asked here: [https://stackoverflow.com/questions/45707982/fabric-returns-error-got-unexpected-status-bad-request]

 ",,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,0|i01rx1:,,,,,,phillipviana,,,,,,,,,,,21/Nov/17 5:00 PM;phillipviana;Solved by Nick in this commit: https://github.com/hyperledger/fabric/commit/938a3e6124e24e1665698cc54ae37c1473062e80,,,,,,,,,,,,,,,,,,,,,
fabric-sdk-node: Registration of admin fails at the first attempt but succeed if retried,FAB-7084,24432,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,jeroiraz,jeroiraz,11/22/2017 13:20,11/28/2017 17:47,4/26/2018 6:50,11/28/2017 17:46,,,,,,,fabric-samples,fabric-sdk-node,,,0,balance-transfer,node-sdk,,,"Based on the balance-transfer (master branch), first attempt to register admin user fails but succeed when retried.

*Request*: curl -s -X POST http://localhost:4000/users -H ""content-type: application/x-www-form-urlencoded"" -d 'username=admin&orgName=org1'

First time the above request is made, it returns the following error:

- _Registration of 'admin' failed: Identity 'admin' is already registered_

But if the same request is made again, it suceeds:

- _""message"":""admin enrolled Successfully"",""token"":""eyJhbGciOiJIUzI1...""_",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01urx:,,,,,,harrisob@us.ibm.com,jeroiraz,,,,,,,,,,28/Nov/17 5:47 PM;harrisob@us.ibm.com;The sample app has been updated... and I am not able to recreate this issue.,,,,,,,,,,,,,,,,,,,,,
Math symbols not showing in the documentation are causing confusion,FAB-7093,24444,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,phillipviana,phillipviana,phillipviana,11/23/2017 5:27,1/30/2018 18:55,4/26/2018 6:50,1/30/2018 18:55,,,,,,,fabric-docs,,,,0,Documentation,,,,"The architecture page is formally written and very precise, but the symbols (which appear to be LaTeX-based) are not rendered properly on the page and therefore are causing confusion. See the StackOverflow question below for details:

https://stackoverflow.com/questions/47437221/hyperledger-documentation-questions/47448149#47448149",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01uul:,,,,,,denyeart,phillipviana,,,,,,master,,,TRUE,30/Jan/18 6:55 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/15747/,,,,,,,,,,,,,,,,,,,,,
Incorrect grammar in gerrit documentation,FAB-7096,24456,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,ysim,ysim,ysim,11/23/2017 17:33,11/23/2017 18:56,4/26/2018 6:50,11/23/2017 18:56,,,,,,,fabric-docs,,,,0,,,,,"Pertains to this page: [https://hyperledger-fabric.readthedocs.io/en/release/Gerrit/gerrit.html]

The grammar of some of the headings is wrong. It should be ""Using git-review"" and ""Not using git-review"", vs ""Use git-review""/""Not Use git-review"".

Note: Have already a pushed a change at [https://gerrit.hyperledger.org/r/#/c/15679/,] but forgot to make a JIRA issue so I will be amending my change to include this ticket number.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01uwt:,,,,,,ysim,,,,,,,master,,,TRUE,,,,,,,,,,,,,,,,,,,,,,
Orderer Service failed in Message Payloads due to wrong Assertion length.,FAB-7148,24528,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,latitiah,sambhavdutt,sambhavdutt,11/28/2017 19:39,1/5/2018 17:29,4/26/2018 6:50,1/5/2018 1:11,,,,,,,fabric-quality,,,,0,ci_failure,,,,"Observed the following errors in Orderer Service for
*FAB-3852: Message Payloads Less than 1MB, for solo orderer using the NodeJS SDK interface -- @1.3 * ,

Error Message

Expected response to be of length 1024; received length 17; Result: Query Result...

Failing step: Then a user receives a response containing a value of length 1024 ... failed in 0.000s
Location: orderer.feature:72
Assertion Failed: Expected response to be of length 1024; received length 17; Result: Query Result: """"

And a user queries on the chaincode named ""mycc"" with args [""get"",""a""] ... passed in 2.976s
    Then a user receives a response containing a value of length 1024 ... failed in 0.000s
    And a user receives a response with the random value ... skipped in 0.000s.

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/564/testReport/orderer/Orderer%20Service/FAB_3852__Message_Payloads_Less_than_1MB__for_solo_orderer_using_the_NodeJS_SDK_interface_____1_3_/


",,,,,,,,,,,,,27/Dec/17 3:51 PM;sambhavdutt;ft.png;https://jira.hyperledger.org/secure/attachment/13949/ft.png,,,,,,,,,,,,,0|i01vbx:,,,,,,latitiah,mastersingh24,sambhavdutt,scottz,,,,,,,,"29/Nov/17 12:48 PM;sambhavdutt;The same error is showing up in the fabric-test merge job now.

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-merge-x86_64/111/consoleFull","30/Nov/17 4:19 PM;sambhavdutt;Observed the following errors in fabric-test-verify-x86_64, Build 577,

Scenario Outline: FAB-3852: Message Payloads Less than 1MB, for solo orderer using the NodeJS SDK interface -- @1.3 # orderer.feature:94 

2:08:52     And I use the NodeJS SDK interface                                                                                  # steps/basic_impl.py:25
02:09:33 In file included from ../src/const.cpp:1:0:
02:09:33 ../src/const.cpp: In function ‘void declare_attributes(v8::Local<v8::Object>)’:
02:09:33 ../src/const.h:23:7: warning: ‘Nan::Maybe<bool> Nan::ForceSet(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::PropertyAttribute)’ is deprecated [-Wdeprecated-declarations]
02:09:33   Nan::ForceSet(             \
02:09:33        ^
02:09:33 ../src/const.cpp:6:2: note: in expansion of macro ‘SET_CONST’
02:09:33   SET_CONST(target, CKA_CLASS);
02:09:33   ^
02:09:33 In file included from ../../nan/nan.h:197:0,
02:09:33                  from ../src/const.h:7,
02:09:33                  from ../src/const.cpp:1:
02:09:33 ../../nan/nan_maybe_43_inl.h:116:35: note: declared here
02:09:33  NAN_DEPRECATED inline Maybe<bool> ForceSet(
02:09:33                                    ^
02:09:33 In file included from ../src/const.cpp:1:0:
02:09:33 ../src/const.h:23:7: warning: ‘Nan::Maybe<bool> Nan::ForceSet(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::PropertyAttribute)’ is deprecated [-Wdeprecated-declarations]
02:09:33   Nan::ForceSet(             \
02:09:33        ^
02:09:33 ../src/const.cpp:6:2: note: in expansion of macro ‘SET_CONST’
02:09:33   SET_CONST(target, CKA_CLASS);
02:09:33   ^
02:09:33 In file included from ../../nan/nan.h:197:0,
02:09:33                  from ../src/const.h:7,
02:09:33                  from ../src/const.cpp:1:
02:09:33 ../../nan/nan_maybe_43_inl.h:116:35: note: declared here
02:09:33  NAN_DEPRECATED inline Maybe<bool> ForceSet(
02:09:33                                    ^
02:09:33 In file included from ../src/const.cpp:1:0:
02:09:33 ../src/const.h:27:56: warning: ‘Nan::Maybe<bool> Nan::ForceSet(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::PropertyAttribute)’ is deprecated [-Wdeprecated-declarations]
02:09:33    static_cast<PropertyAttribute>(ReadOnly | DontDelete));
02:09:33                                                         ^
02:09:33 ../src/const.cpp:6:2: note: in expansion of macro ‘SET_CONST’
02:09:33   SET_CONST(target, CKA_CLASS);
02:09:33   ^
02:09:33 In file included from ../../nan/nan.h:197:0,
02:09:33                  from ../src/const.h:7,
02:09:33                  from ../src/const.cpp:1:
02:09:33 ../../nan/nan_maybe_43_inl.h:116:35: note: declared here
02:09:33  NAN_DEPRECATED inline Maybe<bool> ForceSet(
02:09:33                                    ^
02:09:33 In file included from ../src/const.cpp:1:0:
02:09:33 ../src/const.h:23:7: warning: ‘Nan::Maybe<bool> Nan::ForceSet(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::PropertyAttribute)’ is deprecated [-Wdeprecated-declarations]
02:09:33   Nan::ForceSet(             \
02:09:33        ^
02:09:33 ../src/const.cpp:7:2: note: in expansion of macro ‘SET_CONST’
02:09:33   SET_CONST(target, CKA_TOKEN);
02:09:33   ^
02:09:33 In file included from ../../nan/nan.h:197:0,
02:09:33                  from ../src/const.h:7,
02:09:33                  from ../src/const.cpp:1:
02:09:33 ../../nan/nan_maybe_43_inl.h:116:35: note: declared here
02:09:33  NAN_DEPRECATED inline Maybe<bool> ForceSet(
02:09:33                                    ^
02:09:33 In file included from ../src/const.cpp:1:0:
02:09:33 ../src/const.h:23:7: warning: ‘Nan::Maybe<bool> Nan::ForceSet(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::PropertyAttribute)’ is deprecated [-Wdeprecated-declarations]
02:09:33   Nan::ForceSet(             \
02:09:33        ^
02:09:33 ../src/const.cpp:7:2: note: in expansion of macro ‘SET_CONST’
02:09:33   SET_CONST(target, CKA_TOKEN);
02:09:33   ^
02:09:33 In file included from ../../nan/nan.h:197:0,
02:09:33                  from ../src/const.h:7,
02:09:33                  from ../src/const.cpp:1:
02:09:33 ../../nan/nan_maybe_43_inl.h:116:35: note: declared here
02:09:33  NAN_DEPRECATED inline Maybe<bool> ForceSet(
02:09:33                                    ^
02:09:33 In file included from ../src/const.cpp:1:0:
02:09:33 ../src/const.h:27:56: warning: ‘Nan::Maybe<bool> Nan::ForceSet(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::PropertyAttribute)’ is deprecated [-Wdeprecated-declarations]
02:09:33    static_cast<PropertyAttribute>(ReadOnly | DontDelete));
02:09:33                                                         ^
02:09:33 ../src/const.cpp:7:2: note: in expansion of macro ‘SET_CONST’
02:09:33   SET_CONST(target, CKA_TOKEN);
02:09:33   ^
02:09:33 In file included from ../../nan/nan.h:197:0,
02:09:33                  from ../src/const.h:7,
02:09:33                  from ../src/const.cpp:1:
02:09:33 ../../nan/nan_maybe_43_inl.h:116:35: note: declared here
02:09:33  NAN_DEPRECATED inline Maybe<bool> ForceSet(
02:09:33                                    ^
02:09:33 In file included from ../src/const.cpp:1:0:
02:09:33 ../src/const.h:23:7: warning: ‘Nan::Maybe<bool> Nan::ForceSet(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::PropertyAttribute)’ is deprecated [-Wdeprecated-declarations]


*Build Log*
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/577/consoleFull","30/Nov/17 10:12 PM;latitiah;This error is sporatic and not consistent. I believe this issue is related to the CI slowness issues. The same test passes for a kafka based orderer network using NodeSDK.

I'm going to lower the priority, but leave the issue open for now.","01/Dec/17 3:37 PM;latitiah;In the meantime while these issues are being looked at in CI, I will increase the 2 minute timeouts to 5 minute timeouts. When it comes to the query and invoke timings, I need to be careful about increasing those times because that could impact tests and env settings and expectations for these settings.
",04/Dec/17 8:10 PM;latitiah;https://gerrit.hyperledger.org/r/#/c/15923/,"08/Dec/17 8:47 PM;scottz;[https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/test_results_analyzer/] job 613 failed just one iteration of one CI test: this one. 

If the deploy (instantiate) is really all done, then the subsequent invoke should always pass. But it is not always passing.

How long do we arbitrarily wait after the deploy?

I am sure I asked this previously, but I will ask again: Rather than guessing at sleep time, is there anything else we can check, during the deploy verification, before returning successfully from that step?

Would it help if we have it dump out the actual returned status and the data value (instead of simply stating the length is incorrect)?","08/Dec/17 11:41 PM;scottz;[~latitiah] And I noticed that most of the tests in gossip.feature file contain a 5 second wait (minimum) after the deploy. Or, I should say, that is true for all testcases that try an invoke first. For the others the first thing they do is a query (instead of an invoke). All the tests in that file seem to be passing regularly.","13/Dec/17 6:55 PM;scottz;[https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/test_results_analyzer/]

Occasionally it still fails. See my previous comments. It is typically the 1.3 test that fails.","19/Dec/17 4:01 PM;sambhavdutt;*Merge test failed for fabric-test-merge-x86_64 - Build # 129*

orderer.Orderer Service.FAB-3852: Message Payloads Less than 1MB, for kafka orderer using the CLI interface -- @1.2

Failing for the past 1 build (Since Unstable#129 )
Took 6 min 33 sec.

Error Message

The containers are not ready in the allotted time (300 seconds)
Failing step: Given I have a bootstrapped fabric network of type kafka ... failed in 393.344s
Location: orderer.feature:64
Assertion Failed: The containers are not ready in the allotted time (300 seconds)
Captured stdout:
testConfigs: configs/0c388bcce44011e78ad6fa163ede05d7

*Build Log*
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-merge-x86_64/129/testReport/orderer/Orderer%20Service/FAB_3852__Message_Payloads_Less_than_1MB__for_kafka_orderer_using_the_CLI_interface_____1_2_/
","26/Dec/17 4:26 PM;sambhavdutt;This test case (wrong deployment size) has failed in the last build  #27 for *fabric-smoke-test-daily-verify-x86_64* 

orderer.Orderer Service.FAB-3852: Message Payloads Less than 1MB, for solo orderer using the NodeJS SDK interface -- @1.3

Error Message:
Expected response to be of length 1024; received length 17; Result: Query Result...

And a user queries on the chaincode named ""mycc"" with args [""get"",""a""] ... passed in 2.986s
    Then a user receives a response containing a value of length 1024 ... failed in 0.000s


*Build Log*

https://jenkins.hyperledger.org/view/fabric-smoke/job/fabric-smoke-test-daily-verify-x86_64/27/testReport/orderer/Orderer%20Service/FAB_3852__Message_Payloads_Less_than_1MB__for_solo_orderer_using_the_NodeJS_SDK_interface_____1_3_/","27/Dec/17 3:51 PM;sambhavdutt;The *fabric-smoke-test-daily-verify-x86_64* has passed successfully in the last build #28 without any error in the Ordering tests.

 !ft.png|thumbnail! ",28/Dec/17 2:52 PM;mastersingh24;So is there a defect on Fabric or is this a failure due to CI taking too long?,"28/Dec/17 7:29 PM;latitiah;This error is not consistent and seems to happen during ""CI slowdowns"". This is indicated from the statement 
{code}
Assertion Failed: The containers are not ready in the allotted time (300 seconds){code}

If there is a different error signature, it would indicate a different issue from timing.",05/Jan/18 5:29 PM;sambhavdutt;This CI slowdown is not happening and the orderer test has been successful from the last six builds. Closing the bug for now as no error observed in this department.,,,,,,,,
Misleading comment in vscc source code,FAB-7300,24759,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,ales,bta,bta,12/4/2017 21:34,1/26/2018 15:29,4/26/2018 6:50,1/26/2018 15:29,v1.1.0-preview,,,,,,fabric-baseimage,,,,0,,,,,"The comment above the Invoke functions states:

""This validation system chaincode will check the read-write set validity and at least 1 correct endorsement. Later we can create more validation system chaincodes to provide more sophisticated policy processing such as enabling policy specification to be coded as a transaction of the chaincode...""

This is outdated since vscc supports more complex policies already.",,900,900,,0%,900,900,,,,,,,,,,,,,,,,,,,0|i01wod:,,,,,,bta,luomin,,,,,,master,,,TRUE,,,,,,,,,,,,,,,,,,,,,,
fabric-verify-s390x failed as some packages couldn't be fetched due to url failure..,FAB-7335,24805,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,rameshthoomu,sambhavdutt,sambhavdutt,12/5/2017 23:00,12/6/2017 14:49,4/26/2018 6:50,12/6/2017 14:49,,,,,,,fabric-ci,,,,0,ci_failure,,,,"fabric-verify-s390x has failed as a url returns a 404 error, and fails to fetch some build packages, 

*Error Message*
21:14:30 W: Failed to fetch http://ftp.us.debian.org/debian/dists/sid/main/binary-s390x/Packages  Hash Sum mismatch
21:14:30 
21:14:30 E: Some index files failed to download. They have been ignored, or old ones used instead.
21:14:30 Fetched 20.0 MB in 4s (4491 kB/s)
21:14:31 The command '/bin/sh -c bash /tmp/install-softhsm2.sh && rm -f install-softhsm2.sh' returned a non-zero code: 100
21:14:31 Makefile:291: recipe for target 'build/image/testenv/.dummy-s390x-1.1.0-alpha-snapshot-3689c5a' failed
21:14:31 make: *** [build/image/testenv/.dummy-s390x-1.1.0-alpha-snapshot-3689c5a] Error 100
21:14:31 Build step 'Execute shell' marked build as failure

*Build Log*
https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-s390x/514/console",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01wyd:,,,,,,rameshthoomu,sambhavdutt,,,,,,,,,,"06/Dec/17 2:49 PM;rameshthoomu;[~sambhavdutt] don't create bugs when a verify build is failed. Usually verify build may fail for any reason and if you observe the above error consistently pls file a bug but I observed this is caused by the network error. Same build got passed on the reverify.

https://jenkins.hyperledger.org/job/fabric-verify-s390x/515/",,,,,,,,,,,,,,,,,,,,,
reinitialization of setupAdmins in fabric/msp/mspimpl.go Setup() function,FAB-7394,24885,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,mastersingh24,meinvzou,meinvzou,12/8/2017 4:26,12/16/2017 21:55,4/26/2018 6:50,12/16/2017 21:55,,,,,v1.1,,,,,,0,,,,," in fabric/msp/mspimpl.go Setup() function, from line code 289~306, with sequence call of setupCAs and setupAdmins function. 

The setupCAs function's following codes are the same in setupAdmins function. I suppose that there're unnecessary duplicated codes?

// make and fill the set of admin certs (if present)
 msp.admins = make([]Identity, len(conf.Admins))
 for i, admCert := range conf.Admins \{
 id, _, err := msp.getIdentityFromConf(admCert)
 if err != nil \{
 return err
 }

msp.admins[i] = id
 }

 ",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01xet:,,,,,,mastersingh24,meinvzou,,,,,,master,,,TRUE,16/Dec/17 1:23 PM;mastersingh24;I'll fix this in master.  Not sure it's worth a backport to the release branch,16/Dec/17 1:28 PM;mastersingh24;https://gerrit.hyperledger.org/r/16247,,,,,,,,,,,,,,,,,,,,
Log err during retry process,FAB-7436,25411,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,guoger,sanchezl,sanchezl,12/12/2017 13:24,2/18/2018 11:43,4/26/2018 6:50,12/14/2017 14:05,,,,,v1.1,,fabric-orderer,,,,0,,,,,The retryProcess (fabric/orderer/kafka/retry.go) does not log the actual error that causes a retry. Adding a trace statement can help when diagnosing why a process is continuously being retried.,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01xpp:,,,,,,guoger,sanchezl,,,,,,master,,,TRUE,14/Dec/17 1:36 AM;guoger;https://gerrit.hyperledger.org/r/#/c/16173/,,,,,,,,,,,,,,,,,,,,,
Typo when checking for valid couchdb params for $exists,FAB-7456,25741,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,tatsu-sato,Superjo149,Superjo149,12/14/2017 14:53,1/16/2018 15:29,4/26/2018 6:50,1/16/2018 15:29,,,,,,,fabric-ledger,,,,0,couchdb,Ledger,,,"When checking valid parameters, there is a type in $exists. It says $exits. I have not experienced any regarding this tho.

 

[https://github.com/hyperledger/fabric/blob/release/core/ledger/kvledger/txmgmt/statedb/statecouchdb/query_wrapper.go]

 ",,,,,,,,,,,,,14/Dec/17 2:51 PM;Superjo149;image-2017-12-14-15-51-52-088.png;https://jira.hyperledger.org/secure/attachment/13713/image-2017-12-14-15-51-52-088.png,,,,,,,,,,,,FAB-1969,0|hzzyuz:za2s,,,,,,denyeart,Superjo149,,,,,,master,,,TRUE,15/Jan/18 9:20 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/16793/,,,,,,,,,,,,,,,,,,,,,
Check consistency of chaincode installation data,FAB-7518,26195,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,Low,,ales,elli-androulaki,elli-androulaki,12/20/2017 8:26,3/14/2018 11:26,4/26/2018 6:50,,v1.0.5,,,,v1.2,,fabric-crypto,,,,0,Release-planning-1.2,,,,"Values corresponding to hashed chaincode code and metadata are provided during chaincode installation. Peer needs to perform sanity check on these values prior to accepting to install the chaincode. 

 

Essentially, one needs to check that hashed data provided at installation time inside the installation package, match their pre-images, and that installed chaincode's name does not match the name of an SCC.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz4r:zo01i,,Next Items - Security,,,,ales,elli-androulaki,scottz,,,,,,,,,"25/Jan/18 2:07 PM;ales;I analysed the issue and here are the results:

+CC install+
 * input from user is either a ChaincodeDeploymentSpec or a SignedChaincodeDeploymentSpec (which is basically a ChaincodeDeploymentSpec + instantiation policy and endorsers)
 * neither struct contains a hash
 * it is my conclusion that the install path does not introduce any inconsistencies wrt. hashing and preimages

+CC instantiation/upgrade+
 * upon instantiate/upgrade, we write in the ledger a ChaincodeData struct
 * ChaincodeData contains an identifier (Id) which is computed as follows:
 * in case the chaincode was installed using a ChaincodeDeploymentSpec: 

{{h1 = H(cds.CodePackage)}}

{{h2 = H(ccname || ccversion)}}

{{Id = H(h1 || h2)}}
 * in case the chaincode was installed using a SignedChaincodeDeploymentSpec

{{h1 = H(cds.CodePackage)}}

{{h2 = H(ccname || ccversion)}}

{{h3 = H(InstantiationPolicy || endorser_1 || ... || endorser_n)}}

{{Id = H(h1 || h2 || h3)}}
 *  unfortunately the preimages are not all there. In particular, the preimage of h1 is never there (given that the CodePackage is not a field of the ChaincodeData struct), nor is the preimage of h3 (given that the endorser are not a field of the ChaincodeData struct)
 * as a consequence, there's only a limited amount of validation that can be performed on the VSCC side when validating a CC instantiation/upgrade tx

 +Possible action items+
 # do not perform any additional checks
 # only check the proper computation of Id (check that either `Id = H(h1 || h2)` or `Id = H(h1 || h2 || h3)`), without being able to validate the correctness of h1 and h3 (since preimages are missing)

I'm currently leaning towards option 1, but I'd like to hear other opinions. [~elli-androulaki], [~angelo.decaro], wdyt?","19/Feb/18 2:54 AM;scottz;What is our exposure? What is a use-case that could cause problems, and what kind of problems?","19/Feb/18 2:52 PM;elli-androulaki;So, based on [~ales] assessment currently there is no exposure. That is,  since the hashes provided & computed during instantiation / upgrade phase are not used anywhere.

Ideally, we would like the chaincode identifier to be computed during instantiation time (using h1, h2, and instantiation policy) / verified during validation of lscc deploy and that hash to be used as means of looking for the chaincode in subsequent chaincode invocations. 

But since chaincode lifecycle is to change soon, and we have currently no breach, it may make sense to merge this work with the new cc lifecycle work for 1.2.",14/Mar/18 11:26 AM;elli-androulaki;So this one is a code (small) improvement that could be done only after the new lifecycle is in place. It may be that the check is no longer relevant so i keep the 1.2 flag to remind ourselves to check. ,,,,,,,,,,,,,,,,,,
SemVer-compliant versions not accepted as chaincode versions,FAB-7571,26309,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,sykesm,vdods,vdods,12/29/2017 3:57,1/6/2018 20:31,4/26/2018 6:50,1/6/2018 12:03,v1.1,,,,v1.1.0-alpha,,fabric-peer,,,,0,,,,,"The SemVer spec ( semver.org ) includes a particular use of the "" + "" char, but "" + "" is not allowed by 

    func (lscc *LifeCycleSysCC) isValidChaincodeVersion(chaincodeName string, version string) error

in file

    hyperledger/fabric/core/scc/lscc/lscc.go

This is a bummer if you're using SemVer.  This would be nearly trivial to fix by altering the regex defined by the const allowedCharsVersion to allow the ""+"" char.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01z7x:,,,,,,baohua,mastersingh24,muralisr,vdods,,,,master,,,TRUE,"29/Dec/17 10:25 AM;mastersingh24;I'm not opposed to this and seems like it should generally be ok.

[~muralisr] [~jyellick] what do you think?",29/Dec/17 2:42 PM;muralisr;[~mastersingh24] works for me.,03/Jan/18 12:50 AM;baohua;https://gerrit.hyperledger.org/r/#/c/16539/,06/Jan/18 8:31 PM;vdods;Could this be merged into the v1.0.x branch as well?,,,,,,,,,,,,,,,,,,
fabric-ca sample fails with new fabric-ca code,FAB-7592,26349,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,aambati,aambati,aambati,1/3/2018 19:20,1/5/2018 2:57,4/26/2018 6:50,1/5/2018 2:57,v1.1.0-alpha,,,,v1.1.0-alpha,,fabric-examples,,,,0,,,,,"fabric-ca sample fails with new fabric-ca code:

 

Error: Response from server: Error Code: 45 - Failed to verify if user can act on type 'client': : scode: 401, local code: 42, local msg: 'admin-org1' is not a registrar, remote code: 20, remote msg: Authorization failure",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01zgd:,,,,,,aambati,,,,,,,master,,,TRUE,03/Jan/18 8:43 PM;aambati;https://gerrit.hyperledger.org/r/c/16557/,,,,,,,,,,,,,,,,,,,,,
Tests inadvertently (?) excluded from build,FAB-7629,26636,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,sykesm,sykesm,sykesm,1/6/2018 1:40,3/26/2018 3:11,4/26/2018 6:50,3/23/2018 18:27,,,,,,,fabric-build,fabric-ci,,,0,chaincode,hygiene,,,"unitest/run.sh excludes `/test` from the build packages. [1]

While the regex was probably intended to cover `github.com/hyperledger/fabric/test/...`, it also excluded `github.com/hyperledger/fabric/core/chaincode/platforms/car/test` and `github.com/hyperledger/fabric/core/chaincode/platforms/java/test`.

When the regex is fixed to only exclude `fabric/test/...`, the tests in `chaincode/platforms/car/test` fail.

{noformat}
 TEST_PKGS=github.com/hyperledger/fabric/core/chaincode/platforms/car/test make unit-test
cd unit-test && docker-compose down
The JOB_TYPE variable is not set. Defaulting to a blank string.
Removing unittest_unit-tests_1 ... 
Removing unittest_unit-tests_1 ... done
Removing unittest_vp_1         ... done
Removing couchdb               ... done
# github.com/hyperledger/fabric/peer
/tmp/go-link-025085691/000001.o: In function `pluginOpen':
/tmp/workdir/go/src/plugin/plugin_dlopen.go:19: warning: Using 'dlopen' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
/tmp/go-link-025085691/000000.o: In function `_cgo_b0c710f30cfd_C2func_getaddrinfo':
/tmp/go-build/net/_obj/cgo-gcc-prolog:46: warning: Using 'getaddrinfo' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking
mkdir -p build/image/peer/payload
cp build/docker/bin/peer build/sampleconfig.tar.bz2 build/image/peer/payload
Creating build/goshim.tar.bz2
mkdir -p build/image/ccenv/payload
cp build/docker/gotools/bin/protoc-gen-go build/bin/chaintool build/goshim.tar.bz2 build/image/ccenv/payload
Building build/docker/bin/orderer
# github.com/hyperledger/fabric/common/deliver
common/deliver/deliver.go:29:2: can't find import: ""github.com/hyperledger/fabric/protos/common""
make: *** [build/docker/bin/orderer] Error 2
{noformat}

In summary, the regex in `unit-test/run.sh` needs to be updated and the `chaincode/platforms/car` test needs to be fixed.

[1]: https://github.com/hyperledger/fabric/blob/90b92697e0698af0ba2ca6e7aadf0cdbb27623ad/unit-test/run.sh#L66",,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzyfk:,,,,,,greg.haskins,sykesm,,,,,,master,,,TRUE,21/Mar/18 12:02 PM;sykesm;This is one of the few remaining issues preventing {{go test ./...}} from running in the tree.,21/Mar/18 1:15 PM;sykesm;Created a new chaincode archive fixture to make the test pass.,21/Mar/18 2:14 PM;sykesm;https://gerrit.hyperledger.org/r/c/19527/,,,,,,,,,,,,,,,,,,,
Unknown chaincodeType: NODE,FAB-7645,26654,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,lehors,finalight,finalight,1/8/2018 9:44,2/9/2018 15:26,4/26/2018 6:50,2/9/2018 14:58,,,,,Not a Bug,,fabric-examples,,,,0,,,,,"When i try to execute ```./startfabric.sh node```, the following error is produced

 

```

 

# don't rewrite paths for Windows Git Bash users

export MSYS_NO_PATHCONV=1

 

docker-compose -f docker-compose.yml down

Stopping cli                    ... done

Stopping peer0.org1.example.com ... done

Stopping couchdb                ... done

Stopping orderer.example.com    ... done

Stopping ca.example.com         ... done

Removing cli                    ... done

Removing peer0.org1.example.com ... done

Removing couchdb                ... done

Removing orderer.example.com    ... done

Removing ca.example.com         ... done

Removing network net_basic

 

docker-compose -f docker-compose.yml up -d ca.example.com orderer.example.com peer0.org1.example.com couchdb

Creating couchdb ... done

Creating peer0.org1.example.com ... done

Creating orderer.example.com ... 

Creating couchdb ... 

Creating peer0.org1.example.com ... 

 

# wait for Hyperledger Fabric to start

# incase of errors when running later commands, issue export FABRIC_START_TIMEOUT=<larger number>

export FABRIC_START_TIMEOUT=10

#echo $\{FABRIC_START_TIMEOUT}

sleep $\{FABRIC_START_TIMEOUT}

 

# Create the channel

docker exec -e ""CORE_PEER_LOCALMSPID=Org1MSP"" -e ""CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/Admin@org1.example.com/msp"" peer0.org1.example.com peer channel create -o orderer.example.com:7050 -c mychannel -f /etc/hyperledger/configtx/channel.tx

2018-01-08 09:37:44.768 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP

2018-01-08 09:37:44.769 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity

2018-01-08 09:37:44.771 UTC [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized

2018-01-08 09:37:44.772 UTC [msp] GetLocalMSP -> DEBU 004 Returning existing local MSP

2018-01-08 09:37:44.772 UTC [msp] GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity

2018-01-08 09:37:44.772 UTC [msp] GetLocalMSP -> DEBU 006 Returning existing local MSP

2018-01-08 09:37:44.772 UTC [msp] GetDefaultSigningIdentity -> DEBU 007 Obtaining default signing identity

2018-01-08 09:37:44.772 UTC [msp/identity] Sign -> DEBU 008 Sign: plaintext: 0A88060A074F7267314D535012FC052D...53616D706C65436F6E736F727469756D 

2018-01-08 09:37:44.773 UTC [msp/identity] Sign -> DEBU 009 Sign: digest: DC274990B4322EF71F5B1871080B365CE138D3DA0DB3769935AB76CD75B65D48 

2018-01-08 09:37:44.773 UTC [msp] GetLocalMSP -> DEBU 00a Returning existing local MSP

2018-01-08 09:37:44.773 UTC [msp] GetDefaultSigningIdentity -> DEBU 00b Obtaining default signing identity

2018-01-08 09:37:44.773 UTC [msp] GetLocalMSP -> DEBU 00c Returning existing local MSP

2018-01-08 09:37:44.773 UTC [msp] GetDefaultSigningIdentity -> DEBU 00d Obtaining default signing identity

2018-01-08 09:37:44.774 UTC [msp/identity] Sign -> DEBU 00e Sign: plaintext: 0ABF060A1508021A0608E8F7CCD20522...F83B2C983A5B1163346FE530781D2F01 

2018-01-08 09:37:44.774 UTC [msp/identity] Sign -> DEBU 00f Sign: digest: 10617339838E6F78FF5E5D759DC9241C1C853562F132854E32A53652E5AEB18F 

2018-01-08 09:37:44.870 UTC [msp] GetLocalMSP -> DEBU 010 Returning existing local MSP

2018-01-08 09:37:44.870 UTC [msp] GetDefaultSigningIdentity -> DEBU 011 Obtaining default signing identity

2018-01-08 09:37:44.870 UTC [msp] GetLocalMSP -> DEBU 012 Returning existing local MSP

2018-01-08 09:37:44.871 UTC [msp] GetDefaultSigningIdentity -> DEBU 013 Obtaining default signing identity

2018-01-08 09:37:44.871 UTC [msp/identity] Sign -> DEBU 014 Sign: plaintext: 0ABF060A1508021A0608E8F7CCD20522...8D8D9A62134412080A021A0012021A00 

2018-01-08 09:37:44.871 UTC [msp/identity] Sign -> DEBU 015 Sign: digest: DDCCD9703E429528AFABC2FA7D0F28DE36D87A05EC4D4E7A38A08F92451EC706 

2018-01-08 09:37:44.898 UTC [channelCmd] readBlock -> DEBU 016 Got status: &\{NOT_FOUND}

2018-01-08 09:37:44.898 UTC [msp] GetLocalMSP -> DEBU 017 Returning existing local MSP

2018-01-08 09:37:44.899 UTC [msp] GetDefaultSigningIdentity -> DEBU 018 Obtaining default signing identity

2018-01-08 09:37:44.900 UTC [channelCmd] InitCmdFactory -> INFO 019 Endorser and orderer connections initialized

2018-01-08 09:37:45.100 UTC [msp] GetLocalMSP -> DEBU 01a Returning existing local MSP

2018-01-08 09:37:45.100 UTC [msp] GetDefaultSigningIdentity -> DEBU 01b Obtaining default signing identity

2018-01-08 09:37:45.101 UTC [msp] GetLocalMSP -> DEBU 01c Returning existing local MSP

2018-01-08 09:37:45.101 UTC [msp] GetDefaultSigningIdentity -> DEBU 01d Obtaining default signing identity

2018-01-08 09:37:45.101 UTC [msp/identity] Sign -> DEBU 01e Sign: plaintext: 0ABF060A1508021A0608E9F7CCD20522...C97EFE0216C712080A021A0012021A00 

2018-01-08 09:37:45.101 UTC [msp/identity] Sign -> DEBU 01f Sign: digest: 1FD4BC9525045CC79A1D3B6A07CF4FB98C091B34C1035E593B52E168684AB2EB 

2018-01-08 09:37:45.105 UTC [channelCmd] readBlock -> DEBU 020 Received block: 0

2018-01-08 09:37:45.106 UTC [main] main -> INFO 021 Exiting.....

# Join peer0.org1.example.com to the channel.

docker exec -e ""CORE_PEER_LOCALMSPID=Org1MSP"" -e ""CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users/Admin@org1.example.com/msp"" peer0.org1.example.com peer channel join -b mychannel.block

2018-01-08 09:37:45.212 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP

2018-01-08 09:37:45.213 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity

2018-01-08 09:37:45.214 UTC [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized

2018-01-08 09:37:45.214 UTC [msp/identity] Sign -> DEBU 004 Sign: plaintext: 0A85070A5B08011A0B08E9F7CCD20510...1387C77FF4421A080A000A000A000A00 

2018-01-08 09:37:45.215 UTC [msp/identity] Sign -> DEBU 005 Sign: digest: 026E4BFDAE085F815B0C0347C2EA0C1B94429C7F8AF9FF4C8CF317752F3C9EBC 

2018-01-08 09:37:45.297 UTC [channelCmd] executeJoin -> INFO 006 Peer joined the channel!

2018-01-08 09:37:45.297 UTC [main] main -> INFO 007 Exiting.....

echo 'haha'

haha

Creating cli ... done

2018-01-08 09:37:46.092 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP

2018-01-08 09:37:46.093 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity

2018-01-08 09:37:46.093 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc

2018-01-08 09:37:46.094 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default vscc

Error: Error getting chaincode code chaincode: Failed to determine platform type: Unknown chaincodeType: NODE

```",,,,,,,,,,,,,,,,,,,,,,,,,,0|i01zvx:,,,,,,finalight,lehors,,,,,,,,,,"30/Jan/18 2:49 PM;lehors;Hi,

Where does this startfabric.sh script come from?

Which platform are you on?

Thanks.

 ","06/Feb/18 5:33 PM;lehors;Ok, I was able to reproduce this same error on Windows 7.

I will investigate further.","06/Feb/18 11:19 PM;lehors;After further investigation I can say that there is at least a workaround: upgrade to fabric-1.1-alpha.

Indeed, while I could reproduce the problem in fabric-1.0.5 it has disappeared in fabric-1.1-alpha.

I'm not sure why but it might just be because of the upgrade from go1.7 to go1.9 because I don't quite understand the source of the problem.

The installation of the node chaincode fails with 1.0.5 because the type is not properly recognized. This can simply be tested by logging into the cli:
{code:java}
$ docker exec -it -e ""CORE_PEER_LOCALMSPID=Org1MSP"" -e ""CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org
1.example.com/users/Admin@org1.example.com/msp"" cli /bin/bash{code}
Then executing:
{code:java}
root@4e258a910ef8:/opt/gopath/src/github.com/hyperledger/fabric# peer chaincode install -n fabcar -v 1.0 -p /opt/gopath/src/github.com/fabcar/node -l node
2018-02-06 22:13:49.476 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2018-02-06 22:13:49.476 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2018-02-06 22:13:49.477 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc
2018-02-06 22:13:49.477 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default vscc
Error: Error getting chaincode code chaincode: Failed to determine platform type: Unknown chaincodeType: NODE

root@5c51ab9f551e:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer version
peer:
 Version: 1.0.5
 Go version: go1.7.5
 OS/Arch: linux/amd64
 Chaincode:
  Base Image Version: 0.3.2
  Base Docker Namespace: hyperledger
  Base Docker Label: org.hyperledger.fabric
  Docker Namespace: hyperledger{code}
 The code that's not functioning is in fabric/core/chaincode/platforms/platforms.go:
{code:java}
// Find returns the platform interface for the given platform type
func Find(chaincodeType pb.ChaincodeSpec_Type) (Platform, error) {

    switch chaincodeType {
    case pb.ChaincodeSpec_GOLANG:
        return &golang.Platform{}, nil
    case pb.ChaincodeSpec_CAR:
        return &car.Platform{}, nil
    case pb.ChaincodeSpec_JAVA:
        return &java.Platform{}, nil
    case pb.ChaincodeSpec_NODE:
        return &node.Platform{}, nil
    default:
        return nil, fmt.Errorf(""Unknown chaincodeType: %s"", chaincodeType)
    }{code}
I don't quite see how this could fail but didn't investigate further because the problem no longer exists in 1.1 so I'm not sure it's worth spending more time on it.

Running the 1.1-alpha peer command in the same container, that command succeeds:
{code:java}
root@4e258a910ef8:/opt/gopath/src/github.com/hyperledger/fabric# build/bin/peer chaincode install -n fabcar -v 1.0 -p /opt/gopath/src/github.com/fabcar/node -l
node
2018-02-06 22:12:56.709 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2018-02-06 22:12:56.710 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2018-02-06 22:12:56.712 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc
2018-02-06 22:12:56.713 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default vscc
2018-02-06 22:12:56.716 UTC [chaincodeCmd] getChaincodeSpec -> DEBU 005 java chaincode enabled
2018-02-06 22:12:56.719 UTC [node-platform] GetDeploymentPayload -> DEBU 006 Packaging node.js project from path /opt/gopath/src/github.com/fabcar/node
2018-02-06 22:12:56.720 UTC [container] WriteFolderToTarPackage -> INFO 007 rootDirectory = /opt/gopath/src/github.com/fabcar/node
2018-02-06 22:12:56.723 UTC [container] WriteFileToPackage -> DEBU 008 Writing file to tarball: src/fabcar.js
2018-02-06 22:12:56.737 UTC [container] WriteFileToPackage -> DEBU 009 Writing file to tarball: src/package.json
2018-02-06 22:12:56.741 UTC [msp/identity] Sign -> DEBU 00a Sign: plaintext: 0A9C070A5C08031A0C08E8D0E8D30510...F3F1EF000000FFFF664C5065001E0000
2018-02-06 22:12:56.742 UTC [msp/identity] Sign -> DEBU 00b Sign: digest: 3D92CF41DFD4A6C8A3FD523EE0FEB8A4DC06CD0D1A328118719C8EA405CCD44A
2018-02-06 22:12:56.779 UTC [chaincodeCmd] install -> DEBU 00c Installed remotely response:<status:200 payload:""OK"" >
2018-02-06 22:12:56.780 UTC [main] main -> INFO 00d Exiting.....

root@4e258a910ef8:/opt/gopath/src/github.com/hyperledger/fabric# build/bin/peer version
peer:
 Version: 1.1.0-beta-snapshot-ec639a6
 Go version: go1.9
 OS/Arch: linux/amd64
 Experimental features: true
 Chaincode:
  Base Image Version: 0.4.5
  Base Docker Namespace: hyperledger
  Base Docker Label: org.hyperledger.fabric
  Docker Namespace: hyperledger{code}
 

 ","09/Feb/18 2:58 PM;lehors;Support for Node chaincode was introduced in fabric-1.1. So, this problem actually occurs when trying to use a Node chaincode on a pre 1.1 network.

This is actually working as designed.

 ",,,,,,,,,,,,,,,,,,
Orderer failed to reconnect to Kafka after reboot in an edge case,FAB-7707,26768,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,guoger,guoger,guoger,1/12/2018 10:54,3/7/2018 15:00,4/26/2018 6:50,1/27/2018 5:57,v1.0.5,,,,v1.1,,fabric-orderer,,,,0,kafka,,,,"If a channel has been idle (no tx) for a long time (> {{log.retention.(time)}} of kafka), and orderer has been rebooted during this period, another reboot of orderer would fail due to {{The requested offset is outside the range of offsets maintained by the server for the given topic/partition.}}

To reproduce:
1) start kafka-based OSN, submit some TXs
2) reboot orderer, so it would send a {{connect msg}} to kafka
3) wait for {{log.retention.(time)}} so all the data in Kafka are pruned
4) reboot orderer again and observe the failure

{{Connect msg}} advances Kafka offset, however lastOffsetPersisted is only advanced by TXs. In this case, when Kafka prunes data, it only records latest offset, which is a {{connect msg}} in this case. When orderer reboots again, it looks up {{lastOffsetPersisted}}, which is lost during pruning.

An interesting fact is that {{log.retention.(time)}} actually forces Kafka log roll-out, so a new segment file is created and old one can be deleted. Therefore, even if we set segment size and time to be sufficiently large, this problem still occurs.

By default, {{log.retention.(time}} is 168 hours (7 days). Sometimes users do have channels being idle for such long time, and orderer may reboot during that period.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i020kt:,,,,,,coosummer,guoger,kchristidis,sanchezl,,,,master,,,TRUE,"12/Jan/18 1:29 PM;kchristidis;Thanks for writing this up Jay.

I would note that:
{quote}By default, {{log.retention.(time}} is 168 hours (7 days). Sometimes users do have channels being idle for such long time, and orderer may reboot during that period.
{quote}
Until we roll out pruning, we need to correct this misconception. The only accepted {{log.retention.(time)}} value is {{-1}}, see: [https://github.com/hyperledger/fabric/blob/release/bddtests/dc-orderer-kafka-base.yml#L57]

However --

When we do enable pruning, this issue _will_ bite us for the reasons you explain. (So you're right.)

What is the fix that you have in mind? Is it [https://chat.hyperledger.org/channel/fabric-orderer-dev?msg=7sxjDTDccd64ayL6p] or something else?","16/Jan/18 1:31 AM;guoger;[~kchristidis] ah, I didn't realize this config value before. But shouldn't it be set by default in our Kafka image?

In terms of fix, the one you posted seems viable to me. But it may also depends on pruning design I guess.","16/Jan/18 3:13 AM;guoger;With following kafka config:
{code}
log.retention.hours = -1
log.retention.bytes > segment.bytes = 1G (it takes ~30M connect msg to fill a segment)
{code}
I think this problem can be reasonably mitigated (not solved), as it would take ~60M orderer reboots without any TX for this problem to occur (connect msg fill up 2 log files). Am I missing anything?
cc [~kchristidis] [~sanchezl]","16/Jan/18 11:07 AM;kchristidis;{quote}But shouldn't it be set by default in our Kafka image?
{quote}
It should. I'm sure there was a reason for not setting it back then, but whatever it was, it is wrong now. If you submit a CR fixing this bug, we'll get it in.

{quote}With following kafka config:
{quote}
I believe so. I also want to hear Luis's take.","17/Jan/18 11:23 PM;sanchezl;{quote}Until we roll out pruning, we need to correct this misconception. The only accepted {{log.retention.(time)}} value is {{-1}}, see: [https://github.com/hyperledger/fabric/blob/release/bddtests/dc-orderer-kafka-base.yml#L57]
{quote}
While this is what we officially [document|http://hyperledger-fabric.readthedocs.io/en/latest/kafka.html], we have users who insist on enabling pruning in Kafka. Maybe it's time to add the considerations for these customers to the documentation? or should we add it to the FAQ?","18/Jan/18 2:02 PM;kchristidis;My take is that:
 # The hacky, pruning-enabled mode should be covered just in the FAQ, and
 # We fix {{log.retention.(time)}} to {{-1}}

Ultimately it's up to you guys though.","24/Jan/18 4:03 PM;kchristidis;[~guoger], [~sanchezl] how do we proceed here and who wants to take this over?",26/Jan/18 2:16 AM;guoger;https://gerrit.hyperledger.org/r/#/c/17233/,"02/Mar/18 11:07 AM;coosummer;how can i solve this problem.I have changed the log.retention.hours = -1,but the lastOffsetPersisted in orderer is still outside the range of offsets of the kafka .
but if i reinstall all the fabric system, the history data will be lost.
how can i do to solve the problem and retain the history data.
thanks very much!",02/Mar/18 6:41 PM;kchristidis;[~coosummer]: This cannot be fixed retroactively. The original misconfiguration means that you'll have to find a way to migrate the data to a new ordering service that is correctly configured this time.,"07/Mar/18 7:11 AM;coosummer;@Kostas Christidis,Is there some advise or tool to migrate the data to a new orderering service,
The only way i can see is  to use a client to read the old data and write to the new service,
but the timestamp of tx is changed .
thanks very much!",07/Mar/18 2:38 PM;kchristidis;Only way to migrate right now is with a client as you suggest.,,,,,,,,,,
Invoke by clark start timeout when I add/remove member from channel,FAB-7723,26787,Bug,Monitor / On Hold,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,wisam.mohammed,wisam.mohammed,1/12/2018 21:04,3/12/2018 18:25,4/26/2018 6:50,2/19/2018 21:43,,,,,,,fabric-peer,,,,0,,,,,"*Description*
Invoke by clark start time out when I remove /add member from channel, and I have to restart peer in order back normal.

*Steps to reproduce the behaviour*
1- create channel via UI on clark
2-join peer >> clark
3- do instantiate on new channel {{ch1}} on clark
4- do some invoke on one peer on clark
5- stop invoke on clark
6- edit channel on clark, by add Amelia to clark channel {{ch1}}
7- Go to Amila and join here peer to channel {{ch1}} via UI
8- Amila now have same transaction clack have on {{ch1}} via UI
9- resume invoke by clark ... 1000 invoke
10. stop invoke on clark
11. edit channel on clark and approve it ... edit by remove Amila
12. invoke again on clark .. 1000 invoke
start time out after 32 invoke
*Expected behaviour*
Invoke should keep going
*Actual behaviour*
invoke timeout

 ",,,,,,,,,,,,,12/Jan/18 9:06 PM;wisam.mohammed;d8247ae2a4154cb2aa7ea99ccc64f0a4_Logs.zip;https://jira.hyperledger.org/secure/attachment/14145/d8247ae2a4154cb2aa7ea99ccc64f0a4_Logs.zip,16/Feb/18 9:48 PM;wisam.mohammed;img2.png;https://jira.hyperledger.org/secure/attachment/14633/img2.png,,,,,,,,,,,,0|i020ot:,,,,,,denyeart,harrisob@us.ibm.com,harsha544,kchristidis,varadatibm,wisam.mohammed,,,,,,12/Jan/18 9:06 PM;wisam.mohammed;Attached in zip file,08/Feb/18 8:10 PM;kchristidis;I'm not sure I follow what goes on here. Could you take another crack at describing what goes on here?,09/Feb/18 4:15 PM;Clayton Sims;changing state to Monitor / Hold to indicate we are waiting on originator.   [~wisam.mohammed] ,"09/Feb/18 4:57 PM;wisam.mohammed;[~kchristidis] the issue here when you have channel and two member in it and 1st member running invoke using her/his peer.

When 2nd member decided to leave the channel and leave the 1st member alone in that channel. Then any invoke by 1st member will timeout after period of time. 

Please let me know if have question.

 

Thanks",09/Feb/18 5:00 PM;kchristidis;What is the endorsement policy for the chaincode in question?,"09/Feb/18 6:12 PM;varadatibm;Hi Kostas,

I don't think there is any endorsement policies passed when instantiating... If there is nothing passed, I believe SDK sets it to be 'one of the orgs from the channel participants need to endorse' ","09/Feb/18 6:20 PM;wisam.mohammed;Yes, [~varadatibm] know more endorsement policy. Thanks [~varadatibm]",13/Feb/18 6:25 PM;Clayton Sims;What is next step here?,14/Feb/18 5:07 PM;denyeart;[~kchristidis] Could you try it out and assess if there is a defect here?,14/Feb/18 5:30 PM;kchristidis;Sure thing. Will have a look this week.,"16/Feb/18 8:24 PM;kchristidis;Went through every step of this using the CLI commands and reproduced the scenario locally.

Could not reproduce the bug.

You are referring to a UI - what UI would be this?

 ","16/Feb/18 9:49 PM;wisam.mohammed;IBM Blockchain Platform UI

!img2.png!","17/Feb/18 12:31 AM;kchristidis;Let's do this right, given that this is not the bug tracker for IBM Blockchain. Here's a few questions:
 # What version of Fabric is this running on?
 # In Step 6, is it possible that the SDK is modifying the endorsement policy of the chaincodes in the channel? ([~harrisob@us.ibm.com]? Seems unlikely.)
 # You also note some numbers in the original description. e.g. ""1000 invoke"", ""32 invoke"". What are these exactly? Numbers of invocation? If so, can you please attempt to trim this problem to the smallest possible set of steps? (Think MWE if this were a StackOverflow thread.) For instance, in Step 12, does the first invocation work?","17/Feb/18 2:53 PM;harrisob@us.ibm.com;NodeSDK does not inject or modify endorsement policies, if the application does not include one, then the system default is used.

 

When the second peer is added to the channel, is a new organization also added to the channel configuration ?? The system default endorsement policy requires endorsements from a majority of organizations... in this case that would mean both peers. Then when the peer is removed from the channel, is the channel configuration again updated to remove the organization ?? It looks like the organization is still defined the channel configuration as the commit of the invokes are not completing. This could be due to not getting a majority of endorsements from organizations defined on the channel ???","18/Feb/18 3:49 AM;kchristidis;{quote}Then when the peer is removed from the channel, is the channel configuration again updated to remove the organization ??
{quote}
(This sounds like a good guess.)","18/Feb/18 2:42 PM;denyeart;Ok, it sounds like no bug in base Fabric.

[~wisam.mohammed] could you close this from Fabric Jira, and open a ticket against the IBM Blockchain service?","19/Feb/18 9:58 PM;wisam.mohammed;[~kchristidis] [~harrisob@us.ibm.com] [~denyeart] Thanks for looking on that. Fabric/ Fabric Ca V1.0.3

Fabric [https://github.com/hyperledger/fabric/releases/tag/v1.0.3]

[https://github.com/hyperledger/fabric-ca/releases/tag/v1.0.3] 

And yes, ""1000 invoke"" mean number of invocation.

In Step 6, if the SDK is modifying the endorsement policy or not. [~varadatibm]Know more about it, I believe yes. 

And yes, in Step 12, the first invocation works.

 

 

I will closed this issue and open on UI repo. Thanks

 

 ","21/Feb/18 4:43 PM;harrisob@us.ibm.com;Varad and I have discussed and he says this is on 1.0 and I have looked into the code and see that in that release NodeSDK did inject an endorsing policy if the application did not provide one. The NodeSDK builds a policy to include all the current orgs  in a '1 of [org_1, ...org_n]' So is it possible that once the org is removed from the channel that the endorsement policy fails due to a missing org ?","12/Mar/18 2:53 PM;wisam.mohammed;Based on discussion between Varad and Bret, this issue need to be reopen. I will reopen it. ",12/Mar/18 3:09 PM;kchristidis;Alright. What is the rationale behind re-opening this?,"12/Mar/18 4:42 PM;varadatibm;[~kchristidis] 

Based on SDK, the default endorsement policy is '1 of n' based on the orgs at the time of chaincode instantiation. (Bret's comment above)

When an org is removed from a channel, we need to update the endorsement policy by submitting a new chaincode instantiation? Perhaps, Wisam can experiment this and see if that fixes it.

I am not sure if I can explain why it works for about 30 invokes before it times out?","12/Mar/18 6:25 PM;harrisob@us.ibm.com;I assume there is an application timeout waiting for an event listener to signal the completion of a transaction (which means the peer has committed the transaction), since the endorsement policy is not meet, the commit will never happen. There is no mechanism in the two phase fabric process  of endorsing a  transaction proposal (maybe what you might call half of an invoke) and the submitting of those endorsed transactions to the orderer (maybe what you are thinking is the other half of the invoke) to know if the whole action was actually successful. The response from the orderer when submitting, only indicates that it has accepted the transaction to be processed. Therefore the application will continue to perform ""invokes"" until it receives the timeout. This will indicate that a commit has not happened for the transaction on the peer and I believe the application logic will now think that the first ""invoke"" has failed and stop invoking, however before the timeout the application continues to invoke."
"if FABRIC_CFG_PATH set to non existant directory, peer panics",FAB-7769,26875,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,john.d.sheehan,john.d.sheehan,john.d.sheehan,1/17/2018 12:36,1/30/2018 18:11,4/26/2018 6:50,1/30/2018 18:11,,,,,,,fabric-peer,,,,0,,,,,"to reproduce

```
 go get github.com/hyperledger/fabric
 cd $\{GOPATH}/src/github.com/hyperledger/fabric/peer
 go build
 export FABRIC_CFG_PATH=/asdfasd
 ./peer

./peer
 panic: Fatal error when initializing core config : error when reading core config file: Unsupported Config Type """"

goroutine 1 [running]:
 main.main()
 /home/vagrant/golang/src/github.com/hyperledger/fabric/peer/main.go:77 +0x7b6
 ```",all,,,,,,,,,,,,,,,,,,,,,,,,,0|i02159:,,,,,,john.d.sheehan,mastersingh24,wlahti,,,,,master,,,TRUE,21/Jan/18 9:39 AM;mastersingh24;[~john.d.sheehan] - What do you think should happen here?,21/Jan/18 10:19 AM;mastersingh24;https://gerrit.hyperledger.org/r/16897,30/Jan/18 6:11 PM;wlahti;The above CR was merged on January 24. Marking this JIRA complete.,,,,,,,,,,,,,,,,,,,
Peer chain can't restart due to some configuration block issue,FAB-7801,26927,Bug,Monitor / On Hold,FAB,Fabric,software,ChristopherFerris,,,Low,,,mffrench,mffrench,1/18/2018 6:02,2/15/2018 11:32,4/26/2018 6:50,,v1.0.0-alpha2,,,,Future,,fabric-peer,,,,0,,,,," 

Hi,

after the patch campaign on our Hyperledger Fabric cluster, all the VMs of the cluster has been restarted. 

After restart, all the containers were stopped an so we restarted the all stack : 
 * \{Hyperledger Fabric CA and Orderer Solo} on a dedicated consortium VM,
 * \{HF Peers, CouchDB and application} on 3 other network participant VMs. 

At this first restart everything was looking OK but there was a lot of logs history and so to troubleshoot easily another application issue on a a dedicated participan VMs, we decided to restart again the docker stack but this time by removing and recreating the docker containers to remove the past log (*). 

Unfortunately when restarting the Hyperledger stack on this particular node we hit an issue on one of our peers which prevent us to restart our chain on this peer and particularly read the MSP from the configuration block (see logs bellow). 

I'm currently looking some way to restart the peer and I see one by removing the peer data and resync the empty peer with the two other still running on our network. Do you see other cheaper way ? Do you have some advice to help us ? And finally do you have some idea on what could be the root cause of this issue ? 

Thank you
{code:java}
2017-06-19 23:26:01.361 UTC [ledgermgmt] OpenLedger -> INFO 1c9 Opened ledger with id = elixir-channel
2017-06-19 23:26:01.361 UTC [peer] getCurrConfigBlockFromLedger -> DEBU 1ca Getting config block
2017-06-19 23:26:01.361 UTC [fsblkstorage] retrieveBlockByNumber -> DEBU 1cb retrieveBlockByNumber() - blockNum = [26858]
2017-06-19 23:26:01.361 UTC [fsblkstorage] newBlockfileStream -> DEBU 1cc newBlockfileStream(): filePath=[/var/hyperledger/production/ledgersData/chains/chains/elixir-channel/blockfile_001449], startOffset=[10192565]
2017-06-19 23:26:01.361 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 1cd Remaining bytes=[5377], Going to peek [8] bytes
2017-06-19 23:26:01.361 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 1ce Returning blockbytes - length=[5375], placementInfo={fileNum=[1449], startOffset=[10192565], bytesOffset=[10192567]}
2017-06-19 23:26:01.361 UTC [fsblkstorage] retrieveBlockByNumber -> DEBU 1cf retrieveBlockByNumber() - blockNum = [26847]
2017-06-19 23:26:01.361 UTC [fsblkstorage] newBlockfileStream -> DEBU 1d0 newBlockfileStream(): filePath=[/var/hyperledger/production/ledgersData/chains/chains/elixir-channel/blockfile_001449], startOffset=[10025675]
2017-06-19 23:26:01.362 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 1d1 Remaining bytes=[172267], Going to peek [8] bytes
2017-06-19 23:26:01.362 UTC [fsblkstorage] nextBlockBytesAndPlacementInfo -> DEBU 1d2 Returning blockbytes - length=[5546], placementInfo={fileNum=[1449], startOffset=[10025675], bytesOffset=[10025677]}
2017-06-19 23:26:01.362 UTC [peer] getCurrConfigBlockFromLedger -> DEBU 1d3 Got config block[26847]
2017-06-19 23:26:01.362 UTC [common/config] NewStandardValues -> DEBU 1d4 Initializing protos for *config.ChannelProtos
2017-06-19 23:26:01.362 UTC [common/config] initializeProtosStruct -> DEBU 1d5 Processing field: HashingAlgorithm
2017-06-19 23:26:01.363 UTC [common/config] initializeProtosStruct -> DEBU 1d6 Processing field: BlockDataHashingStructure
2017-06-19 23:26:01.363 UTC [common/config] initializeProtosStruct -> DEBU 1d7 Processing field: OrdererAddresses
2017-06-19 23:26:01.363 UTC [common/config] initializeProtosStruct -> DEBU 1d8 Processing field: Consortium
2017-06-19 23:26:01.363 UTC [peer] Initialize -> WARN 1d9 Failed to load chain elixir-channel(Bad envelope: Not a tx of type CONFIG)
{code}
(*) : peers data and conf are configured to be on the host  through dedicated volume ; this procedure has been used a lot of time last years (at least 48 time as we did 48 chaincode upgrade).

 ",,,,,,,,,,,,,,,,,,,,,,,,,,0|i021d1:,,,,,,denyeart,jeffgarratt,mastersingh24,mffrench,mplisov,muralisr,,,,,,"18/Jan/18 3:09 PM;jeffgarratt;[~mffrench] to give yourself some confidence you could create a new peer and join the channel and verify that it syncs up.  Once it does, you could consider backing up your existing peer's file store (while it is stopped) and removing the directory from the chain file store, which in your case appears to be...

 <file_store>/ledgersData/chains/chains/elixir-channel

Then have that peer join the channel once more and verify it also syncs up.",20/Jan/18 10:21 PM;mastersingh24;[~mffrench] - Which version are you starting with and to which version are you trying to upgrade?  If you are actually on v1.0.0-alpha2 and trying to upgrade to v1.0.x there is no guarantee that this is going to work as it is not even supported,"21/Jan/18 10:41 PM;mffrench;[~jeffgarratt] and [~mastersingh24] : first thank you both for your answers.

I've been able to restart a fresh peer and ledger resync from other peers has been successful. So I'm downgrading the priority of this issue to low as this is an issue on old Hyperledger Fabric and this is no more a prod issue.

[~mastersingh24] : I didn't try to upgrade the peer but I was just restarting it.

I kept the data from the older peer instance with the ledger with I can reproduce the issue. I would like to try understand what happened even if this is in a old version. [~jeffgarratt] gave me some test todo to get the config block with some `peer fetch...` command but I'm not sure of my test as the fetch I did was against the orderer and not the local peer ledger as the peer is trying to do before it raise me this error. If you have other idea please let me know.

Best,

 ","21/Jan/18 10:57 PM;mffrench;Some other questions just in case you may have some answers :

+ Is there a HLF Peer backup best practices ? I think this could be interesting to reduce resync time but I'm not sure if such solution is supported and how.
+ Can you tell me since HLF version upgrade are supported ? I guess upgrade from v1.0 to v1.1 will be supported ? Is there some operation best practices to follow for such operation ?

Thank you again !","26/Jan/18 8:13 AM;mffrench;Hi,

as I get the issue back on another peer on the network, I raise the issue again to high. If we can have some help to understand the root cause of this chain configuration problem on the peer that would be great.

Best,","26/Jan/18 3:13 PM;muralisr;The error `Failed to load chain elixir-channel(Bad envelope: Not a tx of type CONFIG)` comes when loading in the ledger for the channel at peer startup time. 

I wonder if the hard stopping of the peers causes the ledger to get out of whack ? Can you provide the exact steps to recreate this issue [~mffrench]","26/Jan/18 3:34 PM;mffrench;Hi Srinivasan,

I've the impression this issue is related to this one : https://jira.hyperledger.org/browse/FAB-5286. After the VMs patching campaign we also had to restart the orderer (which is a solo orderer in our conf as we didn't get enough resources to deploy a kafka one) and this issue could be a side effect of FAB-5286.

It's currently hard for me to provide step to reproduce the error as I reproduce it with the client ledger and I can't it share publicly. Also I'm not sure yet on how to reproduce it from scratch. However I think I may have some idea on that and I will try to give you some env for that next week.

Best,","26/Jan/18 4:21 PM;muralisr;Thank you for the quick response [~mffrench].

One thing would be interesting to do a high level comparison of at the ledger files on working peers with the non-working peer to if we can spot anything odd.",26/Jan/18 5:09 PM;mffrench;Is there some tool for such comparison ? I mean the ledger has more than 25000 blocks and I don't know yet how to do such thing efficiently...,"27/Jan/18 2:49 PM;muralisr;[~mffrench] Right. No, I just meant looking at the ledger externally (file sizes for example) first to see if you could spot some anomalies. But looking at the logs it did find the current config block (just couldn't locate the config TX in there for some reason), so please ignore that suggestion.","30/Jan/18 2:47 AM;denyeart;[~mffrench] Can you provide the same debug snippet for a peer that can start and a peer that cannot start.  We'll want to compare the block info in debug for the last config block, which in your case is block [26847].  For both peers, please ensure the config block number is the same for both peers, in the debug message:
""Got config block""",07/Feb/18 5:26 PM;Clayton Sims;Move to monitor / hold.  waiting on info from originator.,"15/Feb/18 10:32 AM;mffrench;Hi,

I tried to reproduce the issue on 1.0.1 but I failed. On the other hands we were able to resync the peers on the network. So I will minor the issue severity again.

Best,","15/Feb/18 11:32 AM;denyeart;Ok, let's leave this open for now with a Future fix date so that we can investigate potential causes in more detail after 1.1.

[~dongming] I know you are adding additional peer crash and recovery system tests.  Here is one problem that you can try to model as part of those tests.",,,,,,,,
client.config generated by cluster example contains the wrong identity keys,FAB-7888,27051,Bug,Duplicate,FAB,Fabric,software,ChristopherFerris,,,Low,Done,schristie,schristie,schristie,1/24/2018 21:07,4/21/2018 12:27,4/26/2018 6:50,4/20/2018 22:09,,,,,v1.2,,fabric-examples,,,,0,,,,,"Running 'make' in examples/cluster, followed by 'build/compose-up.sh' generates a client.config file with all of the relevant keys for interacting with the generated docker-compose deployment. Specifically, it generates an identity [Admin@org1.net|mailto:Admin@org1.net] for use when interacting with chaincode deployed on the network.

However, instead of using the keys generated for that identity, it uses the server certs.

compose-up.sh needs to be fixed to use the correct keys for the [Admin@org1.net|mailto:Admin@org1.net] identity.

 

Changeset with possible fix: [https://gerrit.hyperledger.org/r/#/c/17925/]

This patch is untested, because I can't get the cluster example to work on the master branch; it worked in a previous version however.

May also be resolved by: [https://gerrit.hyperledger.org/r/#/c/12159/]

However, inspecting the relevant artifacts reveals that they have different contents, so they are not equivalent solutions.",,18000,3600,,0%,18000,3600,,,,,,,,,,,,,,,,,,,0|i02225:,,,,,,denyeart,greg.haskins,schristie,,,,,,,,,13/Feb/18 6:59 PM;Clayton Sims;Do you have an eta to fix this?,"13/Feb/18 10:32 PM;schristie;Sorry. I have a simple patch that fixes this, but I didn't push it because I was unable to test against the latest head last time I tried.

I'll try again this week, and maybe push the patch anyway.","20/Feb/18 8:40 PM;denyeart;[~greg.haskins] Could you look at the two changesets in the Description?  Which direction do you think we should go with this one?

If not settled this week we'll defer to 1.2.","20/Feb/18 9:05 PM;greg.haskins;I believe this is already fixed in the (yet to be merged) CR 12159

https://gerrit.hyperledger.org/r/c/12159/",,,,,,,,,,,,,,,,,,
fabric-ca swagger doc should use recursive reference for affiliation info,FAB-7894,27058,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,skarim,smithbk,smithbk,1/25/2018 13:19,2/9/2018 11:44,4/26/2018 6:50,2/9/2018 11:44,,,,,v1.1,,fabric-ca,,,,0,,,,,"Since affiliation responses are recursive, the swagger doc needs to use references.
This is also useful to remove duplication and so the swagger doc could be cleaned up considerably.

See http://docs.reprezen.com/swagger_normalizer/#recursive-references and https://swagger.io/docs/specification/using-ref/ as a start",,,,,,,,,,,,,,,,,,,,,,,,,,0|i0223p:,,,,,,skarim,smithbk,,,,,,master,,,TRUE,05/Feb/18 3:39 PM;Clayton Sims;eta 2/5,"05/Feb/18 10:36 PM;skarim;https://gerrit.hyperledger.org/r/#/c/17563/

I think there is an issue with Swagger editor, it does not resolve recursive references correctly and displays 'undefined'.

https://stackoverflow.com/questions/36866035/how-to-refer-to-enclosing-type-definition-recursively-in-yaml-swagger-io",,,,,,,,,,,,,,,,,,,,
Directory not clean after tests have run,FAB-7938,27116,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,david_dornseifer,david_dornseifer,david_dornseifer,1/27/2018 10:21,1/30/2018 7:07,4/26/2018 6:50,1/30/2018 7:07,,,,,,,fabric-sdk-py,,,,0,,,,,After make check has been executed the directory is not clean any more ,,,,,,,,,,,,,,,,,,,,,,,,,,0|i022g5:,,,,,,david_dornseifer,,,,,,,master,,,TRUE,27/Jan/18 10:33 AM;david_dornseifer;https://gerrit.hyperledger.org/r/17267,,,,,,,,,,,,,,,,,,,,,
Returned err of gzip/tar writer should be checked,FAB-7963,27230,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,mastersingh24,guoger,guoger,1/30/2018 3:58,4/12/2018 13:00,4/26/2018 6:50,4/12/2018 13:00,,,,,v1.2,,fabric-peer,,,,0,,,,,"Returned err of gzip/tar should be checked in order to fail early. e.g. https://github.com/hyperledger/fabric/blob/master/core/chaincode/platforms/golang/platform.go#L469-L470

Not sure if we should use {{defer}} here though..",,,,,,,,,,,,,,,,,,,,,,,,,,0|i022od:,,,,,,denyeart,greg.haskins,guoger,mastersingh24,,,,master,,,TRUE,30/Jan/18 3:59 AM;guoger;cc [~greg.haskins],"30/Jan/18 12:33 PM;greg.haskins;Agree with error checking.  I think the defer is not strictly necessary though.  IIUC, the .Close() only forces the rendering of the data to the buffer, which is only needed in the success path.  The resources themselves (the buffer and the writers) will be garbage collected either way.","14/Feb/18 4:26 PM;denyeart;[~greg.haskins] Will you be able to get to this within a week?  If not, please either unassign yourself or move to Fix Version v1.2.",07/Apr/18 4:08 PM;mastersingh24;https://gerrit.hyperledger.org/r/20287,,,,,,,,,,,,,,,,,,
"failed node SDK test in vagrant, node version is not passed along to PATH",FAB-7982,27260,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,Low,,scottz,scottz,scottz,1/31/2018 3:07,3/16/2018 16:46,4/26/2018 6:50,,,,,,v1.2,,fabric-build,fabric-quality,,,0,,,,," 

 {{Project is now using node v8.9.1 (npm v5.5.1)}}
 {{npm version ======>}}
 {{5.5.1}}
 {{node version =======>}}
 {{v8.9.1}}

 

After ""make pre-setup"" in fabric-test, inside Vagrant, I see it says node version is 8.9.1, but not when I see it.
 {{ubuntu@hyperledger-devenv:30dd68f:/opt/gopath/src/github.com/hyperledger/fabric-test$ npm --version}}
 {{5.3.0}}
 {{ubuntu@hyperledger-devenv:30dd68f:/opt/gopath/src/github.com/hyperledger/fabric-test$ node --version}}
 {{v8.4.0}}

 

It is not set in env after installation script is done. In vagrant file install_nvm.sh we set the version to 8.4

[https://github.com/hyperledger/fabric/blob/master/devenv/install_nvm.sh]

It seems we need to push a new vagrant image.

It also seems the fabric-test/pre_setup.sh script (which executes: nvm install 8.9.4) seems to be effective ONLY WITHIN that shell and not in the environment calling that script, so we may have to execute those commands from the pre_setup.sh script to execute them inline in the Makefile when building target pre-setup.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i022vp:,,,,,,scottz,,,,,,,,,,,"27/Feb/18 12:53 AM;scottz;A workaround exists - to execute the installation steps on command line instead of ""make pre-setup"". Moving to lower priority.",,,,,,,,,,,,,,,,,,,,,
Restore properly the log backend in gossip state transfer test,FAB-8065,27418,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,yacovm,yacovm,yacovm,2/5/2018 13:23,2/6/2018 6:55,4/26/2018 6:50,2/6/2018 6:55,,,,,,,fabric-gossip,,,,0,,,,,"The test TestHaltChainProcessing attempts to restore the log backend by overriding the logger, but the function that creates the logger, caches previous logger instances by the package name. 

Even though we can override the logger instance with a new package name, it is probably more correct to overwrite the backend itself. ",,,,,,,,,,,,,,,,,,,,,,,,,,0|i023ot:,,,,,,yacovm,,,,,,,master,,,TRUE,05/Feb/18 1:25 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/17529/,,,,,,,,,,,,,,,,,,,,,
If Docker fails make all will fail until manually resolved,FAB-8197,27606,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,Low,,,satchell,satchell,2/10/2018 7:49,4/10/2018 12:34,4/26/2018 6:50,,,,,,v1.2,,fabric-build,,,,0,,,,,"A new developer checking out fabric code for the first time will follow the documentation at [http://hyperledger-fabric.readthedocs.io/en/release/dev-setup/build.html]

If they have not configured their user into the Docker group, the build will fail:
{code:java}
~/go/src/github.com/hyperledger/fabric$ make all
docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post http://%2Fvar%2Frun%2Fdocker.sock/v1.26/containers/create: dial unix /var/run/docker.sock: connect: permission denied.
See 'docker run --help'.
Makefile:245: recipe for target 'build/docker/gotools' failed
make: *** [build/docker/gotools] Error 126
{code}
Once this occurs, even after Docker is fixed, make all will continue to fail indefinitely with the following error:
{code:java}
~/go/src/github.com/hyperledger/fabric$ cp build/docker/gotools/bin/protoc-gen-go 
build/bin/chaintool build/goshim.tar.bz2 build/image/ccenv/payload
cp: cannot stat 'build/docker/gotools/bin/protoc-gen-go': No such file or directory
Makefile:263: recipe for target 'build/image/ccenv/payload' failed
make: *** [build/image/ccenv/payload] Error 1
{code}
The user must manually delete the gotools folder and then run make all in order for it to be successful:
{code:java}
~/go/src/github.com/hyperledger/fabric$ rm -rf build/docker/gotools/
~/go/src/github.com/hyperledger/fabric$ make all
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0|i024r1:,,,,,,ChristopherFerris,denyeart,mastersingh24,sanchezl,satchell,sykesm,,,,,,14/Feb/18 7:10 PM;denyeart;[~lehors] This looks like the kind of challenge you enjoy... could you take a look and provide your opinion?,"15/Feb/18 9:09 PM;sanchezl;[~satchell], {{make clean all}} would be appropriate in this situation.

It will never be perfect, as the Docker images are not files that {{make}} can examine the existence of or the timestamp on. There are many situations where you will just have to clean the build/images directory to get your docker image rebuilt.

[~lehors]: That said, we might be able improve this a little bit based on the pattern we use for the other docker images:
 # Move the recipe of the {{build/docker/gotools}} target to a new {{build/docker/gotools/$(DUMMY)}} target and add a final {{touch @}} command to the recipe.
 # Make the {{build/docker/gotools}} target depend on the {{build/docker/gotools/$(DUMMY)}} and leave it's recipe empty.

With these changes, the {{build/docker/gotools/$(DUMMY)}} file would of not been created the first time around and the {{build/docker/gotools/$(DUMMY)}} target would of been re-run to create the gotools image.",22/Feb/18 7:10 PM;mastersingh24;Note:  we need to cleanup the overall make process in any case ... we should be able to use the go toolchain locally to build things.,05/Apr/18 8:33 PM;ChristopherFerris;[~sykesm] did your cleanup of gotools address this?,"10/Apr/18 12:32 PM;sykesm;[~ChristopherFerris] I don't believe any of my changes would resolve this as I didn't change the docker targets. The go tools are built for native execution and, to preserve previous behavior, installed to $GOPATH/bin (with all of the assumptions around a single path element in GOPATH). The changes simply moved the makefile for the tools out of the gotools directory and to a top level file that's included into the Makefile.

I agree with [~mastersingh24] that we should do what we can to move to a local build process that is less dependent on docker.",,,,,,,,,,,,,,,,,
fabric-ca intermediate CA 1.0 -> 1.1 fails to migrate DB,FAB-8227,27651,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,rennman,rennman,rennman,2/12/2018 19:54,2/13/2018 19:08,4/26/2018 6:50,2/13/2018 19:08,,,,,WON'T FIX,,fabric-ca,,,,0,,,,,"I have v1.0 clustering setup like the following:
{code:java}
        haproxy:7054   haproxy:8054
       /            \   /         \
      /              \ /           \
     /               /\             \
    /               /  \             \
  RootCA:1<===InterCA:1 RootCA:2<===InterCA:2
  |    |      |      |  |    |      |     |
 ca1   ca2    ca1   ca2 ca1  ca2    ca1   ca2
 \     \      \      \ /    /      /      /
  \     \      \     /\    /      /      /
   \     \      \   /  \  /      /      /
    \     \      \ /    \/      /      /
     \     \      \     / \    /      /
      \     \    / \   /   \  /      /
       \     \  /   \ /     \/      /
        \     \/     \      /\     /
         \___/ \___ / \___ /  \___/
         |Rt | |Rt |  |Int|   |Int|
         |DB | |DB |  |DB |   |DB |
         | 1 | | 2 |  | 1 |   | 2 |
         |___| |___|  |___|   |___|
{code}
I start the servers and register/enroll/revoke a number of users.
 I then re-start one of the intermediate CAs as a 1.1 server:
{code:java}
16544 pts/2 Sl 0:00 /usr/local/bin/fabric-ca-server start --address 0.0.0.0 --port 18055 --config /tmp/cluster/int/runFabricCaFvt.yaml --cafiles /tmp/cluster/int/ca/ca1/fabric-ca-config.yaml,/tmp/cluster/int/ca/ca2/fabric-ca-config.yaml

kill  16544

/usr/local/bin/fabric-ca-server start --address 0.0.0.0 --port 18055 --config /tmp/cluster/int/runFabricCaFvt.yaml --cafiles /tmp/cluster/int/ca/ca1/fabric-ca-config.yaml,/tmp/cluster/int/ca/ca2/fabric-ca-config.yaml

{code}
Though the log hints at an attempt at migration:
{code:java}
2018/02/12 19:37:15 [DEBUG] Update MySQL schema if using outdated schema
2018/02/12 19:37:16 [DEBUG] Initializing identity registry
2018/02/12 19:37:16 [DEBUG] Initialized DB identity registry
2018/02/12 19:37:16 [DEBUG] DB: Get properties [identity.level affiliation.level certificate.level]
2018/02/12 19:37:16 [DEBUG] Checking database levels 'map[affiliation.level:0 certificate.level:0 identity.level:0]' against server levels '&{Identity:1 Affiliation:1 Certificate:1}'
...
2018/02/12 19:37:16 [DEBUG] Migrating user 'admin' to level 1
{code}
The DB is unchanged:
{code:java}
Users
id|type|affiliation|attributes|state|max_enrollments|
admin|client|[{""name"":""hf.Registrar.DelegateRoles"",""value"":""client,user,validator,auditor""},{""name"":""hf.Revoker"",""value"":""1""},{""name"":""hf.GenCRL"",""value"":""1""},{""name"":""hf.Registrar.Roles"",""value"":""client,user,peer,validator,auditor,ca""}]|1|-1||

Affiliations:
name|prekey||
bank_a.department1|bank_a||

{code}
If I restart one of the RootCA servers as 1.1, then the DB is actually migrated:
{code:java}
2018/02/12 19:39:22 [DEBUG] DB: Get properties [identity.level affiliation.level certificate.level]
2018/02/12 19:39:22 [DEBUG] Checking database levels 'map[affiliation.level:0 certificate.level:0 identity.level:0]' against server levels '&{Identity:1 Affiliation:1 Certificate:1}'
...
2018/02/12 19:39:22 [DEBUG] Migrating user 'admin' to level 1
2018/02/12 19:39:22 [DEBUG] Modify Attributes: [{Name:hf.Registrar.Attributes Value:* ECert:false}]
2018/02/12 19:39:22 [DEBUG] Attribute request: {Name:hf.Registrar.Attributes Value:* ECert:false}
2018/02/12 19:39:22 [DEBUG] Adding '{Name:hf.Registrar.Attributes Value:* ECert:false}' as new attribute


id|type|affiliation|attributes|state|max_enrollments|level
admin|client|[{""name"":""hf.Revoker"",""value"":""1""},{""name"":""hf.GenCRL"",""value"":""1""},{""name"":""hf.Registrar.Roles"",""value"":""client,user,peer,validator,auditor,ca""},{""name"":""hf.Registrar.DelegateRoles"",""value"":""client,user,validator,auditor""},{""name"":""hf.Registrar.Attributes"",""value"":""*""}]|1|-1|1|

Affiliations:
id|name|prekey|level
2|bank_a.department1|bank_a|0
{code}",,,,,,,,,,,,,12/Feb/18 7:54 PM;rennman;intMig.log;https://jira.hyperledger.org/secure/attachment/14574/intMig.log,12/Feb/18 7:54 PM;rennman;rootMig.log;https://jira.hyperledger.org/secure/attachment/14573/rootMig.log,,,,,,,,,,,,0|i0250l:,,,,,,rennman,,,,,,,,,,,"13/Feb/18 5:07 PM;rennman;The script was inspecting the root DB twice, instead of checking each DB once, so closing this as user error.",,,,,,,,,,,,,,,,,,,,,
[sdk-node] Broken link in README.md,FAB-8308,27754,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,yuki-kon,yuki-kon,yuki-kon,2/14/2018 21:40,2/14/2018 22:30,4/26/2018 6:50,2/14/2018 22:30,v1.1.0-alpha,,,,v1.1,,fabric-sdk-node,,,,0,,,,,"The link to fabric-ca is broken in README.md of fabric-sdk-node.
 
This is the current broken link.
http://hyperledger-fabric.readthedocs.io/en/latest/Setup/ca-setup.html
 
The link should be updated like the below.
http://hyperledger-fabric-ca.readthedocs.io/en/latest/users-guide.html
 
",fabric-sdk-node 35cde418724af4693e51a40cad15a07a14d313fb,,,,,,,,,,,,,,,,,,,,,,,,,0|i025kd:,,,,,,yuki-kon,,,,,,,master,,,TRUE,14/Feb/18 9:55 PM;yuki-kon;CR is posted here. https://gerrit.hyperledger.org/r/#/c/17927/,,,,,,,,,,,,,,,,,,,,,
"""ERROR !!! ORG Unknown"" in fabric-samples byfn test",FAB-8374,27836,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,Ratnakar,rameshthoomu,rameshthoomu,2/19/2018 3:00,2/20/2018 20:03,4/26/2018 6:50,2/20/2018 19:42,,,,,v1.1,,fabric-samples,,,,0,fabric-samples,,,,"Observed below error message on console log, while running *""./byfn.sh up -t 60""* in fabric-samples on latest commit repository.
{code:java}
00:18:23.559 Build your first network (BYFN) end-to-end test
00:18:23.559 
00:18:23.563 Channel name : mychannel
00:18:23.568 Creating channel...
00:18:23.569 ================== ERROR !!! ORG Unknown =================={code}
https://jenkins.hyperledger.org/view/fabric-samples/job/fabric-byfn-verify-x86_64/213/console",,,,,,,,,,,,,,,,,,,,,,,,,,0|i0261p:,,,,,,denyeart,rameshthoomu,Ratnakar,,,,,,,,,20/Feb/18 7:41 PM;Ratnakar;This has been fixed with [https://gerrit.hyperledger.org/r/#/c/18075/],20/Feb/18 7:42 PM;Ratnakar;changing the priority to *Low* as this doesn't impact the test but an error message is shown in the logs,"20/Feb/18 7:44 PM;denyeart;[~Ratnakar] If it is fixed, why does it still print the error message?  Do you know the fix?",20/Feb/18 8:03 PM;Ratnakar;[~denyeart] The above said fix been merged couple of hours ago. with this [change|https://github.com/hyperledger/fabric-samples/commit/41e144f3278c455c1068d5571ea89c1e4e7560f4#diff-425d1f9adb6c14ac446745318342a78cR36]. The error messages won't be displayed any more with latest code.,,,,,,,,,,,,,,,,,,
Bad version control for baseos and baseimage,FAB-8528,28015,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,troyronda,meinvzou,meinvzou,2/26/2018 7:14,3/20/2018 19:33,4/26/2018 6:50,3/20/2018 19:33,,,,,,,fabric-sdk-go,,,,0,,,,,"Though it is said to change the baseimage and baseos version to 0.4.6 in the latest fabric-sdk-go, while doing 'make integration-test', using 'docker ps' can view that the container is still using the 0.4.2 version.

There are several places setting baseos and baseimage with different version.

Seemed that the version control of baseos and baseimage is bad?",,,,,,,,,,,,,,,,,,,,,,,,,,0|i0272d:,,,,,,meinvzou,troyronda,,,,,,,,,,"27/Feb/18 3:30 PM;troyronda;The default make integration-tests currently targets the stable fabric version 1.0.x. I haven't personally tested base image 0.4.6 against 1.0.x (so I didn't update the tests for 1.0.x).

You can use make
integration-tests-prerelease to test against the latest prerelease tag of fabric 1.1. That version is testing against 0.4.6.",20/Mar/18 6:37 PM;troyronda;part of https://gerrit.hyperledger.org/r/c/19487/,,,,,,,,,,,,,,,,,,,,
[Fabcar] Failed at the pkcs11js@1.0.13 install script 'node-gyp rebuild',FAB-8538,28028,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,thejibz,thejibz,2/26/2018 13:58,3/6/2018 13:38,4/26/2018 6:50,2/26/2018 21:16,v1.0.4,,,,,,fabric-samples,fabric-sdk-node,,,0,centos,fabcar,node-gyp,npm,"Hello,

When following the FabCar tutorial here [https://hyperledger-fabric.readthedocs.io/en/latest/write_first_app.html] I got this stack when doing ""npm install"":
{code:java}
npm ERR! pkcs11js@1.0.13 install: `node-gyp rebuild`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the pkcs11js@1.0.13 install script 'node-gyp rebuild'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the pkcs11js package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     node-gyp rebuild
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs pkcs11js
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls pkcs11js
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     /workspace/others/hl_fabric/fabric-samples/fabcar/npm-debug.log
npm ERR! code 1{code}
I had to manually follow this steps to make it works (maybe some are optionals):
 * npm install -g node-gyp
 * npm config set python /usr/bin/python
 * yum install gcc-c++

 ","{code:java}
VM: CentOS Linux release 7.4.1708 (Core)


Python: 2.7.5


NPM: 3.10.10


NodeJs: v6.12.3{code}",,,,,,,,,,,,,,,,,,,,,,,,,0|i02759:,,,,,,denyeart,harrisob@us.ibm.com,mariuslp,thejibz,,,,,,,,26/Feb/18 8:17 PM;denyeart;[~harrisob@us.ibm.com] What's your opinion?,26/Feb/18 9:04 PM;harrisob@us.ibm.com;We are using a much newer version of Node and NPM ... 6.9.5 / 3.10.10 or 8.9.4 / 5.6.0,"26/Feb/18 9:15 PM;denyeart;Ok, closing.","01/Mar/18 6:57 PM;mariuslp;I have exactly the same problem.

I started with node 8.9.4/NPM 5.6.0, then downgraded to Node 6.13/NPM 3.10.10 to match the doc requirements ([http://hyperledger-fabric.readthedocs.io/en/release/prereqs.html#node-js-runtime-and-npm]), but I was not more successful. Manually downloading pkcs11js in `node_modules/` did not solve the issue either.

I'm on Windows 10, using Docker tools 18.02.0-ce. Here's the error message when using NPM 8.9
{noformat}
gyp ERR! build error
gyp ERR! stack Error: `C:\Program Files (x86)\MSBuild\14.0\bin\msbuild.exe` failed with exit code: 1
gyp ERR! stack     at ChildProcess.onExit (C:\Users\Marius\AppData\Roaming\npm\node_modules\npm\node_modules\node-gyp\lib\build.js:258:23)
gyp ERR! stack     at emitTwo (events.js:126:13)
gyp ERR! stack     at ChildProcess.emit (events.js:214:7)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:198:12)
gyp ERR! System Windows_NT 10.0.16299
gyp ERR! command ""C:\\Program Files\\nodejs\\node.exe"" ""C:\\Users\\Marius\\AppData\\Roaming\\npm\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js"" ""rebuild""
gyp ERR! cwd C:\Users\Marius\fabric-samples\fabcar\node_modules\pkcs11js
gyp ERR! node -v v8.9.4
gyp ERR! node-gyp -v v3.6.2
gyp ERR! not ok
npm WARN fabcar@1.0.0 No repository field.

npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! pkcs11js@1.0.13 install: `node-gyp rebuild`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the pkcs11js@1.0.13 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     C:\Users\Marius\AppData\Roaming\npm-cache\_logs\2018-03-01T18_44_38_344Z-debug.log

{noformat}
During the install, error messages where saying that files where missing all looking like:
{noformat}
C:\Program Files (x86)\Windows Kits\10\Include\10.0.10240.0\ucrt\corecrt.h(10): fa
tal error C1083: Impossible d'ouvrir le fichier include : 'vcruntime.h' : No such
file or directory (..\src\const.cpp) [C:\Users\Marius\fabric-samples\fabcar\node_m
odules\pkcs11js\build\pkcs11.vcxproj]
{noformat}
I can't reproduce exactly the solution provided in the first post given I'm on windows, but the first part did not solve it for me.","01/Mar/18 9:20 PM;thejibz;Marius, I think that in my case the most important action was the ""yum install gcc-c++ "" in order to compile the pkcs11 module, thanks to the gcc compiler. Your case seems very similar regarding the issue of compiling a C+ module.

In your place, I would double check my install of C++ compiler for Windows (Visual Studio C++ ?). If it still fail, maybe going as far as to install a tool like [mobaXterm|https://mobaxterm.mobatek.net/] and installing the [gcc plugin|https://mobaxterm.mobatek.net/plugins.html] ! (I like mobaxterm very much and there is a free version).","04/Mar/18 11:13 PM;mariuslp;Thanks for you help Jean-Baptiste.

I think my compiler is up to date and working well (C/C++ version 19.12.25835).

However, I noticed that the build failed when I was using {{npm install}}, but when I clone {{pkcs11js}} in {{node_modules}}, remove the {{.git/}} subfolder and launch {{node-gyp configure}} (or rebuild) in pkcs11js folder, everything works fine. I have no problem when using yarn in place of npm also. So it's more of a node bug?

Now however I can't run {{node enrollAdmin.js}} for some reason ({{Error: Calling enrollment endpoint failed with error [Error: connect ECONNREFUSED 127.0.0.1:7054]}}), so I'm not sure everything is actually settled for this problem... Plus, I sometimes get the output {{npm WARN fabcar@1.0.0 No repository field.}} when running npm install. Don't really know what this means.

I think I'll just give up and start again in a Linux VM tomorrow.","06/Mar/18 1:12 PM;mariuslp;I started again on Linux, and indeed I needed (even with node8/npm5) to install a compiler ({{apt-get install g++}} being on Debian). Thanks Jean-Baptiste!

I still have no idea about what was wrong with my Windows install though, but oh well.","06/Mar/18 1:38 PM;thejibz;Great news ! Happy to help.

PS: In case you are french too, ""il faut se serrer les coudes ;)""",,,,,,,,,,,,,,
[basic-network] peer0.org1.example.com service must wait for couchdb service,FAB-8541,28033,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,thejibz,thejibz,2/26/2018 16:24,2/27/2018 8:54,4/26/2018 6:50,2/26/2018 17:50,v1.0.4,,,,,,fabric-examples,,,,0,basic-network,couchdb,docker-compose,,"Hello,

When spinning up the docker-compose file located at ""fabric-samples/basic-network/docker-compose.yml"", the  ""peer0.org1.example.com"" container must wait for couchdb container to be responding on the port 5984 but it isn't currently.

It's not enough to set the depend_on property in this case (because it is merely waiting for the container to boot but not for the couchdb process to be alive and responding). Two solutions I see:
 * Make the peer0.org1.example.com service fault tolerant by making it retry X times to connect on the couchdb before giving up.
 * Use a kind of ""wait-for-it"" script for the command of the peer0.org1.example.com (cf. [https://github.com/vishnubob/wait-for-it)] that wait on the couchdb to be available.

Regards,

JB","VM: CentOS Linux release 7.4.1708 (Core)


Python: 2.7.5


NPM: 3.10.10


NodeJs: v6.12.3",,,,,,,,,,,,,,,,,,,,,,,,,0|i02765:,,,,,,denyeart,thejibz,,,,,,,,,,"26/Feb/18 5:49 PM;denyeart;When peer starts up, it uses the retry strategy as mentioned in your first bullet.

This is configurable here:

[https://github.com/hyperledger/fabric/blob/master/sampleconfig/core.yaml#L571-L572]

Also implemented in 1.0.x release branch.

The time between each retry is doubled, to ensure a fast startup for most scenarios, but ability to wait increasingly longer times if couchdb doesn't respond quickly.

In your peer logs, you can often see that it takes one or two retries before the peer resumes startup.

Marking as Done.","27/Feb/18 8:54 AM;thejibz;Ok thank you, I was following the tutorial and used some ""startFabric.sh"" script that exit with error if the container don't start fast enough.",,,,,,,,,,,,,,,,,,,,
Not able to update systemchannel with a new org,FAB-8556,28061,Bug,Unverified,FAB,Fabric,software,ChristopherFerris,,,Low,,kchristidis,vu3mmg,vu3mmg,2/27/2018 14:45,4/25/2018 11:25,4/26/2018 6:50,,v1.1.0-preview,,,,,,fabric-orderer,fabric-sdk-node,,,0,,,,,"Facing issues to add a new organization at consortium level to the system channel, {{testchainid}}.

I am able to update fields such as max_message_count as given below:

{{updated_config_json.channel_group.groups.Orderer.values.BatchSize.value.max_message_count += 100}}

But not able to update the consortium with a new Org as given below:

{{channel_group.groups.Consortiums.groups.SampleConsortium.groups}}

{{[""Org2MSP""]=org2}}

Orderer log: https://hastebin.com/jitebutasa.go

New config JSON. Please look for Org2MSP: https://hastebin.com/uyiwudigad.json

Steps to reproduce the issue:
# Clone https://github.com/vu3mmg/fabric-samples
# Go to fabcar directory 
# {{npm install}}
# {{./startFabric.sh}}
# {{node configUpdate.js}}  - this should add a new org to the consortium, but is giving error

It should do config update for {{testchainid}} channel.

The script to update maxmessage count {{node configUpdateMaxMsgCount.js}} is working.

The script {{node pullconfig.js}}  will help you dispaly existing config.

Make sure that configtxlator: Version: 1.1.0-preview is running.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,0|i027bh:,,,,,,denyeart,kchristidis,knagware9,vu3mmg,,,,,,,,27/Feb/18 2:59 PM;denyeart;Reduced to Low since it is likely a usage error.,"27/Feb/18 3:02 PM;vu3mmg;Thank you .

I am not able to understand the issue , why it is happening so .

Thanks in advance for any help ...

 ","28/Feb/18 9:29 AM;denyeart;Not a 1.1 must-fix issue, moving to 1.2 for continued assessment...","28/Feb/18 10:17 AM;vu3mmg;If you could provide me some guidance  , I could put efforts  from my side to fix it, if this is an issue. I have limited knowledge to debug orderer . This one of the reason , why I am not able to understand the root cause .

 

 ",28/Feb/18 12:54 PM;kchristidis;Mahesh: Will do. Haven't looked into it yet.,"28/Feb/18 6:41 PM;kchristidis;Updated the description to make things more legible and removed excessive line breaks.

What version of Fabric did you observe this on?

What's the version of the Node.js SDK that you are using?","01/Mar/18 2:36 AM;vu3mmg;* Node-SDK Fabric client -  ""version"": ""1.0.4""
 * Fabric -  version  docker image - 1.1.0-preview","03/Mar/18 1:59 AM;kchristidis;[~harrisob@us.ibm.com] (whenever you have spare cycles): Is there an easy way for me to get the envelope that is sent by the Node.js SDK here? [https://github.com/vu3mmg/fabric-samples/blob/release/fabcar/configUpdate.js#L194]

How should [~vu3mmg] modify that script so that a serialized representation of that envelope is saved to disk?",07/Mar/18 4:40 AM;vu3mmg;Any clue . Where shall I suspect ? Node SDK or orderer ,"07/Mar/18 2:50 PM;kchristidis;I understand the lack of updates is frustrating, but when I have an update, I will post here. Currently waiting to hear back from Bret.","07/Mar/18 3:47 PM;kchristidis;Until we hear back from Bret, [~vu3mmg] there is a way to figure out if it's an orderer issue.

Attempt to add a new org to the consortium group using the {{peer}} CLI, using a process similar to the one described here: http://hyperledger-fabric.readthedocs.io/en/latest/channel_update_tutorial.html#bring-org3-into-the-channel-manually

If that process succeeds, then it's definitely not an orderer issue.",10/Mar/18 5:44 PM;kchristidis;[~vu3mmg]: Are you able to reproduce this issue using the {{peer}} CLI?,13/Mar/18 5:31 AM;vu3mmg;[~kchristidis] Trying . I failed . Will try again and post the logs,25/Apr/18 11:25 AM;kchristidis;Update on this?,,,,,,,,
failing at parsing network-config.json,FAB-8596,28124,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,rickr,huy.tranibm,huy.tranibm,3/1/2018 1:11,4/8/2018 21:32,4/26/2018 6:50,4/8/2018 21:32,v1.1.0-alpha,,,,,,fabric-sdk-java,,,,0,,,,,"Java SDK 1.1.0alpha is failing to parse network-config.json at 2 points.

For CertificateAuthority objects, the specific registrar object value is an Array that holds the registrar objects of enrollmentID and enrollmentSecret. This causes the enrollId and enrollSecret to be null when created inside the NetworkConfig.java createCA method specifically at the getJsonValueAsObject line 792 because jsonCA.get(""registrar"") returns null. I resolved this issue on my end by removing the brackets [ ]from the registrar property in the json file as this makes more sense because there can't be multiple registrars. I have noticed this registrar property as an array in the network-config.json and also in the IBM Blockchain Service servicecredentials.json

gerrit https://gerrit.hyperledger.org/r/#/c/20295/",,,,,,,,,,,,,,,,,,,,,,,,,,0|i027np:,,,,,,huy.tranibm,rickr,,,,,,master,,,TRUE,"07/Apr/18 11:12 PM;rickr;Registrar was defined as a single value but it is possible to have many. 
Fixed it by being flexible to support the defnition either way.

Returned now registars that are defined on the CAs. They shouldn't have Peer admin certs/keys either.

Delayed creation of CAs in context of the organization they are defined in so registars are created with a valid mspID 

Allowed UserIno to be used directly by API by implementing User ,  Registars can also now be used.",,,,,,,,,,,,,,,,,,,,,
Broken Link in Capabilities Doc,FAB-8698,28275,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,nickgaski,nickgaski,nickgaski,3/7/2018 17:28,3/7/2018 21:01,4/26/2018 6:50,3/7/2018 21:01,v1.1,v1.2,,,v1.1,v1.2,fabric-docs,,,,0,Documentation,,,,minor fix for a broken link which arose due to naming alterations. ,,0,0,,0%,0,0,,,,,,,,,,,,,,,,,,,0|i028jx:,,,,,,nickgaski,,,,,,,release-1.1,master,,TRUE,,,,,,,,,,,,,,,,,,,,,,
Orderer cannot be added to multiple channels using NetworkConfig,FAB-8712,28289,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,,huy.tranibm,huy.tranibm,3/8/2018 2:58,3/8/2018 4:39,4/26/2018 6:50,3/8/2018 4:39,v1.1.0-alpha,,,,Not a Bug,,fabric-sdk-java,,,,0,,,,,"Hi, I am using the network-config.json configuration that comes with the 1.1.0alpha. It ready has the channel object foo in it. I am trying to use the NetworkConfig as a way to quickly access my network information.

The error I am getting is:

Caused by: org.hyperledger.fabric.sdk.exception.InvalidArgumentException: Can not add orderer orderer.example.com to channel bar because it already belongs to channel foo.

 

I made some functions based off of the End2endIT.java to create and join peers to a channel. I used the NetworkConfig that uses the profile from network-config.json only to access the peers/orderers endpoints and get the admin certificates.

 

I tried to comment out the fooChannel.shutdown in the End2endIT.java test to see if it throws the same error but it doesnt and goes on to creating channel bar also.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i028mt:,,,,,,huy.tranibm,,,,,,,,,,,"08/Mar/18 3:06 AM;huy.tranibm;Im sorry now i know what i did wrong, networkconfig created the Orderer/Peer object to be in a certain channel. If i want to them to be in another channel then i need to create another instance with a different channel name but same url, properties and name.  Please close this issue.",,,,,,,,,,,,,,,,,,,,,
[sdk-node] typo in log messages,FAB-8734,28322,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,yuki-kon,yuki-kon,yuki-kon,3/8/2018 21:52,3/9/2018 17:24,4/26/2018 6:50,3/9/2018 17:24,v1.0.0-rc1,,,,v1.1,,fabric-sdk-node,,,,0,,,,,"fabric-sdk-node has typo in log messages.
Log message displays the name of function. However, it doesn't match the actual name.

The following lines have this problem:

- fabric-sdk-node/fabric-client/lib/Client.js
{noformat}
updateChannel(request) { 
                (snip)
                logger.debug('createChannel - have envelope');
}
{noformat}

- fabric-sdk-node/fabric-client/lib/Channel.js
{noformat}
queryBlock(blockNumber, target, useAdmin) {
                (snip)
                logger.debug('queryBlockByHash - looking at block :: %s',block.header.number);
}
{noformat}

Log messages should be modified correctly.
",commit: 000526de6fb55abcec42e28c575024ceba66033c,,,,,,,,,,,,,,,,,,,,,,,,,0|i028t1:,,,,,,yuki-kon,,,,,,,master,,,TRUE,08/Mar/18 11:18 PM;yuki-kon;CR is posted here: https://gerrit.hyperledger.org/r/#/c/18909/,,,,,,,,,,,,,,,,,,,,,
Fabric - UT Failure,FAB-8739,28333,Bug,Backlog,FAB,Fabric,software,ChristopherFerris,,,Low,,,harsha544,harsha544,3/9/2018 9:40,4/24/2018 9:57,4/26/2018 6:50,,,,,,v1.2,,fabric-build,,,,0,,,,,"One of fabric UT irregularly fails at :- 



[33munit-tests_1 |[0m panic: runtime error: invalid memory address or nil pointer dereference [33munit-tests_1 |[0m panic: runtime error: invalid memory address or nil pointer dereference [33munit-tests_1 |[0m [signal SIGSEGV: segmentation violation code=0x1 addr=0x30 pc=0x10bd6e34] [33munit-tests_1 |[0m [33munit-tests_1 |[0m goroutine 7596 [running]: [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode.(*Handler).handleGetHistoryForKey.func1.1(0xc424aa0400, 0xc424481260, 0xc424701ed8) [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:1266 +0x64 [33munit-tests_1 |[0m panic(0x10ce9980, 0x112d0ff0) [33munit-tests_1 |[0m /opt/go/src/runtime/panic.go:491 +0x244 [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode.(*Handler).cleanupQueryContext(0xc424aa0400, 0xc42365d320, 0xc422407260, 0x24) [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:232 +0x9c [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode.(*Handler).handleGetHistoryForKey.func1.2(0xc4244ace00, 0x72, 0x80, 0x112eaa40, 0xc42368de00, 0x10e224e2, 0x26, 0xc4245222b0, 0x1, 0x1) [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:1278 +0x1c0 [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode.(*Handler).handleGetHistoryForKey.func1(0xc424aa0400, 0xc424481260) [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:1320 +0x688 [33munit-tests_1 |[0m created by github.com/hyperledger/fabric/core/chaincode.(*Handler).handleGetHistoryForKey [33munit-tests_1 |[0m github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:1249 +0x54 [33munit-tests_1 |*[0m FAIL github.com/hyperledger/fabric/core/chaincode 373.600s*

OS :- Ubuntu 1604,
Go Version :- 1.9.2

Arch:- ppc64le

Git Commit a409d1fd15037ebab96f3b5de6bf628e25785178


Enclosed the complete logs, for further analysis.","OS :- Ubuntu 1604,

Go Version :- 1.10,

Arch:- ppc64le

Git Commit 370f56fe7ed9a29ba0fc361c56d15c1296877fdc",,,,,,,,,,,,09/Mar/18 9:39 AM;harsha544;log.txt;https://jira.hyperledger.org/secure/attachment/14750/log.txt,,,,,,,,,,,,,0|i028v9:,,,,,,ChristopherFerris,denyeart,harsha544,Senthil1,,,,,,,,14/Mar/18 1:16 AM;denyeart;[~muralisr] [~Senthil1] Any ideas?,"14/Mar/18 2:38 PM;Senthil1;[~denyeart] Do we run our build on power8 (ppc64le)? As far as I know, our unit tests are deterministic on zOS and x86. Not sure why it is non-deterministic in ppc64le. As per the log, GetHistoryForKey() at ledger is returning an error. [~manish-sethi] Would it be something related to block store on ppc64le. Anyway, unless we can reproduce the error, we may not be able to debug the issue efficiently. ",05/Apr/18 8:35 PM;ChristopherFerris;Need someone from Power to work this one. Lowered priority.,"06/Apr/18 4:17 AM;harsha544;[~Senthil1] I have enclosed error logs for the UT, in-case you would need access to a Power server I can help you with that.","24/Apr/18 9:57 AM;harsha544;FWIW, I see this issue to be cropping up with go1.10 and on master branch, when on git commit  370f56fe7ed9a29ba0fc361c56d15c1296877fdc , however in next immediate git commit 64c38b0a72b1371f9e022048f7cbcb1c49147234  the package is excluded github.com/hyperledger/fabric/core/chaincode to be run in Unit-Test.",,,,,,,,,,,,,,,,,
BlockDecoderTest  has some assertion error,FAB-8977,28675,Bug,In Progress,FAB,Fabric,software,ChristopherFerris,,,Low,,foam,foam,foam,3/20/2018 12:42,3/20/2018 12:58,4/26/2018 6:50,,,,,,,,fabric-sdk-py,,,,0,python-SDK,,,,BlockDecoderTest assert wrong timestamp and exception,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,0|i02as5:,,,,,,foam,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inconsistent capitalization for organization names read from config,FAB-8983,28682,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,pavan-sk,ga25waq,ga25waq,3/20/2018 14:30,3/22/2018 18:25,4/26/2018 6:50,3/22/2018 18:25,,,,,,,fabric-sdk-go,,,,0,,,,,"The keys of the 'organizations' collection in the SDK config are converted to lower case, while the name of the client organization is not, as it is a value (and not a key).

This leads to some problems, e.g. if one wants to retrieve the 'OrganizationConfig' of the client's organization from the 'NetworkConfig', which is returned as a map with the lower-cased organization names as keys.
Example: the client's organization 'Org1' cannot be found in the map, which only provides a value for the key 'org1'. A manual conversion to lower case is necessary then.

Possible solutions:
- convert all organization names to lower case when initializing the config
- officially recommend to define all organization names in lower case
  (and adapt the exemplary SDK configurations in ./test)",,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzygd:,,,,,,ga25waq,troyronda,,,,,,master,,,TRUE,20/Mar/18 8:52 PM;troyronda;https://gerrit.hyperledger.org/r/c/19507/,20/Mar/18 9:48 PM;troyronda;Merged,,,,,,,,,,,,,,,,,,,,
There are some redundant words on docs,FAB-9176,28906,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,niuzhenguo,niuzhenguo,niuzhenguo,3/27/2018 3:51,4/1/2018 8:48,4/26/2018 6:50,4/1/2018 8:48,,,,,v1.2,,,,,,0,,,,,"docs/source/msp.rst

docs/source/peers/peers.md

docs/source/policies.rst

docs/source/upgrading_your_network_tutorial.rst

 ",,,,,,,,,,,,,,,,,,,,,,,,,,0|i02c19:,,,,,,niuzhenguo,,,,,,,master,,,TRUE,,,,,,,,,,,,,,,,,,,,,,
index.rst should not refer to itself as a toctree entry,FAB-9177,28907,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,rpjday,rpjday,rpjday,3/27/2018 7:03,3/28/2018 23:42,4/26/2018 6:50,3/28/2018 11:05,,,,,,,fabric-docs,,,,0,,,,,"The top-level index.rst file for building the docs contains a reference to itself, ""index"", which causes numerous build warnings, ""WARNING: circular toctree references detected, ignoring: index <- index"". Simply delete that line from index.rst.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i02c1h:,,,,,,ChristopherFerris,rpjday,,,,,,release-1.1,master,,TRUE,28/Mar/18 11:05 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/19793/,,,,,,,,,,,,,,,,,,,,,
Two .rst doc files lack proper indentation for notes.,FAB-9178,28908,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,rpjday,rpjday,rpjday,3/27/2018 7:41,3/28/2018 23:43,4/26/2018 6:50,3/28/2018 11:18,,,,,,,fabric-docs,,,,0,,,,,"Two doc files:
 * channel_update_tutorial.rst
 * error-handling.rst

lack proper indentation for a ""note::"" entity, generating a build warning, so fix the indentation. No other such lack of indentation evident in the doc files.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,0|i02c1p:,,,,,,rpjday,,,,,,,release-1.1,master,,TRUE,,,,,,,,,,,,,,,,,,,,,,
Three .rst doc files have unexpected/erroneous indentation for lists.,FAB-9179,28909,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,Low,,rpjday,rpjday,rpjday,3/27/2018 8:06,3/29/2018 22:54,4/26/2018 6:50,,,,,,v1.1.1,v1.2,fabric-docs,,,,0,,,,,"Three .rst files:
 * msp.rst
 * policies.rst
 * understand_fabcar_network.rst

have erroneous spacing or indentation for lists, which generates build warnings, so fix all three of them.",,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzygi:0iy8i,,,,,,rpjday,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Two files contain named links that should be anonymous links.,FAB-9183,28918,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,rpjday,rpjday,rpjday,3/27/2018 10:33,3/28/2018 23:44,4/26/2018 6:50,3/28/2018 11:21,,,,,,,fabric-docs,,,,0,,,,,"Two doc files:
 * chaincode4ade.rst
 * commands/fabric-ca-commands.rst

contain named links that should clearly be anonymous links, to prevent generating build warnings.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i02c45:,,,,,,rpjday,,,,,,,release-1.1,master,,TRUE,,,,,,,,,,,,,,,,,,,,,,
"Sphinx conf directive ""html_add_permalinks = True"" generates warning.",FAB-9206,28954,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,rpjday,rpjday,rpjday,3/28/2018 9:55,3/29/2018 10:19,4/26/2018 6:50,3/28/2018 11:03,,,,,v1.1.1,v1.2,fabric-docs,,,,0,,,,,"The line in conf.py:

*html_add_permalinks = True*

generates the build warning:

*WARNING: The config value `html_add_permalinks' has type `bool', defaults to `str'.*

There is no need for that line to be there as permalinks are on by default, so that line can just be removed and the warning will go away.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i02cb1:,,,,,,ChristopherFerris,rpjday,,,,,,release-1.1,master,,TRUE,28/Mar/18 11:03 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/c/19855/,,,,,,,,,,,,,,,,,,,,,
"Fix single misspelling of ""certificate"" in logger error.",FAB-9214,28966,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,niuzhenguo,niuzhenguo,niuzhenguo,3/29/2018 7:46,4/2/2018 16:23,4/26/2018 6:50,4/2/2018 16:23,,,,,v1.2,,fabric-peer,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02cd1:,,,,,,niuzhenguo,,,,,,,master,,,TRUE,,,,,,,,,,,,,,,,,,,,,,
"Strange ""Exiting..."" at the end of peer cmd",FAB-9242,29013,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,niuzhenguo,niuzhenguo,niuzhenguo,3/30/2018 2:43,4/3/2018 21:11,4/26/2018 6:50,4/3/2018 21:11,,,,,v1.2,,fabric-peer,,,,0,,,,,"It always prints peer cmd output with ""Exiting..."" at the end, which is a bit strange and we should follow more conventions for cmd.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i02ckt:,,,,,,niuzhenguo,,,,,,,master,,,TRUE,,,,,,,,,,,,,,,,,,,,,,
version flag is not valid for peer subcommands,FAB-9246,29017,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,niuzhenguo,niuzhenguo,niuzhenguo,3/30/2018 7:27,4/7/2018 17:42,4/26/2018 6:50,4/7/2018 17:42,,,,,,,fabric-peer,,,,0,,,,,"The peer currently support both version cmd and flag(global flags), but that flag is not supported by peer subcommands. So we should change version flag to only peer own flag or maybe just clean up the flag and just keep version subcommand.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i02clp:,,,,,,niuzhenguo,,,,,,,master,,,TRUE,,,,,,,,,,,,,,,,,,,,,,
Remove redundant const for same command short and long descriptions,FAB-9261,29049,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,niuzhenguo,niuzhenguo,niuzhenguo,3/31/2018 9:14,4/2/2018 7:29,4/26/2018 6:50,4/2/2018 7:29,,,,,v1.2,,fabric-peer,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02ct1:,,,,,,niuzhenguo,,,,,,,master,,,TRUE,,,,,,,,,,,,,,,,,,,,,,
Remove TODO for KeyStore from core.yaml,FAB-9301,29094,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,niuzhenguo,niuzhenguo,niuzhenguo,4/3/2018 8:16,4/7/2018 17:42,4/26/2018 6:50,4/7/2018 17:42,,,,,v1.2,,,,,,0,,,,,The TODO for KeyStore to ensure it is read with fabric/core/config.GetPath() has done and should be removed.,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02d2t:,,,,,,niuzhenguo,,,,,,,master,,,TRUE,,,,,,,,,,,,,,,,,,,,,,
Fail at the beginning of InitCrypto if there's no MSP ID,FAB-9328,29121,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,Low,,niuzhenguo,niuzhenguo,niuzhenguo,4/4/2018 8:15,4/4/2018 8:15,4/26/2018 6:50,,,,,,,,,,,,0,,,,,"If there's no MSP ID, we should fail at the beginning of InitCrypto before we do more configration and initialization work.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i02d7p:,,,,,,niuzhenguo,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Test/compilation failures in bccsp/factory when nopkcs11 tag is used,FAB-9453,29310,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,Low,Done,sykesm,sykesm,sykesm,4/10/2018 19:35,4/16/2018 23:46,4/26/2018 6:50,4/11/2018 22:31,,,,,v1.2,,,,,,0,hygiene,,,,"{code:java}
$ go test -tags nopkcs11 ./bccsp/... -count=1
# github.com/hyperledger/fabric/bccsp/factory
bccsp/factory/pkcs11_test.go:35:9: undefined: setFactories
bccsp/factory/pkcs11_test.go:38:8: undefined: setFactories
bccsp/factory/pkcs11_test.go:43:9: undefined: setFactories
bccsp/factory/pkcs11_test.go:50:8: undefined: setFactories
bccsp/factory/pkcs11_test.go:52:13: unknown field 'Pkcs11Opts' in struct literal of type FactoryOpts
bccsp/factory/pkcs11_test.go:69:13: unknown field 'Pkcs11Opts' in struct literal of type FactoryOpts
bccsp/factory/pkcs11factory_test.go:27:8: undefined: PKCS11Factory
bccsp/factory/pkcs11factory_test.go:28:28: undefined: PKCS11BasedFactoryName
bccsp/factory/pkcs11factory_test.go:32:8: undefined: PKCS11Factory
bccsp/factory/pkcs11factory_test.go:41:13: unknown field 'Pkcs11Opts' in struct literal of type FactoryOpts
bccsp/factory/pkcs11factory_test.go:41:13: too many errors
ok  github.com/hyperledger/fabric/bccsp	0.020s
FAIL	github.com/hyperledger/fabric/bccsp/factory [build failed]{code}",,,,,,,,,,,,,,,,,,,,,,,,,,0|i02aum:,,Sprint 7 - Hygiene,,,,sykesm,,,,,,,master,,,TRUE,10/Apr/18 8:34 PM;sykesm;https://gerrit.hyperledger.org/r/20409,,,,,,,,,,,,,,,,,,,,,
TestMain in bccsp/factory/factory_test.go causes package tests to run 4 times,FAB-9474,29338,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,Low,,,sykesm,sykesm,4/11/2018 19:27,4/11/2018 19:27,4/26/2018 6:50,,,,,,,,fabric-crypto,,,,0,hygiene,,,,"The TestMain in the bccsp/factory package iterates over 4 configurations and runs the package tests in each of the iterations. [1]

It appears the original intent may have been to run all of the tests with each of the configurations. That said, the the InitFactories function used to set the configuration protects the config with a sync.Once. Also, there is an InitFactories call immediately after with nil configuration. Basically, this structure doesn't seem to make any sense and some cleanup or refactoring is needed.

1: https://github.com/hyperledger/fabric/blob/cf7d15d5cae1f503aaec8130a0c2d66f53091c11/bccsp/factory/factory_test.go#L101-L106",,,,,,,,,,,,,,,,,,,,,,,,,,0|i02ef1:,,,,,,sykesm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-ca-client enroll call makes an empty intermediatecerts file,FAB-9512,29393,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,Low,,,dbshah,dbshah,4/13/2018 18:39,4/13/2018 18:39,4/26/2018 6:50,,,,,,,,fabric-ca,,,,0,fabric-ca-client,,,,"When enrolling a user on CA, the CA not being an intermediate CA, the intermediatecerts folder creates a file for intermediatecert which is blank (has no PEM content). There should be a check, and if the intermediate cert does not exist, the file should not be created.

 

Steps to reproduce:
 * Pull `hyperledger/fabric-ca:x86_64-1.1.0` image
 * Run the container and start `fabric-ca-server` in background.

```

$ docker run -it hyperledger/fabric-ca:x86_64-1.1.0 bash

root@d772e7231ee8:/# fabric-ca-server start -b admin:adminpw

``` 

 
 * Enroll admin user using `fabric-ca-client`

```

# fabric-ca-client enroll -u http://admin:adminpw@localhost:7054

2018/04/13 18:35:59 [INFO] Created a default configuration file at /etc/hyperledger/fabric-ca-server/fabric-ca-client-config.yaml

2018/04/13 18:35:59 [INFO] generating key: &\{A:ecdsa S:256}

2018/04/13 18:35:59 [INFO] encoded CSR

2018/04/13 18:35:59 [INFO] signed certificate with serial number 336793439273262704411331469422228046746825411057

2018/04/13 18:35:59 [INFO] 127.0.0.1:60988 POST /enroll 201 0 ""OK""

2018/04/13 18:35:59 [INFO] Stored client certificate at /etc/hyperledger/fabric-ca-server/msp/signcerts/cert.pem

2018/04/13 18:35:59 [INFO] Stored root CA certificate at /etc/hyperledger/fabric-ca-server/msp/cacerts/localhost-7054.pem

2018/04/13 18:35:59 [INFO] Stored intermediate CA certificates at /etc/hyperledger/fabric-ca-server/msp/intermediatecerts/localhost-7054.pem

```

 
 * Check the intermediatecerts folder

```

/# ls -al /etc/hyperledger/fabric-ca-server/msp/intermediatecerts/                  

total 8

drwxr-xr-x 2 root root 4096 Apr 13 18:35 *.*

drwxr-xr-x 6 root root 4096 Apr 13 18:35 *..*

-rw-r--r-- 1 root root    0 Apr 13 18:35 localhost-7054.pem

```

The pem file is empty.

 

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,0|i02eqt:,,,,,,dbshah,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"In fabcar invoke.js line 151, accesse an un-declared variable.",FAB-9552,29449,Bug,In Review,FAB,Fabric,software,ChristopherFerris,,,Low,,suntoe,suntoe,suntoe,4/17/2018 16:27,4/18/2018 6:08,4/26/2018 6:50,,,,,,,,fabric-samples,,,,0,,,,,"See fabcar/invoke.js line 146 - 158, the variable *{color:#d04437}response{color}* {color:#333333}is not declared before or assigned any value so response.status will definitely fail.{color}

 

{color:#333333}--------------------------------------------------------------------------------------------------------------{color}

console.log('Send transaction promise and event listener promise have completed');
 // check the results in the order the promises were added to the promise all list
 if (results && results[0] && results[0].status === 'SUCCESS') \{
         console.log('Successfully sent transaction to the orderer.');
 } else \{
         console.error('Failed to order the transaction. Error code: ' + *{color:#d04437}response{color}*.status);
 }

if(results && results[1] && results[1].event_status === 'VALID') \{
         console.log('Successfully committed the change to the ledger by the peer');
 } else \{
         console.log('Transaction failed to be committed to the ledger due to ::'+results[1].event_status);
 }",,,,,,,,,,,,,,,,,,,,,,,,,,0|i02f1p:,,,,,,suntoe,,,,,,,,,,,17/Apr/18 4:36 PM;suntoe;Submited a CR (https://gerrit.hyperledger.org/r/#/c/20675/) following instructions on http://hyperledger-fabric.readthedocs.io/en/release-1.1/submit_cr.html,,,,,,,,,,,,,,,,,,,,,
Typo in Key-Concepts/Identity doc,FAB-9561,29461,Bug,In Review,FAB,Fabric,software,ChristopherFerris,,,Low,,atakada,atakada,atakada,4/17/2018 21:28,4/18/2018 2:16,4/26/2018 6:50,,v1.1,,,,v1.1.1,,fabric-docs,,,,0,,,,,"I found a typo in “A Simple Scenario to Explain The Use of an Identity” section of Key-Concepts/Identity.

 

[http://hyperledger-fabric.readthedocs.io/en/latest/identity/identity.html]

 

“It will be not be accepted.” contains duplicated “be”.",,,,,,,,,,,,,,,,,,,,,,,,,,0|i02f3x:,,,,,,atakada,,,,,,,,,,,"18/Apr/18 2:16 AM;atakada;Patch submitted.

https://gerrit.hyperledger.org/r/#/c/20699/",,,,,,,,,,,,,,,,,,,,,
fabric-couchdb still 1.1.0-preview release,FAB-9669,29624,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,Low,,ChristopherFerris,david_dornseifer,david_dornseifer,4/24/2018 6:11,4/24/2018 7:40,4/26/2018 6:50,,,,,,,,fabric-release,,,,0,,,,,"Official couchdb images on dockerhub are still on 1.1.0-preview. Same for Kafka and ZK. 

[https://hub.docker.com/r/hyperledger/fabric-couchdb/tags/]",,,,,,,,,,,,,,,,,,,,,,,,,,0|i02g0l:,,,,,,david_dornseifer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
