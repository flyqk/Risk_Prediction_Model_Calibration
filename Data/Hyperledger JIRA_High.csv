Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Component/s,Component/s,Component/s,Due Date,Votes,Labels,Labels,Labels,Labels,Labels,Labels,Labels,Description,Environment,Log Work,Log Work,Log Work,Log Work,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Blocks),Outward issue link (Blocks),Outward issue link (Cloners),Outward issue link (Duplicate),Outward issue link (Duplicate),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Outward issue link (Relates),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Epic Link),Custom field (Rank),Custom field (Root Cause Analysis),Sprint,Sprint,Sprint,Sprint,Sprint,Sprint,Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Watchers),Custom field (Workaround),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitBranch),Custom field (gitCommitsReferenced),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
"OTE single test failure in fabric-test daily suite, inconsistent txcounts delivered from orderers",FAB-9719,29710,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,High,,scottz,scottz,scottz,26/Apr/18 4:11 AM,26/Apr/18 4:24 AM,26/Apr/18 6:49 AM,,,,,v1.2,,fabric-quality,,,,,,0,ci_failure,,,,,,,"Refer to failure: [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/332/testReport/orderer_ote/]

QA team should take first look. It only happened on one test, but not any other similar tests; and this is the first and only failure of this type so far. We should monitor for more occurrances in the subsequent daily test runs. We may need to try reproduce separately and collect orderer logs.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02ghx:,,,,,,,,scottz,,,,,,,,,,,,,,,,,,,,"26/Apr/18 4:24 AM;scottz;[https://gerrit.hyperledger.org/r/#/c/21035/]

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer feature test fail CI smoke tests in fabric-test-verify job.,FAB-9709,29698,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,High,,nnao,sambhavdutt,sambhavdutt,25/Apr/18 8:11 PM,25/Apr/18 8:15 PM,26/Apr/18 6:49 AM,,,,,v1.2,,fabric-peer,,,,,,0,ci_failure,,,,,,,"The peer feature tests are failing in the recent CI smoke tests for fabric-test-verify job,


{code:java}
Failing step: Then a user receives a success response of 100 ... failed in 0.000s
Location: peer.feature:44
Assertion Failed: Expected response was 100; received 100
{code}


{code:java}
@scenario.begin

  @smoke
  Scenario Outline: FAB-1440, FAB-3861: Basic Chaincode Execution - kafka orderer type, using couchdb, with tls -- @1.7 
    Given I have a bootstrapped fabric network of type kafka using state-database couchdb with tls ... passed in 22.007s
    When a user sets up a channel ... passed in 39.076s
    And a user deploys chaincode ... passed in 37.542s
    When a user queries on the chaincode ... passed in 4.681s
    Then a user receives a success response of 100 ... failed in 0.000s
    When a user invokes on the chaincode ... skipped in 0.000s
    And I wait ""5"" seconds ... skipped in 0.000s
    And a user queries on the chaincode ... skipped in 0.000s
    Then a user receives a success response of 95 ... skipped in 0.000s
{code}


*Build Logs*
https://jenkins.hyperledger.org/job/fabric-test-verify-x86_64/1145/artifact/gopath/src/github.com/hyperledger/fabric-test/feature/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02gfh:,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Search is not working in ReadTheDocs master/latest versions,FAB-9706,29692,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,High,,rameshthoomu,pandrejko,pandrejko,25/Apr/18 6:56 PM,25/Apr/18 9:01 PM,26/Apr/18 6:49 AM,,,,,,,fabric-docs,,,,,,0,,,,,,,,"Problem might have been introduced by FAB-9648

Ramesh is investigating.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02ge5:,,,,,,,,pandrejko,,,,,,,,,,,,,,,,,,,,25/Apr/18 6:59 PM;pandrejko;@thoomu@us.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer feature test fail CI jobs in fabric-smoke tests.,FAB-9650,29601,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,nnao,sambhavdutt,sambhavdutt,23/Apr/18 2:08 PM,25/Apr/18 12:25 AM,26/Apr/18 6:49 AM,25/Apr/18 12:25 AM,,,,v1.2,,fabric-quality,,,,,,0,ci_failure,,,,,,,"The following errors are failing the fabric smoke-tests in daily, verify and merge CI jobs in fabric-test, 


{code:java}
Failing step: Then a user receives a success response of 100 ... failed in 0.000s
Location: peer.feature:44
Assertion Failed: Expected response was 100; received 100
{code}


{code:java}
@smoke
  Scenario Outline: FAB-1440, FAB-3861: Basic Chaincode Execution - kafka orderer type, using couchdb, with tls -- @1.7 
    Given I have a bootstrapped fabric network of type kafka using state-database couchdb with tls ... passed in 24.944s
    When a user sets up a channel ... passed in 68.746s
    And a user deploys chaincode ... passed in 57.072s
    When a user queries on the chaincode ... passed in 4.883s
    Then a user receives a success response of 100 ... failed in 0.000s
    When a user invokes on the chaincode ... skipped in 0.000s
    And I wait ""5"" seconds ... skipped in 0.000s
    And a user queries on the chaincode ... skipped in 0.000s
    Then a user receives a success response of 95 ... skipped in 0.000s
{code}

*Build Log*
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/lastSuccessfulBuild/artifact/gopath/src/github.com/hyperledger/fabric-test/feature/
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02fx1:,,,,,,,,nnao,sambhavdutt,,,,,,,,,,,,,,,master,,,true,23/Apr/18 5:05 PM;nnao;https://gerrit.hyperledger.org/r/c/20903/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer node fails to start due to invalid memory address or nil pointer dereference,FAB-9646,29591,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,High,,,tboloo,tboloo,23/Apr/18 9:46 AM,25/Apr/18 5:25 AM,26/Apr/18 6:49 AM,,,,,,,fabric-samples,,,,,,0,,,,,,,,"Hi,

I'm trying to run [chaincode-docker-devmode|https://github.com/hyperledger/fabric-samples/tree/release-1.1/chaincode-docker-devmode] sample, however the peer node fails to start with 

 invalid memory address or nil pointer dereference, details in attached [^peer.log].

I'm using 1.1.0-review version, both 1.1.0-rc1 and 1.1.0 fails with the expiration error as in -FAB-8595-

I'm running Docker version 17.12.1-ce, build 7390fc6 on  Debian GNU/Linux 9.4 (stretch)",,,,,,,,,,,,,,,,,,,,,,,,23/Apr/18 9:43 AM;tboloo;peer.log;https://jira.hyperledger.org/secure/attachment/14908/peer.log,,,,,,,,0|i02fv1:,,,,,,,,lehors,tboloo,,,,,,,,,,,,,,,,,,,"24/Apr/18 5:18 PM;lehors;I just tried this on my Ubuntu 16.04.1 system and I couldn't reproduce the problem. Here is the peer I have:

 Version: 1.1.0
  Go version: go1.9.2
  OS/Arch: linux/amd64
  Experimental features: false
  Chaincode:
   Base Image Version: 0.4.6
   Base Docker Namespace: hyperledger
   Base Docker Label: org.hyperledger.fabric
   Docker Namespace: hyperledger

 ","24/Apr/18 7:09 PM;tboloo;Tried it on the different machine, same result: 1.1.0 fails with the expiration error as in FAB-8595, 1.1.0-preview fails with invalid memory address or nil pointer dereference.

Docker version 18.03.0-ce, build 0520e24

Debian GNU/Linux 9.4 (stretch)

 

 ",25/Apr/18 5:25 AM;tboloo;Update: works for version 1.0.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric/examples/e2e_cli v1.1.0 tutorial fails with error on RHEL Linux v7.4.0 platform on x86_64,FAB-9642,29585,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,High,,,pvrbharg,pvrbharg,22/Apr/18 2:08 AM,25/Apr/18 9:41 PM,26/Apr/18 6:49 AM,,,,,,,fabric-examples,,,,,,0,,,,,,,,Out of the box example e2e_cli sample fails - with the above error. For details see the attachments,[^Logs.zip],,,,,,,,,,,,,,,,,,,,,,,22/Apr/18 2:08 AM;pvrbharg;Logs.zip;https://jira.hyperledger.org/secure/attachment/14907/Logs.zip,,,,,,,,0|i02ftx:,,,,,,,,lehors,pvrbharg,,,,,,,,,,,,,,,,,,,"25/Apr/18 1:16 PM;lehors;Hi,

There is an error all right but it has nothing to do with Java. Java isn't used here and the message merely relates to the fact that currently the support for Java chaincode is disabled. The e2e example uses a Go chaincode. You can see that the same message about Java is displayed on the previous step while installing the chaincode without triggering any error:

2018-04-22 01:57:11.582 UTC [chaincodeCmd] getChaincodeSpec -> DEBU 005 java chaincode disabled
2018-04-22 01:57:11.652 UTC [golang-platform] getCodeFromFS -> DEBU 006 getCodeFromFS github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
2018-04-22 01:57:11.953 UTC [golang-platform] func1 -> DEBU 007 Discarding GOROOT package fmt
2018-04-22 01:57:11.953 UTC [golang-platform] func1 -> DEBU 008 Discarding provided package github.com/hyperledger/fabric/core/chaincode/shim
2018-04-22 01:57:11.953 UTC [golang-platform] func1 -> DEBU 009 Discarding provided package github.com/hyperledger/fabric/protos/peer
2018-04-22 01:57:11.953 UTC [golang-platform] func1 -> DEBU 00a Discarding GOROOT package strconv
2018-04-22 01:57:11.953 UTC [golang-platform] GetDeploymentPayload -> DEBU 00b done
2018-04-22 01:57:11.953 UTC [container] WriteFileToPackage -> DEBU 00c Writing file to tarball: src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go
2018-04-22 01:57:11.959 UTC [container] WriteFileToPackage -> DEBU 00d Writing file to tarball: src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02_test.go
2018-04-22 01:57:11.961 UTC [msp/identity] Sign -> DEBU 00e Sign: plaintext: 0AB4070A5C08031A0C08F7D7EFD60510...83C77F030000FFFF1E416A37002E0000
2018-04-22 01:57:11.961 UTC [msp/identity] Sign -> DEBU 00f Sign: digest: C304B0106D73D2FAAA1E2F1DAACC11164F3DFDB906D86B89EF13C905786F0A51
2018-04-22 01:57:11.981 UTC [chaincodeCmd] install -> DEBU 010 Installed remotely response:<status:200 payload:""OK"" >
2018-04-22 01:57:11.981 UTC [main] main -> INFO 011 Exiting.....
===================== Chaincode is installed on remote peer PEER2 =====================","25/Apr/18 9:41 PM;pvrbharg;Hi,

Glad it is not Java that is the culprit and I know example02 is written in Go. I can understand the chaincode logic. .

So why are we seeing this bogus and non-issue messages when they are not in play - especially with some step failure not being material and other steps being failures - where you can not progress at all?

If there is no Java in play - perhaps we should not be seeing any of these unconnected messages at all - because there is no connection.

I attached peer and orderer logs and I could not find anything in their logs either. Did you find anything that missed? In any case the sample is not working out of the box on RHEL platform and my logs [both client and server side] are attached. Thanks.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"chaincode testing fail in CI tests for fabric-test-verify, Assertion Error- unexpected response received.",FAB-9622,29560,Bug,Duplicate,FAB,Fabric,software,ChristopherFerris,,,High,,nnao,sambhavdutt,sambhavdutt,20/Apr/18 3:46 PM,23/Apr/18 8:49 PM,26/Apr/18 6:49 AM,,,,,v1.2,,fabric-quality,,,,,,0,ci_failure,,,,,,,"chaincodes tests failing on several instances due to 'Assertion Error' unexpected response

*chaincodes.Chaincodes Testing.FAB 5791 Test API in SHIM interface using marbles02 and shimApiDriver chaincodes for kafka orderer couchdb db GOLANG lang -- @1.2 *



{code:java}
Failing step: Then a user receives a response containing ""docType"":""marble"" ... failed in 0.000s
Location: chaincodes.feature:395
Assertion Failed: Expected response was ""docType"":""marble""; received {""docType"":""marble"",""name"":""marble1"",""color"":""red"",""size"":35,""owner"":""tom""}
{code}


*chaincodes.Chaincodes Testing.FAB-6211: Test example02 chaincode written using GOLANG with tls -- @1.1*



{code:java}
Failing step: Then a user receives a success response of 1000 ... failed in 0.000s
Location: chaincodes.feature:171
Assertion Failed: Expected response was 1000; received 1000
{code}


",,,,,,,,,,,,,,,,,FAB-9650,,,,,,,20/Apr/18 3:45 PM;sambhavdutt;fabric-test-verify.png;https://jira.hyperledger.org/secure/attachment/14904/fabric-test-verify.png,,,,,,,,0|i02fol:,,,,,,,,nnao,sambhavdutt,,,,,,,,,,,,,,,,,,,"23/Apr/18 1:43 PM;sambhavdutt;This chaincode test is still failing in the fabric-test smoke CI jobs , daily, verify & merge, due to same  reason detailed above.","23/Apr/18 8:47 PM;nnao;This JIRA seems to be same as FAB-9650. So this is failing because the ""Query Result:"" has been removed from the output.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Orderer tests failing in CI tests , genesis information 'undefined' in peer0.org1.example.com",FAB-9621,29559,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,nnao,sambhavdutt,sambhavdutt,20/Apr/18 3:26 PM,23/Apr/18 10:44 PM,26/Apr/18 6:49 AM,23/Apr/18 10:44 PM,,,,v1.2,,fabric-quality,,,,,,0,ci_failure,,,,,,,"The following errors are observed in CI orderer tests,


{code:java}
Failing step: When a user fetches genesis information from peer ""peer0.org1.example.com"" ... undefined in 0.000s
Location: orderer.feature:68
None
{code}

*Build logs*

https://jenkins.hyperledger.org/view/Daily/job/fabric-smoke-test-daily-x86_64/107/artifact/gopath/src/github.com/hyperledger/fabric-test/feature/
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02fod:,,,,,,,,nnao,sambhavdutt,,,,,,,,,,,,,,,master,,,true,"23/Apr/18 1:44 PM;sambhavdutt;This Orderer tests are still failing in the fabric-test smoke CI jobs , daily, verify & merge, due to same reason detailed above.",23/Apr/18 6:51 PM;nnao;https://gerrit.hyperledger.org/r/c/20909/,23/Apr/18 8:53 PM;nnao;Maybe This patch needs to merge FAB-9650,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bootstrap tests fail in CI tests due to 'Assertion Error' in 'fabric-test-daily-x86_64' job,FAB-9617,29555,Bug,Duplicate,FAB,Fabric,software,ChristopherFerris,,,High,,latitiah,sambhavdutt,sambhavdutt,20/Apr/18 3:09 PM,23/Apr/18 5:28 PM,26/Apr/18 6:49 AM,,,,,v1.2,,fabric-quality,,,,,,0,ci_failure,,,,,,,"Multiple instances of the Assertion error are observed from last 3 builds,


 
{code:java}
@daily
  Scenario Outline: FAB-4776/FAB-4777: Bring up a kafka based network and check peers -- @1.1 
    Given I have a bootstrapped fabric network of type kafka using state-database leveldb ... passed in 29.445s
    When a user sets up a channel ... passed in 63.532s
    And a user deploys chaincode ... passed in 60.479s
    And the orderer node logs receiving the orderer block ... passed in 0.585s
    And a user queries on the chaincode with args [""query"",""a""] ... passed in 7.766s
    Then a user receives a success response of 100 ... failed in 0.001s
{code}

*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/327/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/",,,,,,,,,,,,,,,,,FAB-9650,,,,,,,,,,,,,,,0|i02fnh:,,,,,,,,latitiah,nnao,sambhavdutt,,,,,,,,,,,,,,,,,,"23/Apr/18 4:48 PM;latitiah;This is failing because the ""Query Result:"" has been removed from the output.",23/Apr/18 4:53 PM;nnao;This JIRA seems to be same as FAB-9650,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Heavy load on peer,  event hub  sometimes disconnection, and finaly out of memory",FAB-9585,29505,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,High,,,eason0108,eason0108,19/Apr/18 7:57 AM,19/Apr/18 8:50 AM,26/Apr/18 6:49 AM,,v1.1,,,,,fabric-peer,,,,,,0,Heavy,load,,,,,," heavy load with 3k/s   , about 30 min  , one peer out of memory ,down.

also, there are a lot of error  

UTC [committer] postCommit -> ERRO 159c Channel [bestchannel] Error sending block event for block number [2114]: could not send the blocking event

3.why there are so many warnings while i set debug level = error  

 ","1orderer  kafka mode （ 2 orderer  will be better）  8C16G

4peers   ,each with   8C16G    ubuntu   16.04

fabric 1.1",,,,,,,,,,,,,,,,,,,,,,,19/Apr/18 7:57 AM;eason0108;1.jpg;https://jira.hyperledger.org/secure/attachment/14898/1.jpg,19/Apr/18 7:57 AM;eason0108;2.jpg;https://jira.hyperledger.org/secure/attachment/14897/2.jpg,19/Apr/18 7:57 AM;eason0108;3.jpg;https://jira.hyperledger.org/secure/attachment/14896/3.jpg,19/Apr/18 7:57 AM;eason0108;c974cbf2132dcfcef694e822c771c877848715492c19735bba12980f533be3fb-json.log;https://jira.hyperledger.org/secure/attachment/14895/c974cbf2132dcfcef694e822c771c877848715492c19735bba12980f533be3fb-json.log,,,,,0|i02fd1:,,,,,,,,eason0108,,,,,,,,,,,,,,,,,,,,"19/Apr/18 8:04 AM;eason0108;it happens everytime.

client sdk is java sdk  1.0.1 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java SDK fixes for Connection profile and verify certs,FAB-9565,29466,Bug,In Review,FAB,Fabric,software,ChristopherFerris,,,High,,rickr,mrshah-ibm,mrshah-ibm,18/Apr/18 2:17 AM,26/Apr/18 1:18 AM,26/Apr/18 6:49 AM,,v1.1,,,v1.1,,fabric-sdk-java,fabric-sdk-node,,,,,0,,,,,,,,"Currently the connection profile uses the following format for TLS CA Certs:
{quote}""tlsCACerts"": \{
 ""pem"": ""-----BEGIN CERTIFICATE-----....""
 },
{quote}
We tried providing concatenated root certificates for all our peers/orderers in the pem string. But Java SDK fails to load all of those and uses the first one in the concatenated certificate. Thus, the connection fails to some of the components.

We would like to propose an array of TLS CA Certs in the connection profile which would help load each cert in the Java SDK:

 
{quote}""tlsCACerts"":[ \{
 ""pem"": ""-----BEGIN CERTIFICATE-----....""
 },\{
""pem"": ""-----BEGIN CERTIFICATE-----....""
},\{
""pem"": ""-----BEGIN CERTIFICATE-----....""
}],
{quote}
 

This will require a change in Java SDK and as the connection profile will change, it will need a change in Node SDK.

 

Please note this issue is when the SDK connects to the CA (http) and to the peer/orderer (grpc) as well.

gerrit CR https://gerrit.hyperledger.org/r/#/c/20917/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02f51:,,,,,,,,huy.tranibm,mrshah-ibm,rickr,,,,,,,,,,,,,,,,,,18/Apr/18 12:39 PM;rickr;I found a library call that parses a stream of certficates .. given that I'd hold of making the change above,"24/Apr/18 1:15 PM;rickr;Provided fix  so when an eventhub url is provided and a eventhub is created we don't also produce an eventing peer.
   Should be enough to work with 1.0.x networks.
Provided a means to discover which channel names are available to load from the configuation.
Fixed issue where failed to verify certficates produce by CA with extra attributies.
Pembytes and Pemfiles with multiple certs should be working.
Fixed several streams not being closed properly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The fabric-smoke-test-daily and fabric-test-merge CI jobs do not execute the right tests.,FAB-9549,29446,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,sambhavdutt,sambhavdutt,sambhavdutt,17/Apr/18 2:33 PM,19/Apr/18 2:03 PM,26/Apr/18 6:49 AM,19/Apr/18 2:03 PM,,,,v1.2,,fabric-ci,,,,,,0,ci_failure,,,,,,,"The fabric-smoke-test-daily CI job and fabric-test-merge job are currently executing the daily tests, not the smoke test that they supposed to execute. These jobs should execute the smoke tests instead.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02f11:,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,"17/Apr/18 3:36 PM;sambhavdutt;Pushed the patch to execute the right tests for fabric-test-merge and fabric-smoke-test-daily, waiting for the merge.",19/Apr/18 2:03 PM;sambhavdutt;The fabric-smoke-test daily and fabric-test merge are executing the correct set of tests now. The output report is appropriate.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"ledger_lte tests are failing in the CI job for fabric-test-daily(couchdb, goleveldb)",FAB-9541,29434,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,High,,AdnanChoudhury,sambhavdutt,sambhavdutt,16/Apr/18 8:30 PM,25/Apr/18 9:19 PM,26/Apr/18 6:49 AM,,,,,v1.2,,fabric-quality,,,,,,0,ci_failure,,,,,,,"perf_couchdb, perf_goleveldb tests are failing in ledger_lte due to the following errors, 


{code:java}
found fabric repo....
rm: cannot remove '/w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE': No such file or directory
cp: cannot create directory '/w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools': No such file or directory
./runbenchmarks.sh: line 17: cd: /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/scripts: No such file or directory
**Note**: This is a Benchmark test. Please make sure to set an appropriate value for ulimit in your OS.
Recommended value is 10000 for default parameters.
Current ulimit=1048576
Parameter file: parameters_couchdb_daily_CI.sh
Starting couchdb container...
Please note that host port 5984 will be made reachable 
INFO: outputDIR [/w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/tools/LTE/TestResults/experiments/BenchmarkInsertTxs] already exists. Output will be appended to existing file
go test -v -timeout 1000m github.com/hyperledger/fabric/test/tools/LTE/experiments -testParams=""-DataDir=/tmp/fabric/test/tools/LTE/data, -NumChains=10, -NumParallelTxPerChain=10, -NumKeysInEachTx=4, -BatchSize=10, -NumKVs=10000, -KVSize=200"" -bench=BenchmarkInsertTxs
can't load package: package github.com/hyperledger/fabric/test/tools/LTE/experiments: cannot find package ""github.com/hyperledger/fabric/test/tools/LTE/experiments"" in any of:
	/opt/go/go1.10.linux.amd64/src/github.com/hyperledger/fabric/test/tools/LTE/experiments (from $GOROOT)
	/w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/experiments (from $GOPATH)
Stopping couchdb container (id: 90f0b6c55787)...

{code}

*Build logs*

https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/lastSuccessfulBuild/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02eyl:,,,,,,,,AdnanChoudhury,sambhavdutt,,,,,,,,,,,,,,,master,,,true,24/Apr/18 8:23 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/20981/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip tests fail in CI jobs due to assertion error in fabric-test-daily job,FAB-9539,29432,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,High,,AdnanChoudhury,sambhavdutt,sambhavdutt,16/Apr/18 7:59 PM,16/Apr/18 7:59 PM,26/Apr/18 6:49 AM,,,,,v1.2,,fabric-quality,,,,,,0,ci_failure,,,,,,,"The following errors are observed in Gossip test,


{code:java}
gossip.Gossip Service.[FAB-4682] In leader-selection, a non-leader peer, that joins an already-active channel--is expected to have all the blocks eventually.

Error Message
Expected response was 940; received Query Result: 1000

And a user makes peer ""peer1.org2.example.com"" join the channel ... passed in 7.246s
    When a user queries on the chaincode named ""mycc"" with args [""query"",""a""] on ""peer1.org2.example.com"" ... passed in 21.199s
    Then a user receives a success response of 940 from ""peer1.org2.example.com"" ... failed in 0.000s
{code}


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02ey5:,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB indexing tests are failing in daily CI jobs,FAB-9506,29386,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,sambhavdutt,sambhavdutt,13/Apr/18 3:20 PM,24/Apr/18 8:17 PM,26/Apr/18 6:49 AM,24/Apr/18 8:17 PM,,,,v1.2,,fabric-quality,,,,,,0,ci_failure,,,,,,,"Observed multiple instances of CouchDB indexing error in CI jobs,

{code:java}
04:03:10     When a user requests to get the design doc ""indexdoc_behave_test"" for the chaincode named ""mycc1"" in the channel ""mychannel1"" and from the CouchDB instance ""http://localhost:5984""                                               # steps/endorser_impl.py:749
04:03:10   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
04:03:10                                  Dload  Upload   Total   Spent    Left  Speed
04:03:10 
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100    58  100    58    0     0   5667      0 --:--:-- --:--:-- --:--:--  5800
04:03:10     Then a user receives success response of [""views"":{""index_behave_test"":{""map"":{""fields"":{""size"":""asc""}] from the couchDB container                                                                                                # steps/endorser_impl.py:756
04:03:10       Assertion Failed: Error, recieved unexpected error message from CouchDB container: {""error"":""not_found"",""reason"":""Database does not exist.""}
04:03:10       
04:03:10       Captured stdout:
04:03:10       testConfigs: configs/50eed6c43ecf11e8a40bfa163e5192fc
04:03:10       ['index_behave_test.json', 'indexOwner.json'
{code}

*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/320/testReport/CouchDB_index/Testing%20Fabric%20CouchDB%20indexing/FAB_7251__Test_CouchDB_indexing_using_marbles_chaincode_using_GOLANG_with_1_channels_and_1_index_with_1_selector_____1_1_/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02ep9:,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,16/Apr/18 1:50 PM;sambhavdutt;This issue is still going on with the CouchDB indexing tests in fabric-test-daily,20/Apr/18 9:09 PM;sambhavdutt;The CouchDB indexing tests have passed the last 6 builds.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB improvements have been reverted,FAB-9415,29267,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,High,,chris.elder,denyeart,denyeart,08/Apr/18 10:04 PM,08/Apr/18 10:04 PM,26/Apr/18 6:49 AM,,v1.1,,,v1.2,,fabric-ledger,,,,,,0,,,,,,,,"When CouchDB image was moved from fabric to baseimage, it looks the couchdb image files were copied from fabric release (1.0) branch, rather than from fabric master (1.1 development) branch.  Several improvements to the couchdb images that were made early in 1.1 development were therefore wiped out.

We need to re-apply the improvements that were wiped out (in the areas of compaction, local.ini location, id/pw).

Need to diff the file content that was removed:

[https://gerrit.hyperledger.org/r/#/c/15861/]

with the current files in baseimage:

https://github.com/hyperledger/fabric-baseimage/tree/master/images/couchdb",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzygi:b9,,Next Items- Ledger,,,,,,denyeart,ericmvaughn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Port conflicts in core/peer tests,FAB-9404,29256,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,mastersingh24,mastersingh24,07/Apr/18 1:17 PM,07/Apr/18 5:34 PM,26/Apr/18 6:49 AM,07/Apr/18 5:34 PM,,,,v1.2,,fabric-peer,,,,,,0,flakes,,,,,,,"12:56:18  unit-tests_1  | --- FAIL: TestCreateChainFromBlock (0.15s)
12:56:18  unit-tests_1  | 	assertions.go:247: 
                          
	Error Trace:	peer_test.go:107
12:56:18  unit-tests_1  | 		
	Error:      	Received unexpected error:
12:56:18  unit-tests_1  | 		
	            	listen tcp :13611: bind: address already in use
12:56:18  unit-tests_1  | 		
	Test:       	TestCreateChainFromBlock
12:56:18  unit-tests_1  | removing dir = /tmp/peer-fs303180661/ledgersData
12:56:18  unit-tests_1  | 2018-04-07 12:56:14.732 UTC [ledgermgmt] initialize -> INFO 04f Initializing ledger mgmt
12:56:18  unit-tests_1  | 2018-04-07 12:56:14.732 UTC [kvledger] NewProvider -> INFO 050 Initializing ledger provider
12:56:18  unit-tests_1  | 2018-04-07 12:56:14.803 UTC [kvledger] NewProvider -> INFO 051 ledger provider Initialized
12:56:18  unit-tests_1  | 2018-04-07 12:56:14.803 UTC [ledgermgmt] initialize -> INFO 052 ledger mgmt initialized
12:56:18  unit-tests_1  | 2018-04-07 12:56:15.708 UTC [ledgermgmt] CreateLedger -> INFO 053 Creating ledger [testchain] with genesis block
12:56:18  unit-tests_1  | 2018-04-07 12:56:15.713 UTC [fsblkstorage] newBlockfileMgr -> INFO 054 Getting block information from block storage
12:56:18  unit-tests_1  | 2018-04-07 12:56:15.759 UTC [kvledger] CommitWithPvtData -> INFO 055 Channel [testchain]: Committed block [0] with 1 transaction(s)
12:56:18  unit-tests_1  | 2018-04-07 12:56:15.770 UTC [ledgermgmt] CreateLedger -> INFO 056 Created ledger [testchain] with genesis block
12:56:18  unit-tests_1  | 2018-04-07 12:56:17.786 UTC [ledgermgmt] CreateLedger -> INFO 057 Creating ledger [channel1] with genesis block
12:56:18  unit-tests_1  | 2018-04-07 12:56:17.791 UTC [fsblkstorage] newBlockfileMgr -> INFO 058 Getting block information from block storage
12:56:18  unit-tests_1  | 2018-04-07 12:56:17.810 UTC [kvledger] CommitWithPvtData -> INFO 059 Channel [channel1]: Committed block [0] with 1 transaction(s)
12:56:18  unit-tests_1  | 2018-04-07 12:56:17.816 UTC [ledgermgmt] CreateLedger -> INFO 05a Created ledger [channel1] with genesis block
12:56:18  unit-tests_1  | panic: runtime error: invalid memory address or nil pointer dereference [recovered]
12:56:18  unit-tests_1  | 	panic: runtime error: invalid memory address or nil pointer dereference
12:56:18  unit-tests_1  | [signal SIGSEGV: segmentation violation code=0x1 addr=0x80 pc=0xf5c5fa]
12:56:18  unit-tests_1  | 
12:56:18  unit-tests_1  | goroutine 190 [running]:
12:56:18  unit-tests_1  | testing.tRunner.func1(0xc4229dac30)
12:56:18  unit-tests_1  | 	/opt/go/src/testing/testing.go:742 +0x29d
12:56:18  unit-tests_1  | panic(0x10e7a00, 0x1940050)
12:56:18  unit-tests_1  | 	/opt/go/src/runtime/panic.go:505 +0x229
12:56:18  unit-tests_1  | github.com/hyperledger/fabric/gossip/service.(*gossipServiceImpl).updateAnchors(0x0, 0x12e00c0, 0xc423226540)
12:56:18  unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/service/gossip_service.go:302 +0x3a
12:56:18  unit-tests_1  | github.com/hyperledger/fabric/gossip/service.(*configEventer).ProcessConfigUpdate(0xc42327c200, 0x12e00c0, 0xc423226540)
12:56:18  unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/service/eventer.go:82 +0x47f
12:56:18  unit-tests_1  | github.com/hyperledger/fabric/core/peer.createChain.func1(0xc424c3d900)
12:56:18  unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/core/peer/peer.go:300 +0x176
12:56:18  unit-tests_1  | github.com/hyperledger/fabric/common/resourcesconfig.(*BundleSource).Update(0xc423226510, 0xc424c3d900)
12:56:18  unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/common/resourcesconfig/bundlesource.go:43 +0x7c
12:56:18  unit-tests_1  | github.com/hyperledger/fabric/common/resourcesconfig.NewBundleSource(0xc424c3d900, 0xc42327c320, 0x4, 0x4, 0xc42280ed00)
12:56:18  unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/common/resourcesconfig/bundlesource.go:35 +0x77
12:56:18  unit-tests_1  | github.com/hyperledger/fabric/core/peer.createChain(0xc420e14020, 0x8, 0x12e6dc0, 0xc422915400, 0xc42500c200, 0x0, 0x0)
12:56:18  unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/core/peer/peer.go:360 +0x548
12:56:18  unit-tests_1  | github.com/hyperledger/fabric/core/peer.CreateChainFromBlock(0xc42500c200, 0x20, 0xc420077d28)
12:56:18  unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/core/peer/peer.go:424 +0x141
12:56:18  unit-tests_1  | github.com/hyperledger/fabric/core/peer.(*peerImpl).CreateChainFromBlock(0x1948160, 0xc42500c200, 0x1229292, 0x16)
12:56:18  unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/core/peer/peer_impl.go:64 +0x3d
12:56:18  unit-tests_1  | github.com/hyperledger/fabric/core/peer_test.TestUpdateRootsFromConfigBlock.func1(0x121d8a8, 0x8, 0xc42500c200)
12:56:18  unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/core/peer/pkg_test.go:170 +0x2a5
12:56:18  unit-tests_1  | github.com/hyperledger/fabric/core/peer_test.TestUpdateRootsFromConfigBlock.func2()
12:56:18  unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/core/peer/pkg_test.go:243 +0x46
12:56:18  unit-tests_1  | github.com/hyperledger/fabric/core/peer_test.TestUpdateRootsFromConfigBlock.func5(0xc4229dac30)
12:56:18  unit-tests_1  | 	/opt/gopath/src/github.com/hyperledger/fabric/core/peer/pkg_test.go:312 +0x3c8
12:56:18  unit-tests_1  | testing.tRunner(0xc4229dac30, 0xc4201bacf0)
12:56:18  unit-tests_1  | 	/opt/go/src/testing/testing.go:777 +0xd0
12:56:18  unit-tests_1  | created by testing.(*T).Run
12:56:18  unit-tests_1  | 	/opt/go/src/testing/testing.go:824 +0x2e0
12:56:18  unit-tests_1  | FAIL	github.com/hyperledger/fabric/core/peer	5.188s
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02e05:,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,master,,,true,07/Apr/18 2:22 PM;mastersingh24;https://gerrit.hyperledger.org/r/20279,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-chaincode-node verify & merge CI jobs are failing as repositories fail to clone from Gerrit.,FAB-9390,29229,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,sambhavdutt,sambhavdutt,06/Apr/18 3:32 PM,10/Apr/18 1:47 PM,26/Apr/18 6:49 AM,10/Apr/18 1:46 PM,,,,v1.2,,fabric-ci,,,,,,0,ci_failure,,,,,,,"fabric-chaincode-node verify & merge CI jobs are failing as repositories don't clone and timeout...


{code:java}
20:46:25 Cloning repository ssh://hyperledger-jobbuilder@gerrit.hyperledger.org:29418/fabric-chaincode-node
20:46:25  > git init /w/workspace/fabric-chaincode-node-merge-x86_64/gopath/src/github.com/hyperledger/fabric-chaincode-node # timeout=10
20:46:25 Fetching upstream changes from ssh://hyperledger-jobbuilder@gerrit.hyperledger.org:29418/fabric-chaincode-node
20:46:25  > git --version # timeout=10
20:46:25 using GIT_SSH to set credentials Gerrit Checkout
20:46:25  > git fetch --tags --progress ssh://hyperledger-jobbuilder@gerrit.hyperledger.org:29418/fabric-chaincode-node +refs/heads/*:refs/remotes/origin/*
20:56:25 ERROR: Timeout after 10 minutes
20:56:26 ERROR: Error cloning remote repo 'origin'
{code}

*Build Log*
https://jenkins.hyperledger.org/view/fabric-chaincode-node/job/fabric-chaincode-node-merge-x86_64/73/console
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02du5:,,,,,,,,sambhavdutt,,,,,,,,,,,,,,,,,,,,10/Apr/18 1:47 PM;sambhavdutt;This issue has been fixed. Gerrit has been working from last saturday and the repositories are cloning in the usual way.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer event service cannot reconnect NPE ,FAB-9333,29143,Bug,Invalid,FAB,Fabric,software,ChristopherFerris,,,High,Done,,aatkddny,aatkddny,04/Apr/18 2:19 PM,04/Apr/18 4:30 PM,26/Apr/18 6:49 AM,04/Apr/18 3:59 PM,,,,,,fabric-sdk-java,,,,,,0,java-sdk,,,,,,,"When the peer calls to try to reconnect to the event service in the method: 

??reconnectPeerEventServiceClient??

It's calling to construct a PeerEventServicClient thus:

??PeerEventServiceClient lpeerEventingClient = *new* PeerEventServiceClient(*this*, *new* Endpoint(url, properties).getChannelBuilder(), properties, *null*);??

If you look at the top of the constructor here:

??    PeerEventServiceClient(Peer peer, ManagedChannelBuilder<?> channelBuilder, Properties properties, PeerOptions peerOptions) \{??

?? ??

??        *this*.channelBuilder = channelBuilder;??

??        *this*.filterBlock = peerOptions.isRegisterEventsForFilteredBlocks();??

 peerOptions is null. This is throwing an NPE. Clearly this isn't what was intended.

 ",1.1.0-alpha SDK,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02dc5:,,,,,,,,aatkddny,rickr,,,,,,,,,,,,,,,,,,,"04/Apr/18 2:38 PM;rickr;Please try on 1.1.0-SNAPSHOT level. Reopen if that produces and must have logs a trace level.
Description is need on exactly how and why the  peer is disconnected.

Thanks.","04/Apr/18 2:40 PM;aatkddny;The peer isn't disconnected. It's running the SDK against bluemix, but you surely can't be justifying calling a constructor with a null and then referencing it in the constructor.

 ",04/Apr/18 2:44 PM;rickr;No I'm saying I'm not supporting 1.1.0-alpha,"04/Apr/18 2:48 PM;aatkddny;so what's the supported version? snapshot? the latest version in maven is 1.1.0-alpha.

if you don't want to support it push another version. 

 ","04/Apr/18 2:54 PM;aatkddny;And it dumps in snapshot throwing this:

Received Rst Stream

io.grpc.StatusRuntimeException: UNAVAILABLE: HTTP/2 error code: NO_ERROR
 Received Rst Stream
 at io.grpc.Status.asRuntimeException(Status.java:526) ~[grpc-core-1.9.0.jar:1.9.0]
 at io.grpc.stub.ClientCalls$StreamObserverToCallListenerAdapter.onClose(ClientCalls.java:419) [grpc-stub-1.9.0.jar:1.9.0]
 at io.grpc.ForwardingClientCallListener.onClose(ForwardingClientCallListener.java:41) [grpc-core-1.9.0.jar:1.9.0]
 at io.grpc.internal.CensusStatsModule$StatsClientInterceptor$1$1.onClose(CensusStatsModule.java:684) [grpc-core-1.9.0.jar:1.9.0]
 at io.grpc.ForwardingClientCallListener.onClose(ForwardingClientCallListener.java:41) [grpc-core-1.9.0.jar:1.9.0]
 at io.grpc.internal.CensusTracingModule$TracingClientInterceptor$1$1.onClose(CensusTracingModule.java:392) [grpc-core-1.9.0.jar:1.9.0]
 at io.grpc.internal.ClientCallImpl.closeObserver(ClientCallImpl.java:475) [grpc-core-1.9.0.jar:1.9.0]
 at io.grpc.internal.ClientCallImpl.access$300(ClientCallImpl.java:63) [grpc-core-1.9.0.jar:1.9.0]
 at io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl.close(ClientCallImpl.java:557) [grpc-core-1.9.0.jar:1.9.0]
 at io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl.access$600(ClientCallImpl.java:478) [grpc-core-1.9.0.jar:1.9.0]
 at io.grpc.internal.ClientCallImpl$ClientStreamListenerImpl$1StreamClosed.runInContext(ClientCallImpl.java:590) [grpc-core-1.9.0.jar:1.9.0]
 at io.grpc.internal.ContextRunnable.run(ContextRunnable.java:37) [grpc-core-1.9.0.jar:1.9.0]
 at io.grpc.internal.SerializingExecutor.run(SerializingExecutor.java:123) [grpc-core-1.9.0.jar:1.9.0]
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_162]
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_162]
 at java.lang.Thread.run(Thread.java:748) [na:1.8.0_162]

 

Exception in thread ""pool-5-thread-1"" java.lang.NullPointerException
 at org.hyperledger.fabric.sdk.PeerEventServiceClient.<init>(PeerEventServiceClient.java:78)
 at org.hyperledger.fabric.sdk.Peer.lambda$reconnectPeerEventServiceClient$0(Peer.java:306)
 at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
 at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
 at java.lang.Thread.run(Thread.java:748)

which is the same error output string as the reported one

 ",04/Apr/18 3:07 PM;rickr;Nothing is _supported_ till 1.1.0 is released.  Right now the latest 1.1.0-SNAPSHOT is available.   ,04/Apr/18 3:09 PM;aatkddny;And broken. In the same place as alpha.,"04/Apr/18 3:48 PM;rickr;Probably the same because I don't think your  application is really referencing 1.1.0-SNAPSHOT 

From your .m2/repository/org/hyperledger



find | grep -i alpha 

remove any reference to it 

 

Make sure your application's pom.xml refrence 1.1.0-SNAPSHOT

And do a full rebuild.

 

 ","04/Apr/18 3:55 PM;rickr;When you do full rebuild you should see maven pulling it down 
and in your 
.m2/repository/org/hyperledger directory you should see a 1.1.0-SNAPSHOT 
find | grep -i snapshot","04/Apr/18 3:59 PM;aatkddny;Well that was embarrassing.

I actually built it from the latest source.

What I forgot however was that the second defendant project in this POC code ALSO needed it's pom updating from -alpha. A 50% solution didn't cut it in this instance. 

Mea culpa. Apologies. Pls close - I can see the fix in the Peer code.","04/Apr/18 4:06 PM;rickr;Latest published snapshot should be [fabric-sdk-java-1.1.0-20180321.204354-35.jar|https://oss.sonatype.org/content/repositories/snapshots/org/hyperledger/fabric-sdk-java/fabric-sdk-java/1.1.0-SNAPSHOT/fabric-sdk-java-1.1.0-20180321.204354-35.jar]
should see that in the .m2 repo",04/Apr/18 4:30 PM;rickr;Glad it's working for you.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Many build tests are not executing in the fabric-test-daily & fabric-smoke-test-daily.,FAB-9298,29091,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,sambhavdutt,sambhavdutt,sambhavdutt,02/Apr/18 9:39 PM,12/Apr/18 2:53 PM,26/Apr/18 6:49 AM,12/Apr/18 2:49 PM,,,,v1.2,,fabric-quality,,,,,,0,ci_failure,,,,,,,"The bootstrap, chaincode , gossip, ledger, peer tests are not executing in the fabric-test-daily and fabric-smoke-test-daily. In some cases, the CI jobs show a successful test result when some of the standard tests are not executed.

*fabric-smoke-test-daily* 
{code:java}
05:31:01 ========== Behave feature and system tests...
05:31:02 Feature: Bootstrapping Hyperledger Fabric # bootstrap.feature:7
05:31:02   As a user I want to be able to bootstrap my fabric network
05:31:02   @smoke
05:31:02   Scenario: Access to the fabric protobuf files                    # bootstrap.feature:66
05:31:02     Given I test the access to the generated python protobuf files # steps/orderer_impl.py:26
05:31:02     Then there are no errors                                       # steps/basic_impl.py:370
05:31:02 
05:31:02   @smoke
05:31:02   Scenario: Basic operations to create a useful blockchain network  # bootstrap.feature:71
05:31:02     Given I have a bootstrapped fabric network                      # steps/basic_impl.py:178
05:31:02       Traceback (most recent call last):
05:31:02         File ""/usr/local/lib/python2.7/dist-packages/behave/model.py"", line 1456, in run
05:31:02           match.run(runner.context)
05:31:02         File ""/usr/local/lib/python2.7/dist-packages/behave/model.py"", line 1903, in run
05:31:02           self.func(context, *args, **kwargs)
05:31:02         File ""steps/basic_impl.py"", line 180, in step_impl
05:31:02           bootstrapped_impl(context, ""solo"", ""leveldb"", False)
05:31:02         File ""steps/basic_impl.py"", line 93, in bootstrapped_impl
05:31:02           config_util.generateConfig(context, channelID, config_util.CHANNEL_PROFILE, context.ordererProfile)
05:31:02         File ""/w/workspace/fabric-smoke-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/feature/steps/config_util.py"", line 139, in generateConfig
05:31:02           setupConfigs(context, channelID)
05:31:02         File ""/w/workspace/fabric-smoke-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/feature/steps/config_util.py"", line 107, in setupConfigs
05:31:02           for orgDir in os.listdir(""./{0}/ordererOrganizations"".format(testConfigs)):
05:31:02       OSError: [Errno 2] No such file or directory: './configs/5d4e0fe637c911e8876afa163ec7aa44/ordererOrganizations'
05:31:02       
05:31:02       Captured stdout:
05:31:02       Unable to generate crypto material: [Errno 2] No such file or directory
05:31:02       testConfigs: configs/5d4e0fe637c911e8876afa163ec7aa44
05:31:02 
05:31:02 Exception TypeError: 'NoneType' object is not iterable
05:31:02 Traceback (most recent call last):
05:31:02   File ""/usr/local/bin/behave"", line 11, in <module>
{code}

*fabric-test-daily*

{code:java}
04:06:35         File ""/w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/feature/steps/config_util.py"", line 139, in generateConfig
04:06:35           setupConfigs(context, channelID)
04:06:35         File ""/w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/feature/steps/config_util.py"", line 107, in setupConfigs
04:06:35           for orgDir in os.listdir(""./{0}/ordererOrganizations"".format(testConfigs)):
04:06:35       OSError: [Errno 2] No such file or directory: './configs/90de188a37bd11e89bedfa163eed59ce/ordererOrganizations'
04:06:35       
04:06:35       Captured stdout:
04:06:35       Unable to generate crypto material: [Errno 2] No such file or directory
04:06:35       testConfigs: configs/90de188a37bd11e89bedfa163eed59ce
04:06:35 
04:06:35 Exception TypeError: 'NoneType' object is not iterable
04:06:35 Traceback (most recent call last):
04:06:35   File ""/usr/local/bin/behave"", line 11, in <module>
{code}


*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/test_results_analyzer/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02d25:,,,,,,,,latitiah,sambhavdutt,,,,,,,,,,,,,,,,,,,05/Apr/18 3:53 AM;sambhavdutt;The update patch fix will be merged soon after testing.,"09/Apr/18 2:44 PM;latitiah;The orderer tests from this same suite are also not being executed at all. I don't think this is the same root cause, so I may just open a different issue for that problem, but thought that I'd give you a head's up.","12/Apr/18 2:46 PM;sambhavdutt;The errors addressed in this bug were fixed and the OTE test in specific executed fine after. 

The current smoke-test-daily in ledger_lte is failing due as the test is exceeding the 120 minute timeout. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer OTE tests are failing in fabric-test as go & grpc versions have been updated in fabric.,FAB-9296,29089,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,scottz,sambhavdutt,sambhavdutt,02/Apr/18 9:15 PM,10/Apr/18 5:54 PM,26/Apr/18 6:49 AM,10/Apr/18 5:54 PM,,,,v1.2,,fabric-quality,,,,,,0,ci_failure,,,,,,,"The Orderer OTE test executed well after FAB-8423 was merged. 
The OTE tests are failing now as the go version is updated to 1.10, and grpc version too  in fabric(, fabric-ca) master branch.

Updating the fabric-test to the same version could possibly fix this error.

*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/308/testReport/orderer_ote/perf_orderer/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02d1p:,,,,,,,,nnao,sambhavdutt,scottz,,,,,,,,,,,,,,master,,,true,"09/Apr/18 9:38 PM;scottz;Status update: I have a fix ready to test, but cannot yet build a load in Vagrant, which hasn't been upgraded to use the new versions.
{code:java}
fabric-test/tools/OTE$ diff ote.go ote.go.fixGrpc 
 105a106,107
 > var maxGrpcMsgSize = 1000 * 1024 * 1024
 > 
 330a333
 > var err error
 337c340
 < err := mspmgmt.LoadLocalMsp(fmt.Sprintf(""%s/msp"", matches[0]), ordConf.General.BCCSP, orgMSPID)
 —
 > err = mspmgmt.LoadLocalMsp(fmt.Sprintf(""%s/msp"", matches[0]), ordConf.General.BCCSP, orgMSPID)
 345a349
 > 
 347,348c351,353
 < var err error
 < comm.SetMaxRecvMsgSize(1000 * 1024 * 1024)
 —
 > 
 > // OLD: comm.SetMaxRecvMsgSize(1000 * 1024 * 1024)
 > 
 352c357,358
 < dialOpts = append(dialOpts, grpc.WithDefaultCallOptions(grpc.MaxCallRecvMsgSize(comm.MaxRecvMsgSize())))
 —
 > // OLD: dialOpts = append(dialOpts, grpc.WithDefaultCallOptions(grpc.MaxCallRecvMsgSize(comm.MaxRecvMsgSize())))
 > dialOpts = append(dialOpts, grpc.WithDefaultCallOptions(grpc.MaxCallRecvMsgSize(maxGrpcMsgSize))){code}","09/Apr/18 10:08 PM;nnao;[~scottz] I think ""github.com/hyperledger/fabric/core/comm"" has MaxRecvMsgSize and some format 'verbs' are wrong.
So I succeeded OTE build below some changes.

{code:java}
vagrant@ubuntu-xenial:/opt/gopath/src/github.com/hyperledger/fabric-test/regression/daily$ git diff
diff --git a/fabric b/fabric
--- a/fabric
+++ b/fabric
@@ -1 +1 @@
-Subproject commit c6515daf3483c9ec02a6bf48e492094051ac8476
+Subproject commit c6515daf3483c9ec02a6bf48e492094051ac8476-dirty
diff --git a/tools/OTE/ote.go b/tools/OTE/ote.go
index 2d4c570..097f5a1 100644
--- a/tools/OTE/ote.go
+++ b/tools/OTE/ote.go
@@ -330,7 +330,7 @@ func (b *broadcastClient) getAck() error {
 func startConsumer(serverAddr string, chanID string, ordererIndex int, channelIndex int, txRecvCntrP *int64, blockRecvCntrP *int64, consumerConnP **grpc.ClientConn, seek int, quiet bool, tlsEnabled bool, orgMSPID string) {
         myName := clientName(""Consumer"", ordererIndex, channelIndex)
         signer := localmsp.NewSigner()
-        ordererName := strings.Trim(serverAddr, fmt.Sprintf("":%s"", ordStartPort))
+        ordererName := strings.Trim(serverAddr, fmt.Sprintf("":%d"", ordStartPort))
         matches, _ := filepath.Glob(fmt.Sprintf(""/etc/hyperledger/fabric/artifacts/ordererOrganizations/example.com/orderers/%s"" + ""*"", ordererName))
         ordConf.General.BCCSP.SwOpts.FileKeystore.KeyStorePath=fmt.Sprintf(""%s/msp/keystore"", matches[0])
         if ordererIndex == 0 { // Loading the msp's of orderer0 for every channel is enough to create the deliver client
@@ -345,11 +345,10 @@ func startConsumer(serverAddr string, chanID string, ordererIndex int, channelIn
         }
         var conn *grpc.ClientConn
         var err error
-        comm.SetMaxRecvMsgSize(1000 * 1024 * 1024)
         if tlsEnabled {
                 var dialOpts []grpc.DialOption
                 // set max send/recv msg sizes
-                dialOpts = append(dialOpts, grpc.WithDefaultCallOptions(grpc.MaxCallRecvMsgSize(comm.MaxRecvMsgSize())))
+                dialOpts = append(dialOpts, grpc.WithDefaultCallOptions(grpc.MaxCallRecvMsgSize(comm.MaxRecvMsgSize)))
                 creds, err := credentials.NewClientTLSFromFile(fmt.Sprintf(""%s/tls/ca.crt"", matches[0]), fmt.Sprintf(""%s"", ordererName))
                 dialOpts = append(dialOpts, grpc.WithTransportCredentials(creds))
                 conn, err = grpc.Dial(serverAddr, dialOpts...)
@@ -550,7 +549,7 @@ func moreDeliveries(txSentP *[][]int64, totalNumTxSentP *int64, txSentFailuresP
 func startProducer(serverAddr string, chanID string, ordererIndex int, channelIndex int, txReq int64, txSentCntrP *int64, txSentFailureCntrP *int64, tlsEnabled bool, payload int) {
         myName := clientName(""Producer"", ordererIndex, channelIndex)
         signer := localmsp.NewSigner()
-        ordererName := strings.Trim(serverAddr, fmt.Sprintf("":%s"", ordStartPort))
+        ordererName := strings.Trim(serverAddr, fmt.Sprintf("":%d"", ordStartPort))
         matches, _ := filepath.Glob(fmt.Sprintf(""/etc/hyperledger/fabric/artifacts/ordererOrganizations/example.com/orderers/%s"" + ""*"", ordererName))
         ordConf.General.BCCSP.SwOpts.FileKeystore.KeyStorePath=fmt.Sprintf(""%s/msp/keystore"", matches[0])
         var conn *grpc.ClientConn
{code}
","10/Apr/18 2:36 AM;scottz;[~nnao] yes, if you look at my comment, just prior to yours, you will see a similar fix to MaxRecvMsgSize. If you do as you propose, then we also have to set the max recv msg size somehow locally or find another funtion in comm. The way you fixed it will compile but it will not increase the max allowed msg size as is needed. If you would like to propose a solution and push a patchset, I would be happy to review it and help get it merged quickly, since I have run into some local troubles of my own.

I see you also fixed another problem (%s) too, as did I (err).",10/Apr/18 4:25 PM;nnao;https://gerrit.hyperledger.org/r/c/20389/,10/Apr/18 5:53 PM;scottz;Thank you Nao. Your solution works! I merged it.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NetworkConfig doesn't support TLS for CertificateAuthority ,FAB-9282,29070,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rickr,aatkddny,aatkddny,01/Apr/18 4:13 PM,07/Apr/18 9:05 AM,26/Apr/18 6:49 AM,07/Apr/18 9:05 AM,,,,v1.1,,fabric-sdk-java,,,,,,1,java-SDK,,,,,,,"The NetworkConfig code doesn't support adding the certificate to the CAInfo object.

The code (at least in 1.1.0-alpha) is commented as a TODO. 

Without this it isn't possible to use the CAInfo object to build the connection to an HFCAClient and have it work when the CA server is using TLS.

Unfortunately there's no internal visibility to the JsonObject that is used to create the CAInfo object so one has to parse it externally to pull out the pem and build the properties, either by duplicating the logic in the createAllCertificateAuthorities() method or by mapping a json response outside the NetworkConfig object.

===

As an aside - and outside the original report - changing the HFCAClient to self-create with some form of loadFromNetworkConfig (in the same vein that the HFClient creates a channel) either by CA name or by doing a random select from the list of CAs available would be a tremendous improvement.  

 

 

gerrit https://gerrit.hyperledger.org/r/#/c/20227/

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02cxp:,,,,,,,,aatkddny,huy.tranibm,ZhangKejie,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer panic with 49MB private data file,FAB-9275,29063,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,ericmvaughn,ericmvaughn,31/Mar/18 3:39 PM,09/Apr/18 5:50 PM,26/Apr/18 6:49 AM,08/Apr/18 11:21 PM,v1.2,,,v1.2,,fabric-baseimage,fabric-peer,,,,,0,,,,,,,,"When trying to add a 49MB file to a private data collection the peer panics after getting a couchdb error.
  
 The configuration was 2 peers, 2 couchdbs, 1 ca, and 1 orderer.

 
{code:java}
 2018-03-31 15:22:34.529 UTC [couchdb] handleRequest -> DEBU bd6 Entering handleRequest() method=POST url=http://couchdb0:5984/mychannel_poe-100$$porg1$m$s$p_collection/_bulk_docs
 2018-03-31 15:22:34.807 UTC [couchdb] handleRequest -> DEBU bd7 HTTP Request: POST /mychannel_poe-100$$porg1$m$s$p_collection/_bulk_docs HTTP/1.1 | Host: couchdb0:5984 | User-Agent: Go-http-client/1.1 | Content-Length: 68507154 | Accept: application/json | Content-Type: application/json | Accept-Encoding: gzip | | 
 2018-03-31 15:22:34.811 UTC [couchdb] handleRequest -> DEBU bd8 Couch DB Error:too_large, Status Code:413, Reason:the request entity is too large
 2018-03-31 15:22:34.811 UTC [statecouchdb] ClearCachedVersions -> DEBU bd9 Clear Cache
 panic: Error during commit to txmgr:Couch DB Error:too_large, Status Code:413, Reason:the request entity is too large
goroutine 329 [running]:
 github.com/hyperledger/fabric/core/ledger/kvledger.(*kvLedger).CommitWithPvtData(0xc421680380, 0xc42260e090, 0x0, 0x0)
 /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:251 +0x921
 github.com/hyperledger/fabric/core/ledger/ledgermgmt.(*closableLedger).CommitWithPvtData(0xc421731c60, 0xc42260e090, 0x0, 0x0)
 <autogenerated>:1 +0x47
 github.com/hyperledger/fabric/core/committer.(*LedgerCommitter).CommitWithPvtData(0xc421baa7c0, 0xc42260e090, 0xc422dc5d20, 0xc4225aa318)
 /opt/gopath/src/github.com/hyperledger/fabric/core/committer/committer_impl.go:103 +0x6b
 github.com/hyperledger/fabric/gossip/privdata.(*coordinator).StoreBlock(0xc4216043c0, 0xc422684820, 0x0, 0x0, 0x0, 0xc423556e60, 0xc423556e60)
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:223 +0xcf9
 github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock(0xc42146e080, 0xc422684820, 0x0, 0x0, 0x0, 0x0, 0x0)
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:759 +0x6f
 github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads(0xc42146e080)
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:546 +0x411
 created by github.com/hyperledger/fabric/gossip/state.NewGossipStateProvider
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:238 +0x6b5
{code}

  ",,,,,,,,,,,,,,,,,,,,,,,,31/Mar/18 3:38 PM;ericmvaughn;peer-full-log.zip;https://jira.hyperledger.org/secure/attachment/14842/peer-full-log.zip,,,,,,,FAB-8718,0|i02cw5:,,,,,,,,ericmvaughn,mastersingh24,,,,,,,,,,,,,,,master,,,true,"08/Apr/18 7:00 PM;mastersingh24;It appears that the maximum size for HTTP requests to CoucbDB 2.1.x is 64MB.

You can override this by setting `httpd.max_http_request_size` in the local.ini file but not sure there is anyway to change the system once it is up and running.

Looks like the max value can be up to 4GB so will go with that.

[~denyeart]",08/Apr/18 7:37 PM;mastersingh24;https://gerrit.hyperledger.org/r/20309,09/Apr/18 5:50 PM;ericmvaughn;This fixed the issue I was seeing.  Thanks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer panics and crashes when there is log contention ,FAB-9174,28904,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,latitiah,latitiah,26/Mar/18 8:56 PM,11/Apr/18 8:33 AM,26/Apr/18 6:49 AM,11/Apr/18 8:33 AM,v1.2,,,v1.2,,fabric-peer,,,,,,0,,,,,,,,"While trying to start a network with 2 orgs with 2 peers per org and verifying that the network has successfully started by looking at each of the peer logs, it was noticed that peer1.org2.example.com exited after starting. Possible race condition.

The following error was found in the log:
{code}
fatal error: concurrent map read and map write
{code}

",,,,,,,,,,,,,,,,,,,,,,,,26/Mar/18 8:55 PM;latitiah;peer1.org2.example.com.log;https://jira.hyperledger.org/secure/attachment/14824/peer1.org2.example.com.log,,,,,,,,0|i02c0t:,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,master,,,true,"07/Apr/18 12:01 PM;mastersingh24;[~latitiah] So this is happening in v1.1 branch or is this from master?

My guess is this is from master",07/Apr/18 12:21 PM;mastersingh24;https://gerrit.hyperledger.org/r/20277,"07/Apr/18 12:47 PM;latitiah;The first time I saw it was on 1.1, but I saw it again earlier this week on master. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Inconsistent ""bind: address already in use"" in TestConfidentiality unit-test",FAB-9100,28822,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,nirro,rameshthoomu,rameshthoomu,24/Mar/18 1:12 PM,15/Apr/18 9:45 PM,26/Apr/18 6:49 AM,15/Apr/18 9:44 PM,v1.2,,,v1.2,,fabric-gossip,,,,,,0,ci_failure,,,,,,,"Many builds are failing with the below error.

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-verify-x86_64/21803/console.log.gz
{code:java}
00:09:36.153 unit-tests_1  | --- FAIL: TestConfidentiality (0.01s)
00:09:36.154 unit-tests_1  |     orgs_test.go:338: localhost:42610 id: 0 externalEndpoint: localhost:42610
00:09:36.154 unit-tests_1  |     orgs_test.go:338: localhost:42611 id: 1 externalEndpoint: localhost:42611
00:09:36.154 unit-tests_1  |     orgs_test.go:338: localhost:42612 id: 2 externalEndpoint: 
00:09:36.155 unit-tests_1  |     orgs_test.go:338: localhost:42613 id: 3 externalEndpoint: localhost:42613
00:09:36.155 unit-tests_1  |     orgs_test.go:338: localhost:42614 id: 4 externalEndpoint: localhost:42614
00:09:36.156 unit-tests_1  |     orgs_test.go:338: localhost:42615 id: 5 externalEndpoint: 
00:09:36.156 unit-tests_1  | panic: listen tcp :42616: bind: address already in use [recovered]
00:09:36.156 unit-tests_1  |     panic: listen tcp :42616: bind: address already in use{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02bk5:,,,,,,,,nirro,rameshthoomu,sambhavdutt,yacovm,,,,,,,,,,,,,master,,,true,15/Apr/18 9:44 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/20591/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Inconsistent ""stateleveldb - no such file or directory"" error in CI builds",FAB-9093,28815,Bug,Duplicate,FAB,Fabric,software,ChristopherFerris,,,High,,chris.elder,rameshthoomu,rameshthoomu,23/Mar/18 9:15 PM,25/Apr/18 11:01 AM,26/Apr/18 6:49 AM,,v1.2,,,v1.2,,fabric-ledger,,,,,,0,ci_failure,,,,,,,"observed below errors inconsistently in CI builds.

[https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-x86_64/21799/console]
{code:java}
00:08:09.372 unit-tests_1  | --- FAIL: TestGenesisBlockNoError (0.23s)
00:08:09.373 unit-tests_1  | panic: Error while trying to open DB: open /tmp/fabric/ledgertests/kvledger/history/historydb/historyleveldb/ledgersData/stateLeveldb: no such file or directory [recovered]
00:08:09.373 unit-tests_1  |     panic: Error while trying to open DB: open /tmp/fabric/ledgertests/kvledger/history/historydb/historyleveldb/ledgersData/stateLeveldb: no such file or directory{code}
[https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-x86_64/21800/consoleFull]
{code:java}
00:07:24.560 unit-tests_1  | --- FAIL: TestSavepoint (0.03s)
00:07:24.561 unit-tests_1  | panic: Error while trying to open DB: rename /tmp/fabric/ledgertests/kvledger/history/historydb/historyleveldb/ledgersData/stateLeveldb/CURRENT.0 /tmp/fabric/ledgertests/kvledger/history/historydb/historyleveldb/ledgersData/stateLeveldb/CURRENT: no such file or directory [recovered]
00:07:24.562 unit-tests_1  |     panic: Error while trying to open DB: rename /tmp/fabric/ledgertests/kvledger/history/historydb/historyleveldb/ledgersData/stateLeveldb/CURRENT.0 /tmp/fabric/ledgertests/kvledger/history/historydb/historyleveldb/ledgersData/stateLeveldb/CURRENT: no such file or directory{code}
[https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-x86_64/3374/console]
{code:java}
00:06:40.425 unit-tests_1  | --- FAIL: TestHistoryForInvalidTran (0.04s)
00:06:40.425 unit-tests_1  | panic: Error while trying to open DB: open /tmp/fabric/ledgertests/kvledger/history/historydb/historyleveldb/ledgersData/historyLeveldb: no such file or directory [recovered]
00:06:40.426 unit-tests_1  |     panic: Error while trying to open DB: open /tmp/fabric/ledgertests/kvledger/history/historydb/historyleveldb/ledgersData/historyLeveldb: no such file or directory{code}
 

 ",,,,,,,,,,,,,,,,,FAB-9222,,,,,,,,,,,,,,,0|i01rsw:,,,,,,,,denyeart,mastersingh24,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,"07/Apr/18 10:07 AM;mastersingh24;I'm pretty sure this is fixed with [https://gerrit.hyperledger.org/r/20051]

If so, this can be marked as a duplicate of FAB-9222",25/Apr/18 11:01 AM;denyeart;[~rameshthoomu] Have you seen this recently? Or can it be closed?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
META-INF directory gets packaged wrongly,FAB-9068,28783,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,High,,sudeshrshetty,ga25waq,ga25waq,23/Mar/18 12:43 AM,09/Apr/18 9:53 AM,26/Apr/18 6:49 AM,,,,,,,fabric-sdk-go,,,,,,0,,,,,,,,"[As stated by David Enyeart|https://jira.hyperledger.org/browse/FAB-8345?focusedCommentId=40408&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-40408], a packaged chaincode archive must contain the META-INF directory (e.g. used for the definition of CouchDB indexes) at its root.

Currently, the packager in
> ./pkg/fab/ccpackager/gopackager/packager.go
with its findSource routine places the META-INF directory below the chaincode's source directory structure, e.g.
> src/github.com/example_cc/META-INF

Due to this, the automatic creation of CouchDB indexes introduced in Fabric 1.1 does not work.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzyuz:z9k1600x,,,,,,,,ga25waq,,,,,,,,,,,,,,,,,,,,"09/Apr/18 9:53 AM;ga25waq;Here is a quick and dirty but tested fix for other users struggling with the same problem, to be placed in the _findSource_ routine of file
> ./pkg/fab/ccpackager/gopackager/packager.go
just before appending the descriptor to the descriptors slice (be aware of an additional import for the strings library).

{code:java}
if strings.Contains(relPath, ""META-INF"") {
  relPath = relPath[strings.Index(relPath, ""META-INF""):]
}
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Composer/Starter Network-Cannot install the Hyperledger Composer runtime onto all of the Hyperledger Fabric peer nodes.,FAB-9064,28779,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,High,,,susmita,susmita,22/Mar/18 9:18 PM,27/Mar/18 4:08 PM,26/Apr/18 6:49 AM,,,,,,,,,,,,,0,,,,,,,,"Error in both stater network/Composer 

Composer:""Error: Error trying install composer runtime. Error: No valid responses from any peers""

Installing and starting the business network
 -->step2:
 ✖ Starting business network definition. This may take a minute...
 Error: Error trying to instantiate composer runtime. Error: No valid responses from any peers.
 Response from attempted peer comms was an error: Error: REQUEST_TIMEOUT",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02bct:,,,,,,,,susmita,,,,,,,,,,,,,,,,,,,,27/Mar/18 4:04 PM;susmita;https://github.ibm.com/IBM-Blockchain/starterplan-issues/issues/47,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
index extraction for CouchDB should not assume TarGz package format,FAB-9059,28774,Bug,In Progress,FAB,Fabric,software,ChristopherFerris,,,High,,muralisr,muralisr,muralisr,22/Mar/18 8:05 PM,13/Apr/18 5:16 PM,26/Apr/18 6:49 AM,,v1.1,,,v1.1.1,v1.2,fabric-endorser,,,,,,0,,,,,,,,"CouchDB index extraction implemented in https://jira.hyperledger.org/browse/FAB-7134 (part of https://jira.hyperledger.org/browse/FAB-3067) assumes targz chaincode package format. Not all chaincode package types will use this format. In particular, the chaintool package is not targz formatted. Instantiation of chaintool package fails with
{code:java}
18-03-20 21:59:10.811 UTC [ccprovider] ExtractStatedbArtifactsFromCCPackage -> ERRO 6c7 Failure opening codepackage gzip stream: gzip: invalid header
{code}
The ""platform"" abstraction should be involved to provide the ""statedb artifacts"" - currently done by ExtractStatedbArtifactsFromCCPackage in core/common/ccprovider/cc_statedb_artifacts_provider.go - to extract using platform specific packaging.
{code:java}
NOTE - a lot more can be done to make generalize metadata and make it a powerful tool for use with chaincode (in a nutshell, metadata can be viewed in terms of key/value pairs that user chaincode can also use). This being a bug fix for 1.1.1, will not go deep into those generalizations but will try to pave way for future work as restricted by ""least disruption in a point release"" principle.{code}
[~greg.haskins]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02bbp:,,,,,,,,denyeart,muralisr,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Index out of range panic in dynamic selection,FAB-8954,28643,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,bstasyszyn,bstasyszyn,bstasyszyn,19/Mar/18 1:27 AM,19/Mar/18 8:26 PM,26/Apr/18 6:49 AM,19/Mar/18 8:26 PM,,,,,,fabric-sdk-go,,,,,,0,,,,,,,," panic: runtime error: index out of range
 
 goroutine 9099 [running]:
 github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection/pgresolver.(*andOperation).and(0xc422a5d9f8, 0xc4230db600, 0x2, 0x2, 0x2)
 	/opt/gopath/src/github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection/pgresolver/groupsimpl.go:381 +0x5ff
 github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection/pgresolver.(*andOperation).and(0xc422a5d9f8, 0xc4230db600, 0x2, 0x2, 0x1)
 	/opt/gopath/src/github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection/pgresolver/groupsimpl.go:390 +0x4e8
 github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection/pgresolver.(*andOperation).and(0xc422a5d9f8, 0xc4230db600, 0x2, 0x2, 0x0)
 	/opt/gopath/src/github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection/pgresolver/groupsimpl.go:390 +0x4e8
 github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection/pgresolver.and(0xc4230db600, 0x2, 0x2, 0x7ff8b2b32a00, 0xc4242eb4e0, 0x1)
 	/opt/gopath/src/github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection/pgresolver/groupsimpl.go:368 +0xa8
 github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection/pgresolver.mustGetPeerGroups(0x7ff8b2b32980, 0xc4242ebdc0, 0x2, 0x2, 0x3)
 	/opt/gopath/src/github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection/pgresolver/pgresolverimpl.go:147 +0x28f
 github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection/pgresolver.(*peerGroupResolver).getPeerGroups(0xc423f5c150, 0xc42422d900, 0x1261e00, 0xc422a5dcc8)
 	/opt/gopath/src/github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection/pgresolver/pgresolverimpl.go:121 +0x1ca
 github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection/pgresolver.(*peerGroupResolver).Resolve(0xc423f5c150, 0xc42572d200, 0x1, 0x1)
 	/opt/gopath/src/github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection/pgresolver/pgresolverimpl.go:77 +0x45
 github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection.(*selectionService).GetEndorsersForChaincode(0xc42275bc70, 0xc42318d590, 0x1, 0x1, 0xc4229b8dc8, 0x1, 0x1, 0x1, 0xc422bf0650, 0xc4227d7560, ...)
 	/opt/gopath/src/github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/common/selection/dynamicselection/dynamicselection.go:159 +0x2e7
 github.com/hyperledger/fabric/plugins/transactionsnap/pkg/client/handler.(*PeerFilterHandler).Handle(0xc422ccf9c0, 0xc4238e88c0, 0xc423a0b0e0)
 	/opt/gopath/src/github.com/hyperledger/fabric/plugins/transactionsnap/pkg/client/handler/peerfilter.go:52 +0x206
 github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/channel.(*Client).InvokeHandler.func1(0x7ff8b2b27e80, 0xc422ccf9c0, 0xc4238e88c0, 0xc423a0b0e0, 0xc4224d4e40, 0xc4222eca80, 0xc425813380)
 	/opt/gopath/src/github.com/hyperledger/fabric/plugins/vendor/github.com/hyperledger/fabric-sdk-go/pkg/client/channel/chclient.go:114 +0x65",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02alp:,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Lazy reference bugs,FAB-8945,28632,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,bstasyszyn,bstasyszyn,bstasyszyn,17/Mar/18 3:36 PM,19/Mar/18 5:03 PM,26/Apr/18 6:49 AM,17/Mar/18 11:33 PM,,,,,,fabric-sdk-go,,,,,,0,,,,,,,,"Lazyref has the following issues:
- Close() doesn't wait for timer Go routine to shut down before returning
- Idle expiration time isn't calculated correctly
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02aj9:,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
false positive in fabric-test functional behave tests,FAB-8903,28571,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,High,,rameshthoomu,rameshthoomu,rameshthoomu,15/Mar/18 7:37 PM,09/Apr/18 6:27 PM,26/Apr/18 6:49 AM,,,,,v1.2,,fabric-quality,,,,,,0,ci_failure,,,,,,,"observed false positive errors in fabric-test functional behave tests. I see tests are failed in behave but the overall status is showing as SUCCESS/PASSED in the test result analyzer page.

[https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/test_results_analyzer/]

search for `assertion failed` in build#288",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzyuz:z9n42i,,,,,,,,latitiah,rameshthoomu,scottz,,,,,,,,,,,,,,,,,,"16/Mar/18 3:47 PM;latitiah;The reason for the false positives is the behave tests never complete execution. Behave dies with the following error:
{code}
07:47:25 OSError: [Errno 12] Cannot allocate memory
07:47:26 /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/regression/daily{code}
 As a result, the behave summary is never executed for consumption by Jenkins. 

There are 2 things that should be researched/done here. 
 # Why are the system resources running out of memory?
 # The Jenkins job should show a failure when there is no summary from the test executions.

 ",19/Mar/18 1:45 AM;rameshthoomu;[~ry] we are seeing cannot allocate memory issues in x86_64 build machines.. Below is the memory details on that build nodes,"19/Mar/18 1:45 AM;rameshthoomu;[~ry] we are seeing cannot allocate memory issues in x86_64 build machines.. Below are the memory details on that build nodes. Can I get *ssh* access to one of the production or sandbox x86_64 to debug this further.

https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-daily-x86_64/292/
{code:java}
09:47:15.296 ---> nproc:
09:47:15.296  2 
09:47:15.296 
09:47:15.306 ---> df -h:
09:47:15.307  Filesystem      Size  Used Avail Use% Mounted on
09:47:15.307 udev            3.9G     0  3.9G   0% /dev
09:47:15.307 tmpfs           799M   34M  765M   5% /run
09:47:15.307 /dev/vda1        39G   15G   25G  37% /
09:47:15.307 tmpfs           3.9G     0  3.9G   0% /dev/shm
09:47:15.307 tmpfs           5.0M     0  5.0M   0% /run/lock
09:47:15.307 tmpfs           3.9G     0  3.9G   0% /sys/fs/cgroup
09:47:15.307 none            2.0G  1.8G  218M  90% /w
09:47:15.307 tmpfs           799M     0  799M   0% /run/user/1001 
09:47:15.307 
09:47:15.315 ---> free -m:
09:47:15.315                total        used        free      shared  buff/cache   available
09:47:15.315 Mem:           7983         798        4392        1864        2792        5001
09:47:15.315 Swap:             0           0           0 {code}","21/Mar/18 1:52 PM;rameshthoomu;@latitiah On the upgraded build node (16 core, 64. gigs of ram), I don't see the memory allocation error but I see the below error{{
}}
{code:java}
03:08:48.624 IOError: [Errno 11] Resource temporarily unavailable{code}
see the build log [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/295/consoleFull]

{{Could you please check this.}}","26/Mar/18 9:28 PM;latitiah;As this is a CI issue concerning the CI resources and not a software issue, I'm reassigning.

Some hints on area to start searching:
- What node is it trying to use that the job is not able to access? You will need to dig into this a bit more on the CI system nodes. 
- Monitor to see the node usage. Per Ry (via Rocketchat), the minions were set to 4 core, 16G. You can look at the minion name to see which one is having problems when this occurs.","09/Apr/18 6:27 PM;scottz;[~latitiah] Is there a different way to configure and run Behave? Could we create a dummy xml file (so the default behavior would be displayed as failure and indicate the tests were started but not completed) that gets removed or overwritten after Behave tests complete?

This would not preclude the CI team investigation to find and fix the root cause.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dynamic selection service is caching peers,FAB-8899,28567,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,bstasyszyn,bstasyszyn,bstasyszyn,15/Mar/18 5:27 PM,15/Mar/18 9:18 PM,26/Apr/18 6:49 AM,15/Mar/18 9:18 PM,,,,,,fabric-sdk-go,,,,,,0,,,,,,,,"The Dynamic Selection service is caching the first set of peers that are passed to GetEndorsersForChaincode whereas it should be using a fresh list from the discovery service.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02a6l:,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Could not install node chaincode with Fabric 1.1.0-rc1,FAB-8875,28541,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,tibetty,tibetty,tibetty,15/Mar/18 5:28 AM,16/Mar/18 4:26 AM,26/Apr/18 6:49 AM,16/Mar/18 4:26 AM,,,,v1.1,,fabric-chaincode-node,,,,,15/Mar/18 12:00 AM,0,help-wanted,,,,,,,"When I tried to install node blockchain with the ""peer"" tool shipped with Fabric 1.1.0-rc1, it failed with below error message:

[node-platform] GetDeploymentPayload -> ERRO 004 Error writing folder to tar package no source files found in <path of test/integration folder>.

 

I strictly followed the instruction of the READ.ME of [https://github.com/hyperledger/fabric-chaincode-node,] so my bug report is actually comprised of 2 parts:
 # Has node chaincode been supported in 1.1.0?
 # If so, what's the possible reason cause above error?

Thanks,

Xihua","OS: MacOS High Sierra v10.13.3 (17D102)

Docker: v17.12.0-ce, build c97c6d6

Fabric: v1.1rc

Golang: v1.10 darwin/amd64

Node: v9.8.0",,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,15/Mar/18 5:27 AM;tibetty;fabric-err.png;https://jira.hyperledger.org/secure/attachment/14778/fabric-err.png,,,,,,,,0|i02a0d:,,,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,"15/Mar/18 1:52 PM;denyeart;[~tibetty] Please try this tutorial, and note the syntax for node js chaincode install and instantiate:

[http://hyperledger-fabric.readthedocs.io/en/release-1.1/build_network.html#install-instantiate-chaincode]

 ","16/Mar/18 2:07 AM;tibetty;Thanks, David!  I followed the instructions you recommended to me, but the problem remained there when I tried to install node chaincode:

Xihua's MacBook:fabric-chaincode-node xihua$ peer chaincode install -n mycc -v 1.0 -l node -p <the leading parts of the absolute path>/fabric-chaincode-node/test/integration/

2018-03-16 09:59:09.241 CST [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc

2018-03-16 09:59:09.241 CST [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc

2018-03-16 09:59:09.241 CST [container] WriteFolderToTarPackage -> INFO 003 rootDirectory = <the leading parts of the absolute path>/fabric-chaincode-node/test/integration

2018-03-16 09:59:09.242 CST [node-platform] GetDeploymentPayload -> ERRO 004 Error writing folder to tar package no source files found in '<the leading parts of the absolute path>/fabric-chaincode-node/test/integration'

Error: Error getting chaincode code chaincode: Error getting chaincode package bytes: Error writing Chaincode package contents: no source files found in '<the leading parts of the absolute path>/fabric-chaincode-node/test/integration'

Usage: – omitted --

Xihua's MacBook:fabric-chaincode-node xihua$ ll <the leading parts of the absolute path>/fabric-chaincode-node/test/integration/

total 24

drwxr-xr-x  3 xihua  staff     96 Mar 15 11:22 ./

drwxr-xr-x  6 xihua  staff    192 Mar  9 11:39 ../

-rw-r--r--  1 xihua  staff  10750 Mar  9 11:39 test.js

 ","16/Mar/18 2:57 AM;tibetty;P.s., when I used relative path, it's been successfully install (no error msg and I bashed into the peer container to check the chaincodes directory), but the following initialization command reported the chaincode had not been installed (handler not found), any suggestions?

 

Xihua's MacBook:fabric-chaincode-node xihua$ CORE_LOGGING_PEER=debug peer chaincode install -l node -n mycc -p test/integration -v v0

2018-03-16 10:50:35.248 CST [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc

2018-03-16 10:50:35.248 CST [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc

2018-03-16 10:50:35.248 CST [container] WriteFolderToTarPackage -> INFO 003 rootDirectory = test/integration

2018-03-16 10:50:35.272 CST [main] main -> INFO 004 Exiting.....

Xihua's MacBook:fabric-chaincode-node xihua$ CORE_LOGGING_PEER=debug peer chaincode instantiate -o localhost:7050 -C mychannel -l node -n mycc -v v0 -c '\{""Args"":[""init""]}' -P 'OR (""DEFAULT.member"")'

2018-03-16 10:51:15.385 CST [chaincodeCmd] checkChaincodeCmdParams -> INFO 001 Using default escc

2018-03-16 10:51:15.385 CST [chaincodeCmd] checkChaincodeCmdParams -> INFO 002 Using default vscc

Error: Error endorsing chaincode: rpc error: code = Unknown desc = failed to init chaincode: handler not found for chaincode mycc:v0

-- omitted --

 

 ","16/Mar/18 4:24 AM;tibetty;All problems got solved!
 # Use relative path (run in the directory where the package.json is placed) to install chaincode
 # Run ""node test.js"" to register chaincode.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing Blockinfo information,FAB-8861,28521,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rickr,rickr,rickr,14/Mar/18 4:15 PM,15/Mar/18 8:39 PM,26/Apr/18 6:49 AM,15/Mar/18 8:39 PM,v1.1,,,v1.1,,fabric-sdk-java,,,,,,0,,,,,,,,"Missing creator from Transaction events.

https://gerrit.hyperledger.org/r/#/c/19171/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i029xh:,,,,,,,,rickr,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot Start the Network,FAB-8853,28505,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,High,,,Ravi.Bodkai,Ravi.Bodkai,14/Mar/18 4:09 AM,09/Apr/18 12:06 PM,26/Apr/18 6:49 AM,,v1.0.6,,,v1.0.7,,fabric-samples,,,,,,0,,,,,,,,"Was working on SampleAsset Go Chaincode Dev & Test in Dev Mode. Followed the instructions to start the network with the docker-compose as below. 

""docker-compose -f docker-compose-simple.yaml up""

Initially I got issues as latest version were not updated. So I got updated to the latest version (x86_64-1.1.0-rc1) by change the image instruction in the .yaml file and reruning it. (hyperledger/fabric-orderer, hyperledger/fabric-peer, hyperledger/fabric-ccenv, hyperledger/fabric-tools)

Then encountered the following error: Not sure how to resolve this: Please help.

ravi@ravi-HP-Pavilion-g6-Notebook-PC:~/Ravi_LD/Hyperledger/Fabric/fabric-samples/chaincode-docker-devmode$ docker-compose -f docker-compose-simple.yaml up
Starting orderer ... 
Starting orderer ... done
Starting peer ... 
Starting peer ... done
Starting chaincode ... 
Starting cli ... 
Starting chaincode
Starting chaincode ... done
Attaching to orderer, peer, cli, chaincode
orderer | 2018-03-14 03:18:47.728 UTC [bccsp_sw] openKeyStore -> DEBU 001 KeyStore opened at [/etc/hyperledger/msp/keystore]...done
orderer | 2018-03-14 03:18:47.729 UTC [bccsp] initBCCSP -> DEBU 002 Initialize BCCSP [SW]
peer | 2018-03-14 03:18:50.306 UTC [main] main -> ERRO 001 Cannot run peer because error when setting up MSP of type bccsp from directory /etc/hyperledger/msp: signing identity expired 2938h11m50.209522208s ago
orderer | 2018-03-14 03:18:47.744 UTC [msp] getPemMaterialFromDir -> DEBU 003 Reading directory /etc/hyperledger/msp/signcerts
orderer | 2018-03-14 03:18:47.744 UTC [msp] getPemMaterialFromDir -> DEBU 004 Inspecting file /etc/hyperledger/msp/signcerts/peer.pem
orderer | 2018-03-14 03:18:47.757 UTC [msp] getPemMaterialFromDir -> DEBU 005 Reading directory /etc/hyperledger/msp/cacerts
orderer | 2018-03-14 03:18:47.757 UTC [msp] getPemMaterialFromDir -> DEBU 006 Inspecting file /etc/hyperledger/msp/cacerts/cacert.pem
peer exited with code 1
orderer | 2018-03-14 03:18:47.757 UTC [msp] getPemMaterialFromDir -> DEBU 007 Reading directory /etc/hyperledger/msp/admincerts
orderer | 2018-03-14 03:18:47.757 UTC [msp] getPemMaterialFromDir -> DEBU 008 Inspecting file /etc/hyperledger/msp/admincerts/admincert.pem
orderer | 2018-03-14 03:18:47.758 UTC [msp] getPemMaterialFromDir -> DEBU 009 Reading directory /etc/hyperledger/msp/intermediatecerts
orderer | 2018-03-14 03:18:47.758 UTC [msp] getMspConfig -> DEBU 00a Intermediate certs folder not found at [/etc/hyperledger/msp/intermediatecerts]. Skipping. [stat /etc/hyperledger/msp/intermediatecerts: no such file or directory]
orderer | 2018-03-14 03:18:47.758 UTC [msp] getPemMaterialFromDir -> DEBU 00b Reading directory /etc/hyperledger/msp/tlscacerts
orderer | 2018-03-14 03:18:47.758 UTC [msp] getMspConfig -> DEBU 00c TLS CA certs folder not found at [/etc/hyperledger/msp/tlsintermediatecerts]. Skipping and ignoring TLS intermediate CA folder. [stat /etc/hyperledger/msp/tlscacerts: no such file or directory]
orderer | 2018-03-14 03:18:47.758 UTC [msp] getPemMaterialFromDir -> DEBU 00d Reading directory /etc/hyperledger/msp/crls
orderer | 2018-03-14 03:18:47.758 UTC [msp] getMspConfig -> DEBU 00e crls folder not found at [/etc/hyperledger/msp/crls]. Skipping. [stat /etc/hyperledger/msp/crls: no such file or directory]
orderer | 2018-03-14 03:18:47.758 UTC [msp] newBccspMsp -> DEBU 00f Creating BCCSP-based MSP instance
orderer | 2018-03-14 03:18:47.758 UTC [msp] New -> DEBU 010 Creating Cache-MSP instance
orderer | 2018-03-14 03:18:47.770 UTC [msp] GetLocalMSP -> DEBU 011 Created new local MSP
orderer | 2018-03-14 03:18:47.770 UTC [msp] Setup -> DEBU 012 Setting up MSP instance DEFAULT
orderer | 2018-03-14 03:18:47.772 UTC [msp/identity] newIdentity -> DEBU 013 Creating identity instance for cert -----BEGIN CERTIFICATE-----
orderer | MIICYjCCAgmgAwIBAgIUB3CTDOU47sUC5K4kn/Caqnh114YwCgYIKoZIzj0EAwIw
orderer | fzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
orderer | biBGcmFuY2lzY28xHzAdBgNVBAoTFkludGVybmV0IFdpZGdldHMsIEluYy4xDDAK
orderer | BgNVBAsTA1dXVzEUMBIGA1UEAxMLZXhhbXBsZS5jb20wHhcNMTYxMDEyMTkzMTAw
orderer | WhcNMjExMDExMTkzMTAwWjB/MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZv
orderer | cm5pYTEWMBQGA1UEBxMNU2FuIEZyYW5jaXNjbzEfMB0GA1UEChMWSW50ZXJuZXQg
orderer | V2lkZ2V0cywgSW5jLjEMMAoGA1UECxMDV1dXMRQwEgYDVQQDEwtleGFtcGxlLmNv
orderer | bTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKIH5b2JaSmqiQXHyqC+cmknICcF
orderer | i5AddVjsQizDV6uZ4v6s+PWiJyzfA/rTtMvYAPq/yeEHpBUB1j053mxnpMujYzBh
orderer | MA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQXZ0I9
orderer | qp6CP8TFHZ9bw5nRtZxIEDAfBgNVHSMEGDAWgBQXZ0I9qp6CP8TFHZ9bw5nRtZxI
orderer | EDAKBggqhkjOPQQDAgNHADBEAiAHp5Rbp9Em1G/UmKn8WsCbqDfWecVbZPQj3RK4
orderer | oG5kQQIgQAe4OOKYhJdh3f7URaKfGTf492/nmRmtK+ySKjpHSrU=
orderer | -----END CERTIFICATE-----
orderer | 2018-03-14 03:18:47.772 UTC [msp/identity] newIdentity -> DEBU 014 Creating identity instance for cert -----BEGIN CERTIFICATE-----
orderer | MIICjDCCAjKgAwIBAgIUBEVwsSx0TmqdbzNwleNBBzoIT0wwCgYIKoZIzj0EAwIw
orderer | fzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
orderer | biBGcmFuY2lzY28xHzAdBgNVBAoTFkludGVybmV0IFdpZGdldHMsIEluYy4xDDAK
orderer | BgNVBAsTA1dXVzEUMBIGA1UEAxMLZXhhbXBsZS5jb20wHhcNMTYxMTExMTcwNzAw
orderer | WhcNMTcxMTExMTcwNzAwWjBjMQswCQYDVQQGEwJVUzEXMBUGA1UECBMOTm9ydGgg
orderer | Q2Fyb2xpbmExEDAOBgNVBAcTB1JhbGVpZ2gxGzAZBgNVBAoTEkh5cGVybGVkZ2Vy
orderer | IEZhYnJpYzEMMAoGA1UECxMDQ09QMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE
orderer | HBuKsAO43hs4JGpFfiGMkB/xsILTsOvmN2WmwpsPHZNL6w8HWe3xCPQtdG/XJJvZ
orderer | +C756KEsUBM3yw5PTfku8qOBpzCBpDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYw
orderer | FAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFOFC
orderer | dcUZ4es3ltiCgAVDoyLfVpPIMB8GA1UdIwQYMBaAFBdnQj2qnoI/xMUdn1vDmdG1
orderer | nEgQMCUGA1UdEQQeMByCCm15aG9zdC5jb22CDnd3dy5teWhvc3QuY29tMAoGCCqG
orderer | SM49BAMCA0gAMEUCIDf9Hbl4xn3z4EwNKmilM9lX2Fq4jWpAaRVB97OmVEeyAiEA
orderer | 25aDPQHGGq2AvhKT0wvt08cX1GTGCIbfmuLpMwKQj38=
orderer | -----END CERTIFICATE-----
orderer | 2018-03-14 03:18:47.839 UTC [msp/identity] newIdentity -> DEBU 015 Creating identity instance for cert -----BEGIN CERTIFICATE-----
orderer | MIICjDCCAjKgAwIBAgIUBEVwsSx0TmqdbzNwleNBBzoIT0wwCgYIKoZIzj0EAwIw
orderer | fzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
orderer | biBGcmFuY2lzY28xHzAdBgNVBAoTFkludGVybmV0IFdpZGdldHMsIEluYy4xDDAK
orderer | BgNVBAsTA1dXVzEUMBIGA1UEAxMLZXhhbXBsZS5jb20wHhcNMTYxMTExMTcwNzAw
orderer | WhcNMTcxMTExMTcwNzAwWjBjMQswCQYDVQQGEwJVUzEXMBUGA1UECBMOTm9ydGgg
orderer | Q2Fyb2xpbmExEDAOBgNVBAcTB1JhbGVpZ2gxGzAZBgNVBAoTEkh5cGVybGVkZ2Vy
orderer | IEZhYnJpYzEMMAoGA1UECxMDQ09QMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE
orderer | HBuKsAO43hs4JGpFfiGMkB/xsILTsOvmN2WmwpsPHZNL6w8HWe3xCPQtdG/XJJvZ
orderer | +C756KEsUBM3yw5PTfku8qOBpzCBpDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYw
orderer | FAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFOFC
orderer | dcUZ4es3ltiCgAVDoyLfVpPIMB8GA1UdIwQYMBaAFBdnQj2qnoI/xMUdn1vDmdG1
orderer | nEgQMCUGA1UdEQQeMByCCm15aG9zdC5jb22CDnd3dy5teWhvc3QuY29tMAoGCCqG
orderer | SM49BAMCA0gAMEUCIDf9Hbl4xn3z4EwNKmilM9lX2Fq4jWpAaRVB97OmVEeyAiEA
orderer | 25aDPQHGGq2AvhKT0wvt08cX1GTGCIbfmuLpMwKQj38=
orderer | -----END CERTIFICATE-----
orderer | 2018-03-14 03:18:47.847 UTC [msp/identity] newIdentity -> DEBU 016 Creating identity instance for cert -----BEGIN CERTIFICATE-----
orderer | MIICizCCAjKgAwIBAgIUBEVwsSx0TmqdbzNwleNBBzoIT0wwCgYIKoZIzj0EAwIw
orderer | fzELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh
orderer | biBGcmFuY2lzY28xHzAdBgNVBAoTFkludGVybmV0IFdpZGdldHMsIEluYy4xDDAK
orderer | BgNVBAsTA1dXVzEUMBIGA1UEAxMLZXhhbXBsZS5jb20wHhcNMTYxMTExMTcwNzAw
orderer | WhcNMTcxMTExMTcwNzAwWjBjMQswCQYDVQQGEwJVUzEXMBUGA1UECBMOTm9ydGgg
orderer | Q2Fyb2xpbmExEDAOBgNVBAcTB1JhbGVpZ2gxGzAZBgNVBAoTEkh5cGVybGVkZ2Vy
orderer | IEZhYnJpYzEMMAoGA1UECxMDQ09QMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE
orderer | HBuKsAO43hs4JGpFfiGMkB/xsILTsOvmN2WmwpsPHZNL6w8HWe3xCPQtdG/XJJvZ
orderer | +C756KEsUBM3yw5PTfku8qOBpzCBpDAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYw
orderer | FAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFOFC
orderer | dcUZ4es3ltiCgAVDoyLfVpPIMB8GA1UdIwQYMBaAFBdnQj2qnoI/xMUdn1vDmdG1
orderer | nEgQMCUGA1UdEQQeMByCCm15aG9zdC5jb22CDnd3dy5teWhvc3QuY29tMAoGCCqG
orderer | SM49BAMCA0cAMEQCIDf9Hbl4xn3z4EwNKmilM9lX2Fq4jWpAaRVB97OmVEeyAiAk
orderer | aXzB/jnlU39B7Wws9BIr9c8mSOEPF6VY1uGP+dKV0g==
orderer | -----END CERTIFICATE-----
orderer | 2018-03-14 03:18:47.847 UTC [orderer/common/server] initializeLocalMsp -> CRIT 017 Failed to initialize local MSP: signing identity expired 2938h11m47.847389517s ago
orderer exited with code 1
cli | 8-03-14 03:18:54.263 UTC [main] main -> ERRO 001 Cannot run peer because error when setting up MSP of type bccsp from directory /etc/hyperledger/msp: signing identity expired 2938h11m54.212816025s ago

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i029v1:,,,,,,,,ChristopherFerris,denyeart,mastersingh24,Ravi.Bodkai,,,,,,,,,,,,,,,,,"07/Apr/18 12:42 PM;mastersingh24;[~Ravi.Bodkai]  - Sorry for the delay getting to this.  The issue is that the certificates that go along with the v1.0.x samples are expired.   The current (and default) branch / version of the samples are up to date.

You can either clone the fabric-samples again or try

 
{code:java}
git fetch --all
git pull
git checkout v1.1.0
{code}
 ",07/Apr/18 12:53 PM;mastersingh24;[~denyeart] [~ChristopherFerris] - should we update the v1.0.x samples?,"08/Apr/18 1:25 AM;ChristopherFerris;yeah, seems like a good idea",09/Apr/18 12:06 PM;denyeart;[~adc] Fixed up the expirations prior to v1.1.  [~adc] could you maybe work your magic in fabric-samples in the release-1.0 branch?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"After chaincode restart,invoking parallel transactions on the same peer throws an error",FAB-8844,28495,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,muralisr,susmita,susmita,13/Mar/18 4:39 PM,16/Mar/18 1:06 PM,26/Apr/18 6:49 AM,14/Mar/18 7:10 PM,,,,v1.1,v1.2,fabric-endorser,,,,,,1,,,,,,,,"According to the conversation on rocket chat:

[https://chat.hyperledger.org/channel/fabric?msg=KWSrF8nRMuXNMbEoq]

Follow the steps as in:
 [http://hyperledger-fabric.readthedocs.io/en/latest/understand_fabcar_network.html?highlight=fabcar]
 Run npm install ,node enrollAdmin.js and node registerUser.js
 Run node query.js
 It will execute successfully
 Now stop chain code container (docker stop dev-peer0.org1.example.com-fabcar-1.0)
 Run twice node query.js  parallel at a time
 It is displaying as expected :First query will execute and the second query will fail as it waiting to fetch the chain code.
 Again if you run twice parallel node query.js at at time  it will execute without any errors.

 

 

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i029t1:,,,,,,,,bmos299,davidkhala,denyeart,Exci,inatatsu,moriohara,muralisr,susmita,tkueda,yoheiueda,,,,,,,release-1.1,master,,true,"13/Mar/18 8:26 PM;susmita;Please let me know your comments .[~tkueda], [~yoheiueda] , [~Exci] ,[~muralisr]  .",14/Mar/18 12:41 AM;davidkhala;So which part of this story you think is problematic?,"14/Mar/18 3:15 AM;yoheiueda;[~davidkhala]

The problem is that every time we submit a invoke/query transaction, the chaincode cointainer is recreated.  If we submit a second transaction while the chaincode cointainer is being recreated, we see error messages like ""error: premature execution - chaincode (mycc:v0) is being launched""

 

I tried the balance-transfer example 10 times, I observed the symptom 3 times.  This issue significantly affects the performance.

 ","14/Mar/18 3:46 AM;yoheiueda;I wrote down the description of my environment and instructions to reproduce the issue using balance-transfer. I saw the symptom 3 times while I tried the instructions 10 times.

{{$ lscpu}}
{{Architecture:          x86_64}}
{{CPU op-mode(s):        32-bit, 64-bit}}
{{Byte Order:            Little Endian}}
{{CPU(s):                32}}
{{On-line CPU(s) list:   0-31}}
{{Thread(s) per core:    2}}
{{Core(s) per socket:    8}}
{{Socket(s):             2}}
{{NUMA node(s):          2}}
{{Vendor ID:             GenuineIntel}}
{{CPU family:            6}}
{{Model:                 45}}
{{Model name:            Intel(R) Xeon(R) CPU E5-2690 0 @ 2.90GHz}}
{{Stepping:              7}}
{{CPU MHz:               1237.371}}
{{CPU max MHz:           3800.0000}}
{{CPU min MHz:           1200.0000}}
{{BogoMIPS:              5801.60}}
{{Virtualization:        VT-x}}
{{L1d cache:             32K}}
{{L1i cache:             32K}}
{{L2 cache:              256K}}
{{L3 cache:              20480K}}
{{NUMA node0 CPU(s):     0-7,16-23}}
{{NUMA node1 CPU(s):     8-15,24-31}}
{{Flags:                 fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic popcnt tsc_deadline_timer aes xsave avx lahf_lm epb retpoline kaiser tpr_shadow vnmi flexpriority ept vpid xsaveopt dtherm arat pln pts}}

{{$ docker version}}
{{Client:}}
{{ Version:    17.12.1-ce}}
{{ API version:    1.35}}
{{ Go version:    go1.9.4}}
{{ Git commit:    7390fc6}}
{{ Built:    Tue Feb 27 22:17:40 2018}}
{{ OS/Arch:    linux/amd64}}

{{Server:}}
{{ Engine:}}
{{  Version:    17.12.1-ce}}
{{  API version:    1.35 (minimum version 1.12)}}
{{  Go version:    go1.9.4}}
{{  Git commit:    7390fc6}}
{{  Built:    Tue Feb 27 22:16:13 2018}}
{{  OS/Arch:    linux/amd64}}
{{  Experimental:    false}}

{{$ node --version}}
{{v8.10.0}}

{{$ lsb_release --all}}
{{No LSB modules are available.}}
{{Distributor ID:    Ubuntu}}
{{Description:    Ubuntu 16.04.4 LTS}}
{{Release:    16.04}}
{{Codename:    xenial}}

{{$ uname -a}}
{{Linux fx1 4.4.0-116-generic #140-Ubuntu SMP Mon Feb 12 21:23:04 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux}}

{{$ for i in hyperledger/fabric-tools hyperledger/fabric-orderer hyperledger/fabric-peer  hyperledger/fabric-ccenv hyperledger/fabric-ca; do docker pull $i:x86_64-1.1.0-rc1; docker tag $i:x86_64-1.1.0-rc1 latest; done}}
{{x86_64-1.1.0-rc1: Pulling from hyperledger/fabric-tools}}
{{Digest: sha256:e80b049473792fe82c18418f2b06541b84ed7b0ccf90d24f61872773ecff4a72}}
{{Status: Image is up to date for hyperledger/fabric-tools:x86_64-1.1.0-rc1}}
{{x86_64-1.1.0-rc1: Pulling from hyperledger/fabric-orderer}}
{{Digest: sha256:fd5549b24c1ebd1b69ac9863aafe36220d9c554066ba48f49dc4bbb6cb8d7bdb}}
{{Status: Image is up to date for hyperledger/fabric-orderer:x86_64-1.1.0-rc1}}
{{x86_64-1.1.0-rc1: Pulling from hyperledger/fabric-peer}}
{{Digest: sha256:2cd593c5821b7b30997eebd87284d766501c1c98ba0838c6478fe45bb4ae9552}}
{{Status: Image is up to date for hyperledger/fabric-peer:x86_64-1.1.0-rc1}}
{{x86_64-1.1.0-rc1: Pulling from hyperledger/fabric-ccenv}}
{{Digest: sha256:62a9a37d3bb00fc945b9284eaf018d8a2f99eb6c80c400ac012a7d0f8b6cda92}}
{{Status: Image is up to date for hyperledger/fabric-ccenv:x86_64-1.1.0-rc1}}
{{x86_64-1.1.0-rc1: Pulling from hyperledger/fabric-ca}}
{{Digest: sha256:fb458b405ea1aaf7570a10cc1f914de2ca5ddb683f13138e380c00d180683afc}}
{{Status: Image is up to date for hyperledger/fabric-ca:x86_64-1.1.0-rc1}}

{{$ git clone -b v1.1.0-rc1 https://github.com/hyperledger/fabric-samples.git}}
{{Cloning into 'fabric-samples'...}}
{{remote: Counting objects: 1348, done.}}
{{remote: Compressing objects: 100% (10/10), done.}}
{{remote: Total 1348 (delta 2), reused 10 (delta 1), pack-reused 1337}}
{{Receiving objects: 100% (1348/1348), 509.34 KiB | 164.00 KiB/s, done.}}
{{Resolving deltas: 100% (604/604), done.}}
{{Checking connectivity... done.}}
{{Note: checking out '9f9fc7e5aca48b6920b19512a26be8d79ac51886'.}}

{{You are in 'detached HEAD' state. You can look around, make experimental}}
{{changes and commit them, and you can discard any commits you make in this}}
{{state without impacting any branches by performing another checkout.}}

{{If you want to create a new branch to retain commits you create, you may}}
{{do so (now or later) by using -b with the checkout command again. Example:}}

{{  git checkout -b <new-branch-name>}}

{{$ cd fabric-samples/balance-transfer/}}
{{$ ./runApp.sh}}

{{In another terminal}}

{{$ ./testAPIs.sh}}
{{$ token=$(curl -s -X POST http://localhost:4000/users -H ""content-type: application/x-www-form-urlencoded"" -d 'username=Jim&orgName=Org1' | jq -r '.token')}}
{{$ curl -s -X GET ""http://localhost:4000/channels/mychannel/chaincodes/mycc?peer=peer0.org1.example.com&fcn=query&args=%5B%22a%22%5D"" -H ""authorization: Bearer $token"" -H ""content-type: application/json"" & curl -s -X GET ""http://localhost:4000/channels/mychannel/chaincodes/mycc?peer=peer0.org1.example.com&fcn=query&args=%5B%22a%22%5D"" -H ""authorization: Bearer $token"" -H ""content-type: application/json""}}
{{[1] 10229}}
{{a now has {color:#ff0000}Error: error executing chaincode: premature execution - chaincode (mycc:v0) is being launched{color} after the move}}
{{a now has 90 after the move}}
{{$ docker logs peer0.org1.example.com 2>&1 | grep -a 'ERRO '}}
{{2018-03-14 01:37:34.529 UTC [chaincode] processStream -> ERRO 537 {color:#ff0000}Error handling chaincode support stream: rpc error: code = Canceled desc = context canceled{color}}}
{{2018-03-14 01:38:00.926 UTC [chaincode] processStream -> ERRO 697 {color:#ff0000}Error handling chaincode support stream: rpc error: code = Canceled desc = context canceled{color}}}
{{2018-03-14 01:38:42.106 UTC [chaincode] processStream -> ERRO 901 {color:#ff0000}Error handling chaincode support stream: rpc error: code = Canceled desc = context canceled{color}}}
{{2018-03-14 01:38:53.318 UTC [chaincode] processStream -> ERRO 9c4 {color:#ff0000}Error handling chaincode support stream: rpc error: code = Canceled desc = context canceled{color}}}
{{2018-03-14 01:42:20.174 UTC [chaincode] ExecuteChaincode -> ERRO abf {color:#ff0000}premature execution - chaincode (mycc:v0) is being launched{color}}}
{{2018-03-14 01:42:20.175 UTC [endorser] simulateProposal -> ERRO ac1 [mychannel][9ad42641] {color:#ff0000}failed to invoke chaincode name:""mycc"" , error: premature execution - chaincode (mycc:v0) is being launched{color}}}
{{2018-03-14 01:42:20.218 UTC [chaincode] processStream -> ERRO ac5 Error handling chaincode {color:#ff0000}support stream: rpc error: code = Canceled desc = context canceled{color}}}
{{2018-03-14 01:42:59.738 UTC [chaincode] processStream -> ERRO b88 Error handling chaincode {color:#ff0000}support stream: rpc error: code = Canceled desc = context canceled{color}}}","14/Mar/18 6:49 AM;muralisr;The problem started with FAB-5591 where there's a path where deregister occurs without corresponding chaincode removal. The problem is that the error maybe benign and chaincode not removed thus leaving the system in an inconsitent state where it believes there's no chaincode registered (and running) when it actually is. This causes subsequent invoke to attempt to restart. Eventually it does settle down.

The fix would be to always leave the deregister to be handled consistent error handling path. ",14/Mar/18 7:08 AM;muralisr;In master - https://gerrit.hyperledger.org/r/#/c/19147/ . This should be backported to 1.1 and better even 1.0.,"14/Mar/18 12:23 PM;yoheiueda;I applied the patch to the RC1 code, and tried the steps I described above.  I repeated 100 times, but I never see the symptom any more.

I think the patch fixed the issue. Thank you very much!",14/Mar/18 1:15 PM;muralisr;[~yoheiueda] thank you for testing and verifying!,14/Mar/18 2:26 PM;bmos299;[~muralisr] [~yoheiueda] Thanks!  [~denyeart] [~simsc] will this be ported to the release-1.0 and the release-1.1 branches? ,"14/Mar/18 3:23 PM;muralisr;Should correct this statement in my earlier comment

_The problem started with FAB-5591 ..._

That's incorrect. It predates that and in fact FAB-5591 helps in fixing this in a cleaner manner by allowing the error  to be handled (or disregarded) cleanly. ",14/Mar/18 4:13 PM;denyeart;Fix cherry picked to release-1.1: https://gerrit.hyperledger.org/r/#/c/19157/,"14/Mar/18 7:11 PM;denyeart;Merged to release-1.1 and master.  There was not a clean cherry pick to release-1.0, deferring that for now.  We can re-visit if needed.","16/Mar/18 1:19 AM;tkueda;Also, confirmed the x86_64-1.1.0 images published a few hours ago in Docker Hub have fixed this issue. Thank you so much!",16/Mar/18 12:35 PM;Exci;Can confirm that the issue is fixed for me with the 1.1.0 images. Thank you!,16/Mar/18 1:06 PM;muralisr;thanks [~tkueda] [~Exci] [~yoheiueda] for testing and confirming. Much appreciated!,,,,,,,,,,,,,,,,,,,,,,,,,,,
Channel initialize and retry recovery.,FAB-8842,28492,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rickr,rickr,rickr,13/Mar/18 4:02 PM,15/Mar/18 8:39 PM,26/Apr/18 6:49 AM,15/Mar/18 8:39 PM,v1.0.0,,,v1.1,,fabric-sdk-java,,,,,,0,,,,,,,,"Allow channel to initialize when peers and event hubs are failing.

Use peer eventing service start block on re connection.

Keep peer eventing service and eventhubs reconnecting.

Provide thread safe version of Channel query apis.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i029sd:,,,,,,,,rickr,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GRPC options are not passed to event clients,FAB-8813,28444,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,bstasyszyn,bstasyszyn,bstasyszyn,12/Mar/18 7:43 PM,12/Mar/18 11:53 PM,26/Apr/18 6:49 AM,12/Mar/18 11:53 PM,,,,,,fabric-sdk-go,,,,,,0,,,,,,,,The GRPC options specified in the config file are not being passed to the event clients (both deliver and event hub).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i029id:,,,,,,,,bstasyszyn,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix chaincode instantiation bug,FAB-8777,28399,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,MichaelWang,MichaelWang,MichaelWang,11/Mar/18 3:41 PM,16/Mar/18 8:26 AM,26/Apr/18 6:49 AM,16/Mar/18 8:26 AM,,,,,,fabric-sdk-py,,,,,,0,,,,,,,,fix chaincode instantiation bug,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02999:,,,,,,,,baohua,MichaelWang,,,,,,,,,,,,,,,master,,,true,15/Mar/18 2:25 AM;baohua;https://gerrit.hyperledger.org/r/#/c/19149/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreationPolicy and ChainCreationPolicyNames do not exist as orderer configuration protos,FAB-8713,28291,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,harrisob@us.ibm.com,sudheesh001,sudheesh001,08/Mar/18 9:44 AM,10/Mar/18 5:37 AM,26/Apr/18 6:49 AM,10/Mar/18 5:37 AM,,,,v1.1,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"The node SDK block decoder decodes config value and checks for the proto configuration key to be of `CreationPolicy` or `ChainCreationPolicyNames`

 

However, the orderer/configuration.proto does not contain any of the above two structures and seems to be undefined.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i028n9:,,,,,,,,denyeart,harrisob@us.ibm.com,sudheesh001,,,,,,,,,,,,,,master,,,true,08/Mar/18 11:51 AM;denyeart;[~harrisob@us.ibm.com] Can you take a look?,09/Mar/18 1:06 PM;denyeart;[~harrisob@us.ibm.com] I assume this is must-fix for 1.1?,09/Mar/18 5:18 PM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/18907/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
node sdk error message when installing couchDB index,FAB-8678,28250,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,harrisob@us.ibm.com,dongming,dongming,06/Mar/18 6:13 PM,07/Mar/18 2:25 PM,26/Apr/18 6:49 AM,06/Mar/18 8:40 PM,,,,v1.1,,fabric-sdk-node,,,,,,0,must-fix,,,,,,,"Using node-sdk commit 210dc901cab9dc26c1b3ad7403d08d2ca36b2a14 to install chanicode with couchDB index, the install request is

\{""targets"":[\{""clientCert"":null,""_options"":\{""grpc.ssl_target_name_override"":""peer0.org2.example.com"",""grpc.default_authority"":""peer0.org2.example.com"",""grpc.max_receive_message_length"":-1,""grpc.max_send_message_length"":-1,""grpc.primary_user_agent"":""grpc-node/1.7.3""},""_url"":""grpcs://localhost:7063"",""_endpoint"":\{""creds"":\{},""addr"":""localhost:7063""},""_request_timeout"":45000,""_endorserClient"":\{""$channel"":\{}},""_roles"":\{}},\{""clientCert"":null,""_options"":\{""grpc.ssl_target_name_override"":""peer1.org2.example.com"",""grpc.default_authority"":""peer1.org2.example.com"",""grpc.max_receive_message_length"":-1,""grpc.max_send_message_length"":-1,""grpc.primary_user_agent"":""grpc-node/1.7.3""},""_url"":""grpcs://localhost:7064"",""_endpoint"":\{""creds"":\{},""addr"":""localhost:7064""},""_request_timeout"":45000,""_endorserClient"":\{""$channel"":\{}},""_roles"":\{}}],""chaincodePath"":""github.com/hyperledger/fabric-test/fabric/examples/chaincode/go/marbles02"",""metadataPath"":""github.com/hyperledger/fabric-test/fabric/examples/chaincode/go/marbles02"",""chaincodeId"":""marbles02_go_ch1"",""chaincodeType"":""golang"",""chaincodeVersion"":""v0""}

 

and observe this error message:

/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/fabric-client/lib/packager/BasePackager.js:84
 logger.error(`error while packaging $\{item.path}`);
 ^

ReferenceError: logger is not defined
 at Walker.klaw.on.on (/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/fabric-client/lib/packager/BasePackager.js:84:5)
 at emitTwo (events.js:126:13)
 at Walker.emit (events.js:214:7)
 at /home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/klaw/src/index.js:34:26
 at /home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/node_modules/graceful-fs/polyfills.js:284:29
 at FSReqWrap.oncomplete (fs.js:152:21)

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i028ed:,,,,,,,,AdnanChoudhury,denyeart,dongming,,,,,,,,,,,,,,master,,,true,"06/Mar/18 7:32 PM;AdnanChoudhury;This error will be hit if the metadataPath is not found. It tries to log it but then can't find the logger, because it's not imported, as noted  in the comment in 8345
If the metadatapath is correct, this error wont occur. ",06/Mar/18 8:25 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/18787/,"07/Mar/18 1:18 AM;denyeart;[~dongming] [~AdnanChoudhury] The fix is merged, you can retry latest SDK and verify a good error message is returned now.","07/Mar/18 2:25 PM;dongming;Retest with the fix (9c5ecb8040773ff3836979b3cf86caca10fa93e4) with the incorrect META-INF path, do not see the ""logger is not defined"" message. Now SDK returns the following error message to notify user that the file/directory does not exist:

 

error: [packager/BasePackager.js]: error while packaging item \{""path"":""/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/test/PTE/github.com/hyperledger/fabric-test/fabric/examples/chaincode/go/marbles02/META-INF""} :: Error: ENOENT: no such file or directory, lstat '/home/ibmadmin/gopath/src/github.com/hyperledger/fabric-test/fabric-sdk-node/test/PTE/github.com/hyperledger/fabric-test/fabric/examples/chaincode/go/marbles02/META-INF'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Revendor bccsp package in fabric-ca,FAB-8661,28225,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,aambati,aambati,aambati,05/Mar/18 7:24 PM,07/Mar/18 12:40 PM,26/Apr/18 6:49 AM,07/Mar/18 12:40 PM,v1.1.0-rc1,,,v1.1,,fabric-ca,,,,,,0,must-fix,,,,,,,Revendor bccsp package in fabric-ca to bring it up to date,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i0289h:,,,,,,,,aambati,denyeart,,,,,,,,,,,,,,,master,,,true,06/Mar/18 6:30 PM;denyeart;[~aambati] Fix Version is where the fix is targeted.  It cannot be targeted to a version already released (rc1). I've changed Fix Version to v1.1.,06/Mar/18 8:37 PM;aambati;https://gerrit.hyperledger.org/r/c/18791/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
remove unused import for 'fabric-ca-client',FAB-8650,28210,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,zhaochy,zhaochy,05/Mar/18 7:40 AM,06/Mar/18 4:33 AM,26/Apr/18 6:49 AM,06/Mar/18 4:33 AM,,,,v1.1,,fabric-sdk-node,,,,,,0,,,,,,,,"remove unused import for 'fabric-ca-client'

if user does not install fabric-ca-client,
codes like this:

{code:java}
const Client = require('fabric-client');
let client = Client.loadFromConfig('test/network/network.yaml');
{code}

may throw error:

Error: Cannot find module 'fabric-ca-client'",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i0286l:,,,,,,,,zhaochy,,,,,,,,,,,,,,,,master,,,true,05/Mar/18 7:42 AM;zhaochy;https://gerrit.hyperledger.org/r/18719,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ACL test - acl_happy_path has been failing in fabric-test-daily-x86_64 from last 4 builds due to permissioning error.,FAB-8648,28208,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,sambhavdutt,sambhavdutt,sambhavdutt,04/Mar/18 2:09 PM,16/Mar/18 5:48 PM,26/Apr/18 6:49 AM,16/Mar/18 5:48 PM,,,,v1.2,,fabric-quality,,,,,,0,ci_failure,,,,,,,"The following errors are failing the ACL tests,

acl_happy_path.ACL.test_FAB6490_Using_FCA_With_ACL_Permissioning (from pytest) 


{code:java}
CalledProcessError: Command '['./start.sh']' returned non-zero exit status 1

{code}


{code:java}
self = <acl_happy_path.ACL testMethod=test_FAB6490_Using_FCA_With_ACL_Permissioning>

    def test_FAB6490_Using_FCA_With_ACL_Permissioning(self):
        '''
             In this ACL test, we execute the fabric-ca sample that
             is located in the fabric-sample repository. This sample executes a
             ""happy path"" scenario to ensure that the when a user is given limited
             access, that the ACL rule is followed as expected.
    
             Passing criteria: The sample executes with a congratulatory message.
            '''
        self.assertTrue(os.path.exists(fca_sample_directory), msg=""The fabric-ca chaincode test does not exist in this directory setup"")
>       output = subprocess.check_output([""./start.sh""], shell=True, cwd=fca_sample_directory)

acl_happy_path.py:25: 
{code}

*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/277/testReport/acl_happy_path/ACL/test_FAB6490_Using_FCA_With_ACL_Permissioning/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02865:,,,,,,,,latitiah,sambhavdutt,,,,,,,,,,,,,,,master,,,true,"14/Mar/18 6:46 PM;sambhavdutt;[~smithbk] 
The ACL tests have been failing consistent due to the Permissioning error from 7 builds now. Can you look into this.

*Console Output*
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/287/testReport/acl_happy_path/ACL/test_FAB6490_Using_FCA_With_ACL_Permissioning/","14/Mar/18 7:53 PM;latitiah;The git submodule for fabric-samples in fabric-test needs to be updated to reflect the related commit.

[https://gerrit.hyperledger.org/r/#/c/18673/]

fabric-samples commit with the fix was retagged to include this fix.

 ",14/Mar/18 7:59 PM;latitiah;https://gerrit.hyperledger.org/r/19189,"15/Mar/18 1:33 PM;sambhavdutt;[~latitiah] [~scottz][~rameshthoomu][~smithbk]
Thank you Latitia, The ACL test has passed in the last build after this patch. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed to enroll admin :Calling enrollment endpoint failed with error [Error: connect ECONNREFUSED 127.0.0.1:7054],FAB-8637,28189,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,parivesh.kurmi,parivesh.kurmi,02/Mar/18 1:48 PM,07/Mar/18 7:40 AM,26/Apr/18 6:49 AM,07/Mar/18 7:40 AM,v1.0.6,,,,,fabric-samples,,,,,,0,,,,,,,,"Hi,

I have started the notwork using *./startFabric.sh inside /fabric-samples/fabcar/*

but when i am trying to *enrollAdmin.js* its failing with below error.

*Failed to enroll admin :Calling enrollment endpoint failed with error [Error: connect ECONNREFUSED 127.0.0.1:7054]*

Please find attached for screenshot as well.

I am using *platform lib of 1.0.6 version* and branch is *release*.

 ",,,,,,,,,,,,,,,,,,,,,,,,02/Mar/18 1:48 PM;parivesh.kurmi;Enroll_Admin_Failed.JPG;https://jira.hyperledger.org/secure/attachment/14717/Enroll_Admin_Failed.JPG,,,,,,,,0|i0281x:,,,,,,,,denyeart,parivesh.kurmi,,,,,,,,,,,,,,,,,,,"07/Mar/18 7:40 AM;denyeart;Hi, many other people are having success with this sample on 1.0.6.

This is the error you get if the docker containers are not available.

As there is no indication of a Fabric bug here, let's close this JIRA and I will refer you to rocket.chat #fabric-questions channel for help on your environment:  [https://chat.hyperledger.org/] .",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fix dependencies in build when releasing,FAB-8623,28169,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,High,,rameshthoomu,ChristopherFerris,ChristopherFerris,01/Mar/18 7:30 PM,15/Apr/18 3:53 PM,26/Apr/18 6:49 AM,,v1.0.0-rc1,,,v1.2,,"fabric-ca, fabric-sdk-node",,,,,,0,,,,,,,,"We have an issue in that the build process takes a dependency on a previous ""release"" when looking for images from other repositories (e.g. fabric-ca looking for ""previous"" release version of fabric-orderer. When this is a release build, there isn't going to BE a previous release image published until the fabric repo is tagged.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i027xp:,,,,,,,,ChristopherFerris,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,"08/Mar/18 2:55 AM;rameshthoomu;Docker multiarch should fix this issue. The work what I did here [https://gerrit.hyperledger.org/r/#/c/18467/] will resolve this issue. [~ChristopherFerris] [~mastersingh24] Do you suggest any other approach to fix this issue?

Once the docker multiarch is ready, I will give 1.1-latest in fabric-ca docker-compose file, which always pull the latest tag of 1.1 release.","14/Mar/18 1:17 AM;denyeart;Docker multiarchitecture is targeted for v1.2, moving this out as well.","30/Mar/18 12:22 AM;ChristopherFerris;As noted in the Release retrospective, I really want to move us past the process we currently have. I would like to get to a place where we have:

A) nightly builds that publish images and binaries to Nexus

B) integration and SVT tests run against a matched set of images and binaries - maybe we tag with a specific tag for our testing (e.g. tag ""candidate"" or something).

C) when we are happy with the results, we can retag with a release identifier and publish the lot to the respective homes (docker hub, maven etc)

D) lather, rinse and repeat","15/Apr/18 3:53 PM;rameshthoomu;[~sambhavdutt] [~jtclark] Existing Verify jobs publish docker images and binaries for every patchset and we have a daily jobs which publishes docker images with ""latest"" tag to nexus repository. We are trying to implement the same in merge jobs and publish every image & binary with ""candidate"" tag to pull them in downstream jobs.
 # fabric-test-daily cron job should pull these ""candidate"" images & binaries to test.
 # Every SDK (fabric-sdk-node, fabric-sdk-java, fabric-samples) jobs should pull these images & binaries instead of building them.

Few pain points here:

We can not publish binaries with the same tag. In this case, we can only publish ""candidate"" tag only once through Jenkins maven:deploy-file plugin. We should identify a way to publish unique binaries to nexus2 repo.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric unit-tests are failing in s390x build,FAB-8598,28126,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,rameshthoomu,rameshthoomu,01/Mar/18 4:19 AM,01/Mar/18 2:19 PM,26/Apr/18 6:49 AM,01/Mar/18 2:19 PM,,,,v1.1,,fabric-build,,,,,,0,must-fix,,,,,,,"observed fabric unit-tests are failing consistently in s390x build. Below is the error log
{code:java}
00:06:33.846 unit-tests_1  | VMCBuildImage-waiting for response
00:06:33.850 unit-tests_1  | 2018-03-01 04:02:21.486 UTC [dockercontroller] deployImage -> ERRO 001 Error building images: no matching manifest for linux/s390x in the manifest list entries
00:06:33.852 unit-tests_1  | 2018-03-01 04:02:21.486 UTC [dockercontroller] deployImage -> ERRO 002 Image Output:
00:06:33.853 unit-tests_1  | ********************
00:06:33.854 unit-tests_1  | Step 1/2 : FROM busybox:latest
00:06:33.854 unit-tests_1  | Pulling from library/busybox
00:06:33.855 unit-tests_1  | 
00:06:33.856 unit-tests_1  | ********************
00:06:33.857 unit-tests_1  | VMCStartContainer-waiting for response
00:06:33.860 unit-tests_1  | 2018-03-01 04:02:21.490 UTC [dockercontroller] Start -> ERRO 003 start-could not find image <simple-a7a39b72f29718e653e73503210fbb597057b7a1c77d1fe321a1afcff041d4e1>, because of no such image
00:06:33.862 unit-tests_1  | VMCStartContainer-waiting for response
00:06:33.863 unit-tests_1  | 2018-03-01 04:02:21.498 UTC [dockercontroller] Start -> ERRO 004 start-could not find image <simple-a7a39b72f29718e653e73503210fbb597057b7a1c77d1fe321a1afcff041d4e1>, because of no such image
00:06:33.864 unit-tests_1  | --- FAIL: TestVMCCreateAndStartContainer (0.01s)
00:06:33.865 unit-tests_1  |     controller_test.go:223: docker error starting container: no such image
00:06:33.868 unit-tests_1  | 2018-03-01 04:02:21.505 UTC [dockercontroller] Start -> ERRO 005 start-could not find image <simple-a7a39b72f29718e653e73503210fbb597057b7a1c77d1fe321a1afcff041d4e1>, because of no such image
00:06:33.870 unit-tests_1  | VMCStopContainer-waiting for response{code}
https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-s390x/59/consoleFull",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i027o5:,,,,,,,,denyeart,harsha544,rameshthoomu,,,,,,,,,,,,,,,,,,"01/Mar/18 4:47 AM;denyeart;[~greg.haskins] [~muralisr] [~mastersingh24] It's having trouble building a chaincode image, any ideas?",01/Mar/18 4:50 AM;rameshthoomu;FYI: Working as expected in x86_64 but failing in s390x,"01/Mar/18 7:52 AM;harsha544;The issue seems to be busybox not available for ppc64le and s390x, a quick check yields this :-

root@p006vm24:~# ./manifest-tool-linux-ppc64le inspect busybox
Name:   busybox (Type: application/vnd.docker.distribution.manifest.list.v2+json)
Digest: sha256:aaeec02cd3efc3207685f79fcb46d5b3e692981382d0964897ed6494b4f58b76
 * Contains 2 manifest references:
1    Mfst Type: application/vnd.docker.distribution.manifest.v2+json
1       Digest: sha256:c7b0a24019b0e6eda714ec0fa137ad42bc44a754d9cea17d14fba3a80ccc1ee4
1  Mfst Length: 527
1     Platform:
1           -      OS: linux
1           - OS Vers: 
1           - OS Feat: []
1           -    Arch: *amd64*
1           - Variant: 
1           - Feature: 
1     # Layers: 1
         layer 1: digest = sha256:d070b8ef96fc4f2d92ff520a4fe55594e362b4e1076a32bbfeb261dc03322910

2    Mfst Type: application/vnd.docker.distribution.manifest.v2+json
2       Digest: sha256:9c93aab6daa52513bf4b3b36df84a64939b664a6d4fa606d74e070a77264e0da
2  Mfst Length: 527
2     Platform:
2           -      OS: linux
2           - OS Vers: 
2           - OS Feat: []
2           -    Arch: arm
2           - Variant: v6
2           - Feature: 
2     # Layers: 1
         layer 1: digest = sha256:0ef9af8fd5fa0b376fd814fef0cf3646b20e8c3d98adb17c008d26d8d59ce098
root@p006vm24:~# 

Seems to be known problem [https://github.com/docker-library/official-images/issues/3835] 

However *docker pull ppc64le/busybox* & *docker pull s390x/busybox* pulls the relevant docker image 

root@p006vm24:~# *docker pull ppc64le/busybox*
Using default tag: latest
latest: Pulling from ppc64le/busybox
ed2cbc89fa7d: Pull complete 
Digest: sha256:3c5b08ce23cf8610f44b841e34254ee0922295222180c79637230be5717efb80
Status: Downloaded newer image for ppc64le/busybox:latest
root@p006vm24:~# *docker pull s390x/busybox*
Using default tag: latest
latest: Pulling from s390x/busybox
da98aa9087af: Pull complete 
Digest: sha256:6ba746ef4d4e309daaf44780a368f82121d63b7d5640829916d9417c6c97b37b
Status: Downloaded newer image for s390x/busybox:latest
root@p006vm24:~# 

Seems to be a problem where-in manifest isn't doing it's job.","01/Mar/18 12:28 PM;harsha544;The issue seems to be manifests not working since yesterday, hence *docker pull busybox* on s390x/ppc64le was leading to error 
00:06:33.850 unit-tests_1  | 2018-03-01 04:02:21.486 UTC [dockercontroller] deployImage -> ERRO 001 Error building images: no matching manifest for linux/s390x in the manifest list entries
This could be confirmed via *manifest-tool-linux-$ARCH* binary :-

root@p006vm24:~# ./manifest-tool-linux-ppc64le inspect busybox
 Name:   busybox (Type: application/vnd.docker.distribution.manifest.list.v2+json)
 Digest: sha256:aaeec02cd3efc3207685f79fcb46d5b3e692981382d0964897ed6494b4f58b76
  * Contains 2 manifest references:
 1    Mfst Type: application/vnd.docker.distribution.manifest.v2+json
 1       Digest: sha256:c7b0a24019b0e6eda714ec0fa137ad42bc44a754d9cea17d14fba3a80ccc1ee4
 1  Mfst Length: 527
 1     Platform:
 1           -      OS: linux
 1           - OS Vers: 
 1           - OS Feat: []
 1           -    Arch: *amd64*
 1           - Variant: 
 1           - Feature: 
 1     # Layers: 1
          layer 1: digest = sha256:d070b8ef96fc4f2d92ff520a4fe55594e362b4e1076a32bbfeb261dc03322910

2    Mfst Type: application/vnd.docker.distribution.manifest.v2+json
 2       Digest: sha256:9c93aab6daa52513bf4b3b36df84a64939b664a6d4fa606d74e070a77264e0da
 2  Mfst Length: 527
 2     Platform:
 2           -      OS: linux
 2           - OS Vers: 
 2           - OS Feat: []
 2           -    Arch: *arm*
 2           - Variant: v6
 2           - Feature: 
 2     # Layers: 1
          layer 1: digest = sha256:0ef9af8fd5fa0b376fd814fef0cf3646b20e8c3d98adb17c008d26d8d59ce098
 root@p006vm24:~#

The issues seems to be fixed now i.e 

{color:#dd1144}root@p006vm24:/opt/gopath/src/github.com/hyperledger#{color} {color:#dd1144}/root/manifest-tool-linux-ppc64le{color} {color:#dd1144}inspect{color} {color:#dd1144}busybox{color}
{color:#333333}Name:{color} {color:#dd1144}busybox{color} {color:#dd1144}(Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.list.v2+json){color}
{color:#333333}Digest:{color} {color:#333333}sha256:2107a35b58593c58ec5f4e8f2c4a70d195321078aebfadfbfb223a2ff4a4ed21{color}
 {color:#dd1144}*{color} {color:#dd1144}Contains{color} {color:#008080}8{color} {color:#dd1144}manifest{color} {color:#333333}references:{color}
{color:#008080}1{color} {color:#dd1144}Mfst{color} {color:#333333}Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.v2+json{color}
{color:#008080}1{color} {color:#333333}Digest:{color} {color:#333333}sha256:c7b0a24019b0e6eda714ec0fa137ad42bc44a754d9cea17d14fba3a80ccc1ee4{color}
{color:#008080}1{color} {color:#dd1144}Mfst{color} {color:#333333}Length:{color} {color:#008080}527{color}
{color:#008080}1{color} {color:#333333}Platform:{color}
{color:#008080}1{color} {color:#990073}-{color} {color:#333333}OS:{color} {color:#dd1144}linux{color}
{color:#008080}1{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Vers:{color} 
{color:#008080}1{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Feat:{color} {color:#dd1144}[]{color}
{color:#008080}1{color} {color:#990073}-{color} {color:#333333}Arch:{color} {color:#dd1144}amd64{color}
{color:#008080}1{color} {color:#990073}-{color} {color:#333333}Variant:{color} 
{color:#008080}1{color} {color:#990073}-{color} {color:#333333}Feature:{color} 
{color:#008080}1{color} {color:#999988}# Layers: 1{color}
 {color:#dd1144}layer{color} {color:#008080}1{color}{color:#dd1144}:{color} {color:#dd1144}digest{color} {color:#dd1144}={color} {color:#333333}sha256:d070b8ef96fc4f2d92ff520a4fe55594e362b4e1076a32bbfeb261dc03322910{color}

{color:#008080}2{color} {color:#dd1144}Mfst{color} {color:#333333}Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.v2+json{color}
{color:#008080}2{color} {color:#333333}Digest:{color} {color:#333333}sha256:a4822cb5d974f375f84c0a534cd6fdbc983ffefba1eeab16d09ccb12028b928c{color}
{color:#008080}2{color} {color:#dd1144}Mfst{color} {color:#333333}Length:{color} {color:#008080}527{color}
{color:#008080}2{color} {color:#333333}Platform:{color}
{color:#008080}2{color} {color:#990073}-{color} {color:#333333}OS:{color} {color:#dd1144}linux{color}
{color:#008080}2{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Vers:{color} 
{color:#008080}2{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Feat:{color} {color:#dd1144}[]{color}
{color:#008080}2{color} {color:#990073}-{color} {color:#333333}Arch:{color} {color:#dd1144}arm{color}
{color:#008080}2{color} {color:#990073}-{color} {color:#333333}Variant:{color} {color:#dd1144}v5{color}
{color:#008080}2{color} {color:#990073}-{color} {color:#333333}Feature:{color} 
{color:#008080}2{color} {color:#999988}# Layers: 1{color}
 {color:#dd1144}layer{color} {color:#008080}1{color}{color:#dd1144}:{color} {color:#dd1144}digest{color} {color:#dd1144}={color} {color:#333333}sha256:eb54de698b0f6b036c95c527d40572cb58f6c33b9e418b820db3c2bb16f6b895{color}

{color:#008080}3{color} {color:#dd1144}Mfst{color} {color:#333333}Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.v2+json{color}
{color:#008080}3{color} {color:#333333}Digest:{color} {color:#333333}sha256:9c93aab6daa52513bf4b3b36df84a64939b664a6d4fa606d74e070a77264e0da{color}
{color:#008080}3{color} {color:#dd1144}Mfst{color} {color:#333333}Length:{color} {color:#008080}527{color}
{color:#008080}3{color} {color:#333333}Platform:{color}
{color:#008080}3{color} {color:#990073}-{color} {color:#333333}OS:{color} {color:#dd1144}linux{color}
{color:#008080}3{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Vers:{color} 
{color:#008080}3{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Feat:{color} {color:#dd1144}[]{color}
{color:#008080}3{color} {color:#990073}-{color} {color:#333333}Arch:{color} {color:#dd1144}arm{color}
{color:#008080}3{color} {color:#990073}-{color} {color:#333333}Variant:{color} {color:#dd1144}v6{color}
{color:#008080}3{color} {color:#990073}-{color} {color:#333333}Feature:{color} 
{color:#008080}3{color} {color:#999988}# Layers: 1{color}
 {color:#dd1144}layer{color} {color:#008080}1{color}{color:#dd1144}:{color} {color:#dd1144}digest{color} {color:#dd1144}={color} {color:#333333}sha256:0ef9af8fd5fa0b376fd814fef0cf3646b20e8c3d98adb17c008d26d8d59ce098{color}

{color:#008080}4{color} {color:#dd1144}Mfst{color} {color:#333333}Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.v2+json{color}
{color:#008080}4{color} {color:#333333}Digest:{color} {color:#333333}sha256:883b6e95daad4c7ad5f86a0124de945bacc613da3ee0ca17bed6a2e9b848ce27{color}
{color:#008080}4{color} {color:#dd1144}Mfst{color} {color:#333333}Length:{color} {color:#008080}527{color}
{color:#008080}4{color} {color:#333333}Platform:{color}
{color:#008080}4{color} {color:#990073}-{color} {color:#333333}OS:{color} {color:#dd1144}linux{color}
{color:#008080}4{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Vers:{color} 
{color:#008080}4{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Feat:{color} {color:#dd1144}[]{color}
{color:#008080}4{color} {color:#990073}-{color} {color:#333333}Arch:{color} {color:#dd1144}arm{color}
{color:#008080}4{color} {color:#990073}-{color} {color:#333333}Variant:{color} {color:#dd1144}v7{color}
{color:#008080}4{color} {color:#990073}-{color} {color:#333333}Feature:{color} 
{color:#008080}4{color} {color:#999988}# Layers: 1{color}
 {color:#dd1144}layer{color} {color:#008080}1{color}{color:#dd1144}:{color} {color:#dd1144}digest{color} {color:#dd1144}={color} {color:#333333}sha256:f6c10ed8a46ab25c7a75b857e1c3d5407d0a7dabd1d87f3d54602b5b78c61984{color}

{color:#008080}5{color} {color:#dd1144}Mfst{color} {color:#333333}Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.v2+json{color}
{color:#008080}5{color} {color:#333333}Digest:{color} {color:#333333}sha256:08c10dde83399a3ff83e21feb679b3942dbe8aa652d49c144e8e544696558d7f{color}
{color:#008080}5{color} {color:#dd1144}Mfst{color} {color:#333333}Length:{color} {color:#008080}527{color}
{color:#008080}5{color} {color:#333333}Platform:{color}
{color:#008080}5{color} {color:#990073}-{color} {color:#333333}OS:{color} {color:#dd1144}linux{color}
{color:#008080}5{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Vers:{color} 
{color:#008080}5{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Feat:{color} {color:#dd1144}[]{color}
{color:#008080}5{color} {color:#990073}-{color} {color:#333333}Arch:{color} {color:#dd1144}arm64{color}
{color:#008080}5{color} {color:#990073}-{color} {color:#333333}Variant:{color} {color:#dd1144}v8{color}
{color:#008080}5{color} {color:#990073}-{color} {color:#333333}Feature:{color} 
{color:#008080}5{color} {color:#999988}# Layers: 1{color}
 {color:#dd1144}layer{color} {color:#008080}1{color}{color:#dd1144}:{color} {color:#dd1144}digest{color} {color:#dd1144}={color} {color:#333333}sha256:8996f62fa48d6c62cd90205319ded54ed1cfc6bb4b16f2beb405df21279d8d6e{color}

{color:#008080}6{color} {color:#dd1144}Mfst{color} {color:#333333}Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.v2+json{color}
{color:#008080}6{color} {color:#333333}Digest:{color} {color:#333333}sha256:60282b56cd5b4bcf3c160e124782b740bcde374a667a1f5f9164b243ae05753c{color}
{color:#008080}6{color} {color:#dd1144}Mfst{color} {color:#333333}Length:{color} {color:#008080}527{color}
{color:#008080}6{color} {color:#333333}Platform:{color}
{color:#008080}6{color} {color:#990073}-{color} {color:#333333}OS:{color} {color:#dd1144}linux{color}
{color:#008080}6{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Vers:{color} 
{color:#008080}6{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Feat:{color} {color:#dd1144}[]{color}
{color:#008080}6{color} {color:#990073}-{color} {color:#333333}Arch:{color} {color:#008080}386{color}
{color:#008080}6{color} {color:#990073}-{color} {color:#333333}Variant:{color} 
{color:#008080}6{color} {color:#990073}-{color} {color:#333333}Feature:{color} 
{color:#008080}6{color} {color:#999988}# Layers: 1{color}
 {color:#dd1144}layer{color} {color:#008080}1{color}{color:#dd1144}:{color} {color:#dd1144}digest{color} {color:#dd1144}={color} {color:#333333}sha256:ce6583360771ffe85f55f57363c5b614a2308c40c1f092412395f576498c48ee{color}

{color:#008080}7{color} {color:#dd1144}Mfst{color} {color:#333333}Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.v2+json{color}
{color:#008080}7{color} {color:#333333}Digest:{color} {color:#333333}sha256:d7133b3486ffbca5c7cb148909c5870be1b92ff3b7278c1a2173a6744559c823{color}
{color:#008080}7{color} {color:#dd1144}Mfst{color} {color:#333333}Length:{color} {color:#008080}528{color}
{color:#008080}7{color} {color:#333333}Platform:{color}
{color:#008080}7{color} {color:#990073}-{color} {color:#333333}OS:{color} {color:#dd1144}linux{color}
{color:#008080}7{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Vers:{color} 
{color:#008080}7{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Feat:{color} {color:#dd1144}[]{color}
{color:#008080}7{color} {color:#990073}-{color} {color:#333333}Arch:{color} {color:#dd1144}ppc64le{color}
{color:#008080}7{color} {color:#990073}-{color} {color:#333333}Variant:{color} 
{color:#008080}7{color} {color:#990073}-{color} {color:#333333}Feature:{color} 
{color:#008080}7{color} {color:#999988}# Layers: 1{color}
 {color:#dd1144}layer{color} {color:#008080}1{color}{color:#dd1144}:{color} {color:#dd1144}digest{color} {color:#dd1144}={color} {color:#333333}sha256:8bcf05d0d38f745dc25a783b447393f3491672b5ba264cfe273726e6f8e1cd16{color}

{color:#008080}8{color} {color:#dd1144}Mfst{color} {color:#333333}Type:{color} {color:#dd1144}application/vnd.docker.distribution.manifest.v2+json{color}
{color:#008080}8{color} {color:#333333}Digest:{color} {color:#333333}sha256:1812deac047ecc0e4640c412c103c4c10ab64df972b98a8f8080b3b0dc5fab15{color}
{color:#008080}8{color} {color:#dd1144}Mfst{color} {color:#333333}Length:{color} {color:#008080}528{color}
{color:#008080}8{color} {color:#333333}Platform:{color}
{color:#008080}8{color} {color:#990073}-{color} {color:#333333}OS:{color} {color:#dd1144}linux{color}
{color:#008080}8{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Vers:{color} 
{color:#008080}8{color} {color:#990073}-{color} {color:#dd1144}OS{color} {color:#333333}Feat:{color} {color:#dd1144}[]{color}
{color:#008080}8{color} {color:#990073}-{color} {color:#333333}Arch:{color} {color:#dd1144}s390x{color}
{color:#008080}8{color} {color:#990073}-{color} {color:#333333}Variant:{color} 
{color:#008080}8{color} {color:#990073}-{color} {color:#333333}Feature:{color} 
{color:#008080}8{color} {color:#999988}# Layers: 1{color}
 {color:#dd1144}layer{color} {color:#008080}1{color}{color:#dd1144}:{color} {color:#dd1144}digest{color} {color:#dd1144}={color} {color:#333333}sha256:87eb32991dd283847b756651dafc581ea1c10dd14fdc852fe53bf6d8021b60d8{color}

{color:#dd1144}root@p006vm24:/opt/gopath/src/github.com/hyperledger#


{color:#333333}Request [~rameshthoomu] {color}{color}to trigger one more build on s390x.",01/Mar/18 2:18 PM;rameshthoomu;Thanks [~harsha544] for looking into this. It's working now. https://jenkins.hyperledger.org/view/Daily/job/fabric-daily-s390x/61/console,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to create CouchDB indexes using Node.js SDK,FAB-8550,28045,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,harrisob@us.ibm.com,Ratnakar,Ratnakar,27/Feb/18 2:46 AM,27/Feb/18 9:47 PM,26/Apr/18 6:49 AM,27/Feb/18 8:45 PM,,,,v1.1,,fabric-sdk-node,,,,,,0,fabric-sdk-node,quality,Usability,,,,,"The fix provided in ----FAB-8345---- packages the metadata along with the chaincode while installing on a peer. However there is no provision for the end user (application developer) to provide metadata path from their applications. which makes fabric 1.1 CouchDB indexing feature not usable with Node.js SDK

A proposed approach to fix this issue:
 * Pass *metadataPath* parameter in installChaincode [request|https://fabric-sdk-node.github.io/global.html#ChaincodeInstallRequest] in application
 * pass this metadataPath from request object to the internal API __getChaincodePackageData(request, this.isDevMode(), request.*metadataPath*)_  __ and then pass to _Packager.package()_ api



 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02785:,,,,,,,,AdnanChoudhury,denyeart,Ratnakar,,,,,,,,,,,,,,master,,,true,27/Feb/18 2:54 AM;denyeart;[~harrisob@us.ibm.com] [~mastersingh24] Can you take a look?,27/Feb/18 9:02 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/18481/,27/Feb/18 9:47 PM;AdnanChoudhury;This fix solves the issue for me (sucessfully creates the CouchDB indexes),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not able to Start Network - when using 1.1 samples against earlier binaries,FAB-8539,28030,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jyellick,parivesh.kurmi,parivesh.kurmi,26/Feb/18 2:34 PM,01/Mar/18 7:37 AM,26/Apr/18 6:49 AM,28/Feb/18 8:25 AM,,,,v1.1,,fabric-samples,,,,,,0,must-fix,,,,,,,"When i am trying to run the first network in *fabric-samples/first-network* using 

*./byfn -m up*. I am getting error on start of orderer.

Need help on that.",,,,,,,,,,,,,,,,,,,,,,,,26/Feb/18 3:21 PM;parivesh.kurmi;generate.JPG;https://jira.hyperledger.org/secure/attachment/14683/generate.JPG,26/Feb/18 2:33 PM;parivesh.kurmi;issue.JPG;https://jira.hyperledger.org/secure/attachment/14682/issue.JPG,26/Feb/18 3:41 PM;parivesh.kurmi;orderer_logs.txt;https://jira.hyperledger.org/secure/attachment/14684/orderer_logs.txt,,,,,,0|i0275p:,,,,,,,,davidkhala,jyellick,parivesh.kurmi,Ratnakar,rohitadivi,,,,,,,,,,,,master,,,true,"26/Feb/18 2:35 PM;parivesh.kurmi;I have attached the Screenshot for the issue i am getting on running ./byfn -m generate.

Please look into it.",26/Feb/18 2:44 PM;parivesh.kurmi;Just for the information i am using Docker Toolbox on windows.,"26/Feb/18 2:58 PM;rohitadivi;Hi Parivesh,
Could you share your *orderer logs* and the log message for *./byfn -m generate* with me ? you can dm me on rocket chat or you can share them here. 
My rocket chat id is rohitadivi 
","26/Feb/18 3:19 PM;parivesh.kurmi;Hi Rohit ,

I am very new to this. not sure how to get orderer logs seperatley . The error message i am getting i have already attached in issue.JPG",26/Feb/18 3:20 PM;parivesh.kurmi;okk i got it wait just sending you the screenshot for that,26/Feb/18 3:22 PM;parivesh.kurmi;I have attached the logs for *./byfn -m generate. (generate.JPG)*,"26/Feb/18 3:34 PM;rohitadivi;Thanks for sharing the logs of ./byfn -m generate could you also share the orderer logs?
You can use the command below to write the orderer logs to a text file and attach it here
{code}
docker logs orderer.example.com >& orderer_logs.txt
{code}",26/Feb/18 3:41 PM;parivesh.kurmi;I have attached the logs.,"26/Feb/18 4:07 PM;rohitadivi;Thanks for the logs

I could see orderer crashed from the logs 

here is the gist of logs
{code}[35m2018-02-26 14:24:49.760 UTC [orderer/multichain] newLedgerResources -> CRIT 066[0m Error creating configtx manager and handlers: Error deserializing key Capabilities for group /Channel: Unexpected key Capabilities
panic: Error creating configtx manager and handlers: Error deserializing key Capabilities for group /Channel: Unexpected key Capabilities

goroutine 1 [running]:
panic(0xb31bc0, 0xc420336eb0)
	/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc4201b45d0, 0xc71091, 0x30, 0xc420336df0, 0x1, 0x1)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x127
github.com/hyperledger/fabric/orderer/multichain.(*multiLedger).newLedgerResources(0xc4203029b0, 0xc420335320, 0xc420335320)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/manager.go:164 +0x393
github.com/hyperledger/fabric/orderer/multichain.NewManagerImpl(0x122a2a0, 0xc4201d8260, 0xc420334e40, 0x1226ea0, 0x126ee88, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/manager.go:114 +0x23b
main.initializeMultiChainManager(0xc4201b0d80, 0x1226ea0, 0x126ee88, 0xc420185d70, 0x1)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/main.go:219 +0x27a
main.main()
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/main.go:75 +0x392
{code}

This indicates that you are using capabilities feature on fabric 1.0.x images.
I did further investigation and reproduced the same error on my machine using fabric 1.0.6 images on the master branch.
 
Please confirm whether you're using fabric 1.0.x images.","26/Feb/18 4:12 PM;rohitadivi;Also if you want to continue using fabric 1.0.x images, please switch to release branch on fabric samples repo.

If you want to use fabric 1.1.0 alpha images then please follow the instruction mentioned in the [getting stated page|http://hyperledger-fabric.readthedocs.io/en/latest/samples.html#hyperledger-fabric-samples]

{code}
 git clone -b master https://github.com/hyperledger/fabric-samples.git
cd fabric-samples
git checkout v1.1.0-alpha
cd fabric-samples
curl -sSL https://goo.gl/6wtTN5 | bash -s 1.1.0-alpha
echo y | ./byfn.sh up
{code}",26/Feb/18 5:27 PM;rohitadivi;To prevent other users from running into similar problem it would be good to update the script to run with a specific version of the images and throw out an error if there is a mismatch between the version of the script and version of the images. This means the script should be looking for a specific image tag like v1.1.0 alpha rather than the images with latest tag. [~scottz] [~bmos299] [~nileshdeotale] [~denyeart] [~Ratnakar],"27/Feb/18 12:45 AM;parivesh.kurmi;[~rohitadivi] : Thanks for the quick reply. 

I have few Queries:

As curl command was not working so i have downloaded the hyperledger-fabric-windows-amd64-1.1.0-alpha/bin/(all images) manually. Will that work with what you are suggesting? 

I have downloaded the images from below link:

[https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/windows-amd64-1.1.0-alpha/hyperledger-fabric-windows-amd64-1.1.0-alpha.tar.gz|https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/windows-amd64-1.1.0-alpha/hyperledger-fabric-windows-amd64-1.1.0-alpha.tar.gz.]

Please suggest if this is not the right one which one i have to download?
git clone -b master https://github.com/hyperledger/fabric-samples.gitcd fabric-samples
git checkout v1.1.0-alpha
cd fabric-samples
 hyperledger-fabric-windows-amd64-1.1.0-alpha/bin/(all images) // curl command not working
echo y | ./byfn.sh up","27/Feb/18 1:42 AM;Ratnakar;[~parivesh.kurmi]

As [~rohitadivi] addressed in earlier comments, Orderer logs indicates that you are running the network with *Fabric version* *1.0.0*
{code:java}
2018-02-26 14:24:48.189 UTC [orderer/main] main -> INFO 001[0m Starting orderer:
Version: 1.0.0
Go version: go1.7.5
OS/Arch: linux/amd64
2018-02-26 14:24:48.196 UTC [orderer/main] initializeSecureServerConfig -> INFO 002[0m Starting orderer with TLS enabled{code}
what error do you see when execute curl command  on windows machine ? Did you used Gitbash or any other tools?

If you still see the problem an alternative way is to download this [bootstrap.sh|https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap.sh] script .
 add executable permission and run the script with tag from Gitbash
{code:java}
./bootstrap.sh 1.1.0-alpha
{code}","27/Feb/18 4:39 AM;jyellick;I've put together a CR which adds some basic version checking into byfn.

[https://gerrit.hyperledger.org/r/c/18455/]

[~rohitadivi]do you think this satisfies this bug, or did you have something else in mind?","27/Feb/18 3:02 PM;rohitadivi;[~jyellick] This is what I had in my mind, I am currently checking this fix on various image versions and binaries. I will update my comments on the CR once am done testing.","27/Feb/18 4:49 PM;rohitadivi;The CR works well with all the test cases. Below is the summary of the test cases I worked on:

 
||Case||Fabric binaries||Fabric images||Result||Comments||
|1|1.0.6|1.0.6|Fails as expected|Configtxgen is at older version|
|2|1.1.0-beta-snapshot|1.0.6|Fails as expected|Due to version mismatch|
|3|1.1.0-alpha|1.1.0-alpha|Fails as expected|1.1.0 alpha version is not supported|
|4|1.1.0-beta-snapshot|1.1.0-alpha|Fails as expected|Due to version mismatch|
|5|1.1.0-alpha|1.1.0-beta-snapshot|Fails as expected|Due to version mismatch|
|6|1.1.0-beta-snapshot|1.1.0-beta-snapshot|*Passed* successfully|Supported version|","01/Mar/18 7:37 AM;davidkhala;I saw similar error when I tried to test node-sdk locally

`$ gulp test`

`$ docker logs orderer.example.com`

 2018-03-01 07:31:29.616 UTC [orderer/multichain] newLedgerResources -> CRIT 068 Error creating configtx manager and handlers: Error deserializing key Capabilities for group /Channel: Unexpected key Capabilities
panic: Error creating configtx manager and handlers: Error deserializing key Capabilities for group /Channel: Unexpected key Capabilities

goroutine 1 [running]:
panic(0xb44a80, 0xc4204070f0)
	/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc420209f50, 0xc860ec, 0x30, 0xc420407030, 0x1, 0x1)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x127
github.com/hyperledger/fabric/orderer/multichain.(*multiLedger).newLedgerResources(0xc4203f6640, 0xc4203d7350, 0xc4203d7350)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/manager.go:153 +0x393
github.com/hyperledger/fabric/orderer/multichain.NewManagerImpl(0x1246880, 0xc42040c120, 0xc4203d6e70, 0x1243480, 0x128b4a8, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/manager.go:103 +0x23b
main.initializeMultiChainManager(0xc420257440, 0x1243480, 0x128b4a8, 0xc420288960, 0x1)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/main.go:220 +0x27a
main.main()
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/main.go:75 +0x392
",,,,,,,,,,,,,,,,,,,,,,,,,
Hpyperledger-Fabric :: composer-sample-applications ,FAB-8536,28026,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,High,,admin,d8bhatta,d8bhatta,26/Feb/18 1:29 PM,26/Feb/18 1:29 PM,26/Apr/18 6:49 AM,,,,,,,,,,,,,0,,,,,,,,"Hello,

I am following [https://github.com/hyperledger/composer-sample-applications/blob/master/packages/digitalproperty-app/README.md] to try composer sample. I have run fabric but when I run the command *{{$ npm run deployNetwork}}*  {{Which is at the end of page, I get following output:}}

 npm run deployNetwork

 

> digitalproperty-app@0.0.6 deployNetwork /Users/deepak/fabric-tools/composer-sample-applications/packages/digitalproperty-app

> composer archive create --sourceName digitalproperty-network --sourceType module --archiveFile digitalPropertyNetwork.bna && composer network deploy --archiveFile ./digitalPropertyNetwork.bna --card PeerAdmin@hlfv1 -A admin -S adminpw -l INFO && composer card import --file ./admin@digitalproperty-network.card && composer network list --card admin@digitalproperty-network

 

*Creating Business Network Archive*

 

 

*Looking for package.json of Business Network Definition*

 Input directory: /Users/deepak/fabric-tools/composer-sample-applications/packages/digitalproperty-app/node_modules/digitalproperty-network

 

*Found:*

 Description: Digital Property Network

 Name: digitalproperty-network

 Identifier: digitalproperty-network@0.1.13

 

*Written Business Network Definition Archive file to* 

 Output file: digitalPropertyNetwork.bna

 

Command succeeded

 

*Deploying business network from archive:* ./digitalPropertyNetwork.bna

*Business network definition:*

 Identifier: digitalproperty-network

 Description: Digital Property Network

 

✖ Installing runtime for business network undefined. This may take a minute...

Error: No connection type provided, probably because the connection profile has no 'x-type' property defined.

Command failed

 

npm ERR! code ELIFECYCLE

npm ERR! errno 1

npm ERR! digitalproperty-app@0.0.6 deployNetwork: `composer archive create --sourceName digitalproperty-network --sourceType module --archiveFile digitalPropertyNetwork.bna && composer network deploy --archiveFile ./digitalPropertyNetwork.bna --card PeerAdmin@hlfv1 -A admin -S adminpw -l INFO && composer card import --file ./admin@digitalproperty-network.card && composer network list --card admin@digitalproperty-network`

npm ERR! Exit status 1

npm ERR!

npm ERR! Failed at the digitalproperty-app@0.0.6 deployNetwork script.

npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

 

npm ERR! A complete log of this run can be found in:

npm ERR!     /Users/user/.npm/_logs/2018-02-26T13_27_47_943Z-debug.log

 

Can you please kindly suggest the possible solution.

Thanks",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i0274t:,,,,,,,,d8bhatta,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
IMAGE_TAG is required and breaks release branch docs/scripts,FAB-8489,27972,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,jyellick,jyellick,23/Feb/18 9:11 PM,23/Feb/18 10:26 PM,26/Apr/18 6:49 AM,23/Feb/18 10:26 PM,,,,v1.0.6,,fabric-samples,,,,,,0,,,,,,,,Fix fabric-samples in release branch.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i026t9:,,,,,,,,denyeart,jyellick,,,,,,,,,,,,,,,release,release-1.0,,true,23/Feb/18 10:22 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/18307/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[Interoperability testing] Node.js SDK integration tests are failing,FAB-8454,27930,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,harrisob@us.ibm.com,Ratnakar,Ratnakar,22/Feb/18 7:09 PM,24/Feb/18 11:02 PM,26/Apr/18 6:49 AM,24/Feb/18 11:02 PM,v1.0.6,v1.1,,v1.0.6,v1.1,fabric-docs,fabric-sdk-node,,,,,0,fabric-sdk-node,quality,tests,,,,,"As part of compatibility / Interoperability testing , We see the following combinations are failing out of *984* tests.

 
||Integration test suite||Node SDK||Fabric||Fabric-CA|| Failed||
|1.0|1.0|1.1|1.0|42|
|1.0|1.0|1.0|1.1|21|
|1.0|1.0|1.1|1.1|26|
|1.0|1.1|1.1|1.1|317  (run from master branch)|
|1.0|1.1|1.1|1.1|281  (run from release branch)|

Please note that this may look worse that it actually is.  One failure can trigger several other downstream tests.  We are in the debug process and more details will follow. 

Enclosed SDK logs.

NOTE: We do see the following scenarios are captured in CI and all tests are passing
||Integration Tests||Node SDK||Fabric||Fabric-CA||
|1.0|1.0|1.0|1.0|
|1.1|1.1|1.1|1.1|

 ",,,,,,,,,,,,,,,,,,,FAB-8465,FAB-8467,FAB-8468,FAB-8469,FAB-8470,22/Feb/18 6:52 PM;Ratnakar;1_0app_sdk_1_1_fabric_ca.txt;https://jira.hyperledger.org/secure/attachment/14674/1_0app_sdk_1_1_fabric_ca.txt,22/Feb/18 6:52 PM;Ratnakar;1_0sdk_1_1images_1_0ca.txt;https://jira.hyperledger.org/secure/attachment/14673/1_0sdk_1_1images_1_0ca.txt,22/Feb/18 6:52 PM;Ratnakar;1_0tests_1_1_sdk_images.txt;https://jira.hyperledger.org/secure/attachment/14672/1_0tests_1_1_sdk_images.txt,,,,,,0|i026kl:,,,,,,,,harrisob@us.ibm.com,Ratnakar,,,,,,,,,,,,,,,,,,,"22/Feb/18 10:56 PM;Ratnakar;Design leads helped us to investigate the issues.

We found only a very few root causes for all of those issues.

More details to follow.","23/Feb/18 3:05 PM;Ratnakar;||Test||Integration
 test
 suite||Node SDK||Fabric||Fabric-CA||Root cause||
|1|1.0|1.0|1.1|1.0|Peer error response message been changed in Fabric v1.1
 ex: when chaincode is not installed and tried to upgrade/instantiate
      *could not find chaincode with name* -> *_no such file or directory_*
      *cannot get package for the chaincode to be instantiated* --> *no such file or directory* * More details : https://jira.hyperledger.org/browse/FAB-8465|
|2|1.0|1.0|1.0|1.1|In Fabric-ca org1 registrar can register users with org2 affiliation (*ex*: *org2.department1*)
 this is fixed in 1.1 hence the tests on 1.0 are failing. changing the tests fix the issue
 Raised a bug to address this : https://jira.hyperledger.org/browse/FAB-8467|
|3|1.0|1.0|1.1|1.1|*Both 1 & 2 changes required*|
|4|1.0|1.1|1.1|1.1|*Both 1 & 2 changes required*
                         *+*
 1. Protobuf change in 1.1 SDK causes compatibility test failures
 ex: parsing a block information (failure in integration/query.js)
 block.data.data[0].payload.data.config.channel_group.groups.Application.policies.Writers.policy.policy.rule --->
 block.data.data[0].payload.data.config.channel_group.groups.Application.policies.Writers.policy.value.rule
 See details https://jira.hyperledger.org/browse/FAB-8469
 2. grpc param change in 1.1 SDK causes compatibility test failures
ex:: grpc-max-send-message-length ---> grpc.max_send_message_length
 More details : https://jira.hyperledger.org/browse/FAB-8470
 3. Invalid param passed for client.newTransactionID (invoke.js)
 testcases are not valid against 1.1 SDK
 raised a bug to correct the testcase: https://jira.hyperledger.org/browse/FAB-8468|",23/Feb/18 6:26 PM;Clayton Sims;Bret working these and targeted to be done today.,"23/Feb/18 8:22 PM;harrisob@us.ibm.com;All issues have a separate issue, moving this to done",23/Feb/18 8:28 PM;Clayton Sims;moving back.    Let keep it open so we don't lose track of the 4.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Invalid policy Error when MSPID has multiple '.'s,FAB-8453,27929,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,ales,latitiah,latitiah,22/Feb/18 6:59 PM,24/Feb/18 2:14 PM,26/Apr/18 6:49 AM,24/Feb/18 2:14 PM,v1.1,,,v1.1,,fabric-peer,,,,,,0,,,,,,,,"When the MSPID is defined as ""org1.example.com"" and we attempt to set the policy during an instantiation, then the instantiation fails with:
{code}Error: Invalid policy OR ('org1.example.com.peer','org2.example.com.peer')
{code}

Command used:
{code}peer chaincode instantiate --name mycc --version 0 --lang GOLANG --channelID behavesystest --ctor '{""Args"": [""init"",""a"",""1000"",""b"",""2000""]}' --tls true --cafile /var/hyperledger/configs/bc2fc3ae17f511e89d840214683e8447/ordererOrganizations/example.com/orderers/orderer0.example.com/msp/tlscacerts/tlsca.example.com-cert.pem --orderer orderer0.example.com:7050 --policy ""OR ('org1.example.com.peer','org2.example.com.peer')"" {code}

*Expected response:* No error, but would accept set MSPID when setting the policy

After looking through the documentation, it does not clearly state what the MSPID should and should not contain.",,,,,,,,,,,,,,,,,,,FAB-8480,,,,,,,,,,,,,0|i026kd:,,,,,,,,ales,denyeart,elli-androulaki,kchristidis,latitiah,,,,,,,,,,,,master,,,true,"22/Feb/18 11:07 PM;denyeart;[~elli-androulaki] Could somebody from crypto team take a look?
Can the limitation be lifted?
Can the error message be clarified?
Can the naming restrictions be documented?","23/Feb/18 8:51 AM;elli-androulaki;Hi, sure.

However, not sure it makes sense to lift the ""."" limitation in the code, mostly cause not sure where else a ""."" is used as delimiter in the policy language.

Therefore, I would only add documentation on the limitations on the msp identifier and allow the error message be more accurate. [~denyeart] what would be a good place to add such documentation?

Thanks!

 ","23/Feb/18 12:19 PM;denyeart;Hi Elli, first I suggest discuss with the policy language experts and determine if dots can be supported. It seems like it should be possible to look for the role (e.g. *.member) by allowing multiple dots and picking the role off of the last segment.  As the example above illustrates, having dots in MSPIDs may be a common request.

Adding such support would likely be a 1.2 item though.  

For 1.1, maybe the best thing would be to mention the current restriction in the comments in the configtx.yaml sample, I think that's where most people would see it, and would be most easy to revert if we decide to support dots in 1.2.

If we decide the restriction should be permanent, I think the right place to document the MSP naming rules is here:
http://hyperledger-fabric.readthedocs.io/en/master/msp.html

I assume that doc will remain as-is even after the MSP conceptual doc is merged:
https://gerrit.hyperledger.org/r/#/c/17505/

Finally, If we decide the restriction should be permanent, I think configtxgen needs to validate MSPIDs based on the naming rules.

I think just the configtx.yaml sample could be updated to resolve the immediate 1.1 defect, and then create follow-on Jira items for 1.2 based on the decision of whether to support dots in the future.",23/Feb/18 12:49 PM;elli-androulaki;Reassigning to [~ales] as he worked on the endorsement policy language :),"23/Feb/18 2:10 PM;kchristidis;Dashes seem to not be allowed either? https://chat.hyperledger.org/channel/fabric-orderer?msg=SBQuaGaXswueRDjQ5
+1 for documenting the limitations.","24/Feb/18 11:34 AM;ales;See here [https://gerrit.hyperledger.org/r/#/c/18323/]
Now we support dots and dashes","24/Feb/18 11:59 AM;denyeart;Discussed with [~ales], we concluded that even though configtxgen allows any characters, we didn't want to add new validation at that level as there could be existing networks with MSP IDs beyond alphanumeric and dots and dashes.  Safest resolution is to simply add support for dots and dashes in the policy parser and document that dots and dashes are supported.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Certificates may expire in Fabric 1.1 lifetime,FAB-8451,27926,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,adc,denyeart,denyeart,22/Feb/18 2:39 PM,25/Feb/18 12:18 PM,26/Apr/18 6:49 AM,24/Feb/18 10:34 AM,,,,v1.1,,fabric-crypto,,,,,,0,,,,,,,,"As we saw in FAB-8415 , certificate expirations are a major disruption, regardless of whether it happens in production, tests, or samples.

We are at risk of other certificate expirations over the life span of 1.1 (let's say next two years).  Need to review all certificates and update any that will expire within the next two years, across these repositories:
fabric
fabric-ca
fabric-baseimage
fabric-chaincode-node
fabric-samples
fabric-sdk-java
fabric-sdk-node
fabric-test
fabric-test-resources

Longer term we need a better strategy for managing certificates in the repositories.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzyuz:z9nx,,,,,,,,angelo.decaro,denyeart,skarim,,,,,,,,,,,,,,master,,,true,"23/Feb/18 12:06 PM;angelo.decaro;This is a preliminary output of my scanning tool:
{code:java}
Scanning repo [/Users/adc/golang/src/github.com/hyperledger/fabric]
Entry [2016-04-20 22:49:51 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/bddtests/tlsca.cert]
Entry [1989-12-15 08:00:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/core/handlers/auth/filter/testdata/expiredCert.pem]
Entry [2018-01-07 12:05:36 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/events/producer/testdata/expiredCert.pem]
Entry [2017-11-11 17:07:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/msp/testdata/badconfigoucert/admincerts/admincert.pem]
Entry [2017-11-11 17:07:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/msp/testdata/badconfigoucert/signcerts/peer.pem]
Entry [1989-12-15 08:00:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/msp/testdata/expired/admincerts/admincert-expired.pem]
Entry [1989-12-15 08:00:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/msp/testdata/expired/cacerts/cacert.pem]
Entry [1989-12-15 08:00:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/msp/testdata/expired/signcerts/peer-expired.pem]
Entry [2018-01-07 10:39:03 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric/orderer/common/msgprocessor/testdata/expiredCert.pem]
Issues on [/Users/adc/golang/src/github.com/hyperledger/fabric]
Scanning repo [/Users/adc/golang/src/github.com/hyperledger/fabric-ca]
Entry [2018-04-17 15:08:36 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-ca/testdata/ec_cert.pem]
Entry [2017-03-22 14:19:04 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-ca/testdata/expiredcert.pem]
Issues on [/Users/adc/golang/src/github.com/hyperledger/fabric-ca]
Scanning repo [/Users/adc/golang/src/github.com/hyperledger/fabric-chaincode-node]
Safe [/Users/adc/golang/src/github.com/hyperledger/fabric-chaincode-node]
Scanning repo [/Users/adc/golang/src/github.com/hyperledger/fabric-samples]
Safe [/Users/adc/golang/src/github.com/hyperledger/fabric-samples]
Scanning repo [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java]
Entry [2017-11-11 17:07:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java/cacerts/admincert.pem]
Entry [2017-12-15 15:02:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java/src/test/fixture/sdkintegration/e2e-2Orgs/tls/cas/peerOrg1/cert.pem]
Entry [2017-12-15 15:02:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java/src/test/fixture/sdkintegration/e2e-2Orgs/tls/cas/peerOrg2/cert.pem]
Entry [2020-03-28 07:31:55 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java/src/test/fixture/sdkintegration/e2e-2Orgs/tls/orderer/ca-cert.pem]
Entry [2020-03-28 07:31:55 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java/src/test/fixture/sdkintegration/e2e-2Orgs/tls/peers/peer0/ca-cert.pem]
Entry [2020-03-28 07:31:55 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java/src/test/fixture/sdkintegration/e2e-2Orgs/tls/peers/peer1/ca-cert.pem]
Entry [2020-03-28 07:31:55 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java/src/test/fixture/sdkintegration/e2e-2Orgs/tls/peers/peer2/ca-cert.pem]
Entry [2020-03-28 07:31:55 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java/src/test/fixture/sdkintegration/e2e-2Orgs/tls/peers/peer3/ca-cert.pem]
Issues on [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-java]
Scanning repo [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node]
Entry [2018-02-20 19:06:10 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/channel/crypto-config/ordererOrganizations/example.com/msp/cacerts/example.com-tls-cert.pem]
Entry [2018-02-20 19:06:10 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/channel/crypto-config/ordererOrganizations/example.com/msp/cacerts/org1.example.com-tls-cert.pem]
Entry [2018-02-20 19:06:10 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/channel/crypto-config/ordererOrganizations/example.com/msp/cacerts/org2.example.com-tls-cert.pem]
Entry [2018-02-20 19:06:10 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/channel/crypto-config/peerOrganizations/org1.example.com/msp/cacerts/org1.example.com-tls-cert.pem]
Entry [2018-02-20 19:06:10 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/channel/crypto-config/peerOrganizations/org1.example.com/msp/cacerts/org2.example.com-tls-cert.pem]
Entry [2017-11-27 12:24:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/fabricca/ecert.pem]
Entry [2017-12-19 03:56:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/msp/local/signcerts/admin.pem]
Entry [2018-01-10 02:27:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/msp/org0/admincerts/admin.pem]
Entry [2018-01-10 02:35:00 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/msp/org1/admincerts/admin.pem]
Entry [2018-01-24 19:55:45 +0000 UTC] [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/msp/org1/cacerts/org_ca.pem]
Issues on [/Users/adc/golang/src/github.com/hyperledger/fabric-sdk-node]
Scanning repo [/Users/adc/golang/src/github.com/hyperledger/fabric-test]
Safe [/Users/adc/golang/src/github.com/hyperledger/fabric-test]
Scanning repo [/Users/adc/golang/src/github.com/hyperledger/fabric-test-resources]
Safe [/Users/adc/golang/src/github.com/hyperledger/fabric-test-resources]
{code}
Safe repos are:
 * fabric-chaincode-node
 * fabric-samples
 * fabric-test
 * fabric-test-resources

The others have issues.",23/Feb/18 1:22 PM;angelo.decaro;https://gerrit.hyperledger.org/r/#/c/18247/ addresses *fabric*,23/Feb/18 1:45 PM;angelo.decaro;https://gerrit.hyperledger.org/r/#/c/18251/ addresses *fabric-sdk-java*,"23/Feb/18 1:52 PM;angelo.decaro;for *fabric-skd-node*, it looks like the problematic certificates have already expired. Therefore, they are not causing harm. Therefore, probably some of them should be removed. 
For instance, the expired certificate test/fixtures/fabricca/ecert.pem is not causing any harm because it used used only to test that loading a certificate from file is successful. No expiration is checked. This file can stay as it is.",23/Feb/18 1:53 PM;angelo.decaro;*fabric-ca* will be addressed by [~smithbk],23/Feb/18 6:51 PM;Clayton Sims;[~skarim]  is doing ca.   eta today. ,23/Feb/18 8:36 PM;skarim;https://gerrit.hyperledger.org/r/#/c/18303/ addresses *fabric-ca*,"24/Feb/18 10:34 AM;denyeart;[~adc] Looks like we are done here, I will close.
Is there anything remaining from your perspective?","25/Feb/18 12:18 PM;angelo.decaro;[~denyeart], I think we are done with the certificates. Next step is to implement the long term strategy :)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Hyperledger Composer: Error trying to ping business network: x509: certificate signed by unknown authority,FAB-8431,27900,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,ramorcicare1,ramorcicare1,ramorcicare1,21/Feb/18 3:18 PM,09/Mar/18 1:40 AM,26/Apr/18 6:49 AM,09/Mar/18 1:39 AM,v1.0.6,,,,,,,,,,,0,,,,,,,,"Receiving error when Fabric CA Server starts *(ca.org1.example.com)*

_Could not load TLS certificate with BCCSP: Could not find matching private key for SKI: CSP:500 - Failed getting key for SKI [[74 227 52 30 73 220 158 98 138 158 61 209 206 89 246 99 232 211 108 174 62 7 117 225 123 88 119 70 196 195 234 44]]_

 

Receiving error for the command: *composer network ping -c alice@tutorial-network*
_Error: Error trying to ping. Error: Error trying to query business network. Error: Failed to deserialize creator identity, err The supplied identity is not valid, Verify() returned x509: certificate signed by unknown authority_
{color:#ff0000}Command failed{color}

 

Docker Images:

{color:#ff0000}!image-2018-02-21-09-58-28-560.png!{color}

 

 ","Using Fabric Samples First Network environment. org1 with 2 peers (peer 0 & 1), org2 with 2 peers (peer 0 & 1), 1 orderer, 2 ca servers (ca0 & ca1). Docker Yaml file attached.",,,,,,,,,,,,,,,,,,,,,,,21/Feb/18 3:14 PM;ramorcicare1;ca.org1.log.txt;https://jira.hyperledger.org/secure/attachment/14663/ca.org1.log.txt,21/Feb/18 3:08 PM;ramorcicare1;docker-compose-cli.yaml;https://jira.hyperledger.org/secure/attachment/14664/docker-compose-cli.yaml,21/Feb/18 2:58 PM;ramorcicare1;image-2018-02-21-09-58-28-560.png;https://jira.hyperledger.org/secure/attachment/14665/image-2018-02-21-09-58-28-560.png,,,,,,0|i026ed:,,,,,,,,ramorcicare1,,,,,,,,,,,,,,,,,,,,"09/Mar/18 1:40 AM;ramorcicare1;This issue got resolved, no one helped. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sdk-node e2e tests are failing on latest commits - seems certs are expired,FAB-8425,27894,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,harrisob@us.ibm.com,rameshthoomu,rameshthoomu,21/Feb/18 6:23 AM,21/Feb/18 3:06 PM,26/Apr/18 6:49 AM,21/Feb/18 3:06 PM,,,,v1.1,,fabric-sdk-node,,,,,,0,,,,,,,,"sdk-node e2e tests are failing as the ""Orderer container"" is exiting immediately.. Below is the log
{code:java}
00:11:37.484 63d35b6ea72b        hyperledger/fabric-orderer   ""orderer""                9 seconds ago       Exited (2) 8 seconds ago                                                    orderer.example.com{code}
Seems certificate is expired 
{code:java}
[33morderer.example.com       |[0m [35m2018-02-21 04:24:13.015 UTC [orderer/commmon/multichannel] newLedgerResources -> CRIT 06b[0m Error creating channelconfig bundle: initializing channelconfig failed: could not create channel Orderer sub-group config: setting up the MSP manager failed: CA Certificate is not valid, (SN: 1000): could not obtain certification chain: the supplied identity is not valid: x509: certificate has expired or is not yet valid
[34mpeer0.org1.example.com    |[0m [36m2018-02-21 04:24:13.917 UTC [shim] handleMessage -> DEBU 0d6[0m [1b9a85e0]Handling ChaincodeMessage of type: INIT(state:ready)
[33morderer.example.com       |[0m panic: Error creating channelconfig bundle: initializing channelconfig failed: could not create channel Orderer sub-group config: setting up the MSP manager failed: CA Certificate is not valid, (SN: 1000): could not obtain certification chain: the supplied identity is not valid: x509: certificate has expired or is not yet valid{code}
Jenkins log file:

[https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-x86_64/13/console]

docker log file:

[https://jenkins.hyperledger.org/view/Daily/job/fabric-end-2-end-daily-x86_64/13/artifact/gopath/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/node_dockerlogfile.log]",,,,,,,,,,,,,,,,,FAB-8415,,,,,,,,,,,,,,,0|i026d1:,,,,,,,,denyeart,rameshthoomu,,,,,,,,,,,,,,,,,,,21/Feb/18 3:06 PM;denyeart;[~rameshthoomu] I believe this is a dup of FAB-8415.  Let's use that one for the discussion.  Closing this one.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix fabric-samples checkout instructions,FAB-8424,27893,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,denyeart,denyeart,21/Feb/18 3:50 AM,21/Feb/18 4:10 AM,26/Apr/18 6:49 AM,21/Feb/18 4:10 AM,,,,,,fabric-docs,,,,,,0,,,,,,,,"fabric-samples instructions say to execute these commands:

  git clone -b master https://github.com/hyperledger/fabric-samples.git
  cd fabric-samples
  git checkout {TAG}　

It should be in this order:

  git clone -b master https://github.com/hyperledger/fabric-samples.git
  cd fabric-samples
  git checkout {TAG}　",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzyuz:z9nw,,,,,,,,denyeart,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Some of the root certs are expired and causes orderer crash,FAB-8415,27884,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,Ratnakar,Ratnakar,Ratnakar,20/Feb/18 9:43 PM,23/Feb/18 7:35 PM,26/Apr/18 6:49 AM,21/Feb/18 9:16 PM,,,,v1.1,,fabric-sdk-node,,,,,,0,fabric-sdk-node,quality,,,,,,"{code}

2018-02-20 21:27:10.597 UTC [orderer/commmon/multichannel] newLedgerResources -> CRIT 06b Error creating channelconfig bundle: initializing channelconfig failed: could not create channel Orderer sub-group config: setting up the MSP manager failed: CA Certificate is not valid, (SN: 1000): could not obtain certification chain: the supplied identity is not valid: x509: certificate has expired or is not yet valid
 panic: Error creating channelconfig bundle: initializing channelconfig failed: could not create channel Orderer sub-group config: setting up the MSP manager failed: CA Certificate is not valid, (SN: 1000): could not obtain certification chain: the supplied identity is not valid: x509: certificate has expired or is not yet valid

goroutine 1 [running]:
 github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc4202a42a0, 0xd1538c, 0x27, 0xc4202c40b0, 0x1, 0x1)
 /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x134
 github.com/hyperledger/fabric/orderer/common/multichannel.(*Registrar).newLedgerResources(0xc420381960, 0xc4201d16e0, 0xc4201d16e0)
 /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:253 +0x391
 github.com/hyperledger/fabric/orderer/common/multichannel.NewRegistrar(0x1392280, 0xc4204420e0, 0xc4201d1320, 0x138ed00, 0x13f2da0, 0xc42000e0b8, 0x1, 0x1, 0x0)
 /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:144 +0x352
 github.com/hyperledger/fabric/orderer/common/server.initializeMultichannelRegistrar(0xc4202d4a00, 0x138ed00, 0x13f2da0, 0xc42000e0b8, 0x1, 0x1, 0xc420446f90)
 /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/server/main.go:262 +0x277
 github.com/hyperledger/fabric/orderer/common/server.Start(0xcf98fc, 0x5, 0xc4202d4a00)
 /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/server/main.go:103 +0x24c
 github.com/hyperledger/fabric/orderer/common/server.Main()
 /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/server/main.go:82 +0x20f
 main.main()
 /opt/gopath/src/github.com/hyperledger/fabric/orderer/main.go:15 +0x20

{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i026b9:,,,,,,,,angelo.decaro,denyeart,harrisob@us.ibm.com,mastersingh24,Ratnakar,,,,,,,,,,,,release-1.0,master,,true,21/Feb/18 1:57 AM;harrisob@us.ibm.com;Do we have to recreate the configtx artifacts also ?,"21/Feb/18 3:40 AM;Ratnakar;Yes [~harrisob@us.ibm.com]This needs new msps to be generated aswell  channel artifacts

I ran through all the certs and following certs all are expired today.
{code}
./test/fixtures/channel/crypto-config/ordererOrganizations/example.com/msp/tlscacerts/example.com-tls-cert.pem
./test/fixtures/channel/crypto-config/ordererOrganizations/example.com/msp/tlscacerts/org1.example.com-tls-cert.pem
./test/fixtures/channel/crypto-config/ordererOrganizations/example.com/msp/tlscacerts/org2.example.com-tls-cert.pem
./test/fixtures/channel/crypto-config/ordererOrganizations/example.com/msp/cacerts/example.com-tls-cert.pem
./test/fixtures/channel/crypto-config/ordererOrganizations/example.com/msp/cacerts/org1.example.com-tls-cert.pem
./test/fixtures/channel/crypto-config/ordererOrganizations/example.com/msp/cacerts/org2.example.com-tls-cert.pem
./test/fixtures/channel/crypto-config/peerOrganizations/org1.example.com/msp/cacerts/org1.example.com-tls-cert.pem
./test/fixtures/channel/crypto-config/peerOrganizations/org1.example.com/msp/cacerts/org2.example.com-tls-cert.pem

Validity
    Not Before: Feb 20 19:06:10 2017 GMT
    Not After : Feb 20 19:06:10 2018 GMT
{code}","21/Feb/18 11:10 AM;denyeart;[~Ratnakar] Did you assign yourself on purpose?

It would be good to use certificates with expiry longer than 1 year.  [~adc] could you help update these like you did for other certs recently?","21/Feb/18 12:45 PM;Ratnakar;Yes [~denyeart]. I was under impression that the changes would be very minor and re-generating the certs will solve the issue.
                    However the certs structure has changed with recent cryptogen tool, hence several tests were failing. Here are the changes that are in progress https://gerrit.hyperledger.org/r/#/c/18127/
If [~adc] could generate the certs with the old structure then we don't need to fix any tests and docs.","21/Feb/18 1:40 PM;angelo.decaro;So, a way to generate the certificates using the old structure would be to use and old version of cryptogen. I guess, it is better to move to the new version, no?","21/Feb/18 1:58 PM;angelo.decaro;So, it is just the tls certificates that are expired. How are they used? Where are the corresponding secret keys?","21/Feb/18 2:19 PM;angelo.decaro;[~Ratnakar], [~denyeart], the expired certificates are all self-signed certificates. A quick fix is to invoke cryptogen on the same configuration file. Then, replace the expired certificates with freshly generated certificates. This should work. ",21/Feb/18 2:38 PM;mastersingh24;this is an easy fix ... we need to do it.  frankly we should probably just regenerate the artifacts for each release,21/Feb/18 2:59 PM;angelo.decaro;I would add also the generation of certificates on the fly for the MSP tests as well.,"21/Feb/18 4:48 PM;Ratnakar;As per  [~angelo.decaro] suggestion , I have used the self signed ca tls certs generated from e2e_cli sample and replaced them here.
However while generating the channel artifacts like channel transaction. I do see some issues.

{code}
 $CONFIGTXGEN -profile TwoOrgsChannel -outputCreateChannelTx mychannel.tx -channelID mychannel
2018-02-21 11:45:48.646 EST [common/tools/configtxgen] main -> INFO 001 Loading configuration
2018-02-21 11:45:48.651 EST [common/tools/configtxgen] doOutputChannelCreateTx -> INFO 002 Generating new channel configtx
2018-02-21 11:45:48.669 EST [common/tools/configtxgen] main -> CRIT 003 Error on outputChannelCreateTx: config update generation failure: could not parse application to application group: setting up the MSP manager failed: the supplied identity is not valid: x509: certificate signed by unknown authority
{code}","21/Feb/18 4:59 PM;Ratnakar;Also I see orderer bootstrap fails 

{code}
2018-02-21 16:49:41.073 UTC [orderer/commmon/multichannel] newLedgerResources -> CRIT 056 Error creating channelconfig bundle: initializing channelconfig failed: could not create channel Consortiums sub-group config: setting up the MSP manager failed: the supplied identity is not valid: x509: certificate signed by unknown authority
panic: Error creating channelconfig bundle: initializing channelconfig failed: could not create channel Consortiums sub-group config: setting up the MSP manager failed: the supplied identity is not valid: x509: certificate signed by unknown authority

goroutine 1 [running]:
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc420248570, 0xd1538c, 0x27, 0xc4203579f0, 0x1, 0x1)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x134
github.com/hyperledger/fabric/orderer/common/multichannel.(*Registrar).newLedgerResources(0xc420219e30, 0xc42043b470, 0xc42043b470)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:253 +0x391
github.com/hyperledger/fabric/orderer/common/multichannel.NewRegistrar(0x1392280, 0xc42015e000, 0xc42043b0b0, 0x138ed00, 0x13f2da0, 0xc4201388f8, 0x1, 0x1, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:144 +0x352
github.com/hyperledger/fabric/orderer/common/server.initializeMultichannelRegistrar(0xc4202aca00, 0x138ed00, 0x13f2da0, 0xc4201388f8, 0x1, 0x1, 0xc4204210c0)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/common/server/main.go:262 +0x277
github.com/hyperledger/fabric/orderer/common/server.Start(0xcf98fc, 0x5, 0xc4202aca00)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/common/server/main.go:103 +0x24c
github.com/hyperledger/fabric/orderer/common/server.Main()
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/common/server/main.go:82 +0x20f
main.main()
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/main.go:15 +0x20
{code}
",21/Feb/18 7:15 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/18165,"21/Feb/18 7:27 PM;angelo.decaro;The issue was related to the expiration of certain TLS certificates. I have replaced them by fresh certificates generated with cryptogen. I have replaced only the TLS certificates and not the entire MSP folders because they are self-signed. After that I have regenerated the genesis block (recall that it contains a copy of all certificates). And that was it. Tests passed. 

Now, because I had the impression that those TLS certificates were useless, I have performed the following sanity check: I have removed the TLS certs, regenerated the genesis block and executed the tests again (restarting docker-compose, as well). The result is that all the tests passed nevertheless :)","21/Feb/18 9:58 PM;harrisob@us.ibm.com;Fixed on 1.0 release also
https://gerrit.hyperledger.org/r/#/c/18177/",,,,,,,,,,,,,,,,,,,,,,,,,,,,
EYFN  - Unable to Query on ORG3 due to an unsuccessful invoke.,FAB-8386,27849,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,Ratnakar,sambhavdutt,sambhavdutt,19/Feb/18 9:23 PM,24/Apr/18 8:22 AM,26/Apr/18 6:49 AM,20/Feb/18 7:18 PM,,,,v1.1,,fabric-samples,,,,,,0,ci_failure,,,,,,,"Observed below error (Query failed to fetch right values from peer0.org3) after execute the byfn.sh on the below *commits*
{code:java}
!!!!!!!!!!!!!!! Query result on peer0.org3 is INVALID !!!!!!!!!!!!!!!!
================== ERROR !!! FAILED to execute End-2-End Scenario ==================

ERROR !!!! Unable to run test{code}
{code:java}
Fabric Commit# e91df49
Fabric CA Commit # 8eb2b2b
Fabric Samples Commit # 24f35c1{code}
{code:java}
2018-02-19 19:49:25.907 UTC [chaincodeCmd] chaincodeInvokeOrQuery -> INFO 00b Chaincode invoke successf
ul. result: status:200 
2018-02-19 19:49:25.907 UTC [main] main -> INFO 00c Exiting.....
===================== Invoke transaction on peer0.org3 on channel 'mychannel' is successful ===================== 

CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/ca.crt
CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/server.key
CORE_PEER_LOCALMSPID=Org3MSP
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/peers/peer0.org3.example.com/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/users/Admin@org3.example.com/msp
CORE_PEER_ID=Org3cli
CORE_LOGGING_LEVEL=DEBUG
CORE_PEER_ADDRESS=peer0.org3.example.com:7051
===================== Querying on peer0.org3 on channel 'mychannel'... ===================== 
Attempting to Query peer0.org3 ...3 secs
Attempting to Query peer0.org3 ...7 secs
Attempting to Query peer0.org3 ...10 secs

2018-02-19 19:49:35.148 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2018-02-19 19:49:35.148 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2018-02-19 19:49:35.148 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc
2018-02-19 19:49:35.148 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default vscc
2018-02-19 19:49:35.148 UTC [chaincodeCmd] getChaincodeSpec -> DEBU 005 java chaincode enabled
2018-02-19 19:49:35.148 UTC [msp/identity] Sign -> DEBU 006 Sign: plaintext: 0AAA070A6608031A0B08CFD4ACD40510...6D7963631A0A0A0571756572790A0161 
2018-02-19 19:49:35.148 UTC [msp/identity] Sign -> DEBU 007 Sign: digest: 078B5187C77FCB3C30355EF3CADCB894B015F61A0868B36C9C18D2E3A6DAB6F3 
Query Result: 90
2018-02-19 19:49:35.167 UTC [main] main -> INFO 008 Exiting.....
!!!!!!!!!!!!!!! Query result on peer0.org3 is INVALID !!!!!!!!!!!!!!!!
================== ERROR !!! FAILED to execute End-2-End Scenario ==================

ERROR !!!! Unable to run test

{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i0264d:,,,,,,,,Ratnakar,sallon123456,sambhavdutt,scottz,,,,,,,,,,,,,master,,,true,"20/Feb/18 3:34 AM;Ratnakar;Gist of org3 peer0 logs, the following error is seen while executing the invoke transaction
{code}
2018-02-20 02:46:31.718 UTC [vscc] Invoke -> DEBU 981 VSCC invoked
2018-02-20 02:46:31.719 UTC [vscc] deduplicateIdentity -> DEBU 982 Signature set is of size 1 out of 1 endorsement(s)
2018-02-20 02:46:31.720 UTC [vscc] Invoke -> WARN 983 Endorsement policy failure for transaction txid=232fd6574f9bb23ee92fe0d1e6cade51c56b1cf6483585d6f19cdbc7dd432e88, err: signature set did not satisfy policy
....
2018-02-20 02:46:31.742 UTC [committer/txvalidator] validateTx -> ERRO 990 VSCCValidateTx for transaction txId = 232fd6574f9bb23ee92fe0d1e6cade51c56b1cf6483585d6f19cdbc7dd432e88 returned error: VSCC error: endorsement policy failure, err: signature set did not satisfy policy
{code}

After adding org3 to the channel , chaincode been upgraded with the following command , refer code [here|https://github.com/hyperledger/fabric-samples/blob/master/first-network/scripts/utils.sh#L135]
{code}
   peer chaincode upgrade -o orderer.example.com:7050 --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C $CHANNEL_NAME -n mycc -v 2.0 -c '{""Args"":[""init"",""a"",""90"",""b"",""210""]}' -P ""OR ('Org1MSP.peer','Org2MSP.peer','Org3MSP.peer')""
  {code}

However role for org3 peers not enabled in first-network/org3-artifacts/org3-crypto.yaml hence endorsement policy evaluation fails

*Fix*: Adding the missed configuration *_EnableNodeOUs: true_* enabled the peer role and fixes the issue.",20/Feb/18 3:35 AM;Ratnakar;https://gerrit.hyperledger.org/r/#/c/18075/,20/Feb/18 1:16 PM;scottz;Is there a doc bug related to this? Do we need one?,"20/Feb/18 4:11 PM;Ratnakar;when the last patch was made https://gerrit.hyperledger.org/r/#/c/17943/ 
the changes didn't addressed for the 3rd org hence we see failures in eyfn.sh

I do see there is one JIRA item FAB-6547 to address documentation. however it would be good if this is explained in this section http://hyperledger-fabric.readthedocs.io/en/latest/channel_update.html aswell","24/Apr/18 8:22 AM;sallon123456;Hi,

I also face the same error about:

2018-02-20 02:46:31.742 UTC [committer/txvalidator] validateTx -> ERRO 990 VSCCValidateTx for transaction txId = 232fd6574f9bb23ee92fe0d1e6cade51c56b1cf6483585d6f19cdbc7dd432e88 returned error: VSCC error: endorsement policy failure, err: signature set did not satisfy policy.

How do you solve it?

 

Thanks a lot.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
vulnerable node packages found in fabric-sdk-node modules,FAB-8373,27835,Bug,In Review,FAB,Fabric,software,ChristopherFerris,,,High,,harrisob@us.ibm.com,rameshthoomu,rameshthoomu,19/Feb/18 1:21 AM,28/Mar/18 5:13 PM,26/Apr/18 6:49 AM,,,,,v1.2,,fabric-sdk-node,,,,,,0,ci_failure,fabric-sdk-node,,,,,,"observed vulnerable node packages *(hoek @2.16.3)* found in fabric-sdk-node modules
*00:01:58.021* │ Installed  │ 2.16.3                                                             *00:01:58.021* │ Vulnerable │ <= 4.2.0 || >= 5.0.0 < 5.0.3                                       *00:01:58.021* │ Patched    │ > 4.2.0 < 5.0.0 || >= 5.0.3 
*00:01:58.021* │ Path       │ fabric-client@1.1.0-snapshot > nano@6.4.2 > cloudant-follow@0.13.0 │*00:01:58.021* │            │ > request@2.81.0 > hawk@3.1.3 > hoek@2.16.3
[https://nodesecurity.io/advisories/566]

Below is the Jenkins log to see the vulnerable node package errors

https://jenkins.hyperledger.org/view/fabric-sdk-node/job/fabric-sdk-node-vulnerable-tests-x86_64/289/console",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i0261h:,,,,,,,,denyeart,harrisob@us.ibm.com,rameshthoomu,scottz,smithbk,,,,,,,,,,,,,,,,"20/Feb/18 7:38 PM;denyeart;Talked to [~harrisob@us.ibm.com] , he doesn't think we can control this since the dependency is pulled in by another dependency that we don't have control over.
It may have to be documented in release notes that user should update the package after npm install.

Bret, assuming we go with the release notes approach, you could go ahead and add a couple sentences now to fabric-sdk-node release_notes/v1.1.0-rc1.txt.
You can see the release note precedent in : https://gerrit.hyperledger.org/r/#/c/17197/ .
","20/Feb/18 10:58 PM;harrisob@us.ibm.com;To test locally

First install the node security package so that it can be run in command line ---- https://www.npmjs.com/package/nsp

      sudo npm install -g nsp

Then run the tool from different directories, top level, /fabric-sdk-node, /fabric-client, /fabric-ca-client

 ",21/Feb/18 9:26 PM;smithbk;https://gerrit.hyperledger.org/r/18211 [FAB-8373] Document known vulnerabilties,"22/Feb/18 6:35 PM;Clayton Sims;Per conversation with dave / keith , moving to release v1.2 and adding a release note

 

[~joe-alewine]  lets open a release note item to make sure we capture in v1.1 release note","22/Feb/18 10:58 PM;denyeart;[~Clayton Sims] FAB-8456 has been opened for the release note.  As we find release notes we'll create a Jira and assign to the person with the most context (it doesn't have to be Joe), in this case Keith.","28/Mar/18 5:13 PM;scottz;[~harrisob@us.ibm.com] [~denyeart] I am reviewing the CI_Failures bugs. This one shows ""In review"" status, but it seems we documented the vulnerability with another issue in v1.1, and there is still work to be done in v1.2 for this one. So, should we move this back to status ""To Do"" ? ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NodeSDK - PKCS11 support needs to configure usertype and readwrite properly with HSMs,FAB-8351,27812,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,harrisob@us.ibm.com,harrisob@us.ibm.com,harrisob@us.ibm.com,17/Feb/18 6:23 PM,23/Feb/18 7:35 PM,26/Apr/18 6:49 AM,23/Feb/18 6:25 PM,,,,v1.0.3,v1.1,fabric-sdk-node,,,,,,0,,,,,,,,"Applications will required the ability to configure the usertype and readwrite settings when starting a session with an HSM card.

the following types of users are defined and should be allowed to be selectable by the application when loging into the service.

CKU_SO

CKU_USER

CKU_CONTEXT_SPECIFIC

Applications will also require the ability to set read/write or read-only on the session.

 ",,,,,,,,,,,,,,,,FAB-7726,,,,,,,,,,,,,,,,0|i025wd:,,,,,,,,harrisob@us.ibm.com,,,,,,,,,,,,,,,,release-1.0,master,,true,20/Feb/18 6:56 PM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/18013/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
update pre-setup script path to install location,FAB-8341,27802,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,luomin,scottz,scottz,16/Feb/18 5:36 PM,21/Feb/18 2:34 AM,26/Apr/18 6:49 AM,21/Feb/18 2:34 AM,,,,v1.1,,fabric-quality,,,,,,0,,,,,,,,"Running in vagrant the fabric-tes/pre-setup.sh script, I see error:

ubuntu@hyperledger-devenv:30dd68f:/opt/gopath/src/github.com/hyperledger/fabric-test$ make pre-setup
 => nvm is already installed in /home/ubuntu/.nvm, trying to update using git
 => error: pathspec 'v0.33.2' did not match any file(s) known to git.

...

 

Line

wget -qO- [https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh] | bash

must be changed to use updated path such as  v0.33.4  or even  v0.33.8 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i025u5:,,,,,,,,luomin,scottz,,,,,,,,,,,,,,,master,,,true,19/Feb/18 1:29 AM;luomin;https://gerrit.hyperledger.org/r/#/c/18051/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The fabric-test-daily-x86_64 is failing in the orderer_ote as a required container is missing.,FAB-8318,27772,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,sambhavdutt,sambhavdutt,sambhavdutt,15/Feb/18 4:20 PM,02/Apr/18 9:04 PM,26/Apr/18 6:49 AM,02/Apr/18 8:58 PM,,,,v1.2,,fabric-quality,,,,,,0,ci_failure,,,,,,,"The fabric-test-daily is failing in the orderer_ote because OTE container was not found,


{code:java}
====================Starting FAB-6996 test with OTE====================
./runote.sh: line 246: FAB-6996: command not found
Error response from daemon: No such container: OTE
The testcase variable is not set. Defaulting to a blank string.
The numChannels variable is not set. Defaulting to a blank string.
./runote.sh: line 250: cd: ../../fabric-test/tools/NL: No such file or directory
./runote.sh: line 251: ./networkLauncher.sh: No such file or directory
====================Completed FAB-6996 test====================
{code}


*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/257/testReport/orderer_ote/perf_orderer/test_FAB_6996_solo_1ch/",,,,,,,,,,,,,,,,,,,,,,,,16/Feb/18 10:40 PM;sambhavdutt;fabtest.png;https://jira.hyperledger.org/secure/attachment/14634/fabtest.png,,,,,,,,0|i025nx:,,,,,,,,sambhavdutt,scottz,,,,,,,,,,,,,,,master,,,true,"16/Feb/18 10:44 PM;sambhavdutt;This test case *test_FAB_6996_solo_1ch* has been failing from 10th February 


{code:java}
AssertionError: 'RESULT=PASSED' not found in '====================Starting FAB-6996 test with OTE====================\n./runote.sh: line 246: FAB-6996: command not found\nError response from daemon: No such container: OTE\nThe testcase variable is not set. Defaulting to a blank string.\nThe numChannels variable is not set. Defaulting to a blank string.\n./runote.sh: line 250: cd: ../../fabric-test/tools/NL: No such file or directory\n./runote.sh: line 251: ./networkLauncher.sh: No such file or directory\n====================Completed FAB-6996 test====================\n'
{code}

There have been multiple test case failures from last two tests as the node version was not update to the latest version used by the CI environment - v8.9.4. 

The other multiple test case errors in ote will possibly pass the tests, save FAB_6996, as the node version patch(FAB-8316)  has been merged today.","19/Feb/18 2:55 PM;sambhavdutt;The orderer_ote test has been failing in the smoke-test-daily as well as in fabric-test-daily-x86_64. 


{code:java}
AssertionError: 'RESULT=PASSED' not found in '====================Starting FAB-7936_100tx_3ch_3ord_3kb test with OTE====================\nnumber of orderers: 3\nnumber of organizations: 1\nnumber of peers: 1\nnumber of channels: 3\nnumber of kafka: 3\nnumber of zookeeper: 1\norderer service type: kafka\nPROFILE_STRING: test\nHostIP1:  localhost\nTLSEnabled: enabled\n PROFILE_STRING=test, ordServType=kafka, nKafka=3, nOrderer=3, nZoo=1\n nOrg=1, nPeersPerOrg=1, ledgerDB=goleveldb, hashType=SHA2, secType=256, comName=example.com\ncurrent working directory: /w/workspace/fabric-smoke-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/tools/NL\nGOPATH=/w/workspace/fabric-smoke-test-daily-x86_64/gopath\n \n        ####################################################### \n        #                generate crypto-config.yaml          # \n        ####################################################### \ngenerate crypto-config.yaml ...\n./gen_crypto_cfg.sh -o 3 -r 1 -p 1 -C example.com\nnOrderer:  3\nnOrg:  1\npeersPerOrg: 1\ncomName:  example.com\nnOrderer=3, peersPerOrg=1, nOrg=1\ncfgOutFile=/w/workspace/fabric-smoke-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/tools/NL/crypto-config.yaml\n \n   
{code}
 
There are multiple test case failures in the orderer_ote section for  fabric-test-daily.
    
*Build Logs*

smoke-test-daily

https://jenkins.hyperledger.org/view/Daily/job/fabric-smoke-test-daily-x86_64/43/testReport/orderer_ote/OTE_Orderer_Traffic_Engine/test_FAB7936_100tx_3ch_3ord_3kb/

fabric-test daily

https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/261/testReport/orderer_ote/perf_orderer/test_FAB_6996_solo_1ch/",24/Feb/18 2:47 PM;sambhavdutt;The orderer_ote tests have been skipped/disabled for now.,29/Mar/18 4:47 PM;scottz;We just merged subtask FAB-8423. Reassigning this to Sambhav for monitoring; this can be closed AFTER the ote tests passes in the next daily test run.,"02/Apr/18 9:03 PM;sambhavdutt;The Orderer ote test executed successfully after FAB-8423 was merged. 

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-verify-x86_64/1051/testReport/orderer_ote/OTE_Orderer_Traffic_Engine/test_FAB7936_100tx_3ch_3ord_3kb/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java SDK failed to get configuration block sometimes,FAB-8233,27657,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rickr,kiattchaip,kiattchaip,13/Feb/18 4:07 AM,14/Feb/18 3:13 AM,26/Apr/18 6:49 AM,14/Feb/18 12:48 AM,v1.1.0-alpha,,,v1.1,,fabric-sdk-java,,,,,,0,,,,,,,,"I create a hyperledger fabric network that has 2 organizations, Org1 and Org2. Each organization has 2 peers and has its own MSP. Then, I use fabric-ca to create a User1 that is a member of Org1 and I get the exception below sometimes when I try to initialize the channel having 4 peers from both organizations with User1.

 

org.hyperledger.fabric.sdk.exception.TransactionException: org.hyperledger.fabric.sdk.exception.ProposalException: getConfigBlock for channel mychannel failed with peer peer1.org2.example.com.  Status FAILURE, details: Sending proposal to peer1.org2.example.com failed because of: gRPC failure=Status\{code=UNKNOWN, description=Failed to deserialize creator identity, err expected MSP ID Org2MSP, received Org1MSP, cause=null}
     at org.hyperledger.fabric.sdk.Channel.parseConfigBlock(Channel.java:1168)
     at org.hyperledger.fabric.sdk.Channel.initialize(Channel.java:948)

 

I will get the exception if SDK try to get the configuration block from Org2 peers. I look into the Channel.parseConfigBlock() and find that the method randomly selects the peer from all peers added to the channel in order to get the configuration block. Is it possible to filter the peer list with the user MSP before selecting or provide some way to choose the peer for getting the configuration block?

 I need to add peers from both organizations to the channel because a proposal need to be signed by both organizations.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i0251p:,,,,,,,,kiattchaip,rickr,,,,,,,,,,,,,,,,,,,"13/Feb/18 11:55 AM;rickr;what version of the sdk are you using ?  v1.1.0-alpha ?  SNAPSHOT ?   git commit level ?

This cross organization demo works for me 
[https://github.com/cr22rc/fabricSDKJavaMultiDomainSample]

There was a bug v1.1.0-alpha that would cause that it was fixed with
https://jira.hyperledger.org/browse/FAB-7994

gerrit commit  https://gerrit.hyperledger.org/r/#/c/17705/

 ",14/Feb/18 12:48 AM;rickr;Has same symptoms.,"14/Feb/18 3:13 AM;kiattchaip;Hi Rick, I am using SDK 1.1.0-alpha downloaded from maven central repository. Yes, I think it is similar to https://jira.hyperledger.org/browse/FAB-7994 that was fixed. I have tried SDK 1.1.0-SNAPSHOT and not found this issue. Thank you for the information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer does not import consortia TLS CA certs,FAB-8226,27650,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jyellick,jyellick,jyellick,12/Feb/18 7:53 PM,12/Feb/18 9:00 PM,26/Apr/18 6:49 AM,12/Feb/18 9:00 PM,v1.1.0-alpha,,,v1.1,,fabric-orderer,,,,,,0,,,,,,,,"If an orderer is bootstrapped, requiring mutual TLS, then it only recognizes orderer client TLS certs as valid.  This is because the update code only inspects the ""Orderer"" and ""Application"" config groups, and ignores the organization definitions under the consortium definitions.

Because of this bug, if mutual TLS is enabled, consortium org clients will be unable to create any channels (if channels with that org have not already been created).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i0250d:,,,,,,,,jyellick,,,,,,,,,,,,,,,,master,,,true,12/Feb/18 8:06 PM;jyellick;In review via: https://gerrit.hyperledger.org/r/c/17815/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update minimum versions of Node.js and npm,FAB-8204,27615,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,mastersingh24,mastersingh24,11/Feb/18 11:06 AM,11/Feb/18 6:18 PM,26/Apr/18 6:49 AM,11/Feb/18 6:18 PM,v1.1.0-alpha,,,v1.1,,fabric-docs,,,,,,0,,,,,,,,,,;11/Feb/18 11:41 AM;mastersingh24;300,,,,300,0,300,100%,300,0,300,,,,,,,,,,,,,,,,,,,,0|i024t1:,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,master,,,true,11/Feb/18 11:41 AM;mastersingh24;https://gerrit.hyperledger.org/r/17769,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Certificate files and keys not copied to the respective container,FAB-8202,27612,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,Amjadnz,Amjadnz,10/Feb/18 9:53 PM,19/Feb/18 2:21 PM,26/Apr/18 6:49 AM,19/Feb/18 2:21 PM,,,,v1.1,,fabric-peer,,,,,,0,,,,,,,,"Using node SDK the following steps have been used.

Create Channel - Success
 Join Channel - Success
 Install Chaincode - success
 Instantiate Chaincode - Failure.

*PEER LOG:*

*peer0.dfm.local.ubn.ae    |* 2018-02-10 21:34:48.231 UTC [dev-peer0.dfm.local.ubn.ae-accountsmaster-v0] func2 -> INFO 393 Error starting AccountMasters chaincode: Error trying to read file content : open : no such file or directory
 2018-02-10 21:34:48.230 UTC [shim] userChaincodeStreamGetter -> ERRO 001 Error trying to read file content : open : no such file or directory

After Investigating the issue - we have come to 3 parts

1. when the container is getting initialzed - the follworing logs are seen in logs

 

peer0.dfm.local.ubn.ae    | FROM hyperledger/fabric-baseos:x86_64-0.3.2
 peer0.dfm.local.ubn.ae    | ADD binpackage.tar /usr/local/bin
 peer0.dfm.local.ubn.ae    | LABEL org.hyperledger.fabric.chaincode.id.name=""accountsmaster"" \
 peer0.dfm.local.ubn.ae    |       org.hyperledger.fabric.chaincode.id.version=""v0"" \
 peer0.dfm.local.ubn.ae    |       org.hyperledger.fabric.chaincode.type=""GOLANG"" \
 peer0.dfm.local.ubn.ae    |       org.hyperledger.fabric.version=""1.0.5"" \
 peer0.dfm.local.ubn.ae    |       org.hyperledger.fabric.base.version=""0.3.2""
 peer0.dfm.local.ubn.ae    | ENV CORE_CHAINCODE_BUILDLEVEL=1.0.5
 peer0.dfm.local.ubn.ae    | ENV CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/peer.crt
 peer0.dfm.local.ubn.ae    | COPY peer.crt /etc/hyperledger/fabric/peer.crt

 

Two critical params are missing to to be set ""tls.client.key.path"" and ""tls.client.cert.path"", And they are not getting set in the Container creating time

2. the fabric path does not contain all the artifacts (crts and keys)
 It contains on only 1 file (peer.crt).

3. And the most important : The current chaincode is vendor support enabled (I have a vendor folder within the chaincode package itself)  - the moment I remove the vendor folder and comment out code related to vendor packages - the chaincode instantiates properly.","MAC i7

Client:

 Version:      17.06.2-ce
API version:  1.30
Go version:   go1.8.3
Git commit:   cec0b72
Built:        Tue Sep  5 20:12:06 201
OS/Arch:      darwin/amd64

 Server:
Version:      17.06.2-ce
API version:  1.30 (minimum version 1.12)
Go version:   go1.8.3
Git commit:   cec0b72
Built:        Tue Sep  5 19:59:19 2017
OS/Arch:      linux/amd64
Experimental: true

 

Fabric 1.0.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i024sd:,,,,,,,,Amjadnz,denyeart,harrisob@us.ibm.com,yacovm,,,,,,,,,,,,,,,,,13/Feb/18 6:29 PM;Clayton Sims;Bret can you triage this one.,13/Feb/18 9:56 PM;harrisob@us.ibm.com;Looks like an issue with the Chaincode container,"13/Feb/18 10:00 PM;Amjadnz;Hi Bret,

I did another round of tests also to confirm if the chaincode is fine.
It looks okay if I do an instantiation manually without nodesdk.  Instantiation with vendor-ed package is the issue.

However what I need to check is the vendor-ed packages area all on hyperledger fabric 1.05. Specially the hyperledger shim version.
This was pointed on the rocket chat. Once those tests are done would update this issue log.

Thanks.",14/Feb/18 4:43 PM;denyeart;[~yacovm] I believe you have worked on chaincode container tls.  Can you provide your opinion on whether there is a defect here?,"14/Feb/18 4:54 PM;Amjadnz;Thanks People - I manage to resolve it after following Yacov's suggestion. The chaincode was govendored with an older version of fabric and when I cleared all -
 * downloaded a fresh copy of fabric 1.0.5
 * set my GOPATH to the correct new FABRIC
 * govendor +init and external.
 * copy the vendor folder to my chaincode
 * Did SDK create-channel, join-channel, install chaincode process - success
 * Did SDK instantiate-chaincode - this also created the instances of the chaincode images and I could query and invoke too as a test.

I would finish my remaining tasks and if nothing found - would close this from my side.",14/Feb/18 10:47 PM;yacovm;[~denyeart] isn't this a v1.0.x item? why is this marked v1.1 ? His logs clearly imply he's running v1.0.x and I told him in rocket chat that I speculate he is vendoring a v1.1 shim into a v1.0.x peer which can't work.,"19/Feb/18 2:21 PM;denyeart;Ok, I will close as it looks like user error.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Python 3 syntax error in bddtests/steps/bootstrap_util.py,FAB-8153,27560,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,cclauss,cclauss,09/Feb/18 1:42 AM,09/Feb/18 1:45 AM,26/Apr/18 6:49 AM,09/Feb/18 1:45 AM,,,,,,,,,,,,0,SyntaxError,,,,,,,"{{./bddtests/steps/bootstrap_util.py:492:67: E999 SyntaxError: invalid syntax
    def addSignatureToSignedConfigItem(cls, configUpdateEnvelope, (entity, mspId, cert)):
                                                                  ^}}

In Python 3, an explicit tuple is not an acceptable function parameter.  The workaround is to create a single function parameter named *entity_mspId_cert* and then on the first line of the function body , write *entity, mspId, cert = entity_mspId_cert*.",,,,,,144000,144000,,0%,144000,144000,,,,,,,,,,,,,,,,,,,,,0|i024h9:,,,,,,,,cclauss,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
javascript shim throws unexpected error: TypeError: Cannot read property 'resultBytes' of undefined,FAB-8115,27510,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,sanchezl,davidkel,davidkel,07/Feb/18 7:51 PM,20/Feb/18 8:27 PM,26/Apr/18 6:49 AM,20/Feb/18 8:27 PM,v1.1.0-alpha,v1.1.0-preview,,v1.1,,fabric-chaincode-node,,,,,,0,,,,,,,,"This is due to the following issue
https://jira.hyperledger.org/browse/FAB-8103

The shim code is told there is more data, but when it requests it not only does it not get any more data, in fact it gets a blank response, not even a zero length array. 

This should be fixed in the peer. Defensive code could be placed into the shim to detect this and if the peer response is not fixed, this would have to be implemented.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02471:,,,,,,,,davidkel,denyeart,sanchezl,,,,,,,,,,,,,,,,,,08/Feb/18 2:28 PM;denyeart;I'd suggest fix HasMore function in FAB-8103.  And fix the nil response in FAB-8115.  I believe this is what the reporter intended.,"09/Feb/18 5:50 AM;sanchezl;FAB-8103 will fix the HasMore issue. This makes the nil response issue irrelevant, except when a query actually returns zero results. In the scenario where the query returns zero results, the FAB-8103 fix should will also ensure that the response is not blank.

Please close or re-open after verification.","20/Feb/18 8:27 PM;denyeart;Ok, I'll go ahead and close since it will be handled in FAB-8103.  Please re-open after FAB-8103 verification if something else is needed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix README links in the release branch,FAB-8096,27472,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,mastersingh24,mastersingh24,07/Feb/18 11:05 AM,18/Feb/18 11:49 AM,26/Apr/18 6:49 AM,07/Feb/18 3:43 PM,,,,v1.0.6,,fabric-docs,,,,,,0,,,,,,,,"Links to the docs should point to ""release"" version
Link to Fabric project page is broken",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i023z9:,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,release-1.0,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
old configuration files need to be updated,FAB-8083,27458,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,tongliofcary,tongliofcary,tongliofcary,06/Feb/18 4:11 PM,11/Feb/18 9:33 PM,26/Apr/18 6:49 AM,11/Feb/18 9:33 PM,,,,,,fabric-quality,,,,,,0,PTE,,,,,,,PTE test uses cello to setup the env and has its own configuration file. Cello has been updated with new parameters and these new parameters should be added to the PTE configuration file.,CI,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,0|i023w5:,,,,,,,,tongliofcary,,,,,,,,,,,,,,,,master,,,true,06/Feb/18 4:14 PM;tongliofcary;https://gerrit.hyperledger.org/r/17587,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peers panic for longrun test,FAB-8072,27431,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,dongming,dongming,05/Feb/18 4:25 PM,13/Feb/18 6:23 PM,26/Apr/18 6:49 AM,13/Feb/18 6:23 PM,,,,v1.1,,fabric-peer,,,,,,0,,,,,,,,"With fabric commit level 0eb83eb, using PTE to drive transactions with various payload, 1k-500k, with 8 threads, each thread sends 1 transaction per second, i.e., 8 transactions per second, batchsize 1, each transaction followed by a query, after about  4 hours, peers panic with the following traceback:

2018-02-03 02:07:07.061 UTC [kvledger] CommitWithPvtData -> INFO 1159a^[[0m Channel [testorgschannel2]: Committed block [33676] with 1 transaction(s)
2018-02-03 02:07:07.083 UTC [kvledger] CommitWithPvtData -> INFO 1159b^[[0m Channel [testorgschannel1]: Committed block [33811] with 1 transaction(s)
panic: Error during commit to txmgr:sync /var/hyperledger/production/ledgersData/stateLeveldb/023868.ldb: input/output error

goroutine 455 [running]:
github.com/hyperledger/fabric/core/ledger/kvledger.(*kvLedger).CommitWithPvtData(0xc420151540, 0xc4209694d0, 0x0, 0x0)
 /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:251 +0x921
github.com/hyperledger/fabric/core/ledger/ledgermgmt.(*closableLedger).CommitWithPvtData(0xc421d13d80, 0xc4209694d0, 0x0, 0x0)
 <autogenerated>:1 +0x47
github.com/hyperledger/fabric/core/committer.(*LedgerCommitter).CommitWithPvtData(0xc4220133c0, 0xc4209694d0, 0xc427f73cf8, 0xdf8475800)
 /opt/gopath/src/github.com/hyperledger/fabric/core/committer/committer_impl.go:87 +0x6b
github.com/hyperledger/fabric/gossip/privdata.(*coordinator).StoreBlock(0xc421fccbe0, 0xc421ab0360, 0x0, 0x0, 0x0, 0xc421ab0360, 0xc42002f180)
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:223 +0xcf9
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock(0xc421d15b80, 0xc421ab0360, 0x0, 0x0, 0x0, 0x0, 0x0)
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:781 +0x7d
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads(0xc421d15b80)
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:561 +0x411
created by github.com/hyperledger/fabric/gossip/state.NewGossipStateProvider
 /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:253 +0x6d3

 

If reduce transaction rate to 1 transaction per 2 seconds, the test passes.",,,,,,,,,,,,,,,,,,,,,,,,05/Feb/18 4:29 PM;dongming;4229-crash-0203.log.gz;https://jira.hyperledger.org/secure/attachment/14547/4229-crash-0203.log.gz,,,,,,,,0|i023ql:,,,,,,,,bmos299,C0rWin,dongming,Senthil1,yacovm,,,,,,,,,,,,,,,,"05/Feb/18 7:24 PM;yacovm;{quote}sync /var/hyperledger/production/ledgersData/stateLeveldb/023868.ldb: input/output error{quote}

The output of *dmesg* will be useful here.
Also - was the file system full at the time of the crash?","05/Feb/18 7:26 PM;Clayton Sims;i am changing the component to fabric-peer.   fabric-quality should be used for bugs against the qa tooling as opposed to product defect.    I think this product defect as opposed to qa tool   if i misunderstood then let me know

 ","06/Feb/18 3:16 PM;Clayton Sims;Yacov assigning to you, if there is a better person let me know","06/Feb/18 3:19 PM;yacovm;I'm not even sure it's even a bug in Fabric.
According to the stack trace, the last fabric component from which the error manifested is the ledger. ","06/Feb/18 3:28 PM;yacovm;I suggest we get the requested information, and proceed from there before we classify this as a bug.","06/Feb/18 4:00 PM;dongming;[~yacovm] I do not have dmesg information when it occurred.  I attempted to recreate the bug yesterday, but the test passed.  Now I am running it with constant payload, 500k, and see if this will occur sooner.  Once it occurs I will preserve the system and let you look it.",07/Feb/18 1:41 PM;Senthil1;Looks like the disk is failing. Similar issues found on web: [https://github.com/syncthing/syncthing/issues/1483] and [https://github.com/syncthing/syncthing/issues/2796] ,07/Feb/18 6:53 PM;dongming;Test with 500k payload stops because of disk full.,"08/Feb/18 9:13 PM;dongming;The traceback says:

panic: Error during commit to txmgr:sync /var/hyperledger/production/ledgersData/stateLeveldb/023868.ldb: input/output error

But no specific reason about the I/O error is given.  It would be helpful to debug if more detail information related to the error can be provided in the future.","09/Feb/18 9:21 AM;yacovm;well, what you can do to have more information in the future, is to wrap the peer binary execution command with a script, in your tests.
In the script - after the peer exits (due to a crash), just output all kinds of information, such as *dmesg*, *df -h*, etc. etc.

It might work, but it also might not, if the device that the logs write to, is the same one that made that I/O error.","09/Feb/18 4:25 PM;bmos299;[~denyeart] [~yacovm]  [~manish-sethi] there are several issues out there with

*panic: Error during commit to txmgr:sync /var/hyperledger/production/ledgersData/stateLeveldb/023868.ldb: input/output error .*   **  

For the most part this is committing blocks but could also happen when reading in configurations, etc.   Is there a way we can give more information in the log about the i/o error?  I do see there are debug messages that should probably be error level log messages.  There are some good commands above like dmesg, etc. but if running native on different platforms may not work.  What do you guys think?  I just think over the next few years we will see this issue come in time after time and the more information we can provide....the better.

Thanks.","09/Feb/18 4:47 PM;yacovm;This file is a levelDB file, so that means levelDB is the one that encountered the error and returned it to the upper layer (fabric), and fabric doesn't control the information detail of the file that generated the error.

What information did you have in mind to be added to the log, Barry? Can you give an example?
",11/Feb/18 3:14 PM;bmos299;Do we know exactly what was passed back from levelDB? What is an EIO from errno.h?   Does leveldb have more options that can be enabled to get more details?  Can we make an attempt to look at a system file?  Things such is insufficient disk space (runtime) or permission errors (at startup) would eliminate over 90% of calls that would come into support.   The message of 'insufficient disk space' would be a huge time saver. As you can see several issues have been opened that are most likely due to running out of disk space.   ,"12/Feb/18 2:34 PM;dongming;I attempted to recreate this in the weekend, but have no luck for 3 attempts.",13/Feb/18 6:23 PM;Clayton Sims;ok i will close.  if this happens again you can reopen,,,,,,,,,,,,,,,,,,,,,,,,,,,
Improve error handling of node.js fabric-shim when invoking other chaincode,FAB-8068,27427,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,harrisob@us.ibm.com,janb87,janb87,05/Feb/18 3:12 PM,12/Feb/18 5:09 PM,26/Apr/18 6:49 AM,12/Feb/18 5:09 PM,v1.1.0-alpha,v1.1.0-preview,,v1.1,,fabric-chaincode-node,,,,,,0,,,,,,,,"When doing an invoke of other chaincode the error does not get rethrow the original error, you lose the context of the error. 

This change request fixes this.

[https://gerrit.hyperledger.org/r/#/c/16597/] 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i023qd:,,,,,,,,davidkel,janb87,,,,,,,,,,,,,,,master,,,true,"05/Feb/18 3:40 PM;janb87;[~jimthematrix] [~harrisob@us.ibm.com] can you provide your feedback, look at the change request in gerrit?","09/Feb/18 6:19 PM;davidkel;Hi [~janb87] thanks for the CR, please could you provide test cases for this change

Also I assume that actually addresses FAB-7611 ?","10/Feb/18 9:39 AM;davidkel;[~harrisob@us.ibm.com] There is a CR for this but it doesn't include any tests. I don't think the CR should go in without both a unit and e2e test, both of which shouldn't be hard to add.",12/Feb/18 1:28 PM;davidkel;I am working on a revised CR which will include tests.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As part of native deployment in upgrading, document the config file changes from v1.0 to v1.1",FAB-8013,27314,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rameshthoomu,suryalnvs,suryalnvs,01/Feb/18 4:00 PM,23/Feb/18 4:32 PM,26/Apr/18 6:49 AM,23/Feb/18 4:32 PM,,,,v1.1,,fabric-docs,,,,,,0,documentation,quality,,,,,,"When upgrading orderers and peers from v1.0.x to v1.1 using native deployment, which uses the v1.0 config files, needs to add new configuration variables from v1.1 config files as the environment variables in orderers and peers after upgrading. Need to know the differences between config files from v1.0 to v1.1 so that those differences can be set as environment variables in the upgraded orderers and peers respectively.

 

Orderer upgrade: [http://hyperledger-fabric.readthedocs.io/en/master/upgrade_to_one_point_one.html#update-orderer-binaries]

 

Peer Upgrade: [http://hyperledger-fabric.readthedocs.io/en/master/upgrade_to_one_point_one.html#update-orderer-binaries]

 ",,,,,,,,,,,,,,FAB-7202,,,,,,,,,,,,,,,,,,0|i0236d:,,,,,,,,ChristopherFerris,denyeart,joe-alewine,jyellick,luomin,mastersingh24,rameshthoomu,suryalnvs,,,,,,,,,master,,,true,20/Feb/18 8:29 PM;denyeart;[~jyellick] What do you think?,"22/Feb/18 2:48 PM;jyellick;This issue highlights a difference between how we treat native deployments and docker from a release perspective.

If users deploy using our docker images, then they get not only the correct binaries for the processes, but they also get updated base configuration files for those binaries, such as `orderer.yaml` and `core.yaml`. From a viper perspective, it's fairly imperative that these files are kept up to date. If a variable is not present in the yaml file, then it cannot be overridden in the environment, and it is a support nightmare if we cannot rely on env overrides to affect configuration.

For v1.1, `orderer.yaml` has a total of 40 new lines, including 6 new variables.  For `core.yaml` the total is 240 new lines, including 35 new variables. This excludes the nesting structure required for these new variables, as well as the inline documentation, and changed defaults. It is likely a futile goal to document each of these new variables in an effort to get users to add them to their files manually.

Instead, it makes the most sense that a user should start with the new config file, and using a tool like diff, port their changes from their old config file to their new one.  We can document this procedure, but this raises a question, where should the user get these configuration files from?

After discussion on #fabric-maintainers, there seemed to be a consensus that we must support non-docker deployments.

[~ChristopherFerris] Pointed out that we also do installations via go get and Mac homebrew.  He is interested especially in a consistent approach to dealing with the config files.

[~yacovm] Thought we should include the config files along side the release artifacts.

Personally, I'm in favor including the config files along with the release artifacts, as it is a sticking point for documenting upgrade at the moment.  Then, we can look at bringing the other installation methods into parity, but I welcome other opinions.",22/Feb/18 5:46 PM;mastersingh24;I'd vote for including them.  It's good to have them as reference in any case and better than having to keep updating the download link,"22/Feb/18 6:23 PM;ChristopherFerris;ok, chatted with Gari, let's include them in the tarfile that we publish the binaries under config/ directory sibling of bin/

Chris",23/Feb/18 3:01 AM;rameshthoomu;https://gerrit.hyperledger.org/r/#/c/18221/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ResourceMgmtClient: Targets get populated with defaults if TargetFilter is set,FAB-7978,27256,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,sandrav,ga25waq,ga25waq,30/Jan/18 11:30 PM,12/Feb/18 9:43 PM,26/Apr/18 6:49 AM,12/Feb/18 9:43 PM,,,,,,fabric-sdk-go,,,,,,0,,,,,,,,"Although a TargetFilter is set, ResourceMgmtClient.JoinChannel(string, ...resmgmt.Option) populates the Targets slice with default targets in
> ./pkg/fabric-txn/resmgmtclient/resmgmt.go:109

Consequently, the error
> failed to determine target peers for JoinChannel
is returned, since both the Targets slice and the TargetFilter are set.

Quick fix:
> len(opts.Targets) == 0 && opts.TargetFilter == nil

",,,,,,,,,,,,,,,,,,,FAB-7820,,,,,,,,,,,,,0|hzzyuz:z9l,,,,,,,,ga25waq,troyronda,,,,,,,,,,,,,,,master,,,true,09/Feb/18 5:33 PM;ga25waq;I suggest to fix this issue as soon as possible since it is currently not possible to use the target filter for the JoinChannel method without applying a patch locally.,12/Feb/18 8:59 PM;troyronda;https://gerrit.hyperledger.org/r/c/17817/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
LF infra network issues causing build failures consistently,FAB-7971,27246,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,ryjones,sambhavdutt,sambhavdutt,30/Jan/18 4:33 PM,13/Apr/18 7:29 PM,26/Apr/18 6:49 AM,13/Apr/18 7:26 PM,,,,v1.2,,fabric-ci,,,,,,0,ci_failure,,,,,,,"The following errors are observed due to timeout which is failing the tests,

orderer.Orderer Service.FAB-4808,FAB-3937,FAB-3938: Orderer_BatchTimeOut is honored, for kafka orderer -- @1.4


{code:java}
@scenario.begin

  @daily
  Scenario Outline: FAB-4808,FAB-3937,FAB-3938: Orderer_BatchTimeOut is honored, for kafka orderer -- @1.4 
    Given the CONFIGTX_ORDERER_BATCHTIMEOUT environment variable is 10 seconds ... passed in 0.001s
    And I have a bootstrapped fabric network of type kafka ... passed in 31.177s
    When a user sets up a channel ... passed in 45.661s
    And a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" with args [""init"",""a"",""1000"",""b"",""2000""] with name ""mycc"" ... passed in 57.322s
    When a user queries on the chaincode named ""mycc"" with args [""query"",""a""] ... passed in 6.740s
    Then a user receives a success response of 1000 ... passed in 0.000s
    When a user invokes on the chaincode named ""mycc"" with args [""invoke"",""a"",""b"",""10""] ... passed in 4.796s
    And I wait ""5"" seconds ... passed in 5.004s
    When a user queries on the chaincode named ""mycc"" with args [""query"",""a""] ... passed in 4.824s
    Then a user receives a success response of 1000 ... failed in 0.000s
{code}



*orderer_ote.perf_orderer.test_FAB_7038_3ord_kafka_3ch (from pytest)*

{code:java}
AssertionError: 'RESULT=PASSED' not found in '====================Starting FAB-7038 test with OTE====================\nnumber of orderers: 3\nnumber of CA: 1\nnumber of organizations: 1\nnumber of peers: 1\nnumber of channels: 3\nnumber of kafka: 5\nnumber of zookeeper: 3\norderer service type: kafka\nPROFILE_STRING: test\nHostIP1:  localhost\nTLSEnabled: enabled\n PROFILE_STRING=test, ordServType=kafka, nKafka=5, nOrderer=3, nZoo=3\n nOrg=1, nPeersPerOrg=1, ledgerDB=goleveldb, hashType=SHA2, secType=256, comName=example.com\ncurrent working directory: /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/tools/NL\nGOPATH=/w/workspace/fabric-test-daily-x86_64/gopath\n \n        
{code}


*BUILD LOG*
https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-test-daily-x86_64/245/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i022rx:,,,,,,,,rameshthoomu,ryjones,sambhavdutt,,,,,,,,,,,,,,,,,,"31/Jan/18 9:38 PM;sambhavdutt;Peer and Chaincode tests are failing along with Orderer Service and Orderer_ote as kafka fails due to timeout, build #241

*Build Log*
https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/241/consoleFull

","01/Feb/18 3:08 PM;rameshthoomu;Observed these failures on network latency in x86_64 nodes. I see many builds are failing with timeout error or curl is failing to fetch. Informed this to Linux foundation in #infra-support RC channel

[ ]([https://chat.hyperledger.org/channel/infra-support?msg=yDjDiFiQtzTCgT2q3)]

[~ry] [~jwagantall] ^^","02/Feb/18 2:50 PM;rameshthoomu;h3. one more test failed with timeout error. https://jenkins.hyperledger.org/view/fabric/job/fabric-smoke-test-daily-x86_64/26/testReport/orderer/Orderer%20Service/FAB_3852__Message_Payloads_Less_than_1MB__for_kafka_orderer_using_the_NodeJS_SDK_interface_____1_4_/
h3.  
{code:java}
Error Message
The containers are not ready in the allotted time (300 seconds)

Stacktrace
Failing step: Given I have a bootstrapped fabric network of type kafka ... failed in 321.442s Location: orderer.feature:64 Assertion Failed: The containers are not ready in the allotted time (300 seconds) Captured stdout: testConfigs: configs/96489ed007de11e88883fa163ed8ae26
{code}
 ",02/Feb/18 10:35 PM;ryjones;No update on network issues from service provider.,"05/Feb/18 2:34 PM;rameshthoomu;[~ryjones] [~jwagantall] seems network issues are more frequent now and causing most of the build failures. Developers are complaining about these failures. Could you please let us know the ETA or findings on this issue.

https://gerrit.hyperledger.org/r/#/q/project:fabric-test",05/Feb/18 7:39 PM;ryjones;I am working to schedule an outage for an upgrade,"06/Feb/18 2:26 PM;sambhavdutt;[~ryjones] Can you tell when this outage is planned or if it has been worked on already. There are still some errors in the fabric tests due to the same issue. If the outage is not done yet, and will happen soon or later, that would be fine as it would possibly solve this problem.",06/Feb/18 8:41 PM;ryjones;[~sambhavdutt] there will be an email to the TSC when this is scheduled,09/Feb/18 2:09 AM;ryjones;This work is done. We should see much less of these types of failures.,"14/Feb/18 4:33 PM;sambhavdutt;After the Network fix, ca_tests and chaincodes tests are passing, but still Gossip(behave) fails due to 300 second timeout, and the Orderer tests fail too as kafka build was not complete within the timeframe. 

*Build Log*
https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/255/console","15/Feb/18 4:05 PM;rameshthoomu;[~ryjones] We are not seeing `curl` issues after the network is upgraded but below `timeout issues` are popping up very frequently. Below are few

 
{code:java}
Issue#1: Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: timeout expired while starting chaincode

Issue#2: The containers are not ready in the allotted time (300 seconds){code}
 ","16/Feb/18 4:01 PM;rameshthoomu;[~ryjones] *curl(18)* issues are popping up again in the builds. Most of the e2e tests are failing while downloading (using curl) maven binary. Also, I see many other builds are failing because of the timeout errors. See the below example

 
{code:java}
Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: timeout expired while starting chaincode mycc:0(networkid:24f68e0a12d711e89721fa163e90259d,peerid:peer1.org1.example.com,tx:35df92cdb3d553c9556aac6270b56ab9b8e77674ea0e776e96dc61272333111f) - <nil> Usage:{code}
{code:java}
00:02:45.612 Step 7/15 : RUN mkdir -p /usr/share/maven /usr/share/maven/ref   && curl -fsSL http://www-us.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz     | tar -xzC /usr/share/maven --strip-components=1   && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
00:02:45.668  ---> Running in f4d72bdecd50
00:02:50.786 curl: (18) transfer closed with 5559958 bytes remaining to read{code}
 ","20/Feb/18 2:53 PM;sambhavdutt;The Gossip(behave) tests are failing in the last build for fabric-test-daily-x86_64 as timeout expired.


{code:java}
Expected response was 930; received Error occurred ['docker exec peer0.org1.exam...
{code}

{code:java}
Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: timeout expired while starting chaincode mycc:0(networkid:ba788a6815fd11e8829dfa163ef5eecb,peerid:peer0.org1.example.com,tx:0edb24a66e4e307ca691ed4bed5ff798dcb210753013564b26ef8c8cee509dd7) - <nil>
{code}

*Build log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/262/testReport/gossip/Gossip%20Service/_FAB_4667___FAB_4671___FAB_4672__A_leader_peer_goes_down_by_disconnect__comes_back_up__after__another_leader_is_elected__catches_up______1_3_/

","22/Feb/18 2:12 PM;sambhavdutt;The Bootstrap, Chaincode, Orderer and Peer tests failing in fabric-smoke-test daily(and in fabric-test-daily) due to timeout error,


{code:java}
Failing step: And I have a bootstrapped fabric network of type kafka with tls ... failed in 323.763s
Location: bootstrap.feature:82
Assertion Failed: The containers are not ready in the allotted time (300 seconds)
Captured stdout:
testConfigs: configs/7ba1a996179211e88bc6fa163ef84b42
{code}


{code:java}
Failing step: Given I have a bootstrapped fabric network of type kafka ... failed in 314.238s
Location: chaincodes.feature:379
Assertion Failed: The containers are not ready in the allotted time (300 seconds)
Captured stdout:
testConfigs: configs/44962eb0179511e88bc6fa163ef84b42
{code}


{code:java}
Failing step: Given I have a bootstrapped fabric network of type kafka ... failed in 313.436s
Location: orderer.feature:64
Assertion Failed: The containers are not ready in the allotted time (300 seconds)
Captured stdout:
testConfigs: configs/6e22173e179611e88bc6fa163ef84b42
{code}


{code:java}
Failing step: Given I have a bootstrapped fabric network of type kafka using state-database leveldb with tls ... failed in 313.921s
Location: peer.feature:40
Assertion Failed: The containers are not ready in the allotted time (300 seconds)
Captured stdout:
testConfigs: configs/d4ae2738179911e88bc6fa163ef84b42
{code}

*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-smoke-test-daily-x86_64/47/consoleFull
","22/Feb/18 8:37 PM;sambhavdutt;[~ryjones] Need your advise on this, I get the following error during byfn tests. Worked ok yesterday, should I increase the timeout to more than 60. It wouldn't be a problem if it is due a slow network issue that will be fixed soon.

{code:java}

16:15:16 ERROR: for peer1.org1.example.com  UnixHTTPConnectionPool(host='localhost', port=None): Read timed out. (read timeout=60)
16:15:16 
16:15:16 ERROR: for peer1.org1.example.com  UnixHTTPConnectionPool(host='localhost', port=None): Read timed out. (read timeout=60)
16:15:16 An HTTP request took too long to complete. Retry with --verbose to obtain debug information.
16:15:16 If you encounter this issue regularly because of slow network conditions, consider setting COMPOSE_HTTP_TIMEOUT to a higher value (current value: 60).
{code}
",22/Feb/18 8:40 PM;ryjones;[~sambhavdutt] I would increase the timeout. I'm not sure why things are failing.,22/Feb/18 8:43 PM;sambhavdutt;[~ryjones] Thank you ! Will increase the timeout,"26/Feb/18 2:11 PM;sambhavdutt;Gossip test in fabric-test-daily failed to execute as timeout expired.


{code:java}
Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: timeout expired while starting chaincode mycc:0(networkid:9b361a181ab111e88f05fa163ef01172,peerid:peer1.org1.example.com,tx:09e4e0e09a50dfd26e69cd9e9bf3a41fabb50f9b3a28d8130812b8e14675fb04) - <nil>

{code}

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/269/testReport/gossip/Gossip%20Service/_FAB_4663___FAB_4664___FAB_4665__A_non_leader_peer_goes_down_by_disconnect__comes_back_up_and_catches_up_eventually______1_3_/
","05/Mar/18 2:09 PM;sambhavdutt;Gossip Service failed in the fabric-test-daily due to timeout,

*gossip.Gossip Service.[FAB-4673] [FAB-4674] [FAB-4675] A leader peer goes down by disconnect, comes back up *before* another leader is elected, catches up. -- @1.3*


{code:java}
Assertion Failed: Expected response was 980; received Error occurred ['docker exec peer0.org1.example.com /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/d69596c6203611e8a422fa163e982d63/peerOrganizations/org1.example.com/users/User1@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com 
{code}


{code:java}
Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: timeout expired while starting chaincode mycc:0(networkid:d69596c6203611e8a422fa163e982d63,peerid:peer0.org1.example.com,tx:5dbf6c01a0c9710f9a283ac9a1d35d2907ee582c9dcd48a873834ee86c3cffc5) - <nil>
{code}

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/278/testReport/gossip/Gossip%20Service/_FAB_4673___FAB_4674___FAB_4675__A_leader_peer_goes_down_by_disconnect__comes_back_up__before__another_leader_is_elected__catches_up______1_3_/
","06/Mar/18 2:05 PM;sambhavdutt;Timeout error observed in, chaincodes tests for fabric-smoke-test daily, and Gossip test for fabric-test daily,

*smoke-test-daily*

{code:java}
Failing step: Given I have a bootstrapped fabric network of type kafka ... failed in 311.878s
Location: chaincodes.feature:379
Assertion Failed: The kafka containers are not ready in the allotted time (300 seconds)
Captured stdout:
testConfigs: configs/16362de8210111e889b4fa163e5ab570
{code}

*fabric-test-daily*


{code:java}
Failing step: Then a user receives a success response of 900 from ""peer0.org2.example.com"" ... failed in 0.000s
Location: gossip.feature:303
Assertion Failed: Expected response was 900; received Error occurred [u'docker exec peer0.org2.example.com /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/34f06ef2210511e89d2ffa163e1a0116/peerOrganizations/org2.example.com/users/User1@org2.example.com/msp CORE_PEER_LOCALMSPID=org2.example.com CORE_PEER_ID=peer0.org2.example.com CORE_PEER_ADDRESS=peer0.org2.example.com:7051 peer chaincode query --name mycc --ctor '{\""Args\"": [\""query\"",\""a\""]}' --channelID behavesystest ""']: 2018-03-06 06:15:04.597 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2018-03-06 06:15:04.597 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2018-03-06 06:15:04.597 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc
2018-03-06 06:15:04.597 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default vscc
2018-03-06 06:15:04.597 UTC [chaincodeCmd] getChaincodeSpec -> DEBU 005 java chaincode enabled
2018-03-06 06:15:04.597 UTC [msp/identity] Sign -> DEBU 006 Sign: plaintext: 0AB8070A6B08031A0C08E8E3F8D40510...6D7963631A0A0A0571756572790A0161 
2018-03-06 06:15:04.598 UTC [msp/identity] Sign -> DEBU 007 Sign: digest: 87ED54981283B907AE466EBDF9678CCFBF1C2A9F1A01CBF4AA3C9DDFD931B6B4 
Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: timeout expired while starting chaincode 

{code}

*Build Log*
smoke-test-daily:
https://jenkins.hyperledger.org/view/Daily/job/fabric-smoke-test-daily-x86_64/60/testReport/chaincodes/Chaincodes%20Testing/FAB_5791__Test_API_in_SHIM_interface_using_marbles02_and_shimApiDriver_chaincodes_for_kafka_orderer_couchdb_db_GOLANG_lang_____1_2_/

faric-test-daily:
https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/279/testReport/gossip/Gossip%20Service/_FAB_4683___FAB_4684___FAB_4685__In_leader_selection_setup__leader_peer_goes_down_by_disconnect_for_at_least_15_seconds__comes_back_up_and_catches_up_eventually______1_3_/","23/Mar/18 11:10 AM;sambhavdutt;[~ryjones]
Good Morning Ry. 
Can you suggest something about the test case fails due to network issue (if I am not wrong) that are causing the tests/builds to timeout and fail, specifically in fabric-test-daily and smoke-test daily. Should I create a Bug and assign it to someone or communicate with a  team for this. Many of the test case timeouts were little more than 60 seconds. The time has been increased to 300 seconds but the builds still fail but to timeout.",29/Mar/18 7:11 PM;sambhavdutt;The root cause of these build fails due to timeout will be verified soon if  the tests are failing due to network issue or if it because of tests.,13/Apr/18 7:29 PM;sambhavdutt;The timeout errors that failed due to 300 seconds container timeout are not happening anymore in recent CI builds.,,,,,,,,,,,,,,,,,,,
CouchDB indexing Documentation: indexes should only be in *.json file,FAB-7889,27053,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,AdnanChoudhury,AdnanChoudhury,24/Jan/18 10:31 PM,26/Jan/18 6:13 PM,26/Apr/18 6:49 AM,25/Jan/18 4:15 AM,,,,v1.1.0-alpha,,fabric-docs,,,,,,0,,,,,,,,The documentation should reflect that the supplied indexes with the chaincodes should only be in *.json file format.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i0222d:,,,,,,,,AdnanChoudhury,denyeart,joe-alewine,,,,,,,,,,,,,,master,,,true,24/Jan/18 11:32 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/17161/,"24/Jan/18 11:38 PM;denyeart;{color:#444444}golang chaincode packaging excludes certain file extensions.  *.json is an allowed file extension for both golang and node.js, therefore we will document that couchdb index definition files should utilize *.json file extension.{color}

{color:#444444}To ensure more consistency across golang chaincode and node chaincode, follow-on FAB-7886 will enforce that index files must utilize *.json file extension.{color}","26/Jan/18 6:13 PM;joe-alewine;Doc merged here:

http://hyperledger-fabric.readthedocs.io/en/latest/couchdb_as_state_database.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Install chaincode without required files,FAB-7876,27038,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,sanchezl,nakyo7,nakyo7,24/Jan/18 6:04 AM,06/Feb/18 11:21 PM,26/Apr/18 6:49 AM,06/Feb/18 11:21 PM,,,,,,fabric-peer,,,,,,0,,,,,,,,"When I install my chaincode that use external library like ethereum-go, exclude files needed.

I hope that use ECDSA algorithm(Ethereum-go) in chaincode, but needed file is excluded when run command 'peer chaincode install'.

Need c++ files in  crypto/secp256k1/libsecp256k1 for build, but skipped that folder.

So `peer chaincode instantiate' is failed. (Not found files..)

 

> install

 
{code:java}
2018-01-26 09:58:41.560 UTC [golang-platform] GetDeploymentPayload -> DEBU 02c processing dep: github.com/ethereum/go-ethereum/crypto/secp256k1
2018-01-26 09:58:41.560 UTC [golang-platform] GetDeploymentPayload -> DEBU 02d checking: /opt/gopath/src/github.com/ethereum/go-ethereum/crypto/secp256k1 exists: true
2018-01-26 09:58:41.560 UTC [golang-platform] func1 -> DEBU 02e skipping dir: /opt/gopath/src/github.com/ethereum/go-ethereum/crypto/secp256k1/libsecp256k1

{code}
 

> instantiate
{code:java}
Error: Error endorsing chaincode: rpc error: code = Unknown desc = Error starting container: Failed to generate platform-specific docker build: Error returned from build: 2 ""# github.com/hyperledger/fabric/examples/chaincode/go/wallet/vendor/github.com/ethereum/go-ethereum/crypto/secp256k1
chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/wallet/vendor/github.com/ethereum/go-ethereum/crypto/secp256k1/curve.go:43:44: fatal error: libsecp256k1/include/secp256k1.h: No such file or directory
compilation terminated.
# github.com/hyperledger/fabric/examples/chaincode/go/wallet/vendor/github.com/ethereum/go-ethereum/crypto/sha3
chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/wallet/vendor/github.com/ethereum/go-ethereum/crypto/sha3/keccakf_amd64.go:13: missing function body for ""keccakF1600""
{code}
 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i021z9:,,,,,,,,nakyo7,sanchezl,,,,,,,,,,,,,,,,,,,"26/Jan/18 8:23 PM;sanchezl;[~nakyo7], Did you vendor the dependency ? See https://www.youtube.com/watch?v=-mlUaJbFHcM","29/Jan/18 7:00 AM;nakyo7;[~sanchezl], Yes. I saw that, and did it.

But the go vendor do not include c++ files in subdirectories.

Skipped all files in go-ethereum/crypto/secp256k1/libsecp256k1.",06/Feb/18 3:14 PM;Clayton Sims;[~sanchezl]what is the next step here?   Assigning to you Luis if you aren't the right (or a good person) let me know. ,"06/Feb/18 11:21 PM;sanchezl;This is not a Fabric issue. This appears to be a known problem with go vendoring in general and go-ethereum specifically.

[https://github.com/ethereum/go-ethereum/issues/2738]

Personally, I wasn't even able to get this working (e.g. {{go build}} the chaincode locally) when using a vendored go-ethereum dependency locally.

I'm closing this issue. [~nakyo7], please feel free to reopen if you have more information.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client.createUser does not support PKCS11 keys,FAB-7859,27012,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,mastersingh24,mastersingh24,23/Jan/18 11:07 AM,25/Jan/18 9:42 AM,26/Apr/18 6:49 AM,25/Jan/18 9:42 AM,,,,v1.0.3,v1.1,fabric-sdk-node,,,,,,0,,,,,,,,The Client.createUser() function is provided to allow the use of existing cryptographic material to specify the identity which the Client should use.  The function should support any of the crypto providers (software and HSM/PKCS11) but currently only supports software-based crypto.,,,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,0|i021tx:,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,release-1.0,master,,true,"24/Jan/18 10:54 AM;mastersingh24;https://gerrit.hyperledger.org/r/17129  (master)

https://gerrit.hyperledger.org/r/17131 (release)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"api PUT /identities/{id} always return secret, even if the secret does not changed",FAB-7857,27007,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,skarim,zhaochy,zhaochy,23/Jan/18 3:49 AM,26/Jan/18 6:11 PM,26/Apr/18 6:49 AM,26/Jan/18 6:11 PM,,,,,,fabric-ca,,,,,,0,MembershipServices,,,,,,,"api PUT /identities/\{id} always return secret, even if the secret does not changed

while the swagger doc for this field is :

""description"": ""The enrollment secret which is only present if the secret was updated in this request.""",,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,0|i021st:,,,,,,,,skarim,zhaochy,,,,,,,,,,,,,,,,,,,23/Jan/18 4:21 PM;skarim;[~zhaochy] Are you saying that 'secret' field is always present in the response from the server or is it actually populated with a value regardless of whether you modified the secret?,24/Jan/18 2:19 AM;zhaochy;the 'secret' field is always populated with a value regardless of whether I modified the secret,26/Jan/18 6:11 PM;skarim;Fixed in: https://gerrit.hyperledger.org/r/#/c/17107/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Built-in attribute checks should not be case sensitive,FAB-7841,26984,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,mastersingh24,mastersingh24,22/Jan/18 1:01 PM,22/Jan/18 5:52 PM,26/Apr/18 6:49 AM,22/Jan/18 5:52 PM,,,,DUPLICATE,,fabric-ca,,,,,,0,,,,,,,,"FAB-7465 tightened up the controls on attributes but inadvertently make checks for built-in ""hf.*"" attributes case sensitive.  Since case sensitivity is / was not documented, it's possible that this change will break existing clients  (for example this currently breaks Java SDK tests) ",,,,,,,,,,,,,,,,,FAB-7844,,,,,,,,,,,,,,,0|i021ol:,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
channel.QueryBySystemChaincode(apitxn.ChaincodeInvokeRequest) does not seem to work,FAB-7826,26965,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,troyronda,ga25waq,ga25waq,19/Jan/18 9:44 PM,09/Feb/18 1:37 PM,26/Apr/18 6:49 AM,09/Feb/18 1:37 PM,,,,,,fabric-sdk-go,,,,,,0,,,,,,,,"The implementation of func
> (c *Channel) QueryBySystemChaincode(request txn.ChaincodeInvokeRequest) ([][]byte, error)
in
> ./pkg/fabric-client/channel/query.go
does not work for me.

It uses a string constant ""systemChannel"" for the channel ID that is set to an empty string on the top of the file.

On the peers, I get an error message beginning with
> No ledger context for [...]
after I used the function named above for sending a transaction proposal.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz6a:rhwhuu,,,,,,,,ga25waq,troyronda,,,,,,,,,,,,,,,master,,,true,"23/Jan/18 2:27 AM;troyronda;You can use 
 QueryByChaincode for system chaincode.
  
 QueryBySystemChaincode is poorly named and should probably be removed or renamed. It was intended for calling channel-less SCC. So it is more like QueryBySystemChannelChaincode but that's a mouth-full.",23/Jan/18 2:30 AM;troyronda;Also I would use the fabsdk.NewClient(...).Channel interface rather than this lower-level package.,"23/Jan/18 2:43 PM;ga25waq;Thanks for your quick reply, [~troyronda]!
apifabclient.Channel.QueryInstantiatedChaincodes (in particular its implementation in ./pkg/fabric-client/channel/query.go) calls QueryBySystemChaincode and therefore does not work.
So the implementation of QueryInstantiatedChaincodes should be fixed, too.","23/Jan/18 3:18 PM;troyronda;aw snap. looks like that helper for instantiatedchaincode got forgotten.

quick fix for the instantiatedchaincode issue: [https://gerrit.hyperledger.org/r/c/17097/]

(merged into master)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
registerBlockEvent() returns an incomplete Block object (read/write set missing),FAB-7813,26950,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,jtracey,jtracey,19/Jan/18 11:22 AM,24/Jan/18 8:32 AM,26/Apr/18 6:49 AM,20/Jan/18 11:48 PM,v1.1.0-preview,,,Not a Bug,,fabric-peer,fabric-sdk-node,,,,,0,,,,,,,,"Hyperledger Fabric SDK for node.js

Peer (or SDK) issue related to EventHub class usage:

Block objects that are returned to a callback function registered via registerBlockEvent() contain an empty read/write set (ns_rwset attribute) under the proposal_response_payload section. Conversely, the contents of this attribute can be observed via a call to the queryBlock() method of the Channel class. 

e.g. displaying the Block object data with:

console.log(JSON.stringify(block, null, 2));

produces the following output via registerBlockEvent()  - note the empty read/write set (ns_rwset):

""proposal_response_payload"": \{
          ""proposal_hash"":  ""d5864d3985d224a60c74954d30b4fe5bb13489625a1a19c679c3486ade4f1241"",
          ""extension"": \{
                ""results"": \{
                 ""data_model"": 0,
                 ""ns_rwset"": []
 }

versus the following output via queryBlock() method:

\{

                              ""namespace"": ""test-org1"",

                              ""rwset"": \{

                                ""reads"": [],

                                ""range_queries_info"": [],

                                ""writes"": [

                                  \{

                                    ""key"": ""demo_key"",

                                    ""is_delete"": false,

                                    ""value"": ""chit chat chit chat 1 on test channel""

                                  }

                                ]

                              }

                            }",Mac OSX 10.11.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i021hh:,,,,,,,,C0rWin,denyeart,harrisob@us.ibm.com,jtracey,rickr,,,,,,,,,,,,,,,,"19/Jan/18 11:31 PM;C0rWin;Based on comments in the code described is the intended behavior, e.g. 

{code}
						// Drop read write set from transaction before sending block event
						// Performance issue with chaincode deploy txs and causes nodejs grpc
						// to hit max message size bug
						// Dropping the read write set may cause issues for security and
						// we will need to revist when event security is addressed
						caPayload.Results = nil
						chaincodeActionPayload.Action.ProposalResponsePayload, err = utils.GetBytesProposalResponsePayload(propRespPayload.ProposalHash, caPayload.Response, caPayload.Results, caPayload.Events, caPayload.ChaincodeId)
						if err != nil {
							return nil, nil, """", fmt.Errorf(""error marshalling tx proposal payload for block event: %s"", err)
						}
						action.Payload, err = utils.GetBytesChaincodeActionPayload(chaincodeActionPayload)
						if err != nil {
							return nil, nil, """", fmt.Errorf(""error marshalling tx action payload for block event: %s"", err)
						}
{code} 

See here: https://github.com/hyperledger/fabric/blob/release/events/producer/eventhelper.go#L73

I suggest to change it to improvement rather than bug, since works as expected.","20/Jan/18 6:02 PM;denyeart;This is working as intended, I don't think changes will be made to the older EventHub.

Going forward, we recommend to use the new deliver service to get block events, which preserves the read/write set.  The new deliver service is available in master and will be part of the upcoming v1.1 alpha.

I believe this JIRA issue can be closed.","22/Jan/18 12:02 PM;jtracey;Thanks.

Looking at eventhelper.go in the master branch the code still appears to be removing the read/write set. Is this the new deliver service or am I looking in the wrong place?

I'm trying to retrieve the args data posted via ChaincodeInvokeRequest() in the SDK. I believe this is available in the chaincode_proposal _payload section of the Block object but there's no deserializer available in the SDK.","22/Jan/18 12:20 PM;C0rWin;You are looking in the wrong place, the eventhelper.go still available to preserve backward compatibility, while new delivery service for the peer side is now available in deliverevents.go. To be more specific the part which handles delivery of the block is:

{code}
// Deliver sends a stream of blocks to a client after commitment
func (s *server) Deliver(srv peer.Deliver_DeliverServer) error {
	logger.Debugf(""Starting new Deliver handler"")
	defer dumpStacktraceOnPanic()
	srvSupport := &deliverBlockSupport{
		Deliver_DeliverServer: srv,
	}
	// getting policy checker based on resources.BLOCKEVENT resource name
	return s.dh.Handle(deliver.NewDeliverServer(srvSupport, s.policyCheckerProvider(resources.BLOCKEVENT), s.sendProducer(srv)))
}
{code}

which basically utilize the implementation of the delivery handler of ordering service:

{code}
func (ds *deliverHandler) deliverBlocks(srv *DeliverServer, envelope *cb.Envelope) error {
	addr := util.ExtractRemoteAddress(srv.Context())
	payload, err := utils.UnmarshalPayload(envelope.Payload)
	if err != nil {
		logger.Warningf(""Received an envelope from %s with no payload: %s"", addr, err)
		return sendStatusReply(srv, cb.Status_BAD_REQUEST)
	}

	if payload.Header == nil {
		logger.Warningf(""Malformed envelope received from %s with bad header"", addr)
		return sendStatusReply(srv, cb.Status_BAD_REQUEST)
	}

	chdr, err := utils.UnmarshalChannelHeader(payload.Header.ChannelHeader)
	if err != nil {
		logger.Warningf(""Failed to unmarshal channel header from %s: %s"", addr, err)
		return sendStatusReply(srv, cb.Status_BAD_REQUEST)
	}

	err = ds.validateChannelHeader(srv, chdr)
	if err != nil {
		logger.Warningf(""Rejecting deliver for %s due to envelope validation error: %s"", addr, err)
		return sendStatusReply(srv, cb.Status_BAD_REQUEST)
	}

	chain, ok := ds.sm.GetChain(chdr.ChannelId)
	if !ok {
		// Note, we log this at DEBUG because SDKs will poll waiting for channels to be created
		// So we would expect our log to be somewhat flooded with these
		logger.Debugf(""Rejecting deliver for %s because channel %s not found"", addr, chdr.ChannelId)
		return sendStatusReply(srv, cb.Status_NOT_FOUND)
	}

	erroredChan := chain.Errored()
	select {
	case <-erroredChan:
		logger.Warningf(""[channel: %s] Rejecting deliver request for %s because of consenter error"", chdr.ChannelId, addr)
		return sendStatusReply(srv, cb.Status_SERVICE_UNAVAILABLE)
	default:

	}

	accessControl, err := newSessionAC(chain, envelope, srv.PolicyChecker, chdr.ChannelId, crypto.ExpiresAt)
	if err != nil {
		logger.Warningf(""[channel: %s] failed to create access control object due to %s"", chdr.ChannelId, err)
		return sendStatusReply(srv, cb.Status_BAD_REQUEST)
	}

	if err := accessControl.evaluate(); err != nil {
		logger.Warningf(""[channel: %s] Client authorization revoked for deliver request from %s: %s"", chdr.ChannelId, addr, err)
		return sendStatusReply(srv, cb.Status_FORBIDDEN)
	}

	seekInfo := &ab.SeekInfo{}
	if err = proto.Unmarshal(payload.Data, seekInfo); err != nil {
		logger.Warningf(""[channel: %s] Received a signed deliver request from %s with malformed seekInfo payload: %s"", chdr.ChannelId, addr, err)
		return sendStatusReply(srv, cb.Status_BAD_REQUEST)
	}

	if seekInfo.Start == nil || seekInfo.Stop == nil {
		logger.Warningf(""[channel: %s] Received seekInfo message from %s with missing start or stop %v, %v"", chdr.ChannelId, addr, seekInfo.Start, seekInfo.Stop)
		return sendStatusReply(srv, cb.Status_BAD_REQUEST)
	}

	logger.Debugf(""[channel: %s] Received seekInfo (%p) %v from %s"", chdr.ChannelId, seekInfo, seekInfo, addr)

	cursor, number := chain.Reader().Iterator(seekInfo.Start)
	defer cursor.Close()
	var stopNum uint64
	switch stop := seekInfo.Stop.Type.(type) {
	case *ab.SeekPosition_Oldest:
		stopNum = number
	case *ab.SeekPosition_Newest:
		stopNum = chain.Reader().Height() - 1
	case *ab.SeekPosition_Specified:
		stopNum = stop.Specified.Number
		if stopNum < number {
			logger.Warningf(""[channel: %s] Received invalid seekInfo message from %s: start number %d greater than stop number %d"", chdr.ChannelId, addr, number, stopNum)
			return sendStatusReply(srv, cb.Status_BAD_REQUEST)
		}
	}

	for {
		if seekInfo.Behavior == ab.SeekInfo_FAIL_IF_NOT_READY {
			if number > chain.Reader().Height()-1 {
				return sendStatusReply(srv, cb.Status_NOT_FOUND)
			}
		}

		block, status := nextBlock(cursor, erroredChan)
		if status != cb.Status_SUCCESS {
			cursor.Close()
			logger.Errorf(""[channel: %s] Error reading from channel, cause was: %v"", chdr.ChannelId, status)
			return sendStatusReply(srv, status)
		}

		// increment block number to support FAIL_IF_NOT_READY deliver behavior
		number++

		if err := accessControl.evaluate(); err != nil {
			logger.Warningf(""[channel: %s] Client authorization revoked for deliver request from %s: %s"", chdr.ChannelId, addr, err)
			return sendStatusReply(srv, cb.Status_FORBIDDEN)
		}

		logger.Debugf(""[channel: %s] Delivering block for (%p) for %s"", chdr.ChannelId, seekInfo, addr)

		if err := sendBlockReply(srv, block); err != nil {
			logger.Warningf(""[channel: %s] Error sending to %s: %s"", chdr.ChannelId, addr, err)
			return err
		}

		if stopNum == block.Header.Number {
			break
		}
	}

	if err := sendStatusReply(srv, cb.Status_SUCCESS); err != nil {
		logger.Warningf(""[channel: %s] Error sending to %s: %s"", chdr.ChannelId, addr, err)
		return err
	}

	logger.Debugf(""[channel: %s] Done delivering to %s for (%p)"", chdr.ChannelId, addr, seekInfo)

	return nil

}

{code}

as you can see preserves the original read write sets in the block.","22/Jan/18 5:11 PM;jtracey;Using the current master distribution I'm still seeing an empty read/write set. Any thoughts? Thanks

 
""results"": \{
     ""data_model"": 0,
     ""ns_rwset"": []
 
 }","22/Jan/18 5:45 PM;C0rWin;Are you using new Events Delivery service or keep using the old approach of v1.0? Please consider to take a look on https://gerrit.hyperledger.org/r/#/c/16919/ to see how you can leverage new events APIs available on master branch now. With respect to the old events system no changes were made, so you [~jtracey] output is expected.","22/Jan/18 7:02 PM;jtracey; 

I'm using the node SDK (with the old delivery service as that is the only one documented). The sample code is for go. Is the API available for node? Thanks.","22/Jan/18 10:05 PM;C0rWin;[~jtracey] I'd refer the SDK related question to [~jimthematrix] or [~rickr]. I know there is work in progress and some CRs already available, while cannot confirm whenever you can base on them.",23/Jan/18 1:40 AM;rickr;Both Node ([~harrisob@us.ibm.com]) and Java SDK have this merged.  I _assumed_ that the events for full blocks would still have rwsets missing.  The solution for that is to query for the block by it's block number which would return the rwsets.,"23/Jan/18 9:29 AM;C0rWin;The solution leverages delivery API which was available for AtomicBroadcast RPC on ordering service, there was no plan to handle block delivery any different, hence rwset are not nullified with new API. Here is the new APIs:

{code}
service Deliver {
    // deliver first requires an Envelope of type ab.DELIVER_SEEK_INFO with Payload data as a marshaled orderer.SeekInfo message,
    // then a stream of block replies is received.
    rpc Deliver (stream common.Envelope) returns (stream DeliverResponse) {
    }
    // deliver first requires an Envelope of type ab.DELIVER_SEEK_INFO with Payload data as a marshaled orderer.SeekInfo message,
    // then a stream of **filtered** block replies is received.
    rpc DeliverFiltered (stream common.Envelope) returns (stream DeliverResponse) {
    }
}
{code}

Where {{Deliver}} takes care to bring the block exactly as is, without doing any filtration or transformations to the block content, while {{DeliverFiltered}} is more lightweight as aims to bring transaction id with its status and in case of chaincode event the payload as well.","23/Jan/18 2:08 PM;jtracey; 

The eventsclient.go sample code is connecting to the peer service listening port (usually on 7051) rather than the event service port (7053).

Is this the proposed mechanism for receiving 'full' blocks via events? As far as I'm aware there's no provision for this in the node SDK.

As mentioned by [~rickr] the current implementation (empty read/write set in blocks retrieved via registerBlockEvent()) forces the client app to use queryBlock() to retrieve the missing data, which seems somewhat cumbersome.","23/Jan/18 4:36 PM;harrisob@us.ibm.com;NodeSDK has new API's for the channel-based event service, which is built on the `deliver` service. See NodeSDK master or `npm install fabric-client@unstable`

New API's to get a channel-based event hub are on the `Channel` object and there is a new class `ChannelEventHub`.","24/Jan/18 8:32 AM;jtracey;Thanks Bret.

I pulled the node SDK master and have got the new event service working. The read/write set is now present in blocks so all is good.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implemented APIs conflict with swagger.json,FAB-7812,26949,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,skarim,zhaochy,zhaochy,19/Jan/18 10:55 AM,25/Jan/18 5:15 PM,26/Apr/18 6:49 AM,25/Jan/18 5:15 PM,v1.1,,,v1.1,v1.1.0-alpha,fabric-ca,,,,,,0,Documentation,,,,,,,"branch: master,

commit:  ddd74093bb6828b84d9730ceef7d7783da3594ad

 

the api *_/api/v1/identities_* has a implementation that does not work with the doc (swagger.json)

data schema changed in *api/client.go*, and the swagger doc need to be updated too
 for instance, *AddIdentityRequest* has a filed *IdentityInfo*
 the implements wants
{code:javascript}
{
  info: {
    id,
    type,
    affiliation,
    attrs,
    max_enrollments,
  },
  secret,
  caname,
}
{code}
but the document is
{code:javascript}
{
  id,
  type,
  affiliation,
  attrs,
  max_enrollments,
  secret,
  caname,
}
{code}",,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,0|i021h9:,,,,,,,,denyeart,skarim,smithbk,zhaochy,,,,,,,,,,,,,master,,,true,"20/Jan/18 2:16 PM;smithbk;The doc is correct here, so the code is wrong.",25/Jan/18 6:07 AM;denyeart;https://gerrit.hyperledger.org/r/#/c/17107/,25/Jan/18 3:03 PM;skarim;[~zhaochy] Please see the new swagger at: https://gerrit.hyperledger.org/r/#/c/17107/5/swagger/swagger-fabric-ca.json,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FabricCaTests failed in fabric-test-daily-x86_64 due to network authentication error,FAB-7799,26924,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rennman,sambhavdutt,sambhavdutt,18/Jan/18 12:19 AM,12/Feb/18 2:36 AM,26/Apr/18 6:49 AM,12/Feb/18 2:31 AM,,,,v1.1,,fabric-ci,,,,,,0,ci_failure,,,,,,,"Fabric Ca test has been failing as there is timing issue with the cert expiry time, 

ca_tests.FabricCaTests.test_FAB7206_GenCrlWindows (from pytest)


{code:java}
if retcode:
            cmd = kwargs.get(""args"")
            if cmd is None:
                cmd = popenargs[0]
>           raise CalledProcessError(retcode, cmd, output=output)
E           CalledProcessError: Command '['mkdir -p /tmp/logs/FAB7206; chmod 777 /tmp/logs/FAB7206;docker run -v $PWD/../../tools/CTE/:/tmp/test -v /tmp/logs/FAB7206:/tmp -v $PWD/../../fabric-ca:/opt/gopath/src/github.com/hyperledger/fabric-ca hyperledger/fabric-ca-fvt /tmp/test/crl_test.sh']' returned non-zero exit status 5
{code}


{code:java}
2018/02/03 19:00:32 [INFO] Configuration file location: /tmp/gencrl/notadmin/fabric-ca-client-config.yaml
Error: Response from server: Error Code: 20 - Authorization failure
{code}


*Build Log*
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/245/testReport/ca_tests/FabricCaTests/test_FAB7206_GenCrlWindows/",,,,,,,,,,,,,,,,,,,FAB-7206,,,,,,,,,,,,,0|i021cl:,,,,,,,,rennman,sambhavdutt,,,,,,,,,,,,,,,master,,,true,"01/Feb/18 8:26 PM;rennman;Apparently, this is just a timing issue with the cert expiry time. Updated and pushed 
https://gerrit.hyperledger.org/r/#/c/17439/
with a more detailed explanation.l","09/Feb/18 2:45 PM;sambhavdutt;This ca_test has been passing successfully from the last couple builds. As mentioned, these were failing due to timeout possibly.

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/250/testReport/ca_tests/FabricCaTests/test_FAB7206_GenCrlWindows/","12/Feb/18 2:36 AM;sambhavdutt;The ca-test has been passing successfully for the last five builds. The timeout error is fixed now.

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/253/testReport/ca_tests/FabricCaTests/test_FAB7206_GenCrlWindows/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer panic if invalid couchdb index json passed to chaincode instantiate,FAB-7777,26884,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,manish-sethi,denyeart,denyeart,17/Jan/18 6:26 PM,16/Feb/18 7:26 PM,26/Apr/18 6:49 AM,16/Feb/18 7:26 PM,,,,v1.1,,fabric-ledger,,,,,,0,,,,,,,,"Since couchdb indexes that are included in chaincode installation package are deployed at time of instantiation in the commit path, if there are errors deploying the indexes to couchdb (e.g. bad index definition provided or an operational issue on a single peer's couchdb), then the commit path cannot continue processing subsequent blocks and peer panics.

Here is an example panic of current behavior:

2018-01-17 05:10:49.132 UTC [statecouchdb] HandleChaincodeDeploy -> DEBU 3b1 Reading artifact from file: META-INF/statedb/couchdb/indexes/indexOwner_BAD.json
 2018-01-17 05:10:49.132 UTC [statecouchdb] HandleChaincodeDeploy -> DEBU 3b2 Creating index from file file: indexOwner_BAD.json
 2018-01-17 05:10:49.132 UTC [couchdb] CreateIndex -> DEBU 3b3 Entering CreateIndex()  indexdefinition=XXXXXXXXXXXXX BAD JSON data XXXXXXXXXXX
 2018-01-17 05:10:49.132 UTC [cceventmgmt] HandleChaincodeDeploy -> WARN 3b4 Error while invoking a listener for handling chaincode install event: JSON format is not valid
 2018-01-17 05:10:49.132 UTC [gossip/state] commitBlock -> ERRO 3b5 Got error while committing(JSON format is not valid
 commit failed
 github.com/hyperledger/fabric/gossip/privdata.(*coordinator).StoreBlock
     /opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:225
 github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock
     /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:781
 github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads
     /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:561
 runtime.goexit
     /opt/go/src/runtime/asm_amd64.s:2337
 github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock
     /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:782
 github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads
     /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:561
 runtime.goexit
     /opt/go/src/runtime/asm_amd64.s:2337)",,,,,,,,,,,,,,,,,,,FAB-8268,,,,,,,,,,,,,0|hzzyuz:za2rji,,,,,,,,denyeart,,,,,,,,,,,,,,,,master,,,true,"17/Jan/18 6:50 PM;denyeart;-----------FAB-3067----------- proposed adding *peer.ledger.state.couchDBConfig.autoDeployChaincodeIndexes* config option so that if an error like this was hit, the peer admin could suspend auto index deployment, and bring peer back up so that the chaincode instantiate transaction could be processed successfully without the index deployment.  This is fine for peer committing blocks, but without the index the peer may not be able to perform some chaincode queries.  The index would have to be deployed by some other means to make the peer fully capable of executing chaincode queries.  This may be sufficient if the error happened on a single peer, but if the index fails to be deployed due to invalid index json, it would fail on all peers in the network.  In that case a new chaincode installation package (new version) would need to be provided with fixed indexes, and instantiated on the channel.

The takeaway here is twofold:

1) Administrators of peers must pre-test all chaincode installation packages before installing the chaincode package on production peers, to protect against such scenarios. One would hope that this testing is performed regardless, but this new issue makes the pre-testing all the more critical.

2) Peer needs built-in protection against such index create failures rather than panic, as index creation is not needed for commits, and therefore index creation failure should not block peer's committer role.  

-------FAB-7715------- and -------FAB-7863------- added couchdb index validation checks at chaincode packaging time, which improves the chance that index creation will succeed at runtime.  But there is still possibility that index create fails at runtime for unexpected reasons, potentially on a single peer's couchdb database. This work item will suppress the peer panic and simply log the error.

In future work item FAB-8268, a mechanism to re-process failed index create statements is proposed.

 

 ","14/Feb/18 11:21 AM;denyeart;Initial CR proposed writing failed index create statements to another directory for re-processing:

[https://gerrit.hyperledger.org/r/#/c/17425/]

Current CR simply logs the error and proposes re-processing feature to be added in FAB-8268:

[https://gerrit.hyperledger.org/r/#/c/17971/]

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unclear mutual TLS flag behavior,FAB-7762,26851,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,latitiah,latitiah,16/Jan/18 6:11 PM,23/Jan/18 11:02 AM,26/Apr/18 6:49 AM,23/Jan/18 11:02 AM,,,,WON'T FIX,,fabric-peer,,,,,,0,,,,,,,,"With 2 flags being used for specifying when TLS and mutual TLS is used, there is a combination where the expected behavior is not clear - when setting CORE_PEER_TLS_ENABLED=true and CORE_PEER_TLS_CLIENTAUTHREQUIRED=false. 

Ideally, there would be an enumerated list containing values along the lines of ""OFF, TLS, MUTUAL_TLS"".

The following table expresses the assumed behavior:
||TLS_ENABLED||TLS_CLIENTAUTHREQUIRED||Expected Behavior||
|false|false|TLS turned off completely|
|false|true|????|
|true|false|regular TLS turned on|
|true|true|mutual TLS turned on|",,,,,,,,,,,,,,,,,,,FAB-7759,,,,,,,,,,,,,0|i0211x:,,,,,,,,latitiah,mastersingh24,,,,,,,,,,,,,,,,,,,"21/Jan/18 12:14 AM;mastersingh24;It is pretty standard to have separate options for TLS and then mutual TLS.  So not exactly sure what the ask here is?  If you don't enable TLS, then mutual TLS is not applicable.","22/Jan/18 7:19 PM;latitiah;This is about usability. If you have a single variable with multiple possible values, this would be easier to understand the expected behavior. Possible values can be: ""Disabled"", ""Client_auth"", ""Server_auth"", ""Client_optional"", etc... 

Separate option doesn't mean that it has to be a separate flag.","23/Jan/18 11:02 AM;mastersingh24;We can't break backwards compatibility.  peer.tls.enabled exists today and can only take a boolean value.  We cannot change that.
And creating a different flag which overrides that setting does not seem consumable either.  So I don't really see a better option other than having a separate flag for client auth.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Fix long database names - truncate/hash channel,chaincode,collection name while creating couchdb database",FAB-7754,26843,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,Senthil1,Senthil1,Senthil1,16/Jan/18 4:13 PM,19/Jan/18 5:49 PM,26/Apr/18 6:49 AM,19/Jan/18 5:49 PM,,,,v1.1.0-alpha,,fabric-ledger,,,,,,0,Ledger,,,,,,,"Currently, we create database in the couchDB with following naming convention:
1. channel DB – channelName_
2. namespace/chaincode DB - channelName_namespace
3. collection DB - channelName_namespace$pcollectionName 
 
As the length of CouchDB database name cannot be greater than 249 characters, we need to truncate the length of name. To avoid collision between dbName due to collision, we need to append sha256 hash of untruncated dbName to the truncated dbName. ",,,,,,,,,,,,,,,,,,,FAB-7131,,,,,,,,,,,,,0|i02105:,,,,,,,,denyeart,Senthil1,,,,,,,,,,,,,,,master,,,true,16/Jan/18 4:51 PM;Clayton Sims;[~denyeart]  is this must fix for alpha?,"16/Jan/18 5:16 PM;denyeart;[~Clayton Sims] Yes, this should be fixed for alpha.  [~Senthil1] is making good progress, therefore I don't expect any issue.",18/Jan/18 5:14 PM;Clayton Sims;https://gerrit.hyperledger.org/r/c/16933/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MSP is unkown bug imported with join channel feature,FAB-7751,26840,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,MichaelWang,MichaelWang,16/Jan/18 2:33 PM,05/Feb/18 12:39 PM,26/Apr/18 6:49 AM,05/Feb/18 12:39 PM,,,,,,fabric-sdk-py,,,,,,0,,,,,,,,"This bug is imported with 9a7d9e9f0f4. When to join channel, the local msp will be used. And the channel id should be omitted.",,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,0|i020zh:,,,,,,,,baohua,MichaelWang,,,,,,,,,,,,,,,master,,,true,05/Feb/18 8:17 AM;baohua;[~MichaelWang] is this still valid?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-client PKCS11 support does not work properly with HSMs,FAB-7726,26793,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,mastersingh24,mastersingh24,13/Jan/18 2:10 PM,17/Feb/18 6:23 PM,26/Apr/18 6:49 AM,06/Feb/18 10:04 PM,,,,v1.1,,fabric-sdk-node,,,,,,0,,,,,,,,"While support for PKCS11 has been in the SDK for a while, testing with real HSMs (as opposed to SoftHSM) has revealed issues with the implementation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i020q5:,,,,,,,,harrisob@us.ibm.com,mastersingh24,,,,,,,,,,,,,,,release-1.0,master,,true,"06/Feb/18 10:08 PM;harrisob@us.ibm.com;[https://gerrit.hyperledger.org/r/#/c/16819/]

https://gerrit.hyperledger.org/r/#/c/16821/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Eventhub crashes on broadcasting same transaction blob twice,FAB-7725,26790,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,C0rWin,MuhammadSalah,MuhammadSalah,13/Jan/18 12:04 PM,18/Jan/18 12:16 PM,26/Apr/18 6:49 AM,18/Jan/18 12:16 PM,v1.0.4,v1.0.5,v1.1.0-preview,v1.1.0-alpha,,fabric-peer,,,,,,0,,,,,,,,"I wanted to demonstrate how Peers refuse malicious transactions, so I looked for a way to resubmit same transaction twice like a ""double spend"" use case.
 The expected behavior, that Peers should reject the transaction, but it affects the Peers runtime.

 

The steps in the github link; it runs a scenario of invoking a transaction to a chaincode; and all I did is retrieving that transaction details; and broadcasting it again.



In order to reproduce you follow the steps in the README file on the github, and then follow the steps I document down here.

 

 

 

I have leveraged this tool: ""fabric-prototype"" that does the basic CLI functionalities.

[https://github.com/jeffgarratt/fabric-prototype]

I run the basic scenario following the README; and everything checks out good on the network.

I check into a Python terminal: pasting all these lines

which can be found in the ""tmp"" folder under the current run ""UUID"" in the ""scenario.html""

{{from common import common_pb2 as common_dot_common_pb2}}

{{from common import configtx_pb2 as common_dot_configtx_pb2}}

{{from common import configuration_pb2 as common_dot_configuration_pb2}}

{{from common import ledger_pb2 as common_dot_ledger_pb2}}

{{from common import policies_pb2 as common_dot_policies_pb2}}

{{from msp import msp_config_pb2, msp_principal_pb2, identities_pb2}}

{{from peer import configuration_pb2 as peer_dot_configuration_pb2}}

{{from orderer import configuration_pb2 as orderer_dot_configuration_pb2}}

{{from steps import endorser_util}}

{{from steps import composer}}

{{from steps import bootstrap_util, contexthelper, compose}}

{{context = contexthelper.Context()}}

{{directory = bootstrap_util.getDirectory(context)}}

{{directory.initFromPath('tmp/<UUID>/dir.pickle') # it is usually auto generated in the scenario file.}}

{{composition = compose.Composition(context=context, projectName='<UUID>', composeFilesYaml='tmp/<UUID>/docker-compose.yml', register_and_up=False)}}

{{composition.rebuildContainerData()}}

{{context.compose_containers=composition.containerDataList}}

{{user = directory.getUser('dev0Org0')}}

{{node_admin_tuple = user.tags['consortium1-cert']}}

{{qscch = endorser_util.QSCCHelper(context=context, user=user, directory=directory, node_admin_tuple=node_admin_tuple)}}

{{user.tags.keys()}}
 {{p=user.tags['invokeProposal1']}}
 {{bootstrap_util.broadcast_channel_config_tx(context=context, certAlias=None, composeService='orderer0', user=user, configTxEnvelope=p)}}

{{The transaction blob should pass through the orderer normall ""Happens""}}
 {{The transaction blob should get rejected by the peers ""Happens""}}
 {{But the ""Eventhub"" doesn't handle it, and it crashes.}}

 

{{I traced the logs through docker logs.}}

{{I have confirmed this on all version builds, including the latest commit build.}}

 ",,,,,,,,,,,,,,,,,,,,,,,,16/Jan/18 11:02 PM;MuhammadSalah;bypass-fix.png;https://jira.hyperledger.org/secure/attachment/14211/bypass-fix.png,16/Jan/18 6:12 PM;MuhammadSalah;firstshot.png;https://jira.hyperledger.org/secure/attachment/14207/firstshot.png,16/Jan/18 10:15 PM;MuhammadSalah;foundit.png;https://jira.hyperledger.org/secure/attachment/14210/foundit.png,13/Jan/18 12:01 PM;MuhammadSalah;image.png;https://jira.hyperledger.org/secure/attachment/14146/image.png,16/Jan/18 6:12 PM;MuhammadSalah;secondshot.png;https://jira.hyperledger.org/secure/attachment/14208/secondshot.png,16/Jan/18 6:32 PM;MuhammadSalah;thirdshot.png;https://jira.hyperledger.org/secure/attachment/14209/thirdshot.png,,,0|i020ph:,,,,,,,,C0rWin,denyeart,MuhammadSalah,,,,,,,,,,,,,,master,,,true,"13/Jan/18 12:10 PM;denyeart;[~wlahti] [~jeffgarratt] Could you assess?  As this is a peer crash, we'll want to determine if a fix is possible before alpha release.",16/Jan/18 4:49 PM;Clayton Sims;[~jeffgarratt]  could you let us know your thoughts/assessment here.  thanks,"16/Jan/18 6:12 PM;MuhammadSalah;This function is what causes the error
                    propRespPayload, err := utils.GetProposalResponsePayload(chaincodeActionPayload.Action.ProposalResponsePayload)
 I discovered it through old school debugging 
!firstshot.png!
!secondshot.png!",16/Jan/18 6:30 PM;MuhammadSalah;!secondshot.png|thumbnail!,"16/Jan/18 6:32 PM;MuhammadSalah;In the python code we bypassed creating a proposal so the function doesn't find propsals
!thirdshot.png!",16/Jan/18 6:34 PM;MuhammadSalah;I think the fix should be a suitable error handling here; in case there is no proposal it should just pop an error and continue.,"16/Jan/18 7:16 PM;MuhammadSalah;I think it's not a nil proposal, but it's just a bad one (Sorry for being not fully accurate, but I think problem should be addressed better now)","16/Jan/18 9:15 PM;C0rWin;[~MuhammadSalah] thanks for providing detailed analysis of the problem, going to add some UT to cover your use cases and provide a patch.",16/Jan/18 9:18 PM;MuhammadSalah;[~C0rWin] I am already trying to work on a fix. I will be sharing what I have.,"16/Jan/18 10:14 PM;MuhammadSalah;I have already spotted it Payload is empty

!foundit.png!",16/Jan/18 11:03 PM;MuhammadSalah;!bypass-fix.png|thumbnail!,16/Jan/18 11:04 PM;MuhammadSalah;bypassed it in the getchaincode payload function just added a dummy check.,"16/Jan/18 11:08 PM;MuhammadSalah;This is what I exactly did; if you find it sufficing commit it; if not I was just happy to be fiddling :)

 
// GetChaincodeActionPayload Get ChaincodeActionPayload from bytes
func GetChaincodeActionPayload(capBytes []byte) (*peer.ChaincodeActionPayload, error) \{
    cap := &peer.ChaincodeActionPayload\{}
    err := proto.Unmarshal(capBytes, cap)
    if len(capBytes) == 0 \{
        return cap, errors.New(""No payload"")
    }
    return cap, err
}","17/Jan/18 12:22 AM;C0rWin;[~MuhammadSalah] apologize, noticed your answer a bit late, already prepared a fix: https://gerrit.hyperledger.org/r/#/c/16883/ :/, could you please rebase on top of it and make an additional check to see whenever it solves your problem?","17/Jan/18 12:25 AM;C0rWin;{code}
    if len(capBytes) == 0 {
        return cap, errors.New(""No payload"")
    }
{code}

you could have that one at the beginning before even trying to unmarshal bytes. At any case thanks for your help, this is pretty much exactly what I did + add UT to cover the fix and your particular use case. ",17/Jan/18 12:25 AM;C0rWin;CR: https://gerrit.hyperledger.org/r/#/c/16883/,"17/Jan/18 12:26 AM;MuhammadSalah;it is okay; I am thinking actually its way beyond just an empty payload; there has to be a system thats more reselient for malicious actions on the protocol level.
But thank you for considering my humble fix.","17/Jan/18 12:29 AM;MuhammadSalah;I just saw what you did there; but I am not familiar with the software architecture yet; I just did it old school backlog trace. :)
I was fiddling only a bit.",,,,,,,,,,,,,,,,,,,,,,,,
Invalid CouchDB index definitions may be packaged into chaincode installation,FAB-7715,26779,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,denyeart,denyeart,12/Jan/18 5:48 PM,24/Jan/18 9:44 PM,26/Apr/18 6:49 AM,24/Jan/18 9:44 PM,,,,v1.1.0-alpha,,fabric-ledger,,,,,,0,,,,,,,,"Invalid CouchDB index definitions may be packaged into chaincode installation, causing runtime problems when the chaincode is installed/instantiated.

Need to add filters for metadata file types and return error if unexpected files found.

See comments in [https://gerrit.hyperledger.org/r/#/c/16697/,] specifically:

[https://gerrit.hyperledger.org/r/#/c/16697/6/core/chaincode/platforms/golang/package.go]

 
 It will be nice to abstract this handing... a sketch (1) call this field ""fileType CCPackageFileType"" (2) the possible enums are \{VALIDCHAINCODEFILE, COUCHDBINDEX, INVALIDFILE}

Ideally we can attach handler for each file which will emit the SourceDescriptor or something to complete the abstraction.

More generally, add filters for metadata file types and return error if unexpected files found.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i020n1:,,,,,,,,denyeart,,,,,,,,,,,,,,,,master,,,true,22/Jan/18 12:53 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/17045/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Timeout pulling private data when no write-set,FAB-7676,26694,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,yacovm,bstasyszyn,bstasyszyn,09/Jan/18 6:43 PM,18/Jan/18 2:54 PM,26/Apr/18 6:49 AM,18/Jan/18 1:33 PM,v1.1,,,v1.1,,fabric-gossip,,,,,,0,gossip,,,,,,,"When committing a transaction in which the private data has a private read-set but no private write-set, the following warning occurs (after about 60 seconds):

gossip/privdataÅ StoreBlock -> WARN 40b Could not fetch all missing collection private write sets from remote peers. Will commit block with missing private write sets: txID: 4d3adc8ff4e4df0f09a526a7653de5b1a2adfd09b4d0488e2c18236420ffd18d, seq: 0, namespace: mapcc, collection: coll2, hash:

Steps to reproduce:

1) PutPrivateData(""coll1"",""key1"",value1); endorsement successful; commit successful
 2) GetPrivateData(""coll1"",""key1""); endorsement successful; commit receives the above warning after 60 seconds

I also tried the following and it had the same result:

3) PutState(""key2"",value2); GetPrivateData(""coll1"",""key1""); endorsement successful; commit receives the above warning after 60 seconds

I'm testing in a configuration composed of 4 MSPs, 1 peer per MSP for a total of 4 peers, and 2 (Kafka) orderers. One chaincode (mapcc) has the following collection config:

Collection Name: coll1
 RequiredPeerCount=1
 MaximumPeerCount=2
 Policy includes all 4 MSPs

Attached are the logs (look for the warnings at the end of the file).",,,,,,,,,,,,,,,,,,,,,,,,09/Jan/18 6:44 PM;bstasyszyn;pvtdatatimeout.log;https://jira.hyperledger.org/secure/attachment/14123/pvtdatatimeout.log,,,,,,,FAB-1151,0|i02045:,,,,,,,,bstasyszyn,denyeart,troyronda,yacovm,,,,,,,,,,,,,master,,,true,"09/Jan/18 9:13 PM;yacovm;So from the logs I see:

 
{quote}peer0.org1.com ø 2018-01-09 18:19:56.437 UTC Ægossip/commÅ Send -> DEBU 267b Entering, sending GossipMessage: nonce:17180444032511408195 channel:""consortium"" tag:CHAN_ONLY privateReq:<digests:<tx_id:""7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f"" namespace:""mapcc"" collection:""coll1"" block_seq:7 > > , Envelope: 112 bytes, Signature: 0 bytes to 1 peers

peer0.org1.com ø 2018-01-09 18:19:56.437 UTC Ægossip/commÅ sendToEndpoint -> DEBU 267c Entering, Sending to peer0.org2.com:7051 , msg: GossipMessage: nonce:17180444032511408195 channel:""consortium"" tag:CHAN_ONLY privateReq:<digests:<tx_id:""7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f"" namespace:""mapcc"" collection:""coll1"" block_seq:7 > > , Envelope: 112 bytes, Signature: 0 bytes
{quote}
Meaning, peer0.org1 asked from peer0.org2 for the data.

Now, peer0.org2:
{quote}peer0.org2.com ø 2018-01-09 18:19:56.438 UTC Ægossip/commÅ func1 -> DEBU 27c0 Got message: GossipMessage: nonce:17180444032511408195 channel:""consortium"" tag:CHAN_ONLY privateReq:<digests:<tx_id:""7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f"" namespace:""mapcc"" collection:""coll1"" block_seq:7 > > , Envelope: 112 bytes, Signature: 0 bytes
 peer0.org2.com ø 2018-01-09 18:19:56.438 UTC Ægossip/privdataÅ handleRequest -> DEBU 27c1 Got GossipMessage: nonce:17180444032511408195 channel:""consortium"" tag:CHAN_ONLY privateReq:<digests:<tx_id:""7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f"" namespace:""mapcc"" collection:""coll1"" block_seq:7 > > , Envelope: 112 bytes, Signature: 0 bytes from 172.18.0.10:7051
 peer0.org2.com ø 2018-01-09 18:19:56.438 UTC Ægossip/privdataÅ CollectionRWSet -> DEBU 27c2 Current ledger height 7 is below requested block sequence number 7 retrieving private data from transient store, namespace mapcc collection name coll1 txID 7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f
 peer0.org2.com ø 2018-01-09 18:19:56.438 UTC Ægossip/privdataÅ createResponse -> DEBU 27c3 *Found 0 for TxID* 7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f , collection coll1 for 172.18.0.10:7051
 peer0.org2.com ø 2018-01-09 18:19:56.438 UTC Ægossip/privdataÅ func1 -> DEBU 27c4 Returning 172.18.0.10:7051 0 elements
{quote}
 
 So the peer has decided it needs to return a response (the peer is eligible of receiving the data) but it didn't find any data when calling *CollectionRWSet() *
{code:java}
		rwSets := p.CollectionRWSet(dig)
		logger.Debug(""Found"", len(rwSets), ""for TxID"", dig.TxId, "", collection"", dig.Collection, ""for"", message.GetConnectionInfo().Endpoint)
		if len(rwSets) == 0 {
			continue
		}
{code}

In the end, the peer gives up:
{quote}
peer0.org1.com    ø 2018-01-09 18:20:02.438 UTC Ægossip/privdataÅ StoreBlock -> WARN 285e Could not fetch all missing collection private write sets from remote peers. Will commit block with missing private write sets: txID: 7a446d338ad2f161c0cd082cf307d6567e1b4362bb3160512f108c341ec75f5f, seq: 0, namespace: mapcc, collection: coll1, hash: 
{quote}

[~manish-sethi] , [~C0rWin]  any idea what could make the peer not return anything from the transient store? 

The method that does that didn't write into the logs above:
{code}
// GetTxPvtRWSetByTxid returns an iterator due to the fact that the txid may have multiple private
// write sets persisted from different endorsers.
func (s *store) GetTxPvtRWSetByTxid(txid string, filter ledger.PvtNsCollFilter) (RWSetScanner, error) {

	logger.Debugf(""Getting private data from transient store for transaction %s"", txid)

	// Construct startKey and endKey to do an range query
	startKey := createTxidRangeStartKey(txid)
	endKey := createTxidRangeEndKey(txid)

	iter := s.db.GetIterator(startKey, endKey)
	return &RwsetScanner{txid, iter, filter}, nil
}
{code}","18/Jan/18 12:28 AM;denyeart;[~yacovm] I've found the issue in coordinator.go inspectTransaction():

[https://github.com/hyperledger/fabric/blob/master/gossip/privdata/coordinator.go#L668-L692]

It looks for private collections included in the transaction's hashed rwset.  If a collection is found it will ask the transient store for the private data (first local, then remote).  However if the transaction only has a private readset and no private writeset, there will be nothing in transient store, the transient store is only for private write sets. Private readsets are used only for MVCC validation later in the processing - there is nothing that needs to be retrieved from transient store.  So, when inspectTransaction() is building out the missing keys map, it should look specifically for collections with private writesets in the transaction's hashed rwset.  That is, only include  CollHashedRwSet.HashedRwSet having HashedWrites > 0.","18/Jan/18 9:39 AM;yacovm;Thanks [~denyeart] (Odd - I couldn't find you when I tried to tag you in my previous comment).
That is indeed the case :) 

I pushed https://gerrit.hyperledger.org/r/#/c/16941/ as a fix.

[~bstasyszyn] May you check please?","18/Jan/18 1:20 PM;denyeart;I tested the patch e2e, looks good.",18/Jan/18 2:54 PM;bstasyszyn;I tested the fix and it works fine now. Thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Determine whether a cc name is equal to one of the system chaincodes shipped by default in fabric,FAB-7673,26689,Bug,In Review,FAB,Fabric,software,ChristopherFerris,,,High,,,ales,ales,09/Jan/18 3:22 PM,12/Jan/18 3:50 PM,26/Apr/18 6:49 AM,,,,,v1.2,,fabric-peer,,,,,,0,,,,,,,,"Currently fabric offers this function

 

{{//IsSysCC returns true if the name matches a system chaincode's}}
 {{//system chaincode names are system, chain wide}}
 {{IsSysCC(name string) bool}}

 

to determine whether a chaincode name matches one of the system chaincodes. As [~yacovm] mentioned in [https://gerrit.hyperledger.org/r/#/c/16443/] however, this function shouldn't be used to make any tx validation decision. More specifically, when validating cc deploy/upgrade transactions, this function shouldn't be used to determine whether the deployer maliciously attempted to deploy a chaincode with one of the names reserved for default system chaincodes.

 

We recommend to create a new function (e.g. _IsDefaultSysCC_) that returns true if the supplied chaincode name matches one of the default system chaincodes shipped in fabric. Given that this might change across versions, the capability framework needs to be used to avoid introducing non-deterministic behaviour across upgrades.",,,,,,,,,,,,,,FAB-6651,,,,,,,,,,,,,,,,,,0|i02039:,,,,,,,,ales,baohua,divyank,elli-androulaki,troyronda,yacovm,,,,,,,,,,,,,,,"09/Jan/18 3:23 PM;ales;[~elli-androulaki], [~adc], [~yacovm], [~mastersingh24], [~jyellick] pls weigh in","09/Jan/18 3:44 PM;yacovm;# This is a direct ramification of using system chaincodes for peer infrastructure, instead of only using them for running in-process smart contracts :)
 # I recommended to you another name which I think is more fit *IsInfrastructureCC* , I don't think ""default"" should be in the name at any case. This actually has nothing to do with default or not, and everything to do with whether the CC is used for infrastructure, or for user business logic.
 # Not taking any action, would probably lead some customers to a chain fork, which is pretty bad. I suggest we do this fast, since the time window before code freeze is almost due.
I suggest you raise the priority to highest.
 # If I can expand a bit on the problem - when a SCC (an in-process chaincode) is registered in the peer's memory - it is added to the *systemChaincodes* slice in *importsysccs.go* .
Some clients use in-process chaincodes that even can load as plugins (dynamically) without having to recompile the peer and they are also appended to that slice via *RegisterSysCCs* in the same file.
Now, this means that the validation logic, when it executes *IsSysCC* would take different decisions based on whether the SCC is installed in the peer, or not.","09/Jan/18 8:31 PM;elli-androulaki; 

I agree with [~yacovm]; it can be that if scc-s are beyond the infrastructure ones, the isSysCC could cause forks... 

[~ales] already submitted the related CR: [https://gerrit.hyperledger.org/r/#/c/16705|https://gerrit.hyperledger.org/r/#/c/16705/].

 ",09/Jan/18 10:35 PM;yacovm;should this be somehow backported to v1.0 ? ,"10/Jan/18 3:24 PM;divyank;This solution could break persistence for SCCs that are not on the Infrastructure SCCs list.

For example, if we replace [this|https://github.com/hyperledger/fabric/blob/1c3d63bc63baecce5470aa0e75e2442ca8ecd34a/core/committer/txvalidator/validator.go#L622] IsSysCC() call in the tx validation code with IsInfrastructureCC(), the peer will no longer be able to validate transactions involving SCCs that are not on this list.","10/Jan/18 9:48 PM;baohua;Since the scc might be dynamic, and we may have more scc in future, a radical way might be keeping ""scc"" suffix as a remaining keyword, and can only be used in scc.
 
However, I'm not sure it's the good timing to do it now.","11/Jan/18 9:46 AM;ales;Agreed, though we have to do something to avoid user chaincodes, infrastructure scc's and plugin scc's to be mixed up. ","11/Jan/18 9:54 AM;yacovm;{quote}Agreed, though we have to do something to avoid user chaincodes, infrastructure scc's and plugin scc's to be mixed up. 
{quote}


There is something we can do. We can just have the peer not use chaincodes for infrastructure management. ","11/Jan/18 10:34 AM;ales;There are 2 types of scc's:
 # real infrastructure management (cscc, qscc, lscc)
 # endorsement policy facilitators (escc, vscc)

There might be a third type of chaincode that a customer might want to be a ""system"" one because they need functionality that is not provided by the shim (not saying it's a good idea to do that, just stating the fact).

What would be a good/better abstraction for scc's of type 1 than the chaincode abstraction? One good thing of the chaincode abstraction is that the sdk does not need to implement another infrastructure management interface. However I'm not sure that's a strong-enough motivation, I'd like to hear what others think.

As to scc's of type 2, we might replace them by simply implementing an interface (and doing away with the chaincode abstraction altogether).

Thoughts? ([~jyellick] please weigh in as well, I know you were also thinking along those lines)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Processing chaincode bulk commits in serial into couchdb causes performance regression,FAB-7672,26688,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,Senthil1,Senthil1,Senthil1,09/Jan/18 3:08 PM,31/Jan/18 8:48 PM,26/Apr/18 6:49 AM,31/Jan/18 8:48 PM,,,,v1.1,,fabric-ledger,,,,,,0,Ledger,,,,,,,"Due to the change of having a couchdb per chaincode, bulk commits occur in serial now, regressing performance.

For loadCommittedVersions() and ApplyUpdates() in statecouchdb.go, goroutines needs be used to process each chaincode batches parallely.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i02031:,,,,,,,,denyeart,Senthil1,,,,,,,,,,,,,,,master,,,true,30/Jan/18 4:23 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/16695/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric SDK Node unit tests configured with HSM are failing on master branch,FAB-7654,26663,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,antoniovassell,antoniovassell,08/Jan/18 8:31 PM,18/Feb/18 4:16 PM,26/Apr/18 6:49 AM,18/Feb/18 4:16 PM,v1.1.0-alpha,,,v1.1,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"This is to track the progress of fabric-sdk-node test cases to become green with hsm configured.

Currently running the test cases of fabric sdk node with HSM turned on is currently failing. The instructions were followed here: [https://github.com/hyperledger/fabric-sdk-node#special-tests-for-hardware-security-module-support-experimental-via-pkcs11-interface]

The unit tests for test/unit/pkcs11.js does pass (which includes generating and importing some keys). However configuring the sdk cryptosuite with hsm settings like below:
{code:java}
 
...
""crypto-hsm"": true,
""crypto-pkcs11-lib"": ""/usr/local/lib/softhsm/libsofthsm2.so"",
""crypto-pkcs11-slot"": ""0"",
""crypto-pkcs11-pin"": ""1234"", // My configured pin
...
{code}
 
 ... throws the following error multiple times:
{code:java}
not ok 19 TypeError: Cannot read property 'slot' of null
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'slot' of null]
    at: Test.onetime [as end] (/home/antonio/development/blockchains/fabric-sdk-node/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'slot' of null
          at new CryptoSuite_PKCS11 (/home/antonio/development/blockchains/fabric-sdk-node/node_modules/fabric-client/lib/impl/bccsp_pkcs11.js:91:25)
          at Object.module.exports.newCryptoSuite (/home/antonio/development/blockchains/fabric-sdk-node/node_modules/fabric-client/lib/utils.js:94:9)
          at Function.newCryptoSuite (/home/antonio/development/blockchains/fabric-sdk-node/node_modules/fabric-client/lib/BaseClient.js:41:19)
          at Object.queryChaincode (/home/antonio/development/blockchains/fabric-sdk-node/test/integration/e2e/e2eUtils.js:776:27)
          at test (/home/antonio/development/blockchains/fabric-sdk-node/test/integration/e2e/upgrade.js:91:11)
          at Test.<anonymous> (/home/antonio/development/blockchains/fabric-sdk-node/node_modules/tape-promise/index.es5.js:21:13)
          at Test.bound [as _cb] (/home/antonio/development/blockchains/fabric-sdk-node/node_modules/tape/lib/test.js:64:32)
          at Test.run (/home/antonio/development/blockchains/fabric-sdk-node/node_modules/tape/lib/test.js:83:10)
          at Test.bound [as run] (/home/antonio/development/blockchains/fabric-sdk-node/node_modules/tape/lib/test.js:64:32)
          at Immediate.next [as _onImmediate] (/home/antonio/development/blockchains/fabric-sdk-node/node_modules/tape/lib/results.js:71:15)
{code}
Just to note. The following change set was created that solves that 'slot' issue, [https://gerrit.hyperledger.org/r/#/c/16401/] (not merged as yet), but this also gives another issue ""CKR_CRYPTOKI_ALREADY_INITIALIZED"" and ""CKR_USER_ALREADY_LOGGED_IN"" that is fatal.

Again this task is to track the test cases passing on master.

Given an Admin user, I would like to be able to enroll a user using the fabric-sdk-node, and have the user keys generated stored successfully on a HSM and not in a local folder.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01zxh:,,,,,,,,aambati,antoniovassell,denyeart,harrisob@us.ibm.com,mastersingh24,,,,,,,,,,,,master,,,true,06/Feb/18 10:07 PM;harrisob@us.ibm.com;With FAB-7726 now in .. is this still falling ?,"07/Feb/18 6:49 PM;antoniovassell;[~harrisob@us.ibm.com] [~mastersingh24] Hey even with -FAB-7726- the unit tests cases for fabric-sdk-node on master branch following these instructions ([Test Instructions |https://github.com/hyperledger/fabric-sdk-node/tree/master#special-tests-for-hardware-security-module-support-experimental-via-pkcs11-interface]) are still failing. Please see report attached. 


{code:java}
[00m[1m[38;5;196m
not ok 763 Error: _pkcs11OpenSession[9]: PKCS11 slot number non-exist[00m[00m[2m[38;5;66m
  ---[00m
    operator: error
    expected: |-
      undefined
    actual: |-
      [Error: _pkcs11OpenSession[9]: PKCS11 slot number non-exist]
    at: Test.onetime [as end] (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      Error: _pkcs11OpenSession[9]: PKCS11 slot number non-exist
          at CryptoSuite_PKCS11._pkcs11OpenSession (/home/devel/PeerLedger/3TG/fabric-sdk-node/fabric-client/lib/impl/bccsp_pkcs11.js:9:12377)
          at new CryptoSuite_PKCS11 (/home/devel/PeerLedger/3TG/fabric-sdk-node/fabric-client/lib/impl/bccsp_pkcs11.js:9:9803)
          at Object.module.exports.newCryptoSuite (/home/devel/PeerLedger/3TG/fabric-sdk-node/fabric-client/lib/utils.js:9:3731)
          at test (/home/devel/PeerLedger/3TG/fabric-sdk-node/test/unit/pkcs11.js:89:23)
          at Test.<anonymous> (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape-promise/index.es5.js:21:13)
          at Test.bound [as _cb] (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape/lib/test.js:64:32)
          at Test.run (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape/lib/test.js:83:10)
          at Test.bound [as run] (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape/lib/test.js:64:32)
          at Immediate.next (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape/lib/results.js:71:15)
          at runCallback (timers.js:800:20)
          at tryOnImmediate (timers.js:762:5)
          at processImmediate [as _immediateCallback] (timers.js:733:5)[00m[2m[38;5;66m
  ...[00m[00m[2m[38;5;66m
# [00m

**PKCS11 - generate a non-ephemeral key

[00m[1m[38;5;196m
not ok 764 TypeError: Cannot read property 'generateKey' of undefined[00m[00m[2m[38;5;66m
  ---[00m
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'generateKey' of undefined]
    at: Test.onetime [as end] (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'generateKey' of undefined
          at test (/home/devel/PeerLedger/3TG/fabric-sdk-node/test/unit/pkcs11.js:131:23)
          at Test.<anonymous> (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape-promise/index.es5.js:21:13)
          at Test.bound [as _cb] (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape/lib/test.js:64:32)
          at Test.run (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape/lib/test.js:83:10)
          at Test.bound [as run] (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape/lib/test.js:64:32)
          at Immediate.next (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape/lib/results.js:71:15)
          at runCallback (timers.js:800:20)
          at tryOnImmediate (timers.js:762:5)
          at processImmediate [as _immediateCallback] (timers.js:733:5)[00m[2m[38;5;66m
  ...[00m[00m[2m[38;5;66m
# [00m


**PKCS11 - import an AES key into the crypto card

[00m[1m[38;5;196m
not ok 765 TypeError: Cannot read property 'importKey' of undefined[00m[00m[2m[38;5;66m
  ---[00m
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'importKey' of undefined]
    at: Test.onetime [as end] (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'importKey' of undefined
          at test (/home/devel/PeerLedger/3TG/fabric-sdk-node/test/unit/pkcs11.js:178:20)
          at Test.<anonymous> (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape-promise/index.es5.js:21:13)
          at Test.bound [as _cb] (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape/lib/test.js:64:32)
          at Test.run (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape/lib/test.js:83:10)
          at Test.bound [as run] (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape/lib/test.js:64:32)
          at Immediate.next (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape/lib/results.js:71:15)
          at runCallback (timers.js:800:20)
          at tryOnImmediate (timers.js:762:5)
          at processImmediate [as _immediateCallback] (timers.js:733:5)[00m[2m[38;5;66m
  ...[00m[00m[2m[38;5;66m
# [00m

[00m[1m[38;5;196m
not ok 766 TypeError: Cannot read property 'generateKey' of undefined[00m[00m[2m[38;5;66m
  ---[00m
    operator: error
    expected: |-
      undefined
    actual: |-
      [TypeError: Cannot read property 'generateKey' of undefined]
    at: Test.onetime [as end] (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape-promise/node_modules/onetime/index.js:22:12)
    stack: |-
      TypeError: Cannot read property 'generateKey' of undefined
          at test (/home/devel/PeerLedger/3TG/fabric-sdk-node/test/unit/pkcs11.js:211:20)
          at Test.<anonymous> (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape-promise/index.es5.js:21:13)
          at Test.bound [as _cb] (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape/lib/test.js:64:32)
          at Test.run (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape/lib/test.js:83:10)
          at Test.bound [as run] (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape/lib/test.js:64:32)
          at Immediate.next (/home/devel/PeerLedger/3TG/fabric-sdk-node/node_modules/tape/lib/results.js:71:15)
          at runCallback (timers.js:800:20)
          at tryOnImmediate (timers.js:762:5)
          at processImmediate [as _immediateCallback] (timers.js:733:5)[00m[2m[38;5;66m
  ...[00m[00m[2m[38;5;66m
# [00m



{code}

 ",07/Feb/18 6:54 PM;antoniovassell;Do the instructions need to be updated?,13/Feb/18 1:40 PM;aambati;[~antoniovassell] are you running into any runtime issues? I am wondering if this a test case or code issue?,"14/Feb/18 4:56 PM;denyeart;[~mastersingh24] I see you assigned yourself, what did you have in mind?","17/Feb/18 12:28 PM;mastersingh24;hopefully just fixing the docs
I'm able to run the tests just fine (I never read the instructions tho)","17/Feb/18 12:35 PM;antoniovassell;[~mastersingh24] Okay, can you say what was the procedure that you used?",17/Feb/18 1:10 PM;mastersingh24;The issue seems to be that by default you need to run as root for things to work,17/Feb/18 1:46 PM;mastersingh24;I'll post a CR shortly for you to test [~antoniovassell],17/Feb/18 2:57 PM;mastersingh24;https://gerrit.hyperledger.org/r/18009,17/Feb/18 7:27 PM;mastersingh24;[~antoniovassell] - Please have a look at the CR above and try it out,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer panics when pulling private data,FAB-7641,26649,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,yacovm,bstasyszyn,bstasyszyn,07/Jan/18 5:54 PM,08/Jan/18 3:08 PM,26/Apr/18 6:49 AM,08/Jan/18 3:08 PM,,,,,,fabric-gossip,,,,,,0,gossip,,,,,,,"I'm testing in a configuration composed of 4 MSPs, 1 peer per MSP for a total of 4 peers, and 2 (Kafka) orderers. Two chaincodes make use of private data:

CC#1 - contains 3 private data collections (fmpconfig,fmpstatus,fmpmsg), each with the following config:
- RequiredPeerCount=1
- MaximumPeerCount=2
- Policy includes all 4 MSPs


CC#2 - contains 1 private data collection (quotes), with the following config:
- RequiredPeerCount=3
- MaximumPeerCount=5
- Policy includes all 4 MSPs

I'm sending 20 concurrent requests which write/read private data. Every time I run my test I see at least one peer panic:

peer0.org2.com    | 2018-01-06 22:39:05.634 UTC [gossip/privdata] func1 -> DEBU 2e78 Returning 172.18.0.13:44692 0 elements
peer0.org2.com    | panic: runtime error: invalid memory address or nil pointer dereference
peer0.org2.com    | [signal SIGSEGV: segmentation violation code=0x1 addr=0x8 pc=0x10cf332]
peer0.org2.com    | 
peer0.org2.com    | goroutine 352 [running]:
peer0.org2.com    | github.com/hyperledger/fabric/gossip/privdata.(*dataRetriever).CollectionRWSet(0xc4228dc1e0, 0xc422b0ab00, 0x0, 0x0, 0x0)
peer0.org2.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/dataretriever.go:93 +0xfa2
peer0.org2.com    | github.com/hyperledger/fabric/gossip/privdata.(*puller).createResponse(0xc4228ad620, 0x1afbd40, 0xc4227482d0, 0x0, 0x0, 0x0)
peer0.org2.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/pull.go:162 +0x739
peer0.org2.com    | github.com/hyperledger/fabric/gossip/privdata.(*puller).handleRequest(0xc4228ad620, 0x1afbd40, 0xc4227482d0)
peer0.org2.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/pull.go:122 +0x20b
peer0.org2.com    | github.com/hyperledger/fabric/gossip/privdata.(*puller).listen(0xc4228ad620)
peer0.org2.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/pull.go:108 +0x1dc
peer0.org2.com    | created by github.com/hyperledger/fabric/gossip/privdata.NewPuller
peer0.org2.com    | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/pull.go:89 +0x228
peer0.org2.com exited with code 2

Attached are the logs from two peers that panic'd during one of my test runs.
 ",,,,,,,,,,,,,,,,,,,,,,,,07/Jan/18 5:56 PM;bstasyszyn;peer0.org1.log;https://jira.hyperledger.org/secure/attachment/14110/peer0.org1.log,07/Jan/18 5:56 PM;bstasyszyn;peer0.org2.log;https://jira.hyperledger.org/secure/attachment/14111/peer0.org2.log,,,,,,FAB-1151,0|i01zut:,,,,,,,,bstasyszyn,troyronda,yacovm,,,,,,,,,,,,,,master,,,true,07/Jan/18 10:24 PM;yacovm;May you please check? https://gerrit.hyperledger.org/r/#/c/16643/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer deliver service is unusable when block event policy has not been defined,FAB-7604,26501,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,wlahti,wlahti,wlahti,04/Jan/18 7:22 PM,06/Jan/18 3:34 PM,26/Apr/18 6:49 AM,06/Jan/18 3:34 PM,,,,v1.1,,fabric-peer,,,,,,0,,,,,,,,"After FAB-7521, the peer deliver service is unusable because the BLOCKEVENT policy is not set by default. 
{code:java}
peer0.org1.example.com | 2018-01-04 16:03:34.426 UTC [common/peer] Deliver -> DEBU d6a Starting new Deliver handler
peer0.org1.example.com | 2018-01-04 16:03:34.426 UTC [common/deliver] Handle -> DEBU d6b Starting new deliver loop for 172.18.0.1:51762
peer0.org1.example.com | 2018-01-04 16:03:34.426 UTC [common/deliver] Handle -> DEBU d6c Attempting to read seek info message from 172.18.0.1:51762
peer0.org1.example.com | 2018-01-04 16:03:34.427 UTC [policies] GetPolicy -> ERRO d6d Returning dummy reject all policy because no policy ID supplied
peer0.org1.example.com | 2018-01-04 16:03:34.427 UTC [common/deliver] deliverBlocks -> WARN d6e [channel: mychannel] Received unauthorized deliver request from 172.18.0.1:51762: could not find policy{code}
The peer should use the aclmgmt package, which will check for the policy and, if not set, use the default value (in this case, channel readers). 

FAB-7521 modified the BDD tests for peer deliver so that they would pass instead of addressing why they were failing in the first place. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01zjh:,,,,,,,,wlahti,,,,,,,,,,,,,,,,master,,,true,05/Jan/18 12:35 AM;wlahti;https://gerrit.hyperledger.org/r/#/c/16587/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix intermittent failures in CouchDB unit tests - TestIndexOperations,FAB-7569,26306,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,denyeart,denyeart,28/Dec/17 8:07 PM,30/Dec/17 3:06 AM,26/Apr/18 6:49 AM,30/Dec/17 3:06 AM,,,,,,fabric-ledger,,,,,,0,,,,,,,,"TestIndexOperations creates and drops indexes

in CouchDB and then queries the list of indexes.

Since the index create/drop is async in CouchDB,

sometimes the list of indexes is not as expected,

causing TestIndexOperations to fail.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzyuz:za2rr,,,,,,,,denyeart,,,,,,,,,,,,,,,,master,,,true,"29/Dec/17 4:18 PM;denyeart;I've opened a CouchDB issue to determine if the index create/drop behavior could become synchronous:

https://github.com/apache/couchdb/issues/1083",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Private Data Dissemination Timeout should be configurable,FAB-7522,26214,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,yacovm,bstasyszyn,bstasyszyn,20/Dec/17 2:42 PM,21/Dec/17 9:38 PM,26/Apr/18 6:49 AM,21/Dec/17 9:38 PM,,,,,,fabric-gossip,,,,,,0,gossip,,,,,,,"I'm testing in a configuration composed of 4 MSPs, 2 peers per MSP for a total of 8 peers, and 2 (Kafka) orderers. One CC contains 2 private data collections, each with the following config:

- RequiredPeerCount=1
- MaximumPeerCount=3
- policy includes all 4 MSPs

I'm sending 20 concurrent requests which write/read private data. Once in a while I see timeout errors while private data is being disseminated, causing the transaction to fail with the reason, ENDORSEMENT_POLICY_FAILURE. Looking at the code, the dissemination timeout is hard-coded to 1 second. This should be configurable since, in a very busy system, it may take longer to send the private data.
 
Below are the logs:

peer0.example.com     | 2017-12-20 14:11:13.094 UTC [gossip/privdata] func1 -> ERRO 1ff Failed disseminating private RWSet for TxID ae7c3f39d0bdca18b04de0596257969e7be63911abd15727d10bafac73272ecd , namespace fmpcc collection fmpstatus : {""failures"":{""timed out"":3}}
peer0.example.com     | 2017-12-20 14:11:13.094 UTC [gossip/service] DistributePrivateData -> ERRO 200 Failed to distributed private collection, txID ae7c3f39d0bdca18b04de0596257969e7be63911abd15727d10bafac73272ecd channel consortium due to Failed disseminating 1 out of 1 private RWSets
peer1.example.com    | 2017-12-20 14:11:15.443 UTC [valimpl] preprocessProtoBlock -> WARN 231 Channel [consortium]: Block [21] Transaction index [0] TxId [ae7c3f39d0bdca18b04de0596257969e7be63911abd15727d10bafac73272ecd] marked as invalid by committer. Reason code [ENDORSEMENT_POLICY_FAILURE]
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1151,0|i01yph:,,,,,,,,bstasyszyn,troyronda,yacovm,,,,,,,,,,,,,,master,,,true,20/Dec/17 3:14 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/16343/,"20/Dec/17 3:39 PM;yacovm;Also, from your log:

{quote} 
[ae7c3f39d0bdca18b04de0596257969e7be63911abd15727d10bafac73272ecd] marked as invalid by committer. Reason code [ENDORSEMENT_POLICY_FAILURE]
{quote}

Seems you sent the transaction anyway even though the endorsement failed... ","20/Dec/17 3:46 PM;bstasyszyn;Yes, the client should be checking for endorsement failures and not sending. This is just a sample app. Thx for fixing this so quickly!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Client.getPeersForOrgOnChannel doesn't return the expected list of peers,FAB-7504,26151,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,davidkel,davidkel,19/Dec/17 10:29 AM,16/Jan/18 4:54 PM,26/Apr/18 6:49 AM,16/Jan/18 4:54 PM,v1.1.0-preview,,,v1.1,v1.1.0-alpha,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"If you run the following code
{code:java}
const fc = require('fabric-client');

const client = fc.loadFromConfig('./test.json');

console.log('Peers in Org on Channel');
console.log(client.getPeersForOrgOnChannel('mychannel'));
{code}
against an example CCP (attached), then you will see only 1 peer is returned (while there clearly are 2).
 
It looks like the problem is here
 [https://github.com/hyperledger/fabric-sdk-node/blob/master/fabric-client/lib/Client.js#L1789]
 where
{code:java}
let org_peer = org_peers[i];
{code}
should be
{code:java}
let org_peer = org_peers[k];
{code}",,,,,,,,,,,,,,,,,,,,,,,,19/Dec/17 10:25 AM;davidkel;test.json;https://jira.hyperledger.org/secure/attachment/13923/test.json,,,,,,,,0|i01ydh:,,,,,,,,davidkel,mastersingh24,,,,,,,,,,,,,,,master,,,true,06/Jan/18 1:06 PM;mastersingh24;https://gerrit.hyperledger.org/r/16617,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
 Bootstrap error in fabric-test-daily-x86_64 as failed to fetch channel block Genesis.,FAB-7476,26108,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,latitiah,sambhavdutt,sambhavdutt,15/Dec/17 6:24 PM,20/Jan/18 8:54 AM,26/Apr/18 6:49 AM,20/Jan/18 8:54 AM,,,,v1.1,,fabric-quality,,,,,,0,ci_failure,,,,,,," Bootstrapping Hyperledger Fabric fails for two builds due to the following error,

*FAB-4773: Fetching of a channel genesis block*
bootstrap.Bootstrapping Hyperledger Fabric.FAB-4773: Fetching of a channel genesis block

Error Message

The channel block file has not been fetched,
 And a user fetches genesis information for a channel ""mychannel"" from peer ""peer1.org1.example.com"" ... passed in 1.244s
    Then the file ""mychannel.block"" file is fetched from peer ""peer1.org1.example.com"" ... failed in 1.621s

@scenario.end
--------------------------------------------------------------------------------

Captured stdout:
testConfigs: configs/9f175814e14e11e79aaafa163e11e43c
Unable to generate channel config data: Command '['configtxgen', '-profile', 'SysTestChannel', '-outputCreateChannelTx', u'mychannel.tx', '-channelID', u'mychannel']' returned non-zero exit status 1
Unable to generate channel config data: Command '['configtxgen', '-profile', 'SysTestChannel', '-outputCreateChannelTx', u'mychannel.tx', '-channelID', u'mychannel']' returned non-zero exit status 1
[/bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/9f175814e14e11e79aaafa163e11e43c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer channel create --file /var/hyperledger/configs/9f175814e14e11e79aaafa163e11e43c/mychannel.tx --channelID mychannel --timeout 300 --orderer orderer0.example.com:7050 ""]: {'cli': 'Error occurred [u'docker exec cli /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/9f175814e14e11e79aaafa163e11e43c/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer channel create --file /var/hyperledger/configs/9f175814e14e11e79aaafa163e11e43c/mychannel.tx --channelID mychannel --timeout 300 --orderer orderer0.example.com:7050 ""']: 2017-12-15 04:15:52.705 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2017-12-15 04:15:52.705 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2017-12-15 04:15:52.870 UTC [grpc] Printf -> DEBU 003 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: Error while dialing dial tcp: lookup orderer0.example.com on 127.0.0.11:53: no such host""; Reconnecting to {orderer0.example.com:7050 <nil>}
Error: Error connecting due to  rpc error: code = Unavailable desc = grpc: the connection is unavailable

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/195/testReport/bootstrap/Bootstrapping%20Hyperledger%20Fabric/FAB_4773__Fetching_of_a_channel_genesis_block/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01y4t:,,,,,,,,denyeart,latitiah,sambhavdutt,scottz,,,,,,,,,,,,,master,,,true,"19/Dec/17 7:03 PM;scottz;Prior to the Dec 14 daily test run, something changed in fabric (maybe Yacov's update [https://gerrit.hyperledger.org/r/#/c/16191)]. Looks like might be related to our tests steps.

Fails:
 ```
 Scenario: FAB-4773: Fetching of a channel genesis block
 Given I have a crypto config file with 2 orgs, 2 peers, 3 orderers, and 2 users
 And I have a fabric config file
 When the crypto material is generated for TLS network
 And the network is bootstrapped for an orderer
 And the network is bootstrapped for a channel named ""mychannel""
 And I start a fabric network

 * * *

```
 and same test passes if I change the above lines to : `Given I have a bootstrapped fabric network` (which I think does not use TLS)

AND the same test passes if I use this line instead: ` Given I have a bootstrapped fabric network of type solo with tls`

 

The orderer panics right away when starting the network. Here are the logs:

```2017-12-19 17:02:31.858 UTC [orderer/commmon/multichannel] newLedgerResources -> CRIT 02c Error creating channelconfig bundle: initializing channelconfig failed: could not create channel Consortiums sub-group config: setting up the MSP manager failed: the supplied identity is not valid: x509: certificate signed by unknown authority (possibly because of ""x509: ECDSA verification failure"" while trying to verify candidate authority certificate ""ca.org1.example.com"")

panic: Error creating channelconfig bundle: initializing channelconfig failed: could not create channel Consortiums sub-group config: setting up the MSP manager failed: the supplied identity is not valid: x509: certificate signed by unknown authority (possibly because of ""x509: ECDSA verification failure"" while trying to verify candidate authority certificate ""ca.org1.example.com"")

goroutine 1 [running]:
 * {{github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc4202102d0, 0xd09355, 0x27, 0xc4203af090, 0x1, 0x1)}}
 \{\{ /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x134}}
 {{github.com/hyperledger/fabric/orderer/common/multichannel.(*Registrar).newLedgerResources(0xc42033e3f0, 0xc420296e70, 0xc420296e70)}}
 \{\{ /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:253 +0x391}}
 {{github.com/hyperledger/fabric/orderer/common/multichannel.NewRegistrar(0x137f300, 0xc420510420, 0xc420296d20, 0x137bb40, 0x13dfa60, 0xc420114958, 0x1, 0x1, 0x0)}}
 \{\{ /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:144 +0x352}}
 {{github.com/hyperledger/fabric/orderer/common/server.initializeMultichannelRegistrar(0xc42021e780, 0x137bb40, 0x13dfa60, 0xc420114958, 0x1, 0x1, 0xc420541e78)}}
 \{\{ /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/server/main.go:253 +0x277}}
 {{github.com/hyperledger/fabric/orderer/common/server.Start(0xcedc1b, 0x5, 0xc42021e780)}}
 \{\{ /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/server/main.go:95 +0x24c}}
 {{github.com/hyperledger/fabric/orderer/common/server.Main()}}
 \{\{ /opt/gopath/src/github.com/hyperledger/fabric/orderer/common/server/main.go:75 +0x120}}
 {{main.main()}}
 \{\{ /opt/gopath/src/github.com/hyperledger/fabric/orderer/main.go:15 +0x20}}```",08/Jan/18 3:09 AM;denyeart;[~latitiah] What's your opinion? Is there a plan for this one? If it is not High priority in the short term could you change to Medium?,16/Jan/18 4:12 PM;latitiah;I'm pretty sure I know where this problem is occurring. I'll fix it.,19/Jan/18 7:50 PM;latitiah;https://gerrit.hyperledger.org/r/#/c/16965/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error in running a dynamically built fabric-ca container with the flag FABRIC_CA_DYNAMIC_LINK,FAB-7471,26103,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,aambati,antoniovassell,antoniovassell,15/Dec/17 4:01 PM,09/Jan/18 6:52 PM,26/Apr/18 6:49 AM,09/Jan/18 6:52 PM,v1.1.0-preview,,,v1.1.0-alpha,,fabric-ca,fabric-ca-build,,,,,0,,,,,,,,"When we attempt to run a dynamically built container, it errors out with the error:

 
{code:java}
fabric-ca-server | fabric-ca-server: error while loading shared libraries: libltdl.so.7: cannot open shared object file: No such file or directory
fabric-ca-server exited with code 127{code}
Below are steps to reproduce using latest fabric 1.1.0 preview. 

Please note we tried this on both branches, release and master.

 
{code:java}
cd $GOPATH/src/github.com/hyperledger/fabric-ca
FABRIC_CA_DYNAMIC_LINK=true make docker
cd docker/server
docker-compose up{code}
 

Essentially we are trying build fabric-ca dynamically so we can link PKCS11 libraries.

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01y3p:,,,,,,,,aambati,antoniovassell,denyeart,smithbk,,,,,,,,,,,,,master,,,true,"05/Jan/18 7:39 PM;smithbk;You have to install libtool and of course how you install depends on the OS.
For macos, *brew install libtool*","05/Jan/18 8:21 PM;antoniovassell;[~smithbk] Correct, however this needs to be done in the docker images that are built, such as hyperledger/fabric-ca

For example it could go here: [https://github.com/hyperledger/fabric-ca/blob/master/images/fabric-ca/Dockerfile.in#L13]

Not sure if its possible to make use of this flag here to know when to install libtool in docker. [https://github.com/hyperledger/fabric-ca/blob/release/docker-env.mk#L55]

 

Of course we could build a custom image base off of the built fabric-ca image and install libtool, however i assume it would be better if it was installed from that Dockerfile.in The issue  is even more apparent if one is using hyperledger/fabric-ca, hyperledger/fabric-ca-peer and hyperledger/fabric-ca-orderer in one docker-compose file as all of them will error out and require installation of the libtool when dynamic linking is turned on.

 ","05/Jan/18 9:05 PM;smithbk;The design for images has so far been to only include what is required in the default case in order to not make the image any larger than necessary, and this isn't the default.
However, since HSMs are not uncommon and this is required for HSMs, I agree that  we should make an exception.
But aren't you going to have the same problem for peer, orderer, etc?
Which implies that it should be in the base image","05/Jan/18 9:39 PM;smithbk;Since you have to build the image manually anyway without the -static, I agree that it does make sense to go ahead and do this in the fabric-ca make so it is only in the images that need it.",05/Jan/18 9:41 PM;antoniovassell;Noted,08/Jan/18 3:23 AM;denyeart;[~smithbk] [~antoniovassell] Could you clarify next steps and timing for this one?,"08/Jan/18 6:55 PM;antoniovassell;[~smithbk] [~aambati] [~denyeart] 

Essentially the next steps would be, when the dynamic flag is specified 


{code} FABRIC_CA_DYNAMIC_LINK=true make docker {code}, it could be used to conditionally run  
{code:java}
apt-get install libltdl-dev y
{code} in the build process in each image that is created: fabric-ca, fabric-ca-orderer, fabric-ca-peer. 
This would prevented captioned error to occur and requiring developer to manually install library in each container. ",09/Jan/18 5:15 AM;aambati;https://gerrit.hyperledger.org/r/c/16691/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer chaincode upgrade panics with SIGSEGV,FAB-7470,26101,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,lehors,lehors,lehors,15/Dec/17 1:15 PM,16/Dec/17 11:51 AM,26/Apr/18 6:49 AM,16/Dec/17 11:51 AM,v1.1.0-preview,,,v1.1,,fabric-peer,,,,,,0,,,,,,,,"Following the new channel_update tutorial the command to upgrade the chaincode failed as follows:
{code:java}
# peer chaincode upgrade -o orderer.example.com:7050 --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -C $CHANNEL_NAME -n mycc -v 2.0 -c '{""Args"":[""init"",""a"",""90"",""b"",""210""]}' -P ""OR ('Org1MSP.member','Org2MSP.member','Org3MSP.member')""
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x20 pc=0xbb36bb]

goroutine 1 [running]:
github.com/hyperledger/fabric/peer/chaincode.chaincodeUpgrade(0x0, 0xc4203c4720, 0x0, 0x0)
    /opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/upgrade.go:141 +0x4b
github.com/hyperledger/fabric/peer/chaincode.upgradeCmd.func1(0xc4202b3200, 0xc420133700, 0x1, 0x10, 0x0, 0x0)
    /opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/upgrade.go:43 +0xb0
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xc4202b3200, 0xc420132a00, 0x10, 0x10, 0xc4202b3200, 0xc420132a00)
    /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x3e8
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x16275c0, 0xf, 0xc420014055, 0x7)
    /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x2fe
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x16275c0, 0x7d, 0xc420014055)
    /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b
main.main()
    /opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:112 +0x493{code}
Code inspection reveals that the ChaincodeCmdFactory is not initialized properly when calling chaincodeUpgrade.

 ","Ubuntu 16.04.1

go version go1.9.2 linux/amd64

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01y39:,,,,,,,,lehors,,,,,,,,,,,,,,,,master,,,true,"15/Dec/17 4:55 PM;lehors;This bug was actually introduced recently as part of the changes made to support the cfg lifecycle:

https://gerrit.hyperledger.org/r/#/c/15461/51/peer/chaincode/upgrade.go",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabic-test-daily-x86_64 fails due to LTE error in couchdb test,FAB-7446,25717,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,AdnanChoudhury,sambhavdutt,sambhavdutt,13/Dec/17 3:50 PM,28/Mar/18 4:38 PM,26/Apr/18 6:49 AM,28/Mar/18 4:38 PM,,,,v1.2,,fabric-quality,,,,,,0,ci_failure,,,,,,,"fabic-test-daily-x86_64 is failing as the following errors occur in test_FAB_3876_VaryNumKeysInEachTX

ledger_lte.perf_couchdb.test_FAB_3876_VaryNumKeysInEachTX (from pytest) 
Error Message
AssertionError: varyNumKeysInEachTx for CouchDB performance test failed.

logfile = open(""output_VaryNumKeysInEachTx_couchdb.log"", ""w"")
        returncode = subprocess.call(
                ""./runbenchmarks.sh -f parameters_couchdb_daily_CI.sh ""
                ""varyNumKeysInEachTx"", shell=True, stderr=subprocess.STDOUT,
                stdout=logfile, cwd=tool_directory)
        logfile.close()
        self.assertEqual(returncode, 0, msg=""varyNumKeysInEachTx for CouchDB ""
                ""performance test failed. \nPlease check the logfile ""
>               +logfile.name +"" for more details."")
E       AssertionError: varyNumKeysInEachTx for CouchDB performance test failed. 
E       Please check the logfile output_VaryNumKeysInEachTx_couchdb.log for more details.

ledger_lte.py:322: AssertionError

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/192/testReport/ledger_lte/perf_couchdb/test_FAB_3876_VaryNumKeysInEachTX/
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01xu5:,,,,,,,,AdnanChoudhury,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,,"14/Feb/18 5:14 PM;AdnanChoudhury;Observed from the last week, The LTE test fails due to one of several reasons, and has no specific sub-test that consistently produces the error.
 In [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/251/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/output_VaryNumChains_couchdb.log]
{code:java}
[31m2018-02-09 12:29:32.625 UTC [statecouchdb] batchRetrieveMetaData -> ERRO 003[0m Batch retrieval of document metadata failed invalid byte in chunk length panic: Error:invalid byte in chunk length goroutine 375 [running]: github.com/hyperledger/fabric/test/tools/LTE/common.PanicOnError(0x15451c0, 0xc421425ac0) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/common/util.go:24 +0xb2 github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit.func1(0xc4212eaff0) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:112 +0x80 created by github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:105 +0x5e Stopping couchdb container (id: ee773f2f92ad)...{code}
From [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/251/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/output_VaryNumParallelTxPerChain_couchdb.log]


{code:java}
[31m2018-02-09 12:20:32.639 UTC [statecouchdb] batchRetrieveMetaData -> ERRO 003[0m Batch retrieval of document metadata failed invalid byte in chunk length panic: Error during commit to txmgr:invalid byte in chunk length goroutine 373 [running]: github.com/hyperledger/fabric/core/ledger/kvledger.(*kvLedger).CommitWithPvtData(0xc42224e600, 0xc422126720, 0x0, 0x0) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:251 +0x921 github.com/hyperledger/fabric/core/ledger/ledgermgmt.(*closableLedger).CommitWithPvtData(0xc421dfc380, 0xc422126720, 0x0, 0x0) <autogenerated>:1 +0x47 github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit.func1(0xc4217ced20) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:112 +0x68 created by github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:105 +0x5e Stopping couchdb container (id: c61571f971be)...{code}
in [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/254/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/output_VaryNumKeysInEachTx_couchdb.log]
{code:java}
panic: Error:net/http: request canceled (Client.Timeout exceeded while reading body) goroutine 452 [running]: github.com/hyperledger/fabric/test/tools/LTE/common.PanicOnError(0x1547680, 0xc422e16d00) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/common/util.go:24 +0xb2 github.com/hyperledger/fabric/test/tools/LTE/experiments.runReadWriteClient(0xc421cdb500, 0xc421e72d80, 0x64, 0xc421cf1900) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/experiments/readwrite_txs_test.go:79 +0x1f8 created by github.com/hyperledger/fabric/test/tools/LTE/experiments.runReadWriteClientsForChain /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/experiments/readwrite_txs_test.go:62 +0x103 Stopping couchdb container (id: b71eba24c09e)...{code}
From [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/254/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/output_VaryNumTxs_couchdb.log]
{code:java}
018-02-12 12:05:23.012 UTC [statecouchdb] batchRetrieveMetaData -> ERRO 003[0m Batch retrieval of document metadata failed invalid byte in chunk length panic: Error:invalid byte in chunk length goroutine 371 [running]: github.com/hyperledger/fabric/test/tools/LTE/common.PanicOnError(0x15451c0, 0xc423441cd0) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/common/util.go:24 +0xb2 github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit.func1(0xc420287a40) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:112 +0x80 created by github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:105 +0x5e Stopping couchdb container (id: 7a466cdc6eaf)...{code}
[https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/256/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/output_VaryNumChains_couchdb.log]

[
{code:java}
[31m2018-02-14 12:13:28.335 UTC [statecouchdb] batchRetrieveMetaData -> ERRO 003[0m Batch retrieval of document metadata failed invalid byte in chunk length panic: Error:invalid byte in chunk length goroutine 1680 [running]: github.com/hyperledger/fabric/test/tools/LTE/common.PanicOnError(0x15451c0, 0xc4252a3010) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/common/util.go:24 +0xb2 github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit.func1(0xc4211747e0) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:112 +0x80 created by github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:105 +0x5e Stopping couchdb container (id: 4fa75e9d43df)...{code}
 

[https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/255/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/output_VaryBatchSize_couchdb.log]
{code:java}
m2018-02-13 15:23:55.766 UTC [statecouchdb] batchRetrieveMetaData -> ERRO 003[0m Batch retrieval of document metadata failed http: read on closed response body panic: Error during commit to txmgr:http: read on closed response body goroutine 399 [running]: github.com/hyperledger/fabric/core/ledger/kvledger.(*kvLedger).CommitWithPvtData(0xc421a5c080, 0xc4216031a0, 0x0, 0x0) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:251 +0x921 github.com/hyperledger/fabric/core/ledger/ledgermgmt.(*closableLedger).CommitWithPvtData(0xc42136d780, 0xc4216031a0, 0x0, 0x0) <autogenerated>:1 +0x47 github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit.func1(0xc42160e270) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:112 +0x68 created by github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:105 +0x5e Stopping couchdb container (id: a566af81c71d)...{code}
[https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/255/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/output_VaryKVSize_couchdb.log]

[
{code:java}
31m2018-02-13 15:22:02.860 UTC [statecouchdb] batchRetrieveMetaData -> ERRO 003[0m Batch retrieval of document metadata failed invalid byte in chunk length panic: Error:invalid byte in chunk length goroutine 366 [running]: github.com/hyperledger/fabric/test/tools/LTE/common.PanicOnError(0x15451c0, 0xc4201cc8e0) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/common/util.go:24 +0xb2 github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit.func1(0xc421163200) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:112 +0x80 created by github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:105 +0x5e Stopping couchdb container (id: 041825f38e02)...{code}
From [https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/255/artifact/gopath/src/github.com/hyperledger/fabric-test/regression/daily/output_VaryNumChainsWithNoParallelism_couchdb.log]
{code:java}
[31m2018-02-13 15:15:52.731 UTC [statecouchdb] batchRetrieveMetaData -> ERRO 003[0m Batch retrieval of document metadata failed net/http: request canceled (Client.Timeout exceeded while reading body) panic: Error during commit to txmgr:net/http: request canceled (Client.Timeout exceeded while reading body) goroutine 386 [running]: github.com/hyperledger/fabric/core/ledger/kvledger.(*kvLedger).CommitWithPvtData(0xc42013d4c0, 0xc422153bc0, 0x0, 0x0) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:251 +0x921 github.com/hyperledger/fabric/core/ledger/ledgermgmt.(*closableLedger).CommitWithPvtData(0xc421d6d760, 0xc422153bc0, 0x0, 0x0) <autogenerated>:1 +0x47 github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit.func1(0xc42203b770) /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:112 +0x68 created by github.com/hyperledger/fabric/test/tools/LTE/chainmgmt.(*Chain).startBlockPollingAndCommit /w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric/test/tools/LTE/chainmgmt/chains.go:105 +0x5e Stopping couchdb container (id: 5530632694ea)...{code}","20/Feb/18 3:28 PM;sambhavdutt;The ledger_lte failed in the last build for couchdb test in the *fabric-test-daily-x86_64* , 


{code:java}
             Passing criteria: Underlying LTE test completed successfully with
             exit code 0
            '''
        logfile = open(""output_VaryNumTxs_couchdb.log"", ""w"")
        returncode = subprocess.call(
                ""./runbenchmarks.sh -f parameters_couchdb_daily_CI.sh varyNumTxs"",
                shell=True, stderr=subprocess.STDOUT, stdout=logfile,
                cwd=tool_directory)
        logfile.close()
        self.assertEqual(returncode, 0, msg=""varyNumTxs for CouchDB ""
                ""performance test failed. \nPlease check the logfile ""
>               +logfile.name+"" for more "" ""details."")
E       AssertionError: varyNumTxs for CouchDB performance test failed. 
E       Please check the logfile output_VaryNumTxs_couchdb.log for more details.

ledger_lte.py:344: AssertionError
{code}


*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/262/testReport/ledger_lte/perf_couchdb/test_FAB_3877_VaryNumTxs/","27/Feb/18 2:39 PM;sambhavdutt;The ledger_lte tests have passed in the last 4 builds for fabric-test-daily-x86_64

*Build Log*

https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/test_results_analyzer/",28/Mar/18 4:38 PM;rameshthoomu;Not-reproduced in the recent builds. Marking this as done..,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer chaincode install doesn't return error if no .js files in directory,FAB-7412,25105,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,dsanchezseco,dsanchezseco,11/Dec/17 3:43 PM,21/Dec/17 12:46 PM,26/Apr/18 6:49 AM,21/Dec/17 12:46 PM,,,,v1.1,,fabric-peer,,,,,,0,install,nodejs-chaincode,,,,,,"{{While installing a *node* chaincode with the command:}}
{{}}
{code:java}
peer chaincode install -n $CHAINCODE_NAME -v $CHAINCODE_VERSION -l node -p /opt/gopath/src/github.com/user/${CHAINCODE_LANG}/${CHAINCODE_NAME}/
{code}
{{""Installed remotely response:<status:200 payload:""OK"" >"" it's returned always even if there's no .js files in the location}}",,;16/Dec/17 8:54 PM;mastersingh24;1200,,,,1200,0,1200,100%,1200,0,1200,,,,,,,,,,,,,,,,,,,,0|i01xkd:,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,master,,,true,16/Dec/17 8:54 PM;mastersingh24;https://gerrit.hyperledger.org/r/16255,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-Ca : Max Enrollments number not accounted for a user during enrollment,FAB-7348,24834,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,tsrb,Nishi,Nishi,06/Dec/17 9:14 PM,10/Jan/18 3:50 PM,26/Apr/18 6:49 AM,05/Jan/18 10:51 PM,,,,v1.1,v1.1.0-alpha,fabric-ca,,,,,,0,,,,,,,,"Fabric-CA commit level: * d365e506186e6291f2a0b0512360462bad4bc4b0*

Steps to Reproduce:

-----------------------

1. Set maxenrollments to 4 while registering a user
{code:java}
FABRIC_CA_CLIENT_HOME=~/hyperledger/fabric-ca/clients/admin fabric-ca-client register --id.maxenrollments 4 --id.name userTest --id.secret userTestpw --id.affiliation org1.department1 --id.type user
{code}
2. Now try to enroll user 5 times
{code:java}
FABRIC_CA_CLIENT_HOME=~/hyperledger/fabric-ca/clients/userTest fabric-ca-client enroll -u http://userTest:userTestpw@localhost:7054{code}
Expected Result:

fabric-ca-client to report an error that user has reached his maxenrollments

Actual Result:

Enrollment succeeds even for a 5th attempt and for subsequent enrolments.

Message during enrollment:

--------------------------------------
{code:java}
2017/12/06 20:58:51 [DEBUG] DB: Getting identity userTest200
2017/12/06 20:58:51 [DEBUG] DB: Login user userTest200 with max enrollments of 3 and state of 3
2017/12/06 20:58:51 [DEBUG] Max enrollment value (3) of identity is greater than allowed by CA, using CA max enrollment value of -1
2017/12/06 20:58:51 [DEBUG] DB: identity userTest200 successfully logged in
2017/12/06 20:58:51 [DEBUG] Processing sign request: id=userTest200, CommonName=userTest200, Subject=<nil>
2017/12/06 20:58:51 [DEBUG] Checking CSR fields to make sure that they do not exceed maximum character limits
2017/12/06 20:58:51 [DEBUG] DB: Getting identity userTest200
2017/12/06 20:58:51 [DEBUG] Finished processing sign request
2017/12/06 20:58:51 [DEBUG] DB: Getting identity userTest200
2017/12/06 20:58:51 [INFO] signed certificate with serial number 196990544392883754706432797384407312383469496202
2017/12/06 20:58:51 [DEBUG] DB: Insert Certificate
2017/12/06 20:58:51 [DEBUG] Saved serial number as hex 22815c8c3f83cae29aee7ab5ab2defdb9771278a
2017/12/06 20:58:51 [DEBUG] saved certificate with serial number 196990544392883754706432797384407312383469496202
2017/12/06 20:58:51 [DEBUG] Successfully incremented state for identity userTest200 to 4
2017/12/06 20:58:51 [INFO] 127.0.0.1:58430 POST /enroll 201 0 ""OK""
2017/12/06 20:58:51 [INFO] Stored client certificate at /root/hyperledger/fabric-ca/clients/userTest200/msp/signcerts/cert.pem
2017/12/06 20:58:51 [INFO] Stored root CA certificate at /root/hyperledger/fabric-ca/clients/userTest200/msp/cacerts/localhost-7054.pem
2017/12/06 20:58:51 [INFO] Stored intermediate CA certificates at /root/hyperledger/fabric-ca/clients/userTest200/msp/intermediatecerts/localhost-7054.pem
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01x3p:,,,,,,,,Nishi,tsrb,,,,,,,,,,,,,,,master,,,true,18/Dec/17 1:53 PM;tsrb;https://gerrit.hyperledger.org/r/16291,"10/Jan/18 3:49 PM;Nishi;Verified successfully on postgres and mysql db to verify that a user cannot be enrolled beyond ""maxenrollments"" during register.

Fabric-Ca commit level: *ebfc050baee7ea222edc64637741f406fa9c54b0*

Registered a user on 1.0.4 fabric-ca-server using following attributes:
{code:java}
FABRIC_CA_CLIENT_HOME=~/hyperledger/fabric-ca/clients/admin ca-binaries-x104/fabric-ca-client register --id.maxenrollments 3 --id.name userTest3 --id.secret userTest3pw --id.affiliation org1.department1 --id.type user{code}
 

Then when I tried to enroll userTest3  after upgrading fabric-ca-server to 1.1:
{code:java}
FABRIC_CA_CLIENT_HOME=~/hyperledger/fabric-ca/clients/userTest3 fabric-ca-client enroll -u http://userTest3:userTest3pw@localhost:7054{code}
 

after a third time got the following message:
{code:java}
2018/01/10 15:44:57 [DEBUG] DB: Getting identity userTest3
2018/01/10 15:44:57 [DEBUG] DB: Login user userTest3 with max enrollments of 3 and state of 3
2018/01/10 15:44:57 [INFO] 127.0.0.1:52878 POST /enroll 401 24 ""Login failure: The identity userTest3 has already enrolled 3 times, it has reached its maximum enrollment allowance""
Error: Response from server: Error Code: 20 - Authorization failure
{code}
 

Tested with tls enabled and disabled successfully.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Revert back to Kafka 0.9.0.1,FAB-7288,24718,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,mastersingh24,mastersingh24,04/Dec/17 12:40 PM,05/Dec/17 9:59 AM,26/Apr/18 6:49 AM,05/Dec/17 9:59 AM,,,,v1.0.5,,fabric-orderer,,,,,,0,,,,,,,,"FAB-7046 modified the download URL used to build Kafka images to the Apache archive site but since it was a cherrypick, it also updated the Kafka version to 0.10.2.1.

For the v1.0.x releases, we need to stay with Kafka 0.9.0.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01wgd:,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,release-1.0,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-ca update to enrollment profile,FAB-7235,24647,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,smithbk,rennman,rennman,30/Nov/17 6:11 PM,17/Jan/18 1:03 PM,26/Apr/18 6:49 AM,17/Jan/18 1:03 PM,v1.1,,,v1.1.0-alpha,,fabric-ca,,,,,,0,,,,,,,,Need to synchronize the requested CSR and the CSR that is generated on behalf of the client.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01w0t:,,,,,,,,mastersingh24,rennman,smithbk,,,,,,,,,,,,,,master,,,true,01/Dec/17 1:03 PM;smithbk;https://gerrit.hyperledger.org/r/15859 [FAB-7235] Check profile for isCA,07/Jan/18 2:19 PM;mastersingh24;[~smithbk] - would you mind adding a little more detail to the description above?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Non-Deterministic Processing of Ledger Transaction by Peer,FAB-7156,24540,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,manish-sethi,rhegde,rhegde,28/Nov/17 9:25 PM,10/Dec/17 8:50 AM,26/Apr/18 6:49 AM,09/Dec/17 4:08 PM,v1.0.4,v1.0.5,,v1.0.6,,fabric-peer,,,,,,0,,,,,,,,"Release - Fabric 1.0.4, Provided by IBMBlockChain

*Setup*
 # Orderer-Kafka-Zookeer
 # Non-TLS Setup
 # 6 Organization Setup, around 15+ channel,
 # 5 Organization with 1 Peer, 1 Organization with 2 Peers.

*Steps*
 # Sent sequential endorsed ledger transaction for around 5mins on a single channel, with a sufficient gap in between (not a stress test)
 # Couch DB docker container of 2 organization were continuously restarted.
  

*Actual Result*
 # Mismatch in the JSON document count for that channel , verified through Couch DB interface.
 # Peer Container went down due to unavailability of Couch DB container (https://jira.hyperledger.org/secure/attachment/13428/peer.81a5c6861ea2.log)
  ",,,,,,,,,,,,,,,,,,,,,,,,29/Nov/17 8:38 PM;rhegde;peer.8ae99f2c3e9c.log;https://jira.hyperledger.org/secure/attachment/13429/peer.8ae99f2c3e9c.log,,,,,,,,0|i01ved:,,,,,,,,baohua,C0rWin,denyeart,manish-sethi,mastersingh24,rhegde,yacovm,,,,,,,,,,release-1.0,,,true,28/Nov/17 9:41 PM;Clayton Sims;This comes from CLS.   [~kchristidis]  or [~sanchezl]  could one of you triage this.  ,29/Nov/17 10:41 AM;kchristidis;Does not seem to be orderer related. /cc [~denyeart],"29/Nov/17 12:09 PM;denyeart;[~rhegde]
 In order to analyze, you would need to look at the statedb_savepoint documents in couchdb to understand current 'height' of state db, identify which documents (keys) in CouchDB are out of sync, and then look for those keys in peer debug on the various peers to understand the differences. With the existing recovery logic, we would not expect state dbs of the same 'height' to have different key documents, since the key documents for a given block get committed to disk prior to the savepoint being written.

Please identify the keys in question and point to the lines in the trace related to those keys, in the two peers that are not in sync.","29/Nov/17 8:37 PM;rhegde;*Response 1*

I have used the couch-db version field to figure the block number that went missing
 # Block 576 which translates in creation of 1 JSON Document
 # Block 635 which translates in creation of 2 JSON Document and multiple updates to existing JSON documents. 

*Response 2*

Please refer to the log added - *peer.8ae99f2c3e9c.log* indicating Peer also went down during commit processing of Block 576.

 

*Response 3*

[clsnet@dusd1devrhap065 ~]$ curl -H ""Content-Type: application/json"" -X GET [http://dusd1devrhap063.dev.local:41005/node1-node2/statedb_savepoint]
 \{""_id"":""statedb_savepoint"",""_rev"":""644-fdff898d3f70d6facb04ad04736a8287"",""BlockNum"":644,""TxNum"":1,""UpdateSeq"":""2050-g1AAAAE2eJzLYWBg4MhgTmHgzcvPy09JdcjLz8gvLskBCjMlMiTJ____PytxCw4FSQpAMskerGYpLjUOIDXxYDWbcalJAKmpB6tZjkNNHguQZGgAUkBl87MSd-NVtwCibn9W4ga86g5A1N3PStyIV90DiLr_WUkMDMzGWQC2pmf8""}

[clsnet@dusd1devrhap065 ~]$ curl -H ""Content-Type: application/json"" -X GET [http://dusd1devrhap063.dev.local:41005/node1-node2]
 \{""db_name"":""node1-node2"",""update_seq"":""2051-g1AAAAE2eJzLYWBg4MhgTmHgzcvPy09JdcjLz8gvLskBCjMlMiTJ____PytxCw4FSQpAMskerGYpLjUOIDXxYDWbcalJAKmpB6tZjkNNHguQZGgAUkBl87MSd-NVtwCibn9W4ga86g5A1N3PStyIV90DiLr_WUkMDMwmWQC2qGf9"",""sizes"":\{""file"":23070179,""external"":1183642,""active"":2125584},""purge_seq"":0,""other"":\{""data_size"":1183642},""doc_del_count"":0,""doc_count"":1109,""disk_size"":23070179,""disk_format_version"":6,""data_size"":2125584,""compact_running"":false,""instance_start_time"":""0""}

[clsnet@dusd1devrhap065 ~]$ curl -H ""Content-Type: application/json"" -X GET [http://dusd1devrhap063.dev.local:41006/node1-node2]
 \{""db_name"":""node1-node2"",""update_seq"":""2518-g1AAAAE2eJzLYWBg4MhgTmHgzcvPy09JdcjLz8gvLskBCjMlMiTJ____PyvxPQ4FSQpAMskerOYeLjUOIDXxYDVfcKlJAKmpB6u5hUNNHguQZGgAUkBl87MSP-FVtwCibn9W4ju86g5A1N0nZN4DiLr_WUkMDMyZWQC5l2nQ"",""sizes"":\{""file"":25273827,""external"":1190561,""active"":3046761},""purge_seq"":0,""other"":\{""data_size"":1190561},""doc_del_count"":0,""doc_count"":1113,""disk_size"":25273827,""disk_format_version"":6,""data_size"":3046761,""compact_running"":false,""instance_start_time"":""0""}

[clsnet@dusd1devrhap065 ~]$ curl -H ""Content-Type: application/json"" -X GET [http://dusd1devrhap063.dev.local:41006/node1-node2/statedb_savepoint]
 \{""_id"":""statedb_savepoint"",""_rev"":""645-60eae372ea44f412bf5627284cc560df"",""BlockNum"":644,""TxNum"":1,""UpdateSeq"":""2517-g1AAAAE2eJzLYWBg4MhgTmHgzcvPy09JdcjLz8gvLskBCjMlMiTJ____PyvxPQ4FSQpAMskerOYeLjUOIDXxYDVfcKlJAKmpB6u5hUNNHguQZGgAUkBl87MSP-FVtwCibn9W4ju86g5A1N0nZN4DiLr_WUkMDMwZWQC5lWnP""}","29/Nov/17 9:47 PM;denyeart;[~rhegde] Great find.  In order to troubleshoot we will need the peer log at debug level at the time of crash and upon the next start.  In the peer start you will see two INFO messages like this:

2017-11-29 21:28:47.892 UTC [ledgermgmt] OpenLedger -> INFO 1c5 Opening ledger with id = myc
2017-11-29 21:28:47.909 UTC [ledgermgmt] OpenLedger -> INFO 1e5 Opened ledger with id = myc

Between these two messages, if debug is enabled you will see recovery logic that checks the savepoint and if the savepoint doesn't match block height, it should re-apply the valid transactions from the blocks that are missing in state db.  You would see this in peer debug messages, right before the ""Opened ledger"" message.

In our trials, we are not able to reproduce the lost data issue (it always gets recovered correctly), therefore we need to read your debug logs.  Are you able to reproduce with debug level?  Please post the debug log, as well as block number and key that are missing.","30/Nov/17 10:48 PM;rhegde;[Update]

[~denyeart] after some retries - we are again able to reproduce this issue by putting peer in debug mode. I will share all the logs, state db snapshot soon.","06/Dec/17 3:16 PM;rhegde;[~denyeart]

*Log Attachments*

All logs are uploaded for reference @ [http://dts.cls-group.com/] (filename: FAB7156-NonDeterministicTransactionProcessing-5Dec2017.zip) and the credential to access is available with [~Clayton Sims] or [~altharp]. Please check for logs.

Following is the folder structuring used for capturing the logs, bar2xxxx and ibm2xxxx are the 2 organization node folder.  bar2xxxx node's couchdb container was continuously shutdown in this logs capture.

bar2XXXX
 * docker.ps.XXX (contains the snapshot of docker ps at that point of time)
 * f4dc769a87b9.log (where f4dc769a87b9 is the container ID and can be mapped from docker.ps)
 * statedb_savepoint.json
 * all_docs.log (all documents from the couch db)

Same logs naming convention is used for the other node ibm2XXXX

*Summary of the mismatch*
 # Block 848, can be checked as this is missing json documents in bar2xxx and present in ibm2xxxx.
 # Please note - we have done multiple runs on same channel (peer-2-peer channel) which is bar2XXX-ibm2XXX.

 

Let me know for questions.","08/Dec/17 12:05 AM;denyeart;[~rhegde] I have analyzed the debug for block 848. No data was applied to bar2ldn1 for three keys because their transactions were marked as invalid. They were marked invalid on this node because the associated keys were not found in state db at validation time, but the read set indicated they should have already existed in state db. I can only assume the prior transaction(s) state db write for these keys got missed. Unfortunately the prior transactions for these keys are not included in the provided debug logs so we cannot be sure of root cause. Do you have debug logs for the prior blocks/transactions that included these keys? You can find the keys below as well as the version mismatch and invalidation messages.

You could also do a fresh run and provide debug logs from genesis block until the problem occurs.
{noformat}
[36m2017-11-30 22:24:06.830 CET [statevalidator] validateKVRead -> DEBU d227[0m Version mismatch for key [p2pcls:CLS002_GC0C5608G100127D]. Committed version = [%!s(*version.Height=<nil>)], Version in readSet [block_num:806 tx_num:2 ]
[33m2017-11-30 22:24:06.830 CET [statevalidator] ValidateAndPrepareBatch -> WARN d228[0m Block [848] Transaction index [0] TxId [1a16218e7fbfcbdbfe9c4e92a3d22cf566123327f72d5a5ffda7d4dd6b35a514] marked as invalid by state validator. Reason code [11]
...
[36m2017-11-30 22:24:06.834 CET [statevalidator] validateKVRead -> DEBU d23b[0m Version mismatch for key [p2pcls:CLS002_GC0C5608G100127E]. Committed version = [%!s(*version.Height=<nil>)], Version in readSet [block_num:806 tx_num:3 ]
[33m2017-11-30 22:24:06.834 CET [statevalidator] ValidateAndPrepareBatch -> WARN d23c[0m Block [848] Transaction index [1] TxId [35979ad62c0bbc58297e48baf796c17d93c66acdd94dc651866be26076337494] marked as invalid by state validator. Reason code [11]
...
[36m2017-11-30 22:24:06.838 CET [statevalidator] validateKVRead -> DEBU d24f[0m Version mismatch for key [p2pcls:CLS002_GC0C5608G100127F]. Committed version = [%!s(*version.Height=<nil>)], Version in readSet [block_num:807 ]
[33m2017-11-30 22:24:06.838 CET [statevalidator] ValidateAndPrepareBatch -> WARN d250[0m Block [848] Transaction index [2] TxId [ef1a47db16d9b1c9da3d70831a1d79e2e33afe729b2909898008858509c13c6b] marked as invalid by state validator. Reason code [11]
{noformat}
There is also a CouchDB setting that may be worthwhile to try to see if it fixes the problem, change
 delayed_commits = true
 to
 delayed_commits = false
 in CouchDB local.ini (change in both /opt/couchdb/etc and /opt/couchdb/etc/local.d directories to ensure the change is effective). This will ensure CouchDB flushes changes to disk even if the peer flushing/savepoint/recovery logic is not working correctly. This would help pinpoint the problem.
 For more details on the config see: [http://docs.couchdb.org/en/2.0.0/config/intro.html]","08/Dec/17 3:50 PM;manish-sethi;I browsed through the validation and commit path of the code in order to get some hint for this problem. I bumped into a bug in the code that seems a a potential reason for this problem.

In this line (https://github.com/hyperledger/fabric/blob/release/core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go#L200), an error is being ignored which would result in marking the transaction invalid.

If this version of the code is being used in the above environment, then in my opinion the best option would be to try with a fix for this.","08/Dec/17 5:52 PM;rhegde;[~manish-sethi]

As discussed, we have uploaded another archive, FAB7156-NonDeterministicTransactionProcessing-8Dec2017.zip which represents for comment added (https://jira.hyperledger.org/browse/FAB-7156?focusedCommentId=35653&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-35653). Please check if this represents the same root-cause. Thanks.

Archive: please note this snapshot was taken little earlier - however the document lost count difference is the same:
 * Diff-file1-file2*.txt contains the missing documents
 * file1.json - list of all json documents from node1
 * file2.json - list of all json documents from node2
 * bar2xxx, ibm2xxx - contains the peer log at INFO level","08/Dec/17 11:25 PM;manish-sethi;Submitted the bug fix for the release branch. It's already fixed in master branch.

https://gerrit.hyperledger.org/r/#/c/16059/","09/Dec/17 1:18 AM;baohua;[~manish-sethi], thanks for the fix.

While in this case, if for only some peers, there is error, what could happen in the network?

There will be still inconsistency in the stateDB among peers?

Is there any way to recovery?

Thanks!","09/Dec/17 2:04 AM;manish-sethi;[~baohua] - with the fix, the peer that encounters an error, does not commit the block and propagates the error upward path. Which means that the block can again be tried for commit. There won't be a data inconsistency but the peer may be well behind others till the error is fixed.","09/Dec/17 9:04 AM;baohua;[~manish-sethi], got the idea.

And how many times for retry?

If the error continue happens, will the peer stop committing, or ignore the block?

I think all these problems need to be addressed?",09/Dec/17 10:31 AM;mastersingh24;https://gerrit.hyperledger.org/r/16059,"09/Dec/17 1:38 PM;denyeart;[~baohua] There are already configurable retries between peer and couchdb.  Here is a more complete explanation I added to gerrit:

So at the couchdb layer, any 404 not found error will get turned into nil versionedValue, which matches the read set nil when the key has never been created by prior tran in state db. So that means any errors coming from couchdb layer (after retries are exhausted) is a true unexpected error which should cause block processing to halt. And the error here gets propagated all the way up to gossip state.go when it calls to commitBlock(), which will panic the peer:

logger.Panicf(""Cannot commit block to the ledger due to %s"", err).

Then once the couchdb system problem is corrected (e.g. restart couchdb), then when you bring the peer back up it will process the block successfully.

Now, gossip's block processing may also want to add a retry before panic at that layer.  What do you think [~yacovm]?","09/Dec/17 5:13 PM;yacovm;{quote}Now, gossip's block processing may also want to add a retry before panic at that layer.  What do you think [~yacovm]?
{quote}
 

I would disagree. 
 The retry logic should be different for different types of DB providers, i.e in couchDB it would make sense to have a long sleep between retries, and multiple retries, but in an embedded DB that just writes to the disk like levelDB/rocksDB it wouldn't make any sense to retry for a long period of time.

 For this reason - it doesn't make sense to put that in gossip.

 

I would also add and say that if such a retry logic is implemented (in a lower layer than gossip) then the panic should be moved there.

[~C0rWin] wdyt?",09/Dec/17 10:28 PM;C0rWin;I do not think that gossip should handle re-tries logic in case of DB failures and inability of ledger to commit the block and yes this is sounds reasonable that panic would be moved into lower layers rather than gossip.,"10/Dec/17 6:05 AM;denyeart;[~yacovm] [~C0rWin]   Right - ledger layer should and does handle retry and error logic based on the specific state db.  Other non-database errors such as during block validation or block unmarshalling also can return an unexpected error up to gossip layer, triggering peer panic since block processing cannot continue. I was curious if anybody thought some of these types of errors may be recoverable upon retry rather than panic. [~baohua] raised the question of retries here, but let's discuss in rocket.chat since it is not directly related to this JIRA item.","10/Dec/17 7:43 AM;C0rWin;[~denyeart] if failure is due to inability to unmarshal structure or due to validation, there is very unlikely that after re-try it will succeed. On contrary if the failure is due some disk or temporary database dis-connectivity re-trying makes a lot of sense to me. Therefore if you saying that DB and disk related failure has been handled by ledger with respect to giving it another try, I do not see what else could be done. wdyt [~yacovm]?  ",10/Dec/17 8:50 AM;yacovm;Agreed,,,,,,,,,,,,,,,,,,,,,
Peer data synchronization failure due to connection timeout to CouchDB,FAB-7098,24458,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,SatoshiFujisawa,SatoshiFujisawa,24/Nov/17 5:43 AM,19/Dec/17 2:33 PM,26/Apr/18 6:49 AM,19/Dec/17 2:33 PM,,,,,,fabric-ledger,,,,,20/Nov/17 12:00 AM,0,couchdb,gossip,v1.0,,,,,"Peer data synchronization failure due to connection timeout to CouchDB. Therefore, it becomes impossible to recover Peer in these cases.

 

*Case 1*: Existing peer synchronizes with other/anchor peer after it starts execution

Scenario:
 # All Nodes (zookeepers, orderers, peers, couchDB) are running
 # Client application is running and adding new transactions to the Blockchain
 # All the peers are receiving the new blocks and their ledgers are in sync.
 # Peer1-Org1 is stopped
 # Client application is still running and adding new transactions to the Blockchain
 # After sending large transactions which adds approximately 1 million blocks to the ledger, start Peer1-Org1 instance

Expected:

Peer1-Org1 successfully synchronizes with other/anchor peer.

*Actual Observation:*

Peer1-Org1 instance stops execution with error.
 # dial tcp: lookup couchdb1 on 127.0.0.11:53: read udp 127.0.0.1:43112->127.0.0.11:53: i/o timeout

 

*Case 2*: New peer synchronizes with other/anchor peer after it starts execution
 # Peer1-Org1 failed to synchronize with other peers (as described in Case 1)
 # Remove Peer1-Org1 docker container
 # Remove CouchDB docker container associated with of Peer1-Org1
 # Remove Peer1-Org1 fabric data folder
 # Remove the CouchDB data folder
 # Run CouchDB docker image (start the CouchDB instance)
 # Run Peer1-Org1 docker image (start Peer1-Org1 instance)
 # Join Peer1-Org1 to channel
 # Data synchronization of Peer1-Org1 started

 

Expected:

Peer1-Org1 successfully synchronizes with other/anchor peer.

*Actual Observation:*

Peer1-Org1 instance stops execution with error.
 # dial tcp: lookup couchdb1 on 127.0.0.11:53: read udp 127.0.0.1:43112->127.0.0.11:53: i/o timeout

(Note: this observation is similar to the Case 1)

*Attachments:*
 * Case 1 Peer1-Org1 log file
 * Case 2 Peer1-Org1 log file
 * CouchDB Peer1-Org1 log file

*Initial analysis*: CouchDB by default accepts 1024 connections. It stopped accepting new connections once this limit reached. This lead to peer failing to connect to the couchdb and stopped eventually with error.","Environment:
 * Fabric v1.0.2
 * Ubuntu v16.04.3 LTS
 * Kafka - 2 instances
 * Zookeeper – 3 instances
 * Orderer – 2 instance
 * Organizations – 2 (Org1, Org2)
 * Peers – 2 peers per Organization (Peer0-Org1, Peer1-Org1, Peer0-Org2, Peer1-Org2)
 * CouchDB – 1 per peer",,,,,,,,,,,,,,,,,,,,,,,24/Nov/17 5:38 AM;SatoshiFujisawa;Case1-Peer1-Org1.log;https://jira.hyperledger.org/secure/attachment/13422/Case1-Peer1-Org1.log,24/Nov/17 5:38 AM;SatoshiFujisawa;Case2-Peer1-Org1.log;https://jira.hyperledger.org/secure/attachment/13423/Case2-Peer1-Org1.log,24/Nov/17 5:39 AM;SatoshiFujisawa;Couchdb-Peer1-Org1-netstat.log;https://jira.hyperledger.org/secure/attachment/13421/Couchdb-Peer1-Org1-netstat.log,,,,,,0|i01ux9:,,,,,,,,denyeart,mastersingh24,SatoshiFujisawa,,,,,,,,,,,,,,,,,,"26/Nov/17 1:41 PM;mastersingh24;[~SatoshiFujisawa]  - How are you running all of your nodes?  Are you using Docker Compose?

How are you stopping and restarting the containers?",27/Nov/17 3:08 AM;denyeart;[~SatoshiFujisawa] Are you exercising the peer at such high concurrency that it has 1024 connections with CouchDB at one time? Or do you believe there is a connection leak? Please expand on your test and hypothesis.,"28/Nov/17 7:34 AM;SatoshiFujisawa;Thank you for your reply.

Regarding the first question, I'm using Docker compose. And even if I stop containers and restart it, the same event has always occurred.

About the next question, I was thinking that CouchDB processing is delayed for some reason. As a result, I thought that connection timeout or staying occurred.

 

As I proceed with the investigation, I found a possibility that it corresponds to the following bug. Events did not match perfectly, but I noticed that the point where too much consumption of memory resources occurred in peer container is the same.

<https://jira.hyperledger.org/browse/FAB-5849>

 

I will update the version of Fabric from v1.0.2 to v1.0.4 and observe the situation from now. Then I will report the result on here.",19/Dec/17 2:13 PM;denyeart;[~SatoshiFujisawa] Have you been able to reproduce the problem on more recent versions of 1.0.x or master branch?,"19/Dec/17 2:29 PM;SatoshiFujisawa;I'm sorry to reply late.
I upgraded to v1.0.4 and tried the same thing, the problem was completely resolved. Thus I think that this problem is maight the same as FAB-5849 and it was resolved in v1.0.3.

Thank you very much for your replay and cooperation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric CI failed ,FAB-7046,24030,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rameshthoomu,cbl,cbl,20/Nov/17 2:29 PM,31/Jan/18 4:36 PM,26/Apr/18 6:49 AM,21/Nov/17 1:26 PM,,,,v1.0.5,v1.1,,,,,,,0,,,,,,,,"See below errors in [https://logs.hyperledger.org/production/vex-yul-hyp-jenkins-3/fabric-verify-end-2-end-x86_64/10734/console.log.gz.] It seems sth went wrong when pulling kafka image.

Creating network ""e2ecli_default"" with the default driver
Pulling kafka3 (hyperledger/fabric-kafka:latest)...
manifest for hyperledger/fabric-kafka:latest not found
ERROR !!!! Unable to pull the images 
Build step 'Execute shell' marked build as failure",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01uat:,,,,,,,,cbl,kchristidis,mastersingh24,nnao,phillipviana,sheehan,,,,,,,,,,,release-1.0,master,,true,"20/Nov/17 2:43 PM;mastersingh24;I think we might actually want to use 0.10.2.1 rather than a 0.11.x version

[~kchristidis] thoughts?",20/Nov/17 4:06 PM;kchristidis;https://gerrit.hyperledger.org/r/c/15593/,"20/Nov/17 9:39 PM;nnao;http://www-us.apache.org/dist/kafka/ only contains the latest versions, so https://archive.apache.org/dist/kafka/ is better to use for the older versions","21/Nov/17 3:01 AM;phillipviana;I am hitting the same problem trying to compile *latest*: v0.9.0.1 is no longer available {{as we can see here: [http://www-us.apache.org/dist/kafka|http://www-us.apache.org/dist/kafka/]}}

 
{quote}{{Step 2/10 : ENV SCALA_VERSION 2.11 KAFKA_VERSION 0.9.0.1 KAFKA_DOWNLOAD_SHA1 FC9ED9B663DD608486A1E56197D318C41813D326}}
 \{\{ ---> Using cache}}
 \{\{ ---> f2dc24a8d9e6}}
 {{Step 3/10 : RUN curl fSL ""http://www-us.apache.org/dist/kafka/0.9.0.1/kafka_$\{SCALA_VERSION}$\{KAFKA_VERSION}.tgz"" o kafka_$\{SCALA_VERSION}$\{KAFKA_VERSION}.tgz && echo ""$\{KAFKA_DOWNLOAD_SHA1} kafka_$\{SCALA_VERSION}$\{KAFKA_VERSION}.tgz"" | sha1sum -c - && tar xfz kafka_""$SCALA_VERSION""""$KAFKA_VERSION"".tgz C /opt && mv /opt/kafka_""$SCALA_VERSION""""$KAFKA_VERSION"" /opt/kafka && rm kafka_""$SCALA_VERSION""-""$KAFKA_VERSION"".tgz}}
 \{\{ ---> Running in 3b839369abb4}}
 \{\{ % Total % Received % Xferd Average Speed Time Time Time Current}}
 \{\{ Dload Upload Total Spent Left Speed}}
 \{\{ 0 0 0 0 0 0 0 0 -::- -::- -::- 0}}
 {{curl: (22) The requested URL returned error: 404 Not Found}}
{quote}","21/Nov/17 4:44 AM;sheehan;I agree with [~nnao], the URL should be changed to [https://archive.apache.org/dist/kafka/] otherwise this will happen again in the future.","21/Nov/17 5:59 PM;kchristidis;Any concerns of this biting us again in the future are overrated since FAB-7045 will ensure we're building the images only once. That said, I agree that switching to the archive URI is the way to go.","21/Nov/17 6:14 PM;kchristidis;[https://gerrit.hyperledger.org/r/c/15599/]

[https://gerrit.hyperledger.org/r/c/15629/]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix compilation error,FAB-7008,23980,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,aambati,aambati,aambati,16/Nov/17 4:58 PM,27/Nov/17 2:56 AM,26/Apr/18 6:49 AM,27/Nov/17 2:56 AM,,,,v1.1,,fabric-ca,,,,,,0,,,,,,,,Fix compilation error in the cmd/fabric-ca-client/main_test.go. The error was caused by the changes introduced by [https://gerrit.hyperledger.org/r/c/14741/] and [https://gerrit.hyperledger.org/r/c/15025/] and gerrit did not complain as the changes did not conflict.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01u0d:,,,,,,,,aambati,,,,,,,,,,,,,,,,master,,,true,17/Nov/17 3:34 AM;aambati;https://gerrit.hyperledger.org/r/c/15533/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Spawning multiple Fabric networks on the same VM,FAB-6980,23934,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,AjitVV,AjitVV,14/Nov/17 5:44 AM,29/Nov/17 4:34 AM,26/Apr/18 6:49 AM,29/Nov/17 4:33 AM,,,,Not a Bug,,,,,,,,0,,,,,,,,"{color:#000000}I would like to spawn multiple instances of the example network on the same VM. We have multiple users working on the same VM and each would like to work with his own instance.{color}

{color:#000000} {color}

{color:#000000}Based on our understanding of the docker compose, we decided to use a different COMPOSE_PROJECT_NAME for each user.{color}

User 1 used COMPOSE _PROJECT_NAME=member1 and launched the example.User 1 could see the following containers - please find attachment *member1_containers.txt*
  
 User 2 used COMPOSE _PROJECT_NAME=member2.When he launched the example, he was expecting all containers to have u1 as a prefix.User 2 could see the following containers - please find attachment *member2_containers.txt*

*Note that the chaincode container dev-peer2-example02-1.0 started by user1 vanished and was replaced by the chaincode container of the same name started by user2.*

I guess this is because the peer launches the chaincode container without prefixing it.

 ",,,,,,,,,,,,,,,,,,,,,,,,14/Nov/17 5:41 AM;AjitVV;member1_containers.txt;https://jira.hyperledger.org/secure/attachment/13332/member1_containers.txt,14/Nov/17 5:41 AM;AjitVV;member2_containers.txt;https://jira.hyperledger.org/secure/attachment/13331/member2_containers.txt,,,,,,,0|i01tqd:,,,,,,,,AjitVV,denyeart,mastersingh24,YashGanthe,,,,,,,,,,,,,,,,,"17/Nov/17 5:02 AM;YashGanthe;If there is a COMPOSE_PROJECT_NAME, the peer should add it to the name of the chaincode container so that the container gets a unique name that does not conflict with any other conatiner.","24/Nov/17 10:39 PM;mastersingh24;[~AjitVV]  - If you want to do something like this, then you can set
{quote}
CORE_PEER_NETWORKID=$\{COMPOSE_PROJECT_NAME}
{quote}

in your Docker Compose YAML files","27/Nov/17 2:52 AM;denyeart;[~AjitVV] I don't think there is a Bug here.  Could you mark it Done, or change the issue type, or clarify what you think the bug is?","29/Nov/17 4:33 AM;AjitVV;setting CORE_PEER_NETWORKID=$\{COMPOSE_PROJECT_NAME} worked.
 Thank you for the help.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
better documentation to explain usage of shim API,FAB-6979,23933,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,wlahti,Nishi,Nishi,13/Nov/17 10:17 PM,07/Feb/18 12:29 AM,26/Apr/18 6:49 AM,07/Feb/18 12:29 AM,,,,v1.1,,fabric-endorser,,,,,,0,,,,,,,,"It would be nice if we can add newer chaincodes to demonstrate usage and purpose of following shimAPI for user/testers to consume these API.
{code:java}
GetBinding  
GetCreator
GetTxTimeStamp
GetSignedProposal
GetTransient
GetTxID
GetDecorations
SetEvent{code}",,,,,,,,,,,,,,FAB-6966,,,,,,,,,,,,,,,,,,0|i01tq5:,,,,,,,,denyeart,muralisr,Nishi,wlahti,yacovm,,,,,,,,,,,,master,,,true,"27/Nov/17 2:49 AM;denyeart;[~muralisr] I think you have the most historical context on some of these shim functions, would you be able to add some additional usage notes in the shim interfaces_stable.go file?  Usage in fabric examples would be nice, but minimally I think some more usage notes are needed.  (BTW, is SetEvent() still legitimate?).","06/Dec/17 9:18 AM;muralisr;[~denyeart] yes, I can do that. Will try to get some usage nodes done this week(end).

SetEvent is still legitimate but we don't actually emit the event (like we do with Block event). The CC event is in the TX in the block. SDK and users would have to extract it.",29/Jan/18 3:06 PM;muralisr;[~wlahti] thank you for agreeing to take a peek! ,02/Feb/18 9:42 PM;yacovm;[~wlahti] any updates on this one?,05/Feb/18 2:01 PM;wlahti;I'll be working on this today. ,"06/Feb/18 8:48 PM;wlahti;I pushed an initial attempt at this to gerrit: [https://gerrit.hyperledger.org/r/c/17605/]

Some of the information about GetBinding() was based on the following Google doc, which I found linked in FAB-634: [https://docs.google.com/document/d/18XDGqxb3pz4sTS6jTJod1KufRSC7rRA-O3PMT5cUsqY/edit#heading=h.2o87atnjtrt2]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric unit-tests are failing consistently,FAB-6977,23931,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,luomin,rameshthoomu,rameshthoomu,13/Nov/17 8:06 PM,11/Dec/17 8:29 AM,26/Apr/18 6:49 AM,11/Dec/17 8:29 AM,,,,DUPLICATE,,fabric-build,,,,,,0,,,,,,,,"fabric unit-tests are failing consistently..  
{code:java}
 panic: runtime error: invalid memory address or nil pointer dereference
vp_1          | [signal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0xb0e0f9]
vp_1 {code}
 
{code:java}
 panic: runtime error: invalid memory address or nil pointer dereference
vp_1          | [signal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0xb0e0f9]
vp_1          |
vp_1          | goroutine 32 [running]:
vp_1          | github.com/hyperledger/fabric/gossip/gossip.NewGossipService.func1(0xc4202a28c0, 0x20, 0x20, 0xc4200d3400, 0x3bc, 0x400)
vp_1          |         /opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:93 +0x79
vp_1          | github.com/hyperledger/fabric/gossip/identity.(*identityMapperImpl).delete(0xc4217fd740, 0xc4202a28c0, 0x20, 0x20, 0xc4200d3400, 0x3bc, 0x400)
vp_1          |         /opt/gopath/src/github.com/hyperledger/fabric/gossip/identity/identity.go:213 +0xbb
vp_1          | github.com/hyperledger/fabric/gossip/identity.(*identityMapperImpl).Put.func1()
vp_1          |         /opt/gopath/src/github.com/hyperledger/fabric/gossip/identity/identity.go:134 +0x60
vp_1          | created by time.goFunc
vp_1          |         /opt/go/src/time/sleep.go:170 +0x44
couchdb       | WARNING: no logs are available with the 'none' log driver
unittest_vp_1 exited with code 2{code}
Creating unittest_unit-tests_1 ... error
00:09:59.275 ERROR: for unittest_unit-tests_1  Cannot start service unit-tests: Cannot link to a non running container: /unittest_vp_1 AS /unittest_unit-tests_1/unittest_vp_1
00:09:59.290 
00:09:59.290 ERROR: for unit-tests  Cannot start service unit-tests: Cannot link to a non running container: /unittest_vp_1 AS /unittest_unit-tests_1/unittest_vp_1
00:09:59.290 Encountered errors while bringing up the project.
00:09:59.308 Makefile:174: recipe for target 'unit-test' failed

[https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-s390x/81/console]",,,,,,,,,,,,,,,,,FAB-6970,,,,,,,,,,,,,,,0|i01tpp:,,,,,,,,blw,luomin,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,13/Nov/17 8:38 PM;rameshthoomu;https://jenkins.hyperledger.org/sandbox/job/fabric-verify-s390x/10/artifact/gopath/src/github.com/hyperledger/fabric/unit-test/dockerlogfile.log,24/Nov/17 10:46 PM;mastersingh24;[~rameshthoomu] - Is this still an issue?  I don't see this happening,04/Dec/17 12:51 AM;blw;I believe this issue is a duplicate of FAB-6970,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
BYFN docs have wrong path to marble chaincode,FAB-6956,23905,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,mastersingh24,mastersingh24,09/Nov/17 11:34 PM,21/Jan/18 1:07 AM,26/Apr/18 6:49 AM,21/Jan/18 1:07 AM,,,,v1.1,,fabric-docs,,,,,,0,,,,,,,,"The BYFN docs have a section on using the marbles02 chaincode to demonstrate using CouchDB.  While it reference a location in the fabric repo, it does not actually tell you how to get the chaincode so you can install it with the CLI container.",,,,,,300,300,,0%,300,300,,,,,,,,,,,,,,,,,,,,,0|i01tk5:,,,,,,,,denyeart,mastersingh24,,,,,,,,,,,,,,,master,,,true,27/Nov/17 5:20 AM;denyeart;[~mastersingh24] From my tests on v1.1.0-preview it was ok due to volume mapping to the chaincodes: https://github.com/hyperledger/fabric-samples/blob/master/first-network/docker-compose-cli.yaml#L73 .,"03/Dec/17 1:24 PM;mastersingh24;I guess my description is wrong.  In all version of RTD, the following line is in the docs:

{code:java}
peer chaincode install -n marbles -v 1.0 -p github.com/hyperledger/fabric/examples/chaincode/go/marbles02
{code}

Looks like this is OK for the release branch samples / docs, but does not seem to be the case for master / preview unless I am missing something
",20/Jan/18 11:04 PM;mastersingh24;https://gerrit.hyperledger.org/r/17031,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Maintainers Doc formatted poorly,FAB-6948,23897,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,nickgaski,nickgaski,nickgaski,09/Nov/17 8:40 PM,17/Nov/17 8:32 PM,26/Apr/18 6:49 AM,17/Nov/17 8:32 PM,,,,,,fabric-docs,,,,,,0,Documentation,,,,,,,MAINTAINERS.rst needs to be modified to properly render in the sphinx output,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01tid:,,,,,,,,nickgaski,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot create CouchDB database for channel,FAB-6938,23877,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,chris.elder,denyeart,denyeart,09/Nov/17 1:57 PM,05/Feb/18 8:56 PM,26/Apr/18 6:49 AM,05/Feb/18 8:56 PM,,,,v1.1,,fabric-ledger,,,,,,1,,,,,,,,"{color:#444444}In rocket.chat there was a post about an error:{color}

_{color:#444444}when i am running join peer request some times it's giving Error:file_exists, Status Code:412, Reason:The database could not be created, the file already exists{color}_

 

{color:#444444}I believe this can happen if peer is retrying a create database request against CouchDB.  A prior attempt to create database came back as a timeout failure to peer, but in the meantime the database got created in CouchDB.  The next retry would get the error above.  This scenario should be handled in peer code.
{color}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzyuz:zbk,,,,,,,,chris.elder,denyeart,lishuo5263,,,,,,,,,,,,,,master,,,true,21/Dec/17 3:22 PM;chris.elder;I replicated the error by constantly decreasing the couchdb timeout and running test code.  The problem occurs since the retry logic in handleRequest does not retest if the database has been created.  ,"28/Dec/17 7:53 AM;lishuo5263;[~chris.elder] Hi, I have same error like you ,but different is When I join org1 channel ,I got this error ,and the same time I join org2 response is success,the join org1 Error detail is ""{color:red} error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: chaincode error (status: 500, message: Cannot create ledger from genesis block, due to Couch DB Error:file_exists,  Status Code:412,  Reason:The database could not be created, the file already exists.)
    at /root/mry/node_modules/grpc/src/node/src/client.js:434:17
(node:19614) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): TypeError: Cannot read property 'stack' of undefined{color} ""  I'm confuse, are you solved ?? buy the way ,I use the {color:#59afe1}fabric-samples(blance-transfer) {color}!!","28/Dec/17 2:04 PM;denyeart;[~lishuo5263] I believe you are seeing the same problem as Chris, you just are seeing the Node SDK result of the problem as well. 

[~chris.elder], If you simply add a check for database existence to the retry, there can still be a timing window problem (database may get created right after the existence check).  Therefore I think you will need to explicitly handle the 412 error.  If you get a 412, then do an existence check to ensure that the database has indeed been created, and then return success.",01/Feb/18 4:38 PM;chris.elder;https://gerrit.hyperledger.org/r/#/c/16519/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric not working with TLS enabled,FAB-6937,23871,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,muralisr,snehas,snehas,09/Nov/17 5:53 AM,13/Nov/17 12:01 PM,26/Apr/18 6:49 AM,13/Nov/17 12:01 PM,,,,,,fabric-endorser,fabric-peer,,,,,0,,,,,,,,"We are facing issue in instantiating chaincode if TLS is enabled. Getting below error in chaincode container.

*ERRO 002 Error trying to connect to local peer: x509: cannot validate certificate for 172.25.0.20 because it doesn't contain any IP SANs*

If TLS is disabled setup is working fine.

Attaching container logs , peer TLS certificate and docker-compose.yaml for reference.

Please let me know if any other information is required.",,,,,,,,,,,,,,,,,,,,,,,,09/Nov/17 5:50 AM;snehas;Container_Logs.txt;https://jira.hyperledger.org/secure/attachment/13314/Container_Logs.txt,09/Nov/17 5:50 AM;snehas;Peer_TLS_certificate.txt;https://jira.hyperledger.org/secure/attachment/13312/Peer_TLS_certificate.txt,09/Nov/17 5:50 AM;snehas;docker-compose.yaml;https://jira.hyperledger.org/secure/attachment/13313/docker-compose.yaml,10/Nov/17 10:04 AM;snehas;docker-compose_Updated.yaml;https://jira.hyperledger.org/secure/attachment/13322/docker-compose_Updated.yaml,10/Nov/17 10:12 AM;snehas;peer-base.yaml;https://jira.hyperledger.org/secure/attachment/13323/peer-base.yaml,,,,0|i01te5:,,,,,,,,lmars,mastersingh24,muralisr,snehas,yacovm,,,,,,,,,,,,,,,,"09/Nov/17 2:14 PM;yacovm;From looking at the docker compose file you provided I suspect the problem is that you're lacking CORE_PEER_ADDRESS in the file.
Notice that in the e2e_cli [we have it defined|https://github.com/hyperledger/fabric/blob/master/examples/e2e_cli/base/docker-compose-base.yaml].

Now, I think what happens is that the peer starts, sees it lacks it and therefore auto-computes it based on ip address.
Now, the TLS certificate is issued to the hostname, which is what fails the TLS handshake. 

Just define CORE_PEER_ADDRESS to be peer01.lsbgb65.cit.lsnet:7051 and you should be all set
","09/Nov/17 2:34 PM;muralisr;[~yacovm] the docker compose refers to peer-base.yaml where CORE_PEER_ADDRESS maybe defined ?
{code:java}
peer01.citi1.cit.lsnet:
 container_name: peer01.citi1.cit.lsnet
 extends:
 file: peer-base/peer-base.yaml
...
...
 service: peer-base{code}
 
[~snehas] can you provide all referred artefacts please ?","09/Nov/17 2:39 PM;yacovm;I saw that, but my guess is that this is the culprit and they didn't. 
In our peer base we only have a common configuration for all peers so it's unlikely that it would be defined there.
Of course - I could be wrong ;) ","09/Nov/17 2:53 PM;muralisr;[~yacovm] good point....

comparing e2e_cli


{code:java}
  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.org1.example.com
{code}

with 

{code:java}
peer01.citi1.cit.lsnet:
 container_name: peer01.citi1.cit.lsnet
 extends:
 file: peer-base/peer-base.yaml
...
...
 service: peer-base
{code}

 docker-compose-base.yaml COULD have been replaced with peer-base.yaml without updating peer-base with all the vars from docker-compose-base.yaml.

All the more reason to get all the artifacts.",09/Nov/17 5:28 PM;mastersingh24;Definitely missing `CORE_PEER_ADDRESS` for each peer as [~yacovm] stated above.  I've seen this issue a couple of times recently.,"10/Nov/17 10:17 AM;snehas;Thanks for your inputs !
 I modified docker-compose file to set CORE_PEER_ADDRESS of peer containers and previous error i.e. ""cannot validate certificate"" got resolved. However now I am getting below error in chaincode container logs.

2017-11-09 16:14:10.419 UTC [bccsp] initBCCSP -> DEBU 001 Initialize BCCSP [SW]
 2017-11-09 16:14:10.455 UTC [grpc] Printf -> DEBU 002 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: Error while dialing dial tcp: lookup peer01.lsbgb65.cit.lsnet on 10.44.224.198:53: no such host""; Reconnecting to \{peer01.lsbgb65.cit.lsnet:7051 <nil>}
 2017-11-09 16:14:11.421 UTC [grpc] Printf -> DEBU 003 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: Error while dialing dial tcp: lookup peer01.lsbgb65.cit.lsnet on 10.44.224.198:53: no such host""; Reconnecting to \{peer01.lsbgb65.cit.lsnet:7051 <nil>}
 2017-11-09 16:14:13.126 UTC [grpc] Printf -> DEBU 004 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: Error while dialing dial tcp: lookup peer01.lsbgb65.cit.lsnet on 10.44.224.198:53: no such host""; Reconnecting to \{peer01.lsbgb65.cit.lsnet:7051 <nil>}
 2017-11-09 16:14:13.419 UTC [shim] userChaincodeStreamGetter -> ERRO 005 Error trying to connect to local peer: context deadline exceeded
 2017-11-09 16:14:13.419 UTC [Public/PublicCC] Errorf -> ERRO 006 Error starting chaincode: Error trying to connect to local peer: context deadline exceeded

I tried adding dns_search: . as a config value for the peer. But am still getting this error.

 

Attaching updated docker-compose and peer-base file for reference.



Peer containers on docker:-

CONTAINER ID        IMAGE                                  COMMAND                  CREATED             STATUS              PORTS                                                                       NAMES

3e43405ba24e        ibmblockchain/fabric-peer:1.0.3        ""/docker-entrypoin...""   2 minutes ago       Up 2 minutes        0.0.0.0:9051->7051/tcp, 0.0.0.0:9053->7053/tcp                              peer01.deutbnk1.cit.lsnet

b8dc30ad933c        ibmblockchain/fabric-peer:1.0.3        ""/docker-entrypoin...""   2 minutes ago       Up 2 minutes        0.0.0.0:11051->7051/tcp, 0.0.0.0:11053->7053/tcp                            peer02.lsbgb65.cit.lsnet

3ce749622098        ibmblockchain/fabric-peer:1.0.3        ""/docker-entrypoin...""   2 minutes ago       Up 2 minutes        0.0.0.0:10051->7051/tcp, 0.0.0.0:10053->7053/tcp                            peer01.lsbgb65.cit.lsnet

431656288b9f        ibmblockchain/fabric-peer:1.0.3        ""/docker-entrypoin...""   2 minutes ago       Up 2 minutes        0.0.0.0:7051->7051/tcp, 0.0.0.0:7053->7053/tcp                              peer01.citibnk1.cit.lsnet

3c29d29270b3        ibmblockchain/fabric-peer:1.0.3        ""/docker-entrypoin...""   2 minutes ago       Up 2 minutes        0.0.0.0:8051->7051/tcp, 0.0.0.0:8053->7053/tcp                              peer01.goldsac1.cit.lsnet

1247c0cfff26        ibmblockchain/fabric-orderer:1.0.3     ""/docker-entrypoin...""   2 minutes ago       Up 2 minutes        0.0.0.0:6050->7050/tcp                                                      ord01.lsorder.cit.lsnet

9a985fe9c060        ibmblockchain/fabric-tools:1.0.3       ""/bin/bash -c 'sle...""   2 minutes ago       Up 2 minutes       

 

Command to instantiate chaincode

CORE_PEER_TLS_ROOTCERT_FILE=/lsops_artefacts/organizations/lsbldn_lsbgb65/peers/01.peer01.lsbgb65.cit.lsnet/msp/tlsintermediatecerts/tls.ca01.cit.lsnet.pem

CORE_PEER_MSPCONFIGPATH=/lsops_artefacts/organizations/lsbldn_lsbgb65/users/01.admin01.lsbgb65.cit.lsnet/msp   CORE_PEER_ADDRESS=peer01.lsbgb65.cit.lsnet:7051 CORE_PEER_LOCALMSPID=lsbgb65 peer chaincode instantiate -o ord01.lsorder.cit.lsnet:7050 --tls true --cafile /lsops_artefacts/organizations/lsbldn_lsorder/orderers/01.ord01.lsorder.cit.lsnet/msp/tlsintermediatecerts/tls.ca01.cit.lsnet.pem -C public -n public -v 1.0.0 -c '\{""Args"":[""init"",""60""]}'

 

Please provide your inputs.","10/Nov/17 1:01 PM;mastersingh24;You need to set *CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE* in *peer-base.yaml*
It needs to be set to the Docker network being used by Compose which will typically be the name of the folder where *docker-compose.yaml* resides plus *_default*","10/Nov/17 1:11 PM;yacovm;Looks like they have it commented out: 

{code}
      #- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=e2ecliv1opskafka_default
{code}",12/Nov/17 7:20 PM;muralisr;[~snehas] any update on this based on comments above ? Seems like a few env setup issues. Please make sure the env variables are correctly set (examples/e2e_cli/docker-compose-e2e.yaml provides a good template).,"13/Nov/17 11:55 AM;snehas;After adding CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE it worked. 
[~mastersingh24] [~yacovm] [~muralisr] : Thanks a lot for your help. 
We can close this issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[BUILD] - unable to build zookeepr docker images,FAB-6931,23864,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rameshthoomu,rameshthoomu,rameshthoomu,08/Nov/17 7:47 PM,22/Nov/17 9:50 PM,26/Apr/18 6:49 AM,09/Nov/17 4:32 PM,,,,,,fabric-build,,,,,,0,,,,,,,,"[BUILD] - unable to build zookeepr docker images

observed zookeeper reference link has been updated to newer version 3.4.10 and existing version in our zookeeper dockerfile has been removed. In result, we are getting 404 not found error message while building zookeeper docker image.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01tct:,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,release-1.0,master,,true,"08/Nov/17 8:42 PM;rameshthoomu;{code:java}
00:11:49.475 curl -fsSL http://www.apache.org/dist/zookeeper/zookeeper-3.4.9/zookeeper-3.4.9.tar.gz
00:11:49.660 curl: (22) The requested URL returned error: 404 Not Found{code}",09/Nov/17 4:32 PM;rameshthoomu;patch has been submitted and merged. able to build zookeeper images now,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ACL test - acl_happy_path has been failing in fabric-test-daily-x86_64 for last few builds.,FAB-6869,23711,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,smithbk,sambhavdutt,sambhavdutt,02/Nov/17 1:51 PM,11/Feb/18 5:48 PM,26/Apr/18 6:49 AM,11/Feb/18 5:48 PM,,,,v1.1,,fabric-quality,,,,,,0,ci_failure,,,,,,,"Observed the following errors,

acl_happy_path.ACL.test_FAB6490_Using_FCA_With_ACL_Permissioning (from pytest) 

CalledProcessError: Command '['./scripts/env.sh && ./start.sh']' returned non-zero exit status 1
self = <acl_happy_path.ACL testMethod=test_FAB6490_Using_FCA_With_ACL_Permissioning> 

output = '##### 2017-11-02 12:32:20 Created docker-compose.yml\n##### 2017-11-02 12:32:20 Creating docker containers ...\n#####..., creating the genesis block and other artifacts (./data/logs/setup.successful not found); see ./data/logs/setup.log\n'
unused_err = None, retcode = 1, cmd = ['./scripts/env.sh && ./start.sh']

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/129/testReport/acl_happy_path/ACL/test_FAB6490_Using_FCA_With_ACL_Permissioning/

*Commits*

FABRIC_COMMIT ===========> 75709bc
CA COMMIT ========> 2431f12

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01svp:,,,,,,,,denyeart,latitiah,rameshthoomu,sambhavdutt,,,,,,,,,,,,,,,,,"02/Nov/17 3:32 PM;latitiah;This failure actually is a build error. The build fails at
{code}
09:02:03 Makefile:285: recipe for target 'build/image/kafka/.dummy-x86_64-1.1.0-alpha-snapshot-75709bc' failed
09:02:03 make: *** [build/image/kafka/.dummy-x86_64-1.1.0-alpha-snapshot-75709bc] Error 18
{code}
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/129/console

This also explains why the daily system behave tests did not run. There were missing binaries, so the tests were not able to run.

","02/Nov/17 3:35 PM;latitiah;We are also seeing this same error in our ""verify"" tests:
{code}
15:14:06 Makefile:285: recipe for target 'build/image/kafka/.dummy-x86_64-1.1.0-alpha-snapshot-6cf9558' failed
15:14:06 make: *** [build/image/kafka/.dummy-x86_64-1.1.0-alpha-snapshot-6cf9558] Error 18
{code}

https://jenkins.hyperledger.org/job/fabric-test-verify-x86_64/392/console
","03/Nov/17 1:25 PM;rameshthoomu;I see below error is causing the above failure. Some times network latency causing this issue and it's exiting without downloading all the content. This is a mirror link (http://www-us.apache.org/dist/kafka/$\{KAFKA_VERSION}/kafka_$\{SCALA_VERSION}-$\{KAFKA_VERSION}.tgz"" -o kafka_$\{SCALA_VERSION}-$\{KAFKA_VERSION}.tgz) and still getting this error. 
{code:java}
00:07:44.713 Step 3/10 : RUN curl -fSL ""http://www-us.apache.org/dist/kafka/${KAFKA_VERSION}/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz"" -o kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz     && echo ""${KAFKA_DOWNLOAD_SHA256} kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz"" | sha256sum -c -     && tar xfz kafka_""$SCALA_VERSION""-""$KAFKA_VERSION"".tgz -C /opt     && mv /opt/kafka_""$SCALA_VERSION""-""$KAFKA_VERSION"" /opt/kafka     && rm kafka_""$SCALA_VERSION""-""$KAFKA_VERSION"".tgz
00:07:44.805  ---> Running in f731852061ea
00:07:45.152   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
00:07:45.152                                  Dload  Upload   Total   Spent    Left  Speed
00:07:54.511 
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
  1 35.8M    1  482k    0     0   714k      0  0:00:51 --:--:--  0:00:51  714k
  6 35.8M    6 2251k    0     0  1379k      0  0:00:26  0:00:01  0:00:25 1378k
 11 35.8M   11 4105k    0     0  1558k      0  0:00:23  0:00:02  0:00:21 1558k
 15 35.8M   15 5652k    0     0  1569k      0  0:00:23  0:00:03  0:00:20 1569k
 18 35.8M   18 6903k    0     0  1500k      0  0:00:24  0:00:04  0:00:20 1500k
 21 35.8M   21 8065k    0     0  1440k      0  0:00:25  0:00:05  0:00:20 1539k
 24 35.8M   24 9176k    0     0  1390k      0  0:00:26  0:00:06  0:00:20 1393k
 27 35.8M   27  9.9M    0     0  1341k      0  0:00:27  0:00:07  0:00:20 1225k
 29 35.8M   29 10.6M    0     0  1251k      0  0:00:29  0:00:08  0:00:21 1025k
 31 35.8M   31 11.2M    0     0  1227k      0  0:00:29  0:00:09  0:00:20  963k
00:07:54.511 curl: (18) transfer closed with 25874410 bytes remaining to read{code}
The workaround for this is to re-trigger the build.","10/Nov/17 2:27 PM;sambhavdutt;The last build is failing withe the same permissioning error again. This time, I can see that the images are built well, and all the binaries too, so not really sure what is failing here. Can you take a look when you are free.

*Build log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/149/consoleFull","15/Dec/17 6:09 PM;sambhavdutt;The acl_happy_path has been failing again due to the following error,

*test_FAB6490_Using_FCA_With_ACL_Permissioning* ,

acl_happy_path.ACL.test_FAB6490_Using_FCA_With_ACL_Permissioning (from pytest) 

Error Message
CalledProcessError: Command '['./scripts/env.sh && ./start.sh']' returned non-zero exit status 1

       if 'stdout' in kwargs:
            raise ValueError('stdout argument not allowed, it will be overridden.')
        process = Popen(stdout=PIPE, *popenargs, **kwargs)
        output, unused_err = process.communicate()
        retcode = process.poll()
        if retcode:
            cmd = kwargs.get(""args"")
            if cmd is None:
                cmd = popenargs[0]
>           raise CalledProcessError(retcode, cmd, output=output)
E           CalledProcessError: Command '['./scripts/env.sh && ./start.sh']' returned non-zero exit status 1

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/194/testReport/acl_happy_path/ACL/test_FAB6490_Using_FCA_With_ACL_Permissioning/

",08/Jan/18 3:01 AM;denyeart;[~sambhavdutt] [~smithbk] Is this problem still happening?  What is your opinion of next steps?,"08/Jan/18 4:55 PM;sambhavdutt;Hello David,

Yes, the same error is happening(build #219, the latest one) in fabric-test-daily_x86_64 now. If I look at the logs, the possible error could be that some docker image/s is not created and this error happens. ","22/Jan/18 7:30 PM;sambhavdutt;The last two builds (Build #233, #234) for fabric-test-daily-x86_64 show the same error for the ACL tests. The ACL tests passed successfully in two builds(#231 & #232). The ACL test failed in the last couple days with the Permissioning error again.","07/Feb/18 3:57 PM;sambhavdutt;The same ACL error has been consistent from several builds, it still fails in the previous build #248 with permissioning error again.


{code:java}
CalledProcessError: Command '['./scripts/env.sh && ./start.sh']' returned non-zero exit status 1
{code}


*Build Log*
https://jenkins.hyperledger.org/view/Daily/job/fabric-test-daily-x86_64/248/testReport/acl_happy_path/ACL/test_FAB6490_Using_FCA_With_ACL_Permissioning/","08/Feb/18 6:54 PM;sambhavdutt;The ACL Permissioning error is not happening from past two builds in the fabric-test-daily-x86_64. 

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/250/testReport/acl_happy_path/ACL/test_FAB6490_Using_FCA_With_ACL_Permissioning/","11/Feb/18 5:48 PM;sambhavdutt;The ACL permissioning has been successful from last 5 builds including today. This issue is no longer happening in the fabric-test-daily for now. 

*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/253/testReport/acl_happy_path/ACL/test_FAB6490_Using_FCA_With_ACL_Permissioning/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
gitignore ignore used files,FAB-6867,23709,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,baohua,baohua,baohua,02/Nov/17 8:31 AM,03/Nov/17 3:08 AM,26/Apr/18 6:49 AM,03/Nov/17 3:08 AM,,,,v1.1,,fabric-sdk-py,,,,,,0,SDK-Python,,,,,,,"The .gitignore file include the following pattern, which unnecessarily ignore our scripts files.

[Ss]cripts

Should remove this item.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01sv9:,,,,,,,,baohua,,,,,,,,,,,,,,,,master,,,true,02/Nov/17 8:33 AM;baohua;https://gerrit.hyperledger.org/r/15115,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Docs on master should point to master branch for fabric-samples,FAB-6854,23300,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,mastersingh24,mastersingh24,01/Nov/17 11:00 AM,06/Nov/17 3:23 PM,26/Apr/18 6:49 AM,06/Nov/17 3:23 PM,,,,v1.1,v1.1.0-preview,fabric-docs,,,,,,0,,,,,,,,"Since samples are inherently going to be version specific as we add functionality to fabric releases, we need to make sure that the proper samples are downloaded for a given release.

Our RTD documentation supports multiple versions based on branches and tags. So the doc in master should always point to the master branch of fabric-samples",,,,,,,,,,,,,,FAB-6753,,,,,,,,,,,,,,,,,,0|i01srx:,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,master,,,true,01/Nov/17 11:46 AM;mastersingh24;https://gerrit.hyperledger.org/r/15055,01/Nov/17 12:17 PM;mastersingh24;Need to merge this prior to cutting preview release,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
1.0.4 release shorturl is not updated in readthedocs v1.0.4 release tag,FAB-6846,23235,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rameshthoomu,rameshthoomu,rameshthoomu,31/Oct/17 11:55 PM,15/Nov/17 12:15 PM,26/Apr/18 6:49 AM,02/Nov/17 4:05 PM,,,,v1.0.5,,fabric-docs,,,,,,0,Documentation,,,,,,,"short url in readthedocs v1.0.4 release tag is not updated. [http://hyperledger-fabric.readthedocs.io/en/v1.0.4/samples.html#download-platform-specific-binaries]

I still see the below content in samples.html in readthedocs site

```curl -sSL [https://goo.gl/Q3YRTi] | bash```",RTD,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01sqd:,,,,,,,,denyeart,mastersingh24,rameshthoomu,,,,,,,,,,,,,,,,,,"01/Nov/17 1:49 AM;denyeart;[~mastersingh24] [~rameshthoomu] [~ChristopherFerris] Here's what I've found, very strange...

 

[http://hyperledger-fabric.readthedocs.io/en/v1.0.4/samples.html#download-platform-specific-binaries|http://hyperledger-fabric.readthedocs.io/en/*v1.0.4*/samples.html#download-platform-specific-binaries]

[http://hyperledger-fabric.readthedocs.io/en/latest/samples.html#download-platform-specific-binaries|http://hyperledger-fabric.readthedocs.io/en/*latest*/samples.html#download-platform-specific-binaries]

[http://hyperledger-fabric.readthedocs.io/en/stable/samples.html#download-platform-specific-binaries|http://hyperledger-fabric.readthedocs.io/en/*stable*/samples.html#download-platform-specific-binaries]

[http://hyperledger-fabric.readthedocs.io/en/master/samples.html#download-platform-specific-binaries|http://hyperledger-fabric.readthedocs.io/en/*master*/samples.html#download-platform-specific-binaries]

all point to:

[https://goo.gl/Q3YRTi] ==> [https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap-1.0.3.sh]

===================================================

[http://hyperledger-fabric.readthedocs.io/en/v1.0.3/samples.html#download-platform-specific-binaries|http://hyperledger-fabric.readthedocs.io/en/*v1.0.3*/samples.html#download-platform-specific-binaries]

points to:

[https://goo.gl/iX9dek] ==> [https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap-1.0.0.sh]

===================================================

[http://hyperledger-fabric.readthedocs.io/en/release/samples.html#download-platform-specific-binaries|http://hyperledger-fabric.readthedocs.io/en/*release*/samples.html#download-platform-specific-binaries]

points to:

[https://goo.gl/5ftp2f] ==> [https://raw.githubusercontent.com/hyperledger/fabric/release/scripts/bootstrap-1.0.4.sh]

 

 

 ",01/Nov/17 2:15 AM;rameshthoomu;I see git branches ( `master` and `release` )  are working as expected  but we are seeing issues with release tags (1.0.3 and 1.0.4).. Created issue in RTD github [https://github.com/rtfd/readthedocs.org/issues/3217],"01/Nov/17 9:19 AM;mastersingh24;This was my mistake.  There's not much we can really do about this other than updating the commit that the v1.0.4 tag points to.

I'd say we close this and for now we don't publish the v1.0.4 tag in RTD

For now, we are only publishing:
release = release branch

master = master

latest = master",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Filtered tx with no events has empty actions.,FAB-6834,23222,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,wlahti,rickr,rickr,31/Oct/17 6:25 PM,31/Oct/17 7:26 PM,26/Apr/18 6:49 AM,31/Oct/17 7:26 PM,v1.1,,,WON'T FIX,,fabric-peer,,,,,,0,,,,,,,,"I have on instantiate chaincode that set some values but has no events. What I get is a filteredTx that has a collection of 1 filteredAction.  The FilteredAction is empty .. serialize it to bytes its size is  zero.  This produce when you get the ccEvent as zero byte and not null ccEvent. 

What I'd expect is a FilteredAction which has btyes with the ccEvent set to null.

java debug code : 
```
System.out.println(event);
                    System.out.println();
                    final PeerEvents.FilteredTransaction filteredTx = event.getFilteredBlock().getFilteredTx(0);
                    System.out.println();
                    System.out.println(""filteredTx:"" + filteredTx);

                    final PeerEvents.FilteredAction filteredAction = filteredTx.getFilteredAction(0);

                    System.out.println();
                    System.out.println(""filteredAction:"" + filteredAction);
                    System.out.println();
                    System.out.println(""filteredAction size:"" + filteredAction.toByteString().size());

                    final ChaincodeEventOuterClass.ChaincodeEvent ccEvent = filteredAction.getCcEvent();
                    System.out.println();
                    System.out.println(ccEvent);
                    System.out.println();
```
filtered_block {
  channel_id: ""foo""
  number: 1
  type: ENDORSER_TRANSACTION
  filtered_tx {
    txid: ""2ba694f6ec2cd1a664a01a7790c5e39091189ef87a16cb9b0311079f75da6fff""
    filtered_action {
    }
  }
}
channel_id: ""foo""



filteredTx:txid: ""2ba694f6ec2cd1a664a01a7790c5e39091189ef87a16cb9b0311079f75da6fff""
filtered_action {
}


filteredAction:

filteredAction size:0",git fetch ssh://rickr@gerrit.hyperledger.org:29418/fabric refs/changes/89/14889/4 && git checkout FETCH_HEAD,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01snp:,,,,,,,,rickr,,,,,,,,,,,,,,,,,,,,31/Oct/17 7:26 PM;rickr;Found out  I needed to use hasCcEvent()  :(,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"current viper does not correctly parse key names with dots, i.e. v1.1",FAB-6803,22939,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,guoger,guoger,guoger,30/Oct/17 3:54 PM,08/Nov/17 2:17 PM,26/Apr/18 6:49 AM,08/Nov/17 2:17 PM,v1.1.0-preview,,,v1.1,v1.1.0-preview,fabric-tools,,,,,,0,,,,,,,,"The viper pkg currently vendor'd in Fabric does not work well with key name with dots. When such key is assembled into a path, dot serves as delimiter, and leads to 1-level-deeper, incorrect searching path, e.g. {{foo.bar.v1.1}} would search for:
{code}
foo:
    bar:
        v1:
            1:
{code}
instead of
{code}
foo:
    bar:
        v1.1:
{code}
Latest viper addresses this issue by checking if {{v1.1}} already exists at shallower level.

I see two options here:
- Upgrade Viper
    pro: fundamentally solving the problem
    con: new viper stores keys in lowercases. Some modifications needed to accommodate it, e.g. using {{twoorgsgenesis}} instead of {{TwoOrgsGenesis}} when specifying profile.
- Use {{V1_1}} instead of {{V1.1}} as key
    pro: simple to fix
    con: some other side effects?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-6122,0|i01set:,,,,,,,,guoger,jyellick,kchristidis,mastersingh24,,,,,,,,,,,,,master,,,true,30/Oct/17 4:00 PM;guoger;related to https://jira.hyperledger.org/browse/FAB-6747,"02/Nov/17 1:54 AM;guoger;[~jyellick] [~kchristidis] folks, lets get this fixed asap so that people could actually try v1.1-preview, let me know which option you prefer.","02/Nov/17 11:13 AM;kchristidis;Jay, can you identify what remains to be addressed by FAB-6747?","03/Nov/17 10:31 AM;guoger;[~kchristidis] That only addresses samples, whereas problems are still buried in the actual code. Basically we won't be able to turn on V1.1 features based on current code.

 ","03/Nov/17 3:09 PM;jyellick;> con: new viper stores keys in lowercases. Some modifications needed to accommodate it, e.g. using twoorgsgenesis instead of TwoOrgsGenesis when specifying profile.

Couldn't we fix this simply by taking in the string passed by the user and modifying it to lower case?","04/Nov/17 4:18 AM;guoger;[~jyellick] yep, that's probably less intrusive and easier","04/Nov/17 1:16 PM;kchristidis;Given that in the samples we've switched to using the underscore, option 2 strikes me as the appropriate thing to do here.","05/Nov/17 9:11 AM;mastersingh24;I'm with [~kchristidis]  
 - Use {{V1_1}} instead of {{V1.1}} as key",07/Nov/17 4:00 PM;guoger;review: https://gerrit.hyperledger.org/r/15249,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Rebuild block storge index not possible with multiple block storage files,FAB-6779,22869,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,manish-sethi,manish-sethi,manish-sethi,26/Oct/17 9:25 PM,19/Dec/17 3:22 AM,26/Apr/18 6:49 AM,31/Oct/17 9:28 AM,,,,v1.0.4,v1.1,fabric-ledger,,,,,,1,,,,,,,,"Allow complete drop of block store index and rebuild which would be helpful if the index gets corrupted for some reason.

Most of the code is in place but this needs to change the way block files info is maintained.",,,,,,,,,,,,,,,,,,,FAB-6872,FAB-6853,,,,,,,,,,,,0|i01s1h:,,,,,,,,denyeart,holocron,manish-sethi,,,,,,,,,,,,,,release-1.0,master,,true,"27/Oct/17 12:14 AM;denyeart;I will change to bug since the 1.0 design was to allow rebuild, this will also allow us to get a fix into 1.0.4.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip Service fails in fabric-test-daily-x86_64 as all peers in the organization disconnect,FAB-6774,22860,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,AdnanChoudhury,sambhavdutt,sambhavdutt,26/Oct/17 6:07 PM,14/Feb/18 7:48 PM,26/Apr/18 6:49 AM,14/Feb/18 7:45 PM,,,,v1.1,,fabric-quality,,,,,,0,ci_failure,,,,,,,"Observed the errors below in for Gossip service test,

gossip.Gossip Service.[FAB-4676] [FAB-4677] [FAB-4678] ""All peers in an organization go down via disconnect, then catch up after connect"". -- @1.3 

Assertion Failed as Expected response was incorrect,
Failing step: Then a user receives a success response of 980 ... failed in 0.000s
Location: gossip.feature:155

Assertion Failed: Expected response was 980; received Query Result: 1000

*Build Log*
https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/231/testReport/gossip/Gossip%20Service/_FAB_4676___FAB_4677___FAB_4678___All_peers_in_an_organization_go_down_via_disconnect__then_catch_up_after_connect_______1_3_/

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01rzp:,,,,,,,,AdnanChoudhury,sambhavdutt,,,,,,,,,,,,,,,master,,,true,16/Nov/17 2:54 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/15521/,16/Nov/17 2:54 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/15449/,"26/Dec/17 5:29 PM;sambhavdutt;Gossip Service has been failing from last 5 builds for *fabric-test-daily-x86_64* due to wrong deployment length

gossip.Gossip Service.[FAB-4683] [FAB-4684] [FAB-4685] In leader-selection setup, leader peer goes down by disconnect for at least 90 seconds, comes back up and catches up eventually. -- @1.6 

Error Message:
Expected response was 900; received Error occurred [u'docker exec peer0.org2.exa...

When a user queries on the chaincode named ""mycc"" with args [""query"",""a""] on ""peer0.org2.example.com"" ... passed in 306.356s
    Then a user receives a success response of 900 from ""peer0.org2.example.com"" ... failed in 0.000s


*Build Log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/206/testReport/gossip/Gossip%20Service/_FAB_4683___FAB_4684___FAB_4685__In_leader_selection_setup__leader_peer_goes_down_by_disconnect_for_at_least_90_seconds__comes_back_up_and_catches_up_eventually______1_6_/","14/Feb/18 7:44 PM;sambhavdutt;The Gossip(behave) tests are now failing due to timeout error. 


{code:java}
Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: timeout expired while starting chaincode
{code}


[FAB-7971|https://jira.hyperledger.org/browse/FAB-7971] is in progress for these timeout errors failing  other tests too",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-unit tests are failing with timeout errors,FAB-6762,22840,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,wlahti,rameshthoomu,rameshthoomu,25/Oct/17 6:04 PM,26/Oct/17 4:34 PM,26/Apr/18 6:49 AM,26/Oct/17 4:34 PM,v1.0.3,,,v1.0.4,,fabric-ci,fabric-peer,,,,,0,,,,,,,,"Observed fabric-unit tests are failing with inconsistent timeout errors. It looks like master branch is broken. Also, I could see most of the verify jobs are failing

[https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-z/14122/consoleFull]

[https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-x86_64/2772/console]

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01rvh:,,,,,,,,muralisr,rameshthoomu,wlahti,,,,,,,,,,,,,,master,,,true,25/Oct/17 6:12 PM;wlahti;The likely culprit: FAB-5591. Investigating further.,25/Oct/17 7:58 PM;muralisr;now that we are doing startup timeouts properly the value of timeout _does_ matter. We need to bump up the time out in the chaincode tests to make sure they are sufficiently large to take care of startup timeouts (esp. in those tests that actually create docker images).,25/Oct/17 8:48 PM;wlahti;Hopefully this does the trick: https://gerrit.hyperledger.org/r/#/c/14857/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-test: Gossip test in behave failure in CI,FAB-6757,22835,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,25/Oct/17 3:27 PM,09/Nov/17 3:22 PM,26/Apr/18 6:49 AM,09/Nov/17 3:22 PM,,,,,,fabric-quality,,,,,,0,ci_failure,quality,,,,,,"gossip.Gossip Service.[FAB-4667] [FAB-4671] [FAB-4672] A leader peer goes down by pause, comes back up *after* another leader is elected, catches up -- @1.2
{code:java}
 
Error Message
u'org1'
Stacktrace
Failing step: When a user invokes on the chaincode named ""mycc"" with args [""invoke"",""a"",""b"",""10""] on the initial non-leader peer of ""org1"" ... failed in 1.567s
Location: gossip.feature:66
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/dist-packages/behave/model.py"", line 1456, in run
    match.run(runner.context)
  File ""/usr/local/lib/python2.7/dist-packages/behave/model.py"", line 1903, in run
    self.func(context, *args, **kwargs)
  File ""steps/endorser_impl.py"", line 359, in step_impl
    invokes_impl(context, 1, context.interface.TEST_CHANNEL_ID, name, args, context.interface.get_initial_non_leader(context, org))
  File ""/w/workspace/fabric-test-daily-x86_64/gopath/src/github.com/hyperledger/fabric-test/feature/steps/endorser_util.py"", line 105, in get_initial_non_leader
    return context.initial_non_leader[org]
KeyError: u'org1'{code}
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01rud:,,,,,,,,AdnanChoudhury,sambhavdutt,scottz,,,,,,,,,,,,,,master,,,true,25/Oct/17 3:54 PM;AdnanChoudhury;https://gerrit.hyperledger.org/r/#/c/14845/,"25/Oct/17 7:58 PM;scottz;Before we close this issue, let's make sure it passes the CI Daily test suite. It looks like the code fix was needed, but I am not sure yet if it is the entire fix needed.","27/Oct/17 6:18 PM;sambhavdutt;The same test fails with the following error now
*Error: No gossip-non-leader found by looking at the logs, for org1*","31/Oct/17 2:12 PM;sambhavdutt;*Observed the following error in the last build - 121*

{color:#8eb021}Failing step: Then a user receives a success response of 920 from ""peer0.org2.example.com"" ... failed in 0.000s
Location: gossip.feature:179
Assertion Failed: Expected response was 920; received Error occurred [u'docker exec peer0.org2.example.com /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/6d4f5694bded11e7ac23fa163e02a4e9/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp

CORE_PEER_LOCALMSPID=org2.example.com CORE_PEER_ID=peer0.org2.example.com
When ""peer1.org2.example.com"" comes back up by doing a connect ... passed in 3.077s
And I wait ""40"" seconds ... passed in 40.038s
When a user queries on the chaincode named ""mycc"" with args [""query"",""a""] on ""peer0.org2.example.com"" ... passed in 303.661s
Then a user receives a success response of 920 from ""peer0.org2.example.com"" ... failed in 0.000s
{color}

*Build log*

https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/121/testReport/gossip/Gossip%20Service/_FAB_4676___FAB_4677___FAB_4678___All_peers_in_an_organization_go_down_via_disconnect__then_catch_up_after_connect______1_3_/

*Commit Message*

FABRIC_COMMIT ===========> b8bc66c
CA COMMIT ========> 5b815c8
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer panics when hash of pvt data doesn't match hash in public data,FAB-6744,22816,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,C0rWin,bstasyszyn,bstasyszyn,24/Oct/17 2:50 PM,26/Oct/17 11:08 AM,26/Apr/18 6:49 AM,26/Oct/17 11:08 AM,,,,,,fabric-gossip,,,,,,0,,,,,,,,"Steps to reproduce:
-	Create a chaincode that invokes PutPrivateData on a collection, key, and random value (generated inside the chaincode)
-	Invoke the chaincode on at least two peers (the random value will be different for each of the endorsers)

One (or both) of the peers panics:

peer0.example.com     | 2017-10-24 13:49:34.730 UTC [gossip/state] commitBlock -> ERRO 07a Got error while committing(Hash of pvt data for collection [mapcc6:col3] does not match with the corresponding hash in the public data. 
peer0.example.com     | 					public hash = [[]byte{0xdc, 0xda, 0xe3, 0xac, 0xb8, 0x97, 0xb3, 0x68, 0x1e, 0x96, 0xc9, 0x15, 0x4e, 0xfa, 0x6c, 0x83, 0x99, 0x85, 0x43, 0x84, 0x2d, 0x49, 0x17, 0xa8, 0x9e, 0xeb, 0xc, 0xdd, 0xdb, 0x90, 0x7d, 0xf8}], pvt data hash = [[]byte{0xd3, 0x9e, 0xe0, 0xe1, 0xc9, 0x5d, 0x94, 0xc0, 0x31, 0xc4, 0x30, 0x9f, 0x8d, 0xed, 0xbb, 0x40, 0xb7, 0xb6, 0x8c, 0xc4, 0xb1, 0x5f, 0xa1, 0xb6, 0x26, 0x9f, 0x80, 0x22, 0xfe, 0xcd, 0x7c, 0xcf}]
peer0.example.com     | commit failed
peer0.example.com     | github.com/hyperledger/fabric/gossip/privdata.(*coordinator).StoreBlock
peer0.example.com     | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:209
peer0.example.com     | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock
peer0.example.com     | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:773
peer0.example.com     | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads
peer0.example.com     | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:557
peer0.example.com     | runtime.goexit
peer0.example.com     | 	/opt/go/src/runtime/asm_amd64.s:2337
peer0.example.com     | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock
peer0.example.com     | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:774
peer0.example.com     | github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads
peer0.example.com     | 	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:557
peer0.example.com     | runtime.goexit
peer0.example.com     | 	/opt/go/src/runtime/asm_amd64.s:2337)
",,,,,,,,,,,,,,,,,,,,,,,,24/Oct/17 8:20 PM;bstasyszyn;peerlogs.log;https://jira.hyperledger.org/secure/attachment/12813/peerlogs.log,,,,,,,FAB-1151,0|i01rqt:,,,,,,,,bstasyszyn,C0rWin,,,,,,,,,,,,,,,master,,,true,25/Oct/17 10:06 PM;C0rWin;https://gerrit.hyperledger.org/r/#/c/14865/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
behave tests using enccc_example chaincode to test encryption failing ,FAB-6714,22732,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,latitiah,Nishi,Nishi,20/Oct/17 7:51 PM,01/Nov/17 6:00 PM,26/Apr/18 6:49 AM,01/Nov/17 6:00 PM,v1.1,,,,,fabric-crypto,,,,,,0,ci_failure,,,,,,,"On fabric commit level *e4cb863f253d89ec223f5406f2da7126e6a3b63b*

Encryption tests using behave are failing @GET with the following error message:
{code:java}
Assertion Failed: Expected response was 123-45-6789; received Error occurred [u'docker exec peer0.org1.example.com /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/5af7ef2eb5c811e78f0854ee7539463f/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode query --name mycc --ctor '{\""Args\"": [\""ENC\"",\""GET\"", \""Social-Security-Number\""]}' --channelID behavesystest --transient \""{\\\""ENCKEY\\\"":\\\""i1jrKDxdmxuGNuonaOQmtlDVGAm9DZ5kCQgX7P1/jQQ=\\\""}\"" ""']: 2017-10-20 18:57:18.430 UTC [gossip/privdata] 0 -> WARN 001 Configuration key peer.gossip.pvtData.transientstoreMaxBlockRetention isn't set, defaulting to 1000
2017-10-20 18:57:18.454 UTC [msp] GetLocalMSP -> DEBU 002 Returning existing local MSP
2017-10-20 18:57:18.454 UTC [msp] GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity
2017-10-20 18:57:18.454 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default escc
2017-10-20 18:57:18.454 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 005 Using default vscc
2017-10-20 18:57:18.454 UTC [chaincodeCmd] getChaincodeSpec -> DEBU 006 java chaincode enabled
2017-10-20 18:57:18.455 UTC [msp/identity] Sign -> DEBU 007 Sign: plaintext: 0AB4070A6B08031A0C088E8EA9CF0510...50D51809BD0D9E64090817ECFD7F8D04 
2017-10-20 18:57:18.455 UTC [msp/identity] Sign -> DEBU 008 Sign: digest: 64CA5B606916DB092A156532A77C48A01ADD9A52C532CD66792CB4AFE2A213A1 
Error: Error endorsing query: rpc error: code = Unknown desc = chaincode error (status: 500, message: encshim.GetState failed, err GetState error, stub.GetState returned nil value for key Social-Security-Number) - <nil>
Usage:
peer chaincode query [flags]

Flags:
-C, --channelID string The channel on which this command should be executed (default ""testchainid"")
-c, --ctor string Constructor message for the chaincode in JSON format (default ""{}"")
-x, --hex If true, output the query value byte array in hexadecimal. Incompatible with --raw
-n, --name string Name of the chaincode
-r, --raw If true, output the query value as raw bytes, otherwise format as a printable string
-t, --tid string Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64

Global Flags:
--cafile string Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
--logging-level string Default logging level and overrides, see core.yaml for full syntax
-o, --orderer string Ordering service endpoint
--test.coverprofile string Done (default ""coverage.cov"")
--tls Use TLS when communicating with the orderer endpoint
--transient string Transient map of arguments in JSON encoding
-v, --version Display current version of fabric peer server


{code}
Please find encryption-6439.feature attached.

This could be related to commit *f754f40d3165571cecf5fce43c8a034559983311*
 Merge ""-FAB-5080- Chaincode API Support for PrivateData""

 As tests failed on commit level:  *f754f40d3165571cecf5fce43c8a034559983311*

And since encryption tests ran successfully in behave on commit level *5ce16659ee78788f0b65536d3bd8f59e036989c3 (one commit before -FAB-5080-)*",,,,,,,,,,,,,,,,,,,,,,,,25/Oct/17 4:09 PM;Nishi;Error message during chaincode instantiation while running behave -n 6439;https://jira.hyperledger.org/secure/attachment/12821/Error+message+during+chaincode+instantiation+while+running+behave+-n+6439,20/Oct/17 7:24 PM;Nishi;encryption-6439.feature;https://jira.hyperledger.org/secure/attachment/12713/encryption-6439.feature,,,,,,,0|i01rid:,,,,,,,,denyeart,Nishi,,,,,,,,,,,,,,,master,,,true,"25/Oct/17 2:44 AM;denyeart;In my local environment I am on commit after *f754f40d3165571cecf5fce43c8a034559983311*.

I tested enccc manually, and it is successful.  I am not able to reproduce this issue.

 [~Nishi]  please attempt manually and compare results with the behave test.  Here is the manual test that I performed:

 
peer chaincode install -n enccc -p [github.com/hyperledger/fabric/examples/chaincode/go/enccc_example|http://github.com/hyperledger/fabric/examples/chaincode/go/marbles02] -v 1{color:#000000} {color}
{color:#000000}peer chaincode instantiate -C myc -n enccc -c '\{""Args"":[""init""]}' -v 1 -o 127.0.0.1:7050
{color}
ENCKEY=`openssl rand 32 -base64`
peer chaincode invoke -n enccc -C myc -c '\{""Args"":[""ENC"",""PUT"",""Social-Security-Number"",""123-45-6789""]}' --transient ""\{\""ENCKEY\"":\""$ENCKEY\""}""
peer chaincode query -n enccc -C myc -c '\{""Args"":[""ENC"",""GET"",""Social-Security-Number""]}' --transient ""\{\""ENCKEY\"":\""$ENCKEY\""}""
 
It returns correct result:
 
Query Result: 123-45-6789","25/Oct/17 5:24 PM;Nishi;On latest fabric commit level: 6662e4e7d3119b7b1cbfc4d5b89ef6e8f6392f3d

Tested encryption chaincode successfully using CLI commands.

 

On fabric-test commit level: 6f5a0c86240aada64c02d95b5fdb770edf5c3394 ""behave -n 6439"" from chaincode.feature failed.

It failed during chaincode instantiation during deploy..

After adding wait time of ""10"" seconds after deploy in test, chaincode got instantiated and tests ran successfully.

Can you please take a look why I had to add extra wait time for chaincode deployment to succeed?

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Difficult to get the first channel defined in the CCP,FAB-6709,22726,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,harrisob@us.ibm.com,davidkel,davidkel,20/Oct/17 4:43 PM,09/Nov/17 9:19 PM,26/Apr/18 6:49 AM,09/Nov/17 9:19 PM,v1.1,,,,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"For composer we are only interested in a single channel at the moment so want to work with the first channel definition in the CCP. However this doesn't appear possible to do and I had to access internal structures in order to do it. The code I have to do this is, but unsure of the order the channel names would be returned.
{code}
        let channelNames = Object.keys(client._network_config._network_config.channels);
        const channel = client.getChannel(channelNames[0]);
{code}
It would be handy to have an array of all the channel names defined in declaration order.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01rh9:,,,,,,,,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,master,,,true,24/Oct/17 10:33 PM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/14825/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TypeError: Cannot read property 'verify' of undefined,FAB-6706,22719,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,harrisob@us.ibm.com,davidkel,davidkel,20/Oct/17 2:09 PM,27/Oct/17 1:48 PM,26/Apr/18 6:49 AM,27/Oct/17 1:48 PM,v1.1,,,v1.1,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"In the getCertificateAuthority call of the client
{code}
 tls_options = {
	 trustedRoots: [ca.getTlsCACerts()], //TODO handle non existent
	 verify: ca.getConnectionOptions().verify //TODO handle non existent
 };
{code}
the line fails because I haven't specified the verify option. However verify is only required for tls connections and is also optional It shouldn't be mandatory.
",,,,,,,,,,,,,,FAB-6753,,,,,,,,,,,,,,,,,,0|i01rfx:,,,,,,,,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,master,,,true,23/Oct/17 5:29 PM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/14777/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
node.js chaincode instantiation fails ,FAB-6693,22704,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,Ratnakar,Ratnakar,19/Oct/17 6:48 PM,20/Oct/17 6:52 PM,26/Apr/18 6:49 AM,20/Oct/17 6:52 PM,,,,,,fabric-chaincode-node,,,,,,0,fabric-chaincode-node,quality,,,,,,"Unable to instantiate chaincode on fabric-chaincode-node branch.

commit level: *1e179cc5ffe07e49db6659f992138a8cb018c72c*

 

Fabric commit Level: *f754f40d3165571cecf5fce43c8a034559983311* 

Steps to reproduce the issue:
 * Clone fabric-chaincode-node repo.
 * Install dependent node modules and update the protos with the following commands
{code:java}
npm install && gulp protos
{code}

 * Run the e2e Integration test.
{code:java}
DEVMODE=false gulp channel-init
gulp test-e2e
{code}

After the above step, it fails with the following error while instantiating the chaincode.
{code:java}
Error: Error endorsing chaincode: rpc error: code = Unknown desc = transaction returned with failure: [a45b5515]Calling chaincode Init() returned error response [TypeError: _serviceProto.PutStateInfo is not a constructor]. Sending ERROR message back to peer 
{code}
 

 ",,,,,,,,,,,,,,,,,FAB-6689,,,,,,,,,,,,,,,0|i01rcl:,,,,,,,,denyeart,Ratnakar,,,,,,,,,,,,,,,,,,,"19/Oct/17 6:56 PM;Ratnakar;There is an issue https://jira.hyperledger.org/browse/FAB-6689 already created by [~latitiah], where query on node chaincode is failing due to the similar root cause.

Changes need to be incorporated in  fabric-chaincode-node , as per the new protobuf changes made in fabric master.

 

 ",20/Oct/17 6:52 PM;denyeart;Let's track the problem in FAB-6689.  I've added comments over there. I think we can therefore close this one.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-test CI daily tests failing due to FAB-6271,FAB-6678,22488,Bug,In Progress,FAB,Fabric,software,ChristopherFerris,,,High,,scottz,scottz,scottz,18/Oct/17 6:53 PM,20/Feb/18 11:10 PM,26/Apr/18 6:49 AM,,v1.0.3,,,v1.2,,fabric-quality,,,,,,0,ci_failure,,,,,,,"chaincodes.feature tests for FAB-5790 parts 3 and 4, have been failing in the fabric-test CI daily runs for many days. We need to disable them for now, and keep this open so we can reuse this to reenable them later after FAB-6271 is fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01r7x:,,,,,,,,scottz,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-test CI daily tests failing due to FAB-6387,FAB-6677,22487,Bug,In Progress,FAB,Fabric,software,ChristopherFerris,,,High,,scottz,scottz,scottz,18/Oct/17 6:51 PM,20/Feb/18 11:11 PM,26/Apr/18 6:49 AM,,v1.0.3,,,v1.2,,fabric-quality,,,,,,0,ci_failure,,,,,,,"chaincodes.feature tests for -FAB-4720-,-FAB-4721-,-FAB-4722- have been failing in the fabric-test CI daily runs for many days. We need to disable them for now, and keep this open so we can reuse this to reenable them later after FAB-6387 is fixed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01r7p:,,,,,,,,scottz,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Transactions with private data but no public data do not go through VSCC validation,FAB-6671,22481,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,ales,denyeart,denyeart,18/Oct/17 1:45 PM,21/Dec/17 10:51 PM,26/Apr/18 6:49 AM,21/Dec/17 10:51 PM,,,,v1.1,,fabric-peer,,,,,,0,,,,,,,,VSCC validation applies only if there are public writes in a transaction.  Need to also perform VSCC validation if there are only private writes in a transaction (hashed rwset).,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1151,0|i01r6d:,,,,,,,,ales,denyeart,jeffgarratt,,,,,,,,,,,,,,master,,,true,26/Oct/17 7:05 PM;jeffgarratt;Let me know if any issues with this [~ales].  Assuming it is under control.,"27/Oct/17 2:40 PM;ales;Yup, I plan to drop it today or over the weekend","01/Nov/17 2:39 PM;jeffgarratt;Hey [~ales], can you link the CR when ready and close if good to go?

Thanks so much!","01/Nov/17 3:19 PM;ales;Hey Jeff! Sure thing! Here it is: https://gerrit.hyperledger.org/r/#/c/14961/

It's under review since Mon. Any feedback is welcome!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need to determine the ca name of a FabricCAClientImpl object.,FAB-6658,22468,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,harrisob@us.ibm.com,davidkel,davidkel,17/Oct/17 3:49 PM,24/Oct/17 11:29 AM,26/Apr/18 6:49 AM,24/Oct/17 11:29 AM,v1.1,,,v1.1,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"The node sdk creates and returns a FabricCAClientImpl object using the Client.getCertificateAuthority() call, handling the processing of the CCP (Common Connection Profile if I haven't mentioned this earlier). 
However I have a need to get the ca name of this CA Server and don't want to process the CCP to try to determine it, it should be something I can get from the returned instance of the client.getCertificateAuthority() call. 
Currently I have to do 
{code}
let caName = caClient._fabricCAClient._caName;
{code}
in order to determine the ca name from the returned object",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01r3h:,,,,,,,,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,master,,,true,17/Oct/17 6:41 PM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/14609/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Determining where to install chaincode to from a Common Connection Profile,FAB-6656,22466,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,harrisob@us.ibm.com,davidkel,davidkel,17/Oct/17 3:43 PM,24/Oct/17 11:30 AM,26/Apr/18 6:49 AM,24/Oct/17 11:30 AM,v1.1,,,v1.1,,fabric-sdk-node,,,,,,0,,,,,,,,"A request to install chaincode looks like this
{code}
                const request = {
                    chaincodePath: chaincodePath,
                    chaincodeVersion: runtimePackageJSON.version,
                    chaincodeId: businessNetworkIdentifier,
                    txId: txId,
                    targets: array of peers
                };
{code}
I was expecting not to have to supply targets property and that the node sdk would do it for me. However that didn't work so I tried to implement my own version as follows
{code}
    static getInstallPeers(client) {
        let installPeers = [];
        let orgConfig = HLFConnection.getOrgConfig(client);
        if (orgConfig) {
            let peers = orgConfig.getPeers();
            peers.forEach((peer) => {
                //TODO: Need to be able to determine if it is a 'endorsingPeer' or a 'chaincodeQuery' peer
                // but can't at the moment, so will just all them all.
                installPeers.push(peer);
            });
        }
        return installPeers;
    }
{code}
The plan being was to look for peers within my client defined organisation that had the flags 'endorsingPeer' and 'chaincodeQuery' set to true or peers that didn't declare those optional entries (ie explicitly exclude ones set to false). These are defined in the CCP and are in my yaml definition but it looks like it isn't processed by the CCP processor of the node sdk. 
As a start it would be good to have those entries processed but ideally the node sdk should make perform the decision processing of which peers to install to based on information in the CCP. (Snippet of CCP I had defined)
{code}
channels:
  composerchannel:
    orderers:
      - orderer.example.com
    peers:
      peer0.org1.example.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true

organizations:
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01r31:,,,,,,,,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,master,,,true,"18/Oct/17 5:02 PM;harrisob@us.ibm.com;The install of chain code is not for a specific channel, just for a peer. The chain code could then be instantiated on any channel. The connection profile tags a peer by the role that peer will have within the channel. So at chain code install time we do not have a channel to look at to find a peers role.

I guess we could default to the first channel found ?","18/Oct/17 8:46 PM;davidkel;Ahh, that's true. I only considered a single channel per CCP as this is what Composer currently does. 
That makes me think that an install should be able to select the channel as the installation of chaincode is usually specific to the channel it is going to be running on. It could also take an array as well if you want to install the chaincode onto multiple channels. If no channel is given, then it's debatable whether an error should be thrown or the first channel in the CCP is chosen.","18/Oct/17 8:54 PM;harrisob@us.ibm.com;How about on install of chain code I build a list of all the peers in the current clients assigned organization ?

On instantiate, since this is on a channel, will build a list based on the channel's peers that are endorsers or chain code query and in the current organization?","18/Oct/17 9:08 PM;davidkel;Another thought would be that if no channel(s) is/are provided, then the caller should explicitly provide the list of peers to install the chaincode on as part of the request targets property.","18/Oct/17 9:14 PM;davidkel;Sorry Bret, I didn't see your comment until after I posted mine. For install it probably isn't too big a deal just to install the chaincode on every peer in your organisation. 
For instantiate in Fabric 1.0 you only need to send instantiate to 1 peer in the channel that is either an endorser or chaincode query. But I gather there may be some changes coming in 1.1 that might affect this ? ","18/Oct/17 9:32 PM;harrisob@us.ibm.com;Oh right I forgot about those changes coming, the whole instantiate is going to change... I think it is going to be more like the create channel, with all the signatures. So for now I will not make any changes to the channel instantiate.

I guess I could look for channel id in the request object and if that is there get the peers from that or default to all peers in the org",19/Oct/17 7:00 PM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/14699/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
EventHub construction should not check for a user context.,FAB-6655,22465,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,harrisob@us.ibm.com,davidkel,davidkel,17/Oct/17 3:36 PM,24/Oct/17 11:30 AM,26/Apr/18 6:49 AM,24/Oct/17 11:30 AM,v1.1,,,v1.1,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,Currently when you construct an EventHub Object it checks then to see if there is a user context on the client. The check should be moved to the connect method as it seems reasonable to construct EventHub objects before you have a user context and the connect the event hubs once a user context has been established.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01r2t:,,,,,,,,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,master,,,true,17/Oct/17 7:01 PM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/14611/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Need access to the client configuration of a common connection profile,FAB-6652,22462,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,harrisob@us.ibm.com,davidkel,davidkel,17/Oct/17 3:23 PM,24/Oct/17 11:31 AM,26/Apr/18 6:49 AM,24/Oct/17 11:31 AM,v1.1,,,v1.1,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"I have needed to get access to the client configuration of the common connection profile. Specifically I need to get the organisation information but would also want to access the wallet field in the future. For now my code to get access to the organisation is as follows
{code}
    static getOrgConfig(client) {
        let networkConfig = client._network_config;
        let clientConfig = networkConfig.getClientConfig();
        let orgConfig;
        if (clientConfig && clientConfig.organization) {
            orgConfig = networkConfig.getOrganization(clientConfig.organization);
        }
        return orgConfig;
    }
{code}
The reason I need access to an organisation is because for the following (raised as separate JIRAs)
1. Access to the MSPid of the client organisation required to create a user instance 
2. Get the peers for an organisation so I can register the event hubs
3. try to determine the list of peers to install chaincode to 
But I still would need access to the wallet property (in the near future) of the ClientConfig so need the ability to get to the client config.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01r25:,,,,,,,,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,master,,,true,18/Oct/17 3:30 PM;harrisob@us.ibm.com;[https://gerrit.hyperledger.org/r/#/c/14641/],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to join peer from different machine than orderer,FAB-6639,22447,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,hl-admin,tejasborawake,tejasborawake,17/Oct/17 5:31 AM,26/Oct/17 5:41 AM,26/Apr/18 6:49 AM,25/Oct/17 3:24 PM,,,,v1.0.0,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"Hi,

We are trying to create multi-machine setup of Fabric Node-SDK using 1.0.0 version.
We are able to start orderer,CAs and all peers of both ORG1 and ORG2.
We are able to register token and create channel, but when we try to connect ORG1 or ORG2 to channel, we get below error. Could you please help us in resolving this error?:


{color:#d04437}_*error: [Orderer.js]: sendDeliver - on error code 14: ""Error: Connect Failed\n    at ClientDuplexStream._emitStatusIfDone (/home/dev/work/src/github.com/hyperledger/mortgagelending/dlt-service/mortgage/node_modules/grpc/src/node/src/client.js:201:19)\n    at ClientDuplexStream._readsDone (/home/dev/work/src/github.com/hyperledger/mortgagelending/dlt-service/mortgage/node_modules/grpc/src/node/src/client.js:169:8)\n    at readCallback (/home/dev/work/src/github.com/hyperledger/mortgagelending/dlt-service/mortgage/node_modules/grpc/src/node/src/client.js:229:12)""
[2017-10-17 10:49:53.827] [ERROR] Join-Channel - Error: SERVICE_UNAVAILABLE
    at ClientDuplexStream.<anonymous> (/home/dev/work/src/github.com/hyperledger/mortgagelending/dlt-service/mortgage/node_modules/fabric-client/lib/Orderer.js:234:23)
    at emitOne (events.js:96:13)
    at ClientDuplexStream.emit (events.js:188:7)
    at ClientDuplexStream._emitStatusIfDone (/home/dev/work/src/github.com/hyperledger/mortgagelending/dlt-service/mortgage/node_modules/grpc/src/node/src/client.js:204:12)
    at ClientDuplexStream._readsDone (/home/dev/work/src/github.com/hyperledger/mortgagelending/dlt-service/mortgage/node_modules/grpc/src/node/src/client.js:169:8)
    at readCallback (/home/dev/work/src/github.com/hyperledger/mortgagelending/dlt-service/mortgage/node_modules/grpc/src/node/src/client.js:229:12)
[2017-10-17 10:49:53.827] [ERROR] Join-Channel - Error: Error: SERVICE_UNAVAILABLE
    at ClientDuplexStream.<anonymous> (/home/dev/work/src/github.com/hyperledger/mortgagelending/dlt-service/mortgage/node_modules/fabric-client/lib/Orderer.js:234:23)
    at emitOne (events.js:96:13)
    at ClientDuplexStream.emit (events.js:188:7)
    at ClientDuplexStream._emitStatusIfDone (/home/dev/work/src/github.com/hyperledger/mortgagelending/dlt-service/mortgage/node_modules/grpc/src/node/src/client.js:204:12)
    at ClientDuplexStream._readsDone (/home/dev/work/src/github.com/hyperledger/mortgagelending/dlt-service/mortgage/node_modules/grpc/src/node/src/client.js:169:8)
    at readCallback (/home/dev/work/src/github.com/hyperledger/mortgagelending/dlt-service/mortgage/node_modules/grpc/src/node/src/client.js:229:12)
    at helper.getOrgAdmin.then.then (/home/dev/work/src/github.com/hyperledger/mortgagelending/dlt-service/mortgage/app/join-channel.js:120:9)
    at process._tickCallback (internal/process/next_tick.js:109:7)
[2017-10-17 10:49:53.828] [DEBUG] Join-Channel - 
!!!!!!!! ERROR: Join Channel FAILED !!!!!!!!

[2017-10-17 10:49:53.828] [DEBUG] Join-Channel - 
(node:30702) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 6): Error: Error: Error: SERVICE_UNAVAILABLE
    at ClientDuplexStream.<anonymous> (/home/dev/work/src/github.com/hyperledger/mortgagelending/dlt-service/mortgage/node_modules/fabric-client/lib/Orderer.js:234:23)
    at emitOne (events.js:96:13)
    at ClientDuplexStream.emit (events.js:188:7)
    at ClientDuplexStream._emitStatusIfDone (/home/dev/work/src/github.com/hyperledger/mortgagelending/dlt-service/mortgage/node_modules/grpc/src/node/src/client.js:204:12)
    at ClientDuplexStream._readsDone (/home/dev/work/src/github.com/hyperledger/mortgagelending/dlt-service/mortgage/node_modules/grpc/src/node/src/client.js:169:8)
    at readCallback (/home/dev/work/src/github.com/hyperledger/mortgagelending/dlt-service/mortgage/node_modules/grpc/src/node/src/client.js:229:12)
    at helper.getOrgAdmin.then.then (/home/dev/work/src/github.com/hyperledger/mortgagelending/dlt-service/mortgage/app/join-channel.js:120:9)
    at process._tickCallback (internal/process/next_tick.js:109:7){color}
*_",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01qz1:,,,,,,,,harrisob@us.ibm.com,tejasborawake,,,,,,,,,,,,,,,,,,,"17/Oct/17 11:05 AM;tejasborawake;docker logs of peer0 of org1 shows below error:

2017-10-17 10:45:48.236 UTC [deliveryClient] StartDeliverForChannel -> DEBU 2c8 This peer will pass blocks from orderer service to other peers for channel mychannel
2017-10-17 10:45:51.237 UTC [ConnProducer] NewConnection -> ERRO 2c9 Failed connecting to orderer.example.com:7050 , error: context deadline exceeded
2017-10-17 10:45:51.238 UTC [deliveryClient] connect -> ERRO 2ca Failed obtaining connection: Could not connect to any of the endpoints: [orderer.example.com:7050]
2017-10-17 10:45:55.239 UTC [ConnProducer] NewConnection -> ERRO 2cb Failed connecting to orderer.example.com:7050 , error: context deadline exceeded
2017-10-17 10:45:55.239 UTC [deliveryClient] connect -> ERRO 2cc Failed obtaining connection: Could not connect to any of the endpoints: [orderer.example.com:7050]
2017-10-17 10:46:00.240 UTC [ConnProducer] NewConnection -> ERRO 2cd Failed connecting to orderer.example.com:7050 , error: context deadline exceeded
2017-10-17 10:46:00.240 UTC [deliveryClient] connect -> ERRO 2ce Failed obtaining connection: Could not connect to any of the endpoints: [orderer.example.com:7050]",25/Oct/17 3:24 PM;harrisob@us.ibm.com;Would you please recheck this with the latest fabric and NodeSDK,"26/Oct/17 5:41 AM;tejasborawake;Could you please point out which are the latest fabric,fabric-ca,Node-SDk versions?
There are too many branches and tags to fin latest ones.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI Layer bypasses security,FAB-6572,21767,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jeffgarratt,subbu165,subbu165,11/Oct/17 6:51 AM,01/Nov/17 2:38 PM,26/Apr/18 6:49 AM,01/Nov/17 2:38 PM,,,,,,fabric-peer,,,,,,0,chaincode,won't-fix,,,,,,"Lets say I have a UI layer which talks to REST layer which again talks to the chaincode. I have to secure all possible entries here. Using FABRIC CA I had configured security and set up the required MSP folder. Through UI and REST its properly working and doesn't allow any one to invoke the chaincode without proper security credentials.

But lets say I execute any transaction like Invoke or query, through CLI Commands with out providing any security credentials its still runs fine without any complains which is a security breach.

I'm using Fabric V1.0 Beta version as of now. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01pzx:,,,,,,,,jeffgarratt,mastersingh24,subbu165,,,,,,,,,,,,,,,,,,"16/Oct/17 10:42 AM;mastersingh24;[~subbu165] - I assume you mean you are using the peer CLI?   You should be aware that the peer CLI actually does use credentials exactly the same way as the peer.  I'd like to gather some more details before closing, but I think this is a simple misunderstanding.","26/Oct/17 6:44 PM;jeffgarratt;I concur with [~mastersingh24], do you have any more comments [~subbu165]?  If not will plan to close this early next week.",01/Nov/17 2:37 PM;jeffgarratt;Going to go ahead and close.. Reopen if you feel necessary.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric ca node api register now cannot accept a value of zero for maxenrollments,FAB-6551,21737,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,harrisob@us.ibm.com,davidkel,davidkel,09/Oct/17 10:27 PM,09/Nov/17 9:18 PM,26/Apr/18 6:49 AM,09/Nov/17 9:18 PM,v1.1,,,v1.1,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"The parameter check for register in FabricCAClientImpl was changed fairly recently and now looks like this
{code:java}
	register(enrollmentID, enrollmentSecret, role, affiliation, maxEnrollments, attrs, signingIdentity) {

		var self = this;
		var numArgs = arguments.length;
		//all arguments are required
		if (!enrollmentID || !affiliation || !maxEnrollments || !signingIdentity) {
			throw new Error('Missing required parameters.  \'enrollmentID\', \'affiliation\', \
				and \'signingIdentity\' are all required.');
		}
{code}
unfortunately this check is going to fail when a valid value of zero is passed as the maxEnrollments value because of the !maxEnrollments check.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01pth:,,,,,,,,davidkel,harrisob@us.ibm.com,,,,,,,,,,,,,,,master,,,true,23/Oct/17 9:25 PM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/14793/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Remove ""header"" from the return value of various proposal calls",FAB-6471,21330,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,harrisob@us.ibm.com,jimthematrix@gmail.com,jimthematrix@gmail.com,05/Oct/17 3:07 PM,09/Oct/17 6:48 PM,26/Apr/18 6:49 AM,09/Oct/17 6:48 PM,,,,v1.0.3,,fabric-sdk-node,,,,,,0,,,,,,,,"""header"" of the proposal used to be returned by some APIs that submit transaction proposals, so that the header field can be used in building the subsequent transaction object to send to the orderer. that has since been changed so that the header is built from the proposal object, so that it's not needed from the return object any longer. should remove that before more apps incidentally rely on that.

 

[https://github.com/hyperledger/fabric-sdk-node/blob/3d92b6178a060e0266934fd632e8f5ed5a76b14f/fabric-client/lib/Client.js#L876]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01pa5:,,,,,,,,harrisob@us.ibm.com,jimthematrix@gmail.com,,,,,,,,,,,,,,,master,,,true,09/Oct/17 6:48 PM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/14263/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"If chaincodePath doesnt exist, installChaincode does not throw error. Results in unhandled promise reject",FAB-6458,21317,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,zhaochy,yedendra,yedendra,04/Oct/17 4:49 PM,28/Oct/17 12:30 PM,26/Apr/18 6:49 AM,28/Oct/17 12:30 PM,,,,v1.0.4,,fabric-sdk-node,,,,,,0,,,,,,,,"in fabric-client/lib/packager/Golang.js,

while using klaw lib in findSource function, klaw.on('error'.. is missing. So, if the chaincode path does not exist, the error arising due to that is not caught.  It results in unhandled promise rejection.

 

Please add the error handler: 
klaw(filePath)
      ...
      .on('error', (err, item) => \{
 
        reject(err);
      })
      ...
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01p7h:,,,,,,,,harrisob@us.ibm.com,yedendra,,,,,,,,,,,,,,,master,,,true,24/Oct/17 9:31 PM;harrisob@us.ibm.com;[~zhaochy] would you be able to have a look at this one,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
proposal response error object message wraps shim.Error message as string,FAB-6457,21316,Bug,To Do,FAB,Fabric,software,ChristopherFerris,,,High,,,yedendra,yedendra,04/Oct/17 4:40 PM,13/Feb/18 2:52 PM,26/Apr/18 6:49 AM,,v1.0.4,v1.1,,v1.2,,fabric-endorser,,,,,,0,,,,,,,,"When an error is thrown in the chaincode using shim.Error

> shim.Error(""[invoke/query]-->[getDocuments] json: cannot unmarshal object into Go value of type string"")

 

In the nodejs SDK, the error is received as follows:

error.message = ""chaincode error (status: 500, message: [invoke/query]-->[getDocuments] json: cannot unmarshal object into Go value of type string)""

The error message should be same as the string passed in shim.Error.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01p79:,,,,,,,,denyeart,harrisob@us.ibm.com,mastersingh24,muralisr,nnao,yedendra,,,,,,,,,,,,,,,"25/Oct/17 3:26 PM;harrisob@us.ibm.com;[~zhaochy] would you be able to have a look at this one, thanks","30/Oct/17 1:24 AM;zhaochy;[~harrisob@us.ibm.com] this problem should be fixed at the fabric module. The message sdk received through grpc is

_chaincode error (status: 500, message: [invoke/query]-->[getDocuments] json: cannot unmarshal object into Go value of type string)_

And I also tried java sdk, this problem happened again. If we want to fix this at the sdk module, we have to parse the *Error.message* string and get the *message* sub-string, I don't think this is the right way for this issue. As a result, it's best to fix this at Fabric module instead of the sdk module.

maybe we should change this?
at  fabric/core/endorser/endorser.go line 44
{code:java}
func (ce chaincodeError) Error() string {
 return fmt.Sprintf(""chaincode error (status: %d, message: %s)"", ce.status, ce.msg)
}
{code}


 ",27/Nov/17 2:37 AM;denyeart;[~muralisr] What's your opinion on this one?,03/Dec/17 3:00 PM;mastersingh24;[~yedendra] Exactly what problem are you trying to solve here?  Are you trying to do something special with the error message which is returned?  ,04/Dec/17 12:51 PM;mastersingh24;I'm removing fix version for now as it is unclear whether or not anything should actually be done here.,"04/Dec/17 5:00 PM;yedendra;[~mastersingh24] The error message is a simple text. When we call shim.Error(""this is a simple error msg"") in the chain code, the sdk throws the error. However, this error message is wrapped with addition text and received as  ""chaincode error (status: 500, message: this is a simple error msg)"". Currently, we are extracting the error text from this wrapped text.

The work around currently we are using is same as the sdk level fix mentioned by [~zhaochy] : https://jira.hyperledger.org/browse/FAB-6457?focusedCommentId=33351&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-33351","04/Dec/17 10:00 PM;nnao;I think this error is related to FAB-6387 (https://jira.hyperledger.org/browse/FAB-6387).
Peer doesn't return the correct response. To fix this problem, I sent patches.
 
However, there is a deadlock between fabric and sdk-node.
To merge the patches for fabric, it needs to change the test in sdk-node.
To get prepared for the change of test in sdk-node, it needs to change fabric.
How can I fix this deadlock?",08/Jan/18 2:57 AM;denyeart;[~muralisr] Could you review FAB-6387 and FAB-6457 and provide your thoughts on next steps?,"27/Jan/18 4:21 PM;muralisr;[~denyeart], agree with [~nnao] ...this should be fixed by FAB-6387 but lets just confirm that with the fix and not make it duplicate yet. 

Also [~nnao],   CR https://gerrit.hyperledger.org/r/#/c/16057/ mentioned in FAB-6387 resolves the deadlock you mentioned above (and hence CRs in FAB-6387 got Verified+1). Can you confirm please ? Just wanted to close that loop. 

Will post rest of comments in FAB-6387.",13/Feb/18 1:27 PM;Clayton Sims;I think there was agreement that FAB-6387 needed to be moved to v1.2.   [~muralisr]  did i understand that correctly.  What does it do to this one?,13/Feb/18 2:39 PM;muralisr;[~Clayton Sims] this would also move to v1.2. The  fix for FAB-6387  from [~nnao]  provides ProposalResponse directly to users without introspection or unmarshalling.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
shim interface getTxTimestamp returns undefined,FAB-6417,21259,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,Ratnakar,Ratnakar,03/Oct/17 2:19 PM,15/Nov/17 7:09 PM,26/Apr/18 6:49 AM,15/Nov/17 7:09 PM,v1.0.3,,,,,fabric-chaincode-node,,,,,,0,ci_failure,fabric-chaincode-node,quality,,,,,node chaincode shim interface *getTxTimestamp* API  returns *undefined*,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01owd:,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,master,,,true,14/Nov/17 4:06 AM;jimthematrix;https://gerrit.hyperledger.org/r/#/c/15459/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
error code missing in returned error message during chaincode calling chaincode negative tests,FAB-6387,21225,Bug,In Review,FAB,Fabric,software,ChristopherFerris,,,High,,nnao,Nishi,Nishi,02/Oct/17 3:57 PM,16/Apr/18 5:47 PM,26/Apr/18 6:49 AM,,v1.0.2,,,v1.2,,fabric-endorser,,,,,,0,ci_failure,,,,,,," tests failing with error messages:
{code:java}
 When testing https://jira.hyperledger.org/browse/FAB-4720
   FAB-4720: Test chaincode calling chaincode -ve test case passing an incorrect or non-existing channnel name when cc_ex02 and cc_ex05 installed on same channels

   Error Message Received from peer logs:
   ""Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: transaction returned with failure: Failed to get policy manager for channel [channel3] - <nil>""


2. When testing https://jira.hyperledger.org/browse/FAB-4721
   FAB-4721: Test chaincode calling chaincode -ve testcase passing an incorrect ot non-existing string for channelname when cc_ex02 and cc_ex05 installed on different channels
 
   Error message received from peer logs:
   ""Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: transaction returned with failure: Failed to get policy manager for channel [channel3] - <nil>""


3. When testing https://jira.hyperledger.org/browse/FAB-4722
   FAB-4722: Test chaincode calling chaincode -ve testcase passing an empty string for channelname when cc_ex02 and cc_ex05 installed on different channels

   Error message received from peer logs:
   ""Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: transaction returned with failure: could not find chaincode with name 'myex02_b' - <nil>""{code}
Steps to reproduce:
{code:java}
1. Build hyperledger fabric images
2. Get fabric-test latest repo.
3. From fabric-test folder run: git submodule update --init --recursive (only the first time)
Note: If you build images subsequently please run : git submodule foreach git pull origin master
4. cd ""github.com/hyperledger/fabric-test/feature""
5. run:
   behave -n 4720  
   behave -n 4721
   behave -n 4722

Expected Result:

   To receive an error code along with error message.


Actual Result: No error code returned for any of these error scenarios returned.
 Note:  Right now I am looking for error code 400 (// Invalid inputs on API calls, BadRequest = ""400""){code}
Could we also get a error code along with error message?

This is currently failing our CI daily tests.",,,,,,,,,,,,,,FAB-6677,FAB-6271,,,,,,,,,,,,,,,,,0|i01op1:,,,,,,,,denyeart,mastersingh24,muralisr,Nishi,nnao,sambhavdutt,scottz,wlahti,yacovm,,,,,,,,master,,,true,"02/Oct/17 4:05 PM;scottz;Upgrading this to a HIGH issue, since the fabric-test Daily CI tests are failing.",05/Nov/17 10:08 AM;mastersingh24;[~Nishi] [~scottz]  - are you doing this against master or release?,05/Nov/17 10:11 AM;mastersingh24;I believe that these paths will also result in a 500 error and not a 400 error,"05/Nov/17 3:29 PM;scottz;Testing is done on master branch. We will take another look at the error code descriptions, and could certainly adjust the expectations to look for 500 instead of 400, if that is more appropriate. But the problem seems to be that no error code is received with the error message.",05/Nov/17 6:32 PM;mastersingh24;Thanks Scott.  Will also take a other look,27/Nov/17 2:33 AM;denyeart;[~nnao] I see you assigned to yourself.  Could you add a comment on what exactly you intend to fix here?,"27/Nov/17 6:36 PM;nnao;[~denyeart]
Error code is not returned because response value is ignored.
- ProcessProposal function in core/endorser/endorser.go returns a response and an error value if an error happens.
- After that, a response and an error value are passed to ProcessProposal function in protos/peer/peer.bp.go.
- This function only returns the error value if an error value is set. Even though response value is set, the response value is ignored.
  https://github.com/hyperledger/fabric/blob/release/protos/peer/peer.pb.go#L91
 
I will fix this problem by changing returned value.
- ProposalResponse function returns only response value even if an error happens.
- We can get error code because an error value is included in response value.","27/Nov/17 7:16 PM;nnao;https://gerrit.hyperledger.org/r/#/c/15737/
https://gerrit.hyperledger.org/r/#/c/15739/","27/Nov/17 11:53 PM;denyeart;[~nnao] thanks for adding the details.
[~muralisr] FYI - see the CRs for detailed review.","08/Dec/17 9:56 PM;nnao;https://gerrit.hyperledger.org/r/#/c/16057/
",08/Jan/18 2:57 AM;denyeart;[~muralisr] Could you review FAB-6387 and FAB-6457 and provide your thoughts on next steps?,"27/Jan/18 9:06 PM;muralisr;[~denyeart] [~nnao]  [~Nishi] [~scottz] 

A recap of history of a change which led to this issue.
{code:java}
FAB-4347 - SDK test expected error but got a Proposal Response. The ""chaincodeError"" was added in addition to returning the ProposalResponse. This fixed SDK failures but as [~nnao] notes above, gRPC ignores the ProposalResponse and just returns the error. Given that, in retrospect, the right way should have been to fix the SDK to introspect the response.{code}
[~nnao] fixes in this JIRA does the following which looks good to me except for one issue
 * reverts the ---FAB-4347--- change with [https://gerrit.hyperledger.org/r/#/c/15737] - as mentioned in the CR, looks right except for returning 404 *(expanding on this below)*
 * [https://gerrit.hyperledger.org/r/#/c/16057/] - fixes the SDK test to look into ProposalResponse instead of error and also introduces a temporary workaround for SDK failure introduced by the reversal so this CR can go through

*About the setting the 404 in endorser :*

Seems we are doing that to fix the behave tests in [https://gerrit.hyperledger.org/r/#/c/15739]. This 404 should really come from the chaincode and not from the fabric. However currently chaincode framework returns error immediately to the endorser code instead of passing it to the chaincode to complete the loop. (This is where [~nnao] sets 404.)

If the chaincode has the opportunity to handle the error - as it should - the chaincode can return the 404 directly and we wouldn't need for the fabric to set 404. This would be the correct way to handle application level errors. 

The chaincode cleanup CRs slated for 1.2 (a batch of CRs starting with [https://gerrit.hyperledger.org/r/#/c/16533/]) handles this error correctly. For now, recommend we revert the error back to 500 in endorser.go and just check for 500 in the behave tests.  

[~denyeart] If everyone agree's with this approach, please create a bug for 1.2 to make sure the cleanup CRs do the right thing (its already fixed by the CRs ...this is just for due diligence) and assign it to me and we can move this set of CRs from [~nnao] to completion (after reverting the 404 to 500).","29/Jan/18 5:30 PM;scottz;[~muralisr] OK we can keep the behave test in v1.1 for now to look for 500.  The new v1.2 bug is not just for due diligence; we should use it to make sure we change these behave tests again to look for 404, as soon as those other CRs return the error correctly. Please ""relate"" the new bug to this one, and set the new bug ""blocked by"" the JIRA used for the cleanup CRs being used for the code correction to return the 404.","29/Jan/18 8:25 PM;muralisr;[~scottz] makes sense (I was thinking we should use the bug to revert tests to 404 too).

Sounds like we are in agreement.  [~nnao] has reverted 404 to 500 in endorser.go. Opened FAB-7959 and marked it blocked by the cleanup CRs clearing the path to resolving this JIRA.","31/Jan/18 6:37 PM;wlahti;Discussed this with [~muralisr]. We have one recommendation for the chaincode error handling logic. 

What if we have the default ESCC code set the chaincode error status and message at [https://github.com/hyperledger/fabric/blob/master/core/scc/escc/endorser_onevalidsignature.go#L114|https://github.com/hyperledger/fabric/blob/master/core/scc/escc/endorser_onevalidsignature.go#L114?] ? The ESCC is the code that really determines whether a chaincode error should result in an endorsement error, so it seems logical to set the chaincode status/message here.

The existing:
{code:java}
if response.Status >= shim.ERRORTHRESHOLD {
    return shim.Error(fmt.Sprintf(""Status code less than %d will be endorsed, received status code: %d"", shim.ERRORTHRESHOLD, response.Status))
}{code}
could become:
{code:java}
if response.Status >= shim.ERRORTHRESHOLD {
    return shim.Error(fmt.Sprintf(""Chaincode Error(%d, %s)"", response.Status, response.Message))
}{code}
 

Once this has been done, the endorser.go code at [https://github.com/hyperledger/fabric/blob/master/core/endorser/endorser.go#L486] becomes:
{code:java}
if chainID == """" {
    pResp = &pb.ProposalResponse{Response: res}
} else {
    pResp, err = e.endorseProposal(ctx, chainID, txid, signedProp, prop, res, simulationResult, ccevent, hdrExt.PayloadVisibility, hdrExt.ChaincodeId, txsim, cd)
    if err != nil {
        return &pb.ProposalResponse{Response: &pb.Response{Status: 500, Message: err.Error()}}, err
    }
    if pResp.Response.Status >= shim.ERRORTHRESHOLD {
        endorserLogger.Debugf(""[%s][%s] endorseProposal() resulted in chaincode %s error for txid: %s"", chainID, shorttxid(txid), hdrExt.ChaincodeId, txid)
        return pResp, nil
    }
}{code}
and the pResp returned by the endorser for this situation contains:
{code:java}
response:<status:500 message:""Chaincode Error(404, error message from chaincode-ex-02)"" >{code}
 

Does that all seem logical? Anything I missed, [~muralisr]?","31/Jan/18 8:03 PM;muralisr;[~wlahti] Sounds right. 

Basically two code changes
* change in endorser.go to just return pResp received from escc.
* modify https://github.com/hyperledger/fabric/blob/master/core/scc/escc/endorser_onevalidsignature.go#L114 as you have indicated

Let us also update the CR for gerritt tracking.","31/Jan/18 11:59 PM;scottz;[https://gerrit.hyperledger.org/r/#/c/15739/] is being used for fixing the testcases in fabric-test repo using this FAB-6387.

The previous comments seem to apply to another update in the fabric repo.","01/Feb/18 4:29 PM;muralisr;[~nnao] -1ed the CR just for now with this comment

{code:java}
We need to make sure if SDKs can deal with this change in a sensible manner. Important to keep compatibility in mind. If we think we need more time to everything covered and give users enough notice, then we might want to target 1.2.
{code}

[~denyeart] [~Nishi] [~scottz]","01/Feb/18 5:17 PM;nnao;[~muralisr] I agree to keep compatibility and give users enough notice. If we need more time, There is no problem that to move target 1.2.
I have a question. How to check those SDK's compatibility? Do we need to add a more response check test case in sdk-* e2e test or fabric-test?","01/Feb/18 5:53 PM;muralisr;[~nnao] thank you for the response (and the patience!).

We can add/modify tests appropriately, I think you already started with that - and they pass with your CR which is a good start.

I was thinking more of current users of 1.0.

Hopefully SDKs are processing responses correctly like this ( first of all we have to verify if this is true )
{code:java}
   if err != nil // Path 1
          return err
   else if response.Status == ERROR //Path 2
          return response_error
   else // good response //Path 3
          process good response
{code}
With your change, callers who were getting error in *Path 1* due to ""chaincode error"" will now fall into *Path 2*. This is still an error path - which is good - but they need to be able to differentiate between the errors. This is mainly a question of documentation and notification.

Now it is _possible_ SDK does something like this (hope not...)
{code:java}
   if err != nil // Path 1
          return err
   else // good response  //Path 3
          process good response
{code}
With your change, since chaincode errors are no longer on *Path 1*, callers will go through *Path 3* which would break their processing (ie, they are now processing response as ""good""). In this case, we should change SDK to move to the first error processing model in addition to documentation. This way clients will still get an error as before but will only have to differentiate the error appropriately.

So I think basically we need to do the following
 * check each of the SDK's to make sure they handle the response correctly
 * add docs and notify users of this change
 * add more SDK tests if needed","01/Feb/18 6:10 PM;nnao;[~muralisr] Thanks. I understood. Firstly, I will try to check SDK-*.","02/Feb/18 1:46 AM;scottz;This deficiency has been around for a long time. Now you are proposing to delay it to give people time ... to do what exactly? We are not delivering correct success/error codes, which is a major issue and I strongly disagree to regate to a later release. It sounds like we understand the complexity now, so I we should get it done in v1.1!","02/Feb/18 2:37 AM;denyeart;[~scottz] I agree.  Discussed with [~muralisr] today and we agree the fix should go in as soon as possible in 1.1.  We need to coordinate the fix with SDKs, and then write up a few sentences for 1.1 release notes to make upgrades aware. [~nnao] is checking with SDKs as next step.",02/Feb/18 9:46 AM;yacovm;Can this fix make v1.0.x clients incompatible with v1.1 peers?,"02/Feb/18 12:59 PM;denyeart;[~yacovm] The exact impact is being investigated.  If there is impact release notes will need to explain the corrective action, for example clients may have to move up to a later SDK 1.0.x fix or 1.1. As unappealing as that is, this is considered a defect and there must be a path to fix defects.  Living with defects indefinitely is not an option.","03/Feb/18 4:52 PM;muralisr;[~denyeart] 

_The exact impact is being investigated._ 

The preference is to fix this in 1.1 if the SDKs already do the right thing in handling responses as outlined in my previous comment.  However if [~nnao] investigation finds SDKs are not doing the right thing in 1.0, we'll have re-evaluate. Right ?","03/Feb/18 5:01 PM;denyeart;Right, let's get the exact impact well defined first, then re-evaluate.","05/Feb/18 9:53 PM;nnao;I checked SDK node/java.

The SDK java had checked the response status and it is treated as an error except for the response status 200.
The SDK node has one place that it doesn't check the response status. SDK node is treated as a success even if response status is 500.
I made and send a patch [https://gerrit.hyperledger.org/r/#/c/17553/|https://gerrit.hyperledger.org/r/#/c/17553/.]

In SDK java, Maybe SDK v1.0.x will keep compatibility with v1.1 peers.
In SDK node, There's a possibility that different behave with v1.0.x and v1.1 when received status not 200","08/Feb/18 3:47 AM;muralisr;thanks [~nnao] for the investigation and the patch.

_In SDK node, There's a possibility that different behave with v1.0.x and v1.1 when received status not 200_

[~denyeart], [~scottz] This would break node SDK users on chaincode error paths. Delay in merging means more users would have to change behavior when merged.

On the other hand if the focus has been on smooth upgrade to 1.1, it would make sense to give some notice to users and slate this for the next release. ","09/Feb/18 3:38 PM;scottz;[~muralisr] [~nnao] I realize there are several things being changed, making this a complex issue to discuss, let alone fix. (Thank you Nao for all you are trying to do.) Does it make sense if we split it into these steps? I don't see any reason to intentionally delay for any reasons.
 # Fix the fabric to work correctly, and document (in release notes if necessary, as well as readthedocs) any changes in the API and error codes that are returned by fabric or from chaincodes. ASAP.
 # Fix the SDKs to work correctly, and document any changes in the API and error codes that are returned by fabric or from chaincodes. ASAP.
 # The chaincodes owners can upversion them so they work correctly.","10/Feb/18 8:48 PM;muralisr;[~scottz] My vote would be for moving it to 1.2 giving us a chance to bolster the doc with samples. Plus we will have the chaincode FSM cleanup to go with it so we can test this along with that change.

However if the majority decides this should go in immediately, I'm fine with that.

Created the following doc if we decided to go with the change immediately. This also gives an idea of what the samples could illustrate
{code:java}
Pre 1.1 (or 1.2) code returned a successful ProposalResponse (status 0 or 200) or an error.
In 1.1 (or 1.2), endorser can return
* error with nil ProposalResponse
* error ProposalResponse (status >= 400)
* successful ProposalResponse (status 0 or 200)

Further, an error ProposalResponse could be from the peer or from the chaincode. Currently peer returns ProposalResponse with status >= 500 which allows users to distinguish user chaincode errors by setting status in the 400-499 range.
{code}","10/Feb/18 10:47 PM;yacovm;I have no real say in the matter but FWIW - I think Murali is right, and assuming this change breaks backward compatibility with v1.0 we should defer this to v1.2, where we will have many changes that would both require and incentivize users to upgrade their SDKs to the latest version.

I also think it's a bit odd to release v1.1-alpha which is compatible with v1.0 clients, and then release the final v1.1 which is not, and lastly - these errors occur when the user provides the wrong input to the peer, not to the chaincode - therefore is that really that bad that we return the wrong error type? If the application is calling the wrong chaincode name or the wrong channel, it is broken regardless of what the peer would return.","10/Feb/18 11:53 PM;scottz;If I understand correctly... fixing this now would break backwards compatibility with v1.0 - because v1.0 was unfinished; v1.0 never returned ANY error codes in some situations, let alone an error code from the appropriate place (from fabric when it is a peer error, or from the chaincode when it is a chaincode error) or the correct error code (400 vs 404 vs 500). See also FAB-6271. 

I have already stated a preference to see this fixed sooner rather than later. Sure, the error codes are for error paths rather than success path; but one could argue they are more important now for helping people that are setting up their new networks and channels - moreso now than later after things are already running (or after they have abandoned their attempts to use HF).

That said, I understand I am only part of the team to decide if this is required in the v1.1 release. Moreover, considering all the good points that have been made, I would be amenable to deferring until v1.2. Note, if we do not fix all this in v1.1, I think it would be wise to clearly itemize and document the misbehaving usecases somewhere (are the jiras sufficient?), and reduce some headaches for the chaincode writers by mentioning the shortcomings in the release notes with pointers to the explanations.

 

 ","11/Feb/18 12:41 AM;muralisr;[~scottz]

_...v1.0 never returned ANY error codes in some situations..._

Actually, it is returning error with every non-success path and users lost the ""ProposalResponse"" part of the return value. While not ideal obviously, it did separate error from success cleanly. If it was successful, everything was good. If failure, hard to determine what/why. Returning the ProposalResponse  helps in working with the error paths.

 

_I think it would be wise to clearly itemize and document the misbehaving usecases somewhere (are the jiras sufficient?), and reduce some headaches for the chaincode writers by mentioning the shortcomings in the release notes with pointers to the explanations._

Something like the following is all we'd need I think (and if we move to 1.2, hopefully we can illustrate with samples) 
{code:java}
Users who handle errors from chaincode in pre 1.1 (or pre 1.2) need to look for the ""chaincode error"" string in the error returned from the proposal request and parse out the response status and response message from it. With 1.1 (or 1.2), they can get this information directly from ProposalResponse. {code}
 ","13/Feb/18 1:24 PM;Clayton Sims;Ok based on comments looks like here is agreement to move to 1.2.   If I misunderstood, please move it back with a comment. ",13/Feb/18 2:39 PM;muralisr;[~Clayton Sims] +1,"13/Feb/18 6:37 PM;denyeart;I've -1ed the associated CRs to prevent merge into 1.1:

[https://gerrit.hyperledger.org/r/#/c/17553/]

[https://gerrit.hyperledger.org/r/#/c/15739/]

[https://gerrit.hyperledger.org/r/#/c/15737/]

 ",14/Feb/18 1:23 AM;scottz;Does this deferral apply to FAB-6271 as well?,"14/Feb/18 5:58 PM;denyeart;Yes, I believe FAB-6387 and FAB-6271 should be fixed at the same time, latest thinking is that would be 1.2 timeframe.  I've tagged each as 1.2.","16/Apr/18 1:22 PM;sambhavdutt;[~nnao] Hello, 

Can you tell if this issue is resolved or if there are any blockers for this bug. Should we maintain the 'In Review' status for this one.",16/Apr/18 1:33 PM;muralisr;[~sambhavdutt] not resolved yet. We moved this to 1.2 and there are few CRs listed above ready to be reviewed (the main one is [https://gerrit.hyperledger.org/r/#/c/15737]).,"16/Apr/18 5:47 PM;nnao;Hi [~sambhavdutt]

Yes. I am working to fix this JIRA.
I had sent 3 patches at FAB-6387.
(1) https://gerrit.hyperledger.org/r/c/15737/ at fabric
(2) https://gerrit.hyperledger.org/r/c/15739/ at fabric-test 
(3) https://gerrit.hyperledger.org/r/c/17553/ at fabic-sdk-test

To fix this problem, we need to merge (1) patches.
The patches (1) have +2 from Srinivasan. it needs more one +2 from peer maintainers.
(-2 from David, ""Decision to defer until 1.2, I will -2 to prevent merge into 1.1"")
 
However, if the patches(1) are merged, some tests will get an error.
Since some tests expect a wrong response, we have to merge
those test patches(2)(3) as soon as possible after (1) are merged.

So I'd like to discuss patches(2)(3) with fabric-test/fabric-sdk-test maintainers as soon as possible.

Thanks, [~muralisr]"
Error upon chaincode GetPrivateData() using CouchDB,FAB-6355,21097,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,denyeart,denyeart,29/Sep/17 10:00 PM,27/Oct/17 1:00 PM,26/Apr/18 6:49 AM,30/Sep/17 7:07 PM,,,,v1.1,,fabric-ledger,,,,,,0,,,,,,,,"Error message:

The available copy of the private data is not latest. The latest version = (*version.Height)(nil), available version = &version.Height\{BlockNum:0x2, TxNum:0x0})

 

The problem is that the retrieve of the public hash from couch state db fails due to a URL encoding issue of a plus sign in the hashed key. 

Keys were already URL encoded using golang URL encoding, but the encoding skips plus signs in the path component.  CouchDB unencodes the plus sign as a space.

The fix is to explicitly URL encode plus character.

Also add unit test to verify the fix and test all other URL special characters.

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-1151,0|i01ohp:,,,,,,,,denyeart,,,,,,,,,,,,,,,,release-1.0,master,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Chaincode container of a temporarily disconnected peer cannot resume normal function if, while the peer was disconnected, another peer created its CC container in the meantime",FAB-6333,21048,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,cbl,AdnanChoudhury,AdnanChoudhury,28/Sep/17 3:27 PM,01/Dec/17 1:04 PM,26/Apr/18 6:49 AM,28/Nov/17 1:52 AM,v1.0.2,,,,,fabric-endorser,fabric-quality,,,,,0,ci_failure,,,,,,,"In a regular 2 org-4 peer setup, a peer , after doing an invoke+query, gets disconnected temporarily and comes back up, and meanwhile there are transactions in the other peer, then the connected-back peer fails on a query with ""timed out"" error.

+*Steps*+
 1) Bootstrap a solo/kafka network with 4 peers (peer0org1, peer1org1, peer0org2, peer1org2), 
 2) do an invoke in peer0org1
 3) Disconnect peer0org1 (docker disconnect that peer from the network that was created for the test in the docker compose)
 4) run 2 invokes in other peer of the org peer1org1
 5) connect back peer0org1
 6) Query on peer0org1

+*Result observed:*+
 Step 6 fails with `Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: failed to execute transaction: timeout expired while executing transaction`

*log of the peer attached*

+*Expected:*+
 Step 6 passes, gives back the correct value of queried key.

+*More Info:*+
 1) if we swap peer0org1 and peer1org1 functionality (i, e.instead of 
 invokeQueryPeer0-disconnectPeer0-invokeInPeer1-ConnectbackPeer0 , 
 if we do 
 invokeQueryPeer1-disconnectPeer1-invokeInPeer0-ConnectBackPeer1
 ) the test passes as expected. 

2) Test of disconnecting the CC container from the network did not stop the normal functioning of the of the peers.",,,,,,,,,,,,,,,,,,,FAB-6283,FAB-6954,,,,29/Sep/17 3:45 PM;AdnanChoudhury;Peer0Org1_log_disconnectionTest.txt;https://jira.hyperledger.org/secure/attachment/12150/Peer0Org1_log_disconnectionTest.txt,06/Oct/17 2:26 AM;muralisr;peer0.org1.example.com.log;https://jira.hyperledger.org/secure/attachment/12212/peer0.org1.example.com.log,06/Oct/17 9:17 PM;muralisr;peer0.org1.example.com.with.extra.invoke;https://jira.hyperledger.org/secure/attachment/12218/peer0.org1.example.com.with.extra.invoke,05/Oct/17 8:58 PM;AdnanChoudhury;peer0Org1log_new.log;https://jira.hyperledger.org/secure/attachment/12210/peer0Org1log_new.log,,,,,0|i01o7h:,,,,,,,,AdnanChoudhury,cbl,muralisr,scottz,wutongtree,,,,,,,,,,,,master,,,true,"02/Oct/17 3:50 PM;scottz;I upgraded this to High issue, as it is causing failures in fabric-test CI.","04/Oct/17 6:19 PM;AdnanChoudhury;This issue is likely related to FAB-6017. Murali is putting a fix for that and once the fix is in, we will test again to see the results.",05/Oct/17 12:43 PM;muralisr;[~AdnanChoudhury] the fix is in. However note that it might take a bit of time for the containers to detect disconnect and terminate.  Perhaps manually monitor the peer log to look for chaincode termination and they try the query as a first step to test the fix.,"05/Oct/17 6:13 PM;AdnanChoudhury;[~muralisr]
With the updated Fabric images I observe that:
1) After the peer is disconnected, it takes about *5 minutes* for the attached CC container to exit, and it exits with message: 

 
{code:java}
UTC [shim] func1 -> ERRO 001 Received error from server, ending chaincode stream: rpc error: code = Unavailable desc = transport is closing
Error starting Simple chaincode: rpc error: code = Unavailable desc = transport is closing
{code}
 


2) Once CC container is down, if I connect the peer back, the peer tries to revive and connect back with the existing CC container, *but fails*, heres the relevant peer log
{code:java}
```
2017-10-05 16:32:06.899 UTC [chaincode] launchAndWaitForRegister -> DEBU 6f0 chaincode mycc:0 is being launched
2017-10-05 16:32:06.899 UTC [chaincode] getLaunchConfigs -> DEBU 6f1 Executable is chaincode
2017-10-05 16:32:06.899 UTC [chaincode] getLaunchConfigs -> DEBU 6f2 Args [chaincode -peer.address=peer0.org1.example.com:7052]
2017-10-05 16:32:06.899 UTC [chaincode] getLaunchConfigs -> DEBU 6f3 Envs [CORE_CHAINCODE_ID_NAME=mycc:0 CORE_PEER_TLS_ENABLED=false CORE_CHAINCODE_LOGGING_LEVEL=info CORE_CHAINCODE_LOGGING_SHIM=warning CORE_CHAINCODE_LOGGING_FORMAT=%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message}]
2017-10-05 16:32:06.899 UTC [chaincode] getLaunchConfigs -> DEBU 6f4 FilesToUpload []
2017-10-05 16:32:06.899 UTC [chaincode] launchAndWaitForRegister -> DEBU 6f5 start container: mycc:0(networkid:bea15880a9e811e796f4a45e60f04519,peerid:peer0.org1.example.com)
2017-10-05 16:32:06.899 UTC [chaincode] launchAndWaitForRegister -> DEBU 6f6 start container with args: chaincode -peer.address=peer0.org1.example.com:7052
2017-10-05 16:32:06.899 UTC [chaincode] launchAndWaitForRegister -> DEBU 6f7 start container with env:
CORE_CHAINCODE_ID_NAME=mycc:0
CORE_PEER_TLS_ENABLED=false
CORE_CHAINCODE_LOGGING_LEVEL=info
CORE_CHAINCODE_LOGGING_SHIM=warning
CORE_CHAINCODE_LOGGING_FORMAT=%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message}
2017-10-05 16:32:06.899 UTC [container] lockContainer -> DEBU 6f8 waiting for container(bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0) lock
2017-10-05 16:32:06.899 UTC [container] lockContainer -> DEBU 6f9 got container (bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0) lock
2017-10-05 16:32:06.900 UTC [dockercontroller] Start -> DEBU 6fa Cleanup container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0
2017-10-05 16:32:06.907 UTC [dockercontroller] stopInternal -> DEBU 6fb Stop container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0(Container not running: bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0)
2017-10-05 16:32:06.908 UTC [dockercontroller] stopInternal -> DEBU 6fc Kill container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0 (API error (500): {""message"":""Cannot kill container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0: Container 9fec0c984efc39173ea066a2753c900a36e279d3bf99e911e6f1fd35837d2d22 is not running""}
)
2017-10-05 16:32:06.962 UTC [dockercontroller] stopInternal -> DEBU 6fd Removed container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0
2017-10-05 16:32:06.962 UTC [dockercontroller] Start -> DEBU 6fe Start container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0
2017-10-05 16:32:06.962 UTC [dockercontroller] createContainer -> DEBU 6ff Create container: bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0
2017-10-05 16:32:07.179 UTC [dockercontroller] createContainer -> DEBU 700 Created container: bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0-3acfb8c2b5da008eb8a6ca2e06c91679c3e26125c90b47ff34ce0fabff3d1570
2017-10-05 16:32:07.760 UTC [dockercontroller] Start -> DEBU 701 Started container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0
2017-10-05 16:32:07.760 UTC [container] unlockContainer -> DEBU 702 container lock deleted(bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0)
 
 
 
 
 
 
 
2017-10-05 16:37:06.728 UTC [chaincode] launchAndWaitForRegister -> DEBU 703 stopping due to error while launching: timeout expired while starting chaincode mycc:0(networkid:bea15880a9e811e796f4a45e60f04519,peerid:peer0.org1.example.com,tx:9282ee97895fa861e74216f718de1a074c9a30b0acc125b988d2cf7ef4ed23af)
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).launchAndWaitForRegister
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:533
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Launch
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:694
github.com/hyperledger/fabric/core/chaincode.Execute
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/exectransaction.go:45
github.com/hyperledger/fabric/core/chaincode.ExecuteChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincodeexec.go:85
github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:117
github.com/hyperledger/fabric/core/endorser.(*Endorser).simulateProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:262
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:477
github.com/hyperledger/fabric/core/handlers/auth.(*filter).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/auth.go:38
github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler
/opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:112
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:781
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:981
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:551
runtime.goexit
/opt/go/src/runtime/asm_amd64.s:2337
2017-10-05 16:37:06.728 UTC [container] lockContainer -> DEBU 704 waiting for container(bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0) lock
2017-10-05 16:37:06.728 UTC [container] lockContainer -> DEBU 705 got container (bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0) lock
2017-10-05 16:37:06.730 UTC [dockercontroller] stopInternal -> DEBU 706 Stop container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0(Container not running: bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0)
2017-10-05 16:37:06.732 UTC [dockercontroller] stopInternal -> DEBU 707 Kill container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0 (API error (500): {""message"":""Cannot kill container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0: Container f05138b1ad64425f6602755d8948a239bdf1129b098a37288d86c68cc0d9522d is not running""}
)
2017-10-05 16:37:06.778 UTC [dockercontroller] stopInternal -> DEBU 708 Removed container bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0
2017-10-05 16:37:06.778 UTC [container] unlockContainer -> DEBU 709 container lock deleted(bea15880a9e811e796f4a45e60f04519-peer0.org1.example.com-mycc-0)
2017-10-05 16:37:06.778 UTC [chaincode] func1 -> DEBU 70a chaincode mycc:0 launch seq completed
2017-10-05 16:37:06.778 UTC [chaincode] Launch -> ERRO 70b launchAndWaitForRegister failed: timeout expired while starting chaincode mycc:0(networkid:bea15880a9e811e796f4a45e60f04519,peerid:peer0.org1.example.com,tx:9282ee97895fa861e74216f718de1a074c9a30b0acc125b988d2cf7ef4ed23af)
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).launchAndWaitForRegister
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:533
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Launch
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:694
github.com/hyperledger/fabric/core/chaincode.Execute
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/exectransaction.go:45
github.com/hyperledger/fabric/core/chaincode.ExecuteChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincodeexec.go:85
github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:117
github.com/hyperledger/fabric/core/endorser.(*Endorser).simulateProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:262
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:477
github.com/hyperledger/fabric/core/handlers/auth.(*filter).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/auth.go:38
github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler
/opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:112
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:781
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:981
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:551
runtime.goexit
/opt/go/src/runtime/asm_amd64.s:2337
2017-10-05 16:37:06.779 UTC [chaincode] ExecuteChaincode -> ERRO 70c timeout expired while starting chaincode mycc:0(networkid:bea15880a9e811e796f4a45e60f04519,peerid:peer0.org1.example.com,tx:9282ee97895fa861e74216f718de1a074c9a30b0acc125b988d2cf7ef4ed23af)
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).launchAndWaitForRegister
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:533
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Launch
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:694
github.com/hyperledger/fabric/core/chaincode.Execute
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/exectransaction.go:45
github.com/hyperledger/fabric/core/chaincode.ExecuteChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincodeexec.go:85
github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:117
github.com/hyperledger/fabric/core/endorser.(*Endorser).simulateProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:262
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:477
github.com/hyperledger/fabric/core/handlers/auth.(*filter).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/auth.go:38
github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler
/opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:112
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:781
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:981
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:551
runtime.goexit
/opt/go/src/runtime/asm_amd64.s:2337
error executing chaincode
2017-10-05 16:37:06.779 UTC [endorser] callChaincode -> DEBU 70d Exit
2017-10-05 16:37:06.779 UTC [endorser] simulateProposal -> ERRO 70e failed to invoke chaincode name:""mycc""  on transaction 9282ee97895fa861e74216f718de1a074c9a30b0acc125b988d2cf7ef4ed23af, error: timeout expired while starting chaincode mycc:0(networkid:bea15880a9e811e796f4a45e60f04519,peerid:peer0.org1.example.com,tx:9282ee97895fa861e74216f718de1a074c9a30b0acc125b988d2cf7ef4ed23af)
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).launchAndWaitForRegister
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:533
github.com/hyperledger/fabric/core/chaincode.(*ChaincodeSupport).Launch
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincode_support.go:694
github.com/hyperledger/fabric/core/chaincode.Execute
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/exectransaction.go:45
github.com/hyperledger/fabric/core/chaincode.ExecuteChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/chaincodeexec.go:85
github.com/hyperledger/fabric/core/endorser.(*Endorser).callChaincode
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:117
github.com/hyperledger/fabric/core/endorser.(*Endorser).simulateProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:262
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:477
github.com/hyperledger/fabric/core/handlers/auth.(*filter).ProcessProposal
/opt/gopath/src/github.com/hyperledger/fabric/core/handlers/auth/auth.go:38
github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler
/opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:112
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:781
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:981
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1
/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:551
runtime.goexit
/opt/go/src/runtime/asm_amd64.s:2337
error executing chaincode
2017-10-05 16:37:06.779 UTC [endorser] simulateProposal -> DEBU 70f Exit
2017-10-05 16:37:06.779 UTC [lockbasedtxmgr] Done -> DEBU 710 Done with transaction simulation / query execution [9282ee97895fa861e74216f718de1a074c9a30b0acc125b988d2cf7ef4ed23af]
2017-10-05 16:37:06.779 UTC [endorser] ProcessProposal -> DEBU 711 Exit
```   

 {code}
 
 
and the CC Container , which respawns and then exits, has following in its log:
```

 
{code:java}
2017-10-05 16:32:10.742 UTC [shim] userChaincodeStreamGetter -> ERRO 001 context deadline exceeded
error trying to connect to local peer
github.com/hyperledger/fabric/core/chaincode/shim.userChaincodeStreamGetter
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:119
github.com/hyperledger/fabric/core/chaincode/shim.Start
/opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:158
main.main
/chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:195
runtime.main
/opt/go/src/runtime/proc.go:185
runtime.goexit
/opt/go/src/runtime/asm_amd64.s:2337
Error starting Simple chaincode: error trying to connect to local peer: context deadline exceeded
{code}
```","05/Oct/17 6:28 PM;muralisr;[~AdnanChoudhury] so the fact chaincode detects error and dies is a good thing... that's what I'd expect (btw, you might also see an error on the peer side in peer logs sooner than 5 mins).

I do not know why the launch fails. Prima facie that would appear to be a different problem than what we started with ... but don't mind looking into that here :).  Was the docker network connect issued on the peer ?

can you add CORE_CHAINCODE_LOGGING_LEVEL=debug and CORE_VM_DOCKER_ATTACHSTDOUT=true to peer services env and get peer logs please ? ","05/Oct/17 8:59 PM;AdnanChoudhury;[~muralisr] Attached the log file, yes, both the connect and disconnect were issued from the peer.","06/Oct/17 2:25 AM;muralisr;[~AdnanChoudhury] worked for me with standard e2e_cli test on latest master. Attaching peer0.org1.example.com.log.

Steps
# run e2e_cli to success
# docker network disconnect e2ecli_default peer0.org1.example.com
# wait for ""Deregister handler: mycc:1.0""  to show up on peer0.org1.example.com log (for the first test you might as well wait for the chaincode to go away too)
# docker network connect e2ecli_default peer0.org1.example.com
# docker exec -it cli bash
# CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_ADDRESS=peer0.org1.example.com:7051  peer chaincode query -C mychannel -n mycc -c '{""Args"":[""query"",""a""]}'

The chaincode comes up and the query succeeds.

 ","06/Oct/17 3:20 PM;AdnanChoudhury;[~muralisr] I also see the same result as yours when I follow your steps (it passes), my scenario was a bit different----I do some invokes on the non-disconnected peer (peer1.org1.example.com) while peer0.org0 is disconnected. So, after your step 3, I did



3a) invoke on peer1.org1
3b) query on peer1.org1

I ran the tests again, your scenario is passing while my one is failing.","06/Oct/17 9:16 PM;muralisr;worked for me ...  attached peer0.org1.example.com.with.extra.invoke
 # run e2e_cli to success
 # docker network disconnect e2ecli_default peer0.org1.example.com
 # wait for ""Deregister handler: mycc:1.0"" to show up on peer0.org1.example.com log (for the first test you might as well wait for the chaincode to go away too)
 # docker exec -it cli bash
 # CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer1.org2.example.com:7051 CORE_PEER_LOCALMSPID=Org2MSP peer chaincode invoke -C mychannel -n mycc -c '\{""Args"":[""invoke"",""a"", ""b"", ""10""]}' -o orderer.example.com:7050 --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
 # CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer1.org2.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer1.org2.example.com:7051 CORE_PEER_LOCALMSPID=Org2MSP peer chaincode query -C mychannel -n mycc -c '\{""Args"":[""query"",""a""]}' --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pemdocker network connect e2ecli_default peer0.org1.example.com
 # CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode query -C mychannel -n mycc -c ' \{""Args"":[""query"",""a""]}

 

I didn't wait after 6 but if you like wait for peer0.org1.example.com to die before doing 6 and 7.

 

By the way, you say

3a) invoke on peer1.org1
 3b) query on peer1.org1

but per e2e_cli it should be peer1.org2 .... I'm assuming typo.","10/Oct/17 2:48 PM;AdnanChoudhury;Hi [~muralisr], no that was not a typo, I do the invoke-query in peer1.Org1 during when peer0.Org1 is disconnected. So in short,

1) Bring up the network and channel
 2) install chaincode, instantiate-query-invoke in peer0.org1
 3) disconnect peer0.org1
 4)  query-invoke in peer1.org1 (after seeing ""deregister:mycc"" in peer0.org1 log)
 5) Connect peer0.org1 back
 6) Attempt to invoke and query in peer0.org1 fails

Can you please check this scenario? I am using images from a build that includes your CR, but it failed with the same timeout error.","11/Oct/17 8:37 PM;muralisr;[~AdnanChoudhury] I had to do a install on peer1.org1. So with that I was able to recreate the problem ... the interesting thing was that I was able to make it work by altering the steps a bit.

*Fails*
 # run e2e_cli to success
 # docker network disconnect e2ecli_default peer0.org1.example.com
 # wait for ""Deregister handler: mycc:1.0"" to show up on peer0.org1.example.com log (for the first test you might as well wait for the chaincode to go away too)
 # docker exec -it cli bash
 # install mycc on peer1.org1  CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_ADDRESS=peer1.org1.example.com:7051 peer chaincode install -n mycc -v 1.0 -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
 # invoke cc on peer1.org1 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_ADDRESS=peer1.org1.example.com:7051 peer chaincode invoke -o orderer.example.com:7050  --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n mycc -c '\{""Args"":[""invoke"",""a"",""b"",""10""]}'
 # docker network connect e2ecli_default peer0.org1.example.com
 # invoke cc on peer0.org1 (fails) CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode query -C mychannel -n mycc -c ' \{""Args"":[""query"",""a""]}

*Succeeds (do disconnect after bringing up peer1.org1)*
 # run e2e_cli to success
 # docker exec -it cli bash
 # install mycc on peer1.org1  CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_ADDRESS=peer1.org1.example.com:7051 peer chaincode install -n mycc -v 1.0 -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
 # invoke cc on peer1.org1 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_ADDRESS=peer1.org1.example.com:7051 peer chaincode invoke -o orderer.example.com:7050  --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n mycc -c '\{""Args"":[""invoke"",""a"",""b"",""10""]}'
 # *docker network disconnect e2ecli_default peer0.org1.example.com*
 # wait for ""Deregister handler: mycc:1.0"" to show up on peer0.org1.example.com log (for the first test you might as well wait for the chaincode to go away too)
 # docker network connect e2ecli_default peer0.org1.example.com
 # invoke cc on peer0.org1 (works) CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode query -C mychannel -n mycc -c ' \{""Args"":[""query"",""a""]}

*Succeeds (rm newly started CC on peer1.org1 before querying peer0.org1 again)*
 # run e2e_cli to success
 # docker network disconnect e2ecli_default peer0.org1.example.com
 # wait for ""Deregister handler: mycc:1.0"" to show up on peer0.org1.example.com log (for the first test you might as well wait for the chaincode to go away too)
 # docker exec -it cli bash
 # install mycc on peer1.org1  CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_ADDRESS=peer1.org1.example.com:7051 peer chaincode install -n mycc -v 1.0 -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
 # invoke cc on peer1.org1 CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_ADDRESS=peer1.org1.example.com:7051 peer chaincode invoke -o orderer.example.com:7050  --tls true --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n mycc -c '\{""Args"":[""invoke"",""a"",""b"",""10""]}'
 # docker network connect e2ecli_default peer0.org1.example.com
 # *docker rm -f dev-peer1.org1.example.com-mycc-1.0*
 # invoke cc on peer0.org1 (succeeds) CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt CORE_PEER_LOCALMSPID=""Org1MSP"" CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode query -C mychannel -n mycc -c ' \{""Args"":[""query"",""a""]}

Need to debug to get to the bottom....but let me know (1) if you see the same thing and (2) if you have any ideas ","11/Oct/17 9:58 PM;AdnanChoudhury;[~muralisr] For your scenario 3 (remove the CC in peer1.Org1 before querying peer0.org1), the heading says ""succeeds"" but step 9 says ""fails"". if it actually failed, then I observe the exact same behavior for the three cases.","11/Oct/17 10:09 PM;muralisr;_the heading says ""succeeds"" but step 9 says ""fails""_

I meant to say succeeds (copy paste error)... fixed that.   I was able to recreate your scenario and found two ways to make it work (on my laptop :) )","23/Oct/17 8:23 AM;cbl;For the scenario 3, I also got a failed result in step 9. The error message is like:
{quote}Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: timeout expired while starting chaincode mycc:1.0(networkid:dev,peerid:peer0.org1.example.com,tx:b5cc4b81115f86d01bee4ce767ac614a50058f3b3922d7f1a3434511f0f5ecdb) - <nil>
{quote}","23/Oct/17 11:48 AM;muralisr;[~cbl] I did work with [~AdnanChoudhury] to confirm that scenario 3 works for him. Wonder if there's something that's tripping you up.

In any case,  scenarios 2 and 3 are just exploratory.  If we don't do step6 on the first scenario, it works. The real question is why would starting up a new chaincode to a different peer1 cause chaincode on peer0 to fail after reconnect ?","02/Nov/17 3:47 AM;muralisr;[~cbl] as discussed offline I traced your suggestion to follow the changed IP address. Sure enough, the changed IP address after reconnect causes a problem as the original chaincode listener on peer0.org1.example.com continues to listen on the old address that was resolved by the peer0.org1.example.com hostname when the peer was started.

We can have CHAINCODE_LISTENADDRESS and CHAINCODE_CONNECTADDRESS with the former typically set to 0.0.0.0:7052 (listen on any IP) and the latter being the connecting host name for the chaincode. So for example, the addresses would like 

{code:java}
  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    extends:
      file: peer-base.yaml
      service: peer-base
    environment:
       ....
       ....
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_CHAINCODECONNECTADDRESS=peer0.org1.example.com:7052
       ....
       ....
{code}

Note that the peer has a similar pair of addresses too in core.yaml so this pattern is not new.

Do add any comments/corrections too please. ",02/Nov/17 8:55 AM;cbl;Will submit a CR to separate chaincode listen address and connect address to fix this issue.,"06/Nov/17 9:54 AM;cbl;The CR has been submitted to: [https://gerrit.hyperledger.org/r/#/c/15217/]

Feel free to review it. Thanks.","28/Nov/17 4:33 AM;scottz;Boliang, Did you rerun the fabric-test testcase successfully after merging your fix into the fabric repository?",28/Nov/17 6:05 AM;cbl;Haven't test that yet. Could you create a new issue with the error logs and assign it to me? Will take a look at that.,"29/Nov/17 10:18 PM;AdnanChoudhury;Tested the behave test specific for this FAB, passed in the CI (one-off test, not part of regular run)
https://jenkins.hyperledger.org/job/fabric-test-verify-x86_64/576/console","01/Dec/17 3:39 AM;cbl;Thanks to [~AdnanChoudhury]. 

[~scottz], if you find sth wrong, feel free to provide more details in a new issue.

This one has been closed.",01/Dec/17 1:04 PM;muralisr;[~cbl] thank you!,,,,,,,,,,,,,,,,,,,
"fix CI smoke tests in fabric-test behave peer.feature, intermittent failures",FAB-6331,21046,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,scottz,scottz,scottz,28/Sep/17 3:06 PM,04/Oct/17 5:50 PM,26/Apr/18 6:49 AM,04/Oct/17 5:50 PM,v1.0.2,,,,,fabric-quality,,,,,,0,,,,,,,,"[https://jenkins.hyperledger.org/view/fabric-test/job/fabric-test-daily-x86_64/test_results_analyzer/]  job 16
tests in component: peer

Analysis indicates we could probably harden all these by inserting some delays near the beginning.
 2 failed, FAB-1440 - failed query after deploy; need to insert sleep to allow instantiation
 2 failed, FAB-3505 - failed query after 1st invoke; need insert sleep before query
 2 failed, FAB-3865 - failed invoke/query - need to sleep to allow instantiation time for a specified cc
 2 failed, FAB-3866 - failed invoke/query - same as above
 Also make sure no test is run for both smoke and daily.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01o71:,,,,,,,,scottz,,,,,,,,,,,,,,,,master,,,true,"04/Oct/17 5:49 PM;scottz;[https://gerrit.hyperledger.org/r/#/c/13909/]

Fixed smoke tests and timings as specified below.

Note these 10 scenarios in DAILY suite still fail:
 5 chaincodes.feature scenarios (due to bug FAB-6271)
 FAB-4720,FAB-4721,FAB-4722,FAB-5790 parts 3,4
 2 gossip.feature scenarios FAB-4663,FAB-4667 for
 disconnect issues being investigated by Adnan
 3 orderer.feature scenarios for FAB-4770 failing
 intermittently (due to orderer bug FAB-6335)
 # Moved tests from smoke.feature into bootstrap.feature,
 and removed file smoke.feature.
 # Combined a couple smoke tests containing duplication.
 # Removed a tag for a test so it is not run for both the
 smoke and daily test suites.
 # Standardized and fixed up some peer.feature tests that
 were failing in CI test automation runs:
 - 2 failed tests, FAB-1440 - failed query after deploy;
 inserted sleep to allow instantiation
 - 2 failed tests, FAB-3505 - failed query after 1st invoke;
 inserted sleep before query
 - 2 failed tests, FAB-3865 - failed invoke/query -
 added sleep to allow instantiation time for a
 specified cc, and to allow time for invoke transactions
 to be batched and delivered before queried
 - 2 failed tests, FAB-3866 - failed invoke/query -
 same as above
 # Set delays after bootstrap a network, for all
 tests, to wait 5s for solo, 30s for kafka.
 And set delay of 15s for all tests after each
 deploy to allow time to start running the cc
 in the newly created container.
 # Enhanced some Scenario Outline titles, to include the
 parameter variables
 # Skipped the tests that set environment variables
 AND verified them. Although passing, something was
 not getting cleaned up because any test executed
 afterwards (in either the CI smoke test suite or
 the daily tests) often failed during setup or deploy.
 # Removed brackets from titles where unneeded.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
node chaincode shim throws error if extra command line parameters passed,FAB-6311,21017,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix@gmail.com,davidkel,davidkel,27/Sep/17 10:40 AM,05/Oct/17 3:37 PM,26/Apr/18 6:49 AM,05/Oct/17 3:37 PM,v1.1,,,v1.1,,fabric-chaincode-node,,,,,,0,,,,,,,,"With the imminent change from calling chaincode.js to npm start, it becomes possible for the chaincode writer to pass their own parameters to the chaincode to be processed as part of the chaincode initialisation story. Unfortunately the shim code throws an error if there are any command line parameters other than the ones it declares.

The problem is this line
{noformat}
let opts = CLIArgs(argsDef);
{noformat}
in the chaincode.js file. This needs to be changed to 
{noformat}
let opts = CLIArgs(argsDef, { partial: true });
{noformat}
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01o1h:,,,,,,,,davidkel,jimthematrix@gmail.com,,,,,,,,,,,,,,,master,,,true,02/Oct/17 10:39 PM;jimthematrix@gmail.com;https://gerrit.hyperledger.org/r/14097,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Channel Info persistency issue,FAB-6294,20997,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jyellick,JonathanLevi,JonathanLevi,26/Sep/17 2:20 PM,28/Sep/17 2:10 PM,26/Apr/18 6:49 AM,28/Sep/17 2:10 PM,,,,v1.1,,fabric-orderer,,,,,,0,Usability,,,,,,,"When I update channel, new channel info not accepted until I restart Fabric, but in version 1.0.2 it was working without restarting.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01nxh:,,,,,,,,JonathanLevi,jyellick,,,,,,,,,,,,,,,master,,,true,"26/Sep/17 2:24 PM;jyellick;The orderer message processor is retaining a reference to the old policy manager.  This used to be fine under the old scheme where the policy manager was stateful, but under the new simpler immutable semantics, this causes problems.",27/Sep/17 3:14 AM;jyellick;Fix via: https://gerrit.hyperledger.org/r/#/c/13865/,"28/Sep/17 2:34 AM;jyellick;This was introduced in master and has never been released, adjusted 'Affects Version' and 'Fix Version' to match.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Not able to run block-listener,FAB-6308,20981,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jeffgarratt,Amit04Patel,Amit04Patel,25/Sep/17 7:09 AM,01/Nov/17 2:37 PM,26/Apr/18 6:49 AM,01/Nov/17 2:37 PM,v1.0.2,,,,,fabric-peer,,,,,,0,help-wanted,v1.0,won't-fix,,,,,"Hi,
I am trying to implement block-listener using the code given here 
[https://github.com/hyperledger/fabric/tree/v1.0.0/examples/events/block-listener]

I have set CORE_PEER_TLS_ENABLED=false in docker-compose-cli.yaml and base/peer-base.yaml and 
ORDERER_GENERAL_TLS_ENABLED=false in base/docker-compose-base.yaml

but i am getting the following erros
when I try to run it from my local machine (Ubuntu 16.04)
root@ampapate-in:/scratch/Hyperledger1.0/fabric-examples/examples/events/block-listener# ./block-listener -events-address=0.0.0.0:7053 -events-from-chaincode=mycc:1.0 -events-mspdir=/scratch/Hyperledger1.0/fabric-examples/examples/e2e_cli/crypto-config/peerOrganizations/[org1.example.com/users/Admin|http://org1.example.com/users/Admin]\@org1.example.com/msp -events-mspid=Org1MSP
Event Address: 0.0.0.0:7053
could not start chat. err: rpc error: code = Internal desc = transport is closing
Error creating event client

and this when I try to run it from the client container
root@53776565f687:/opt/gopath/src/[github.com/hyperledger/fabric/examples/block-listener#|http://github.com/hyperledger/fabric/examples/block-listener] ./block-listener -events-address=0.0.0.0:7053 -events-from-chaincode=mycc:1.0 -events-mspdir=/opt/gopath/src/[github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp|http://github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp] -events-mspid=Org1MSP
Event Address: 0.0.0.0:7053
could not start chat. err: could not create client conn to 0.0.0.0:7053:context deadline exceeded
Error creating event client",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01nul:,,,,,,,,Amit04Patel,denyeart,jeffgarratt,mahendranmahesh,,,,,,,,,,,,,,,,,"26/Sep/17 5:35 AM;Amit04Patel;Is there any alternate way also of implementing event-listener i basically have to receive events on 7053 on final commit
 ",17/Oct/17 8:57 PM;denyeart;[~wlahti] Any ideas?,"26/Oct/17 6:51 PM;jeffgarratt;[~Amit04Patel] [~denyeart] your -events-address should be the address of a running peer.  For example, if local, -events-address=127.0.0.1:7053

Please comment back if this does NOT address your issue.  Marking with 'won't-fix', but don't worry, will leave this open for a bit for you to comment if still an issue.","27/Oct/17 9:33 AM;Amit04Patel;Hi [~jeffgarratt] 
The block-listener now works but sometimes with 127.0.0.1 or sometimes with 0.0.0.0 
when I am running it on the same machine where peers are running 
from my side, the issue is resolved
","01/Nov/17 2:37 PM;jeffgarratt;Thanks so much [~Amit04Patel], gonna close.  If any more issues please feel free to submit.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
shim.error from node chaincode doesn't send the error status code 500 to the peer,FAB-6271,20964,Bug,In Review,FAB,Fabric,software,ChristopherFerris,,,High,,nnao,Ratnakar,Ratnakar,22/Sep/17 3:14 PM,14/Feb/18 5:59 PM,26/Apr/18 6:49 AM,,v1.0.3,,,v1.2,,fabric-chaincode-node,,,,,,0,chaincode,ci_failure,quality,,,,,"Couldn't see HTTPerror *status code 500* as response to peer when there is an error (*shim.error*) thrown from chaincode.

*+Steps :+*

Used  chaincode_example02.go
 * Create state *a* and *b*
 * Delete the state *a*
 * Query for the state *a***Response we see in this case is :

 
{code:java}
Error: Error endorsing query: rpc error: code = Unknown desc = chaincode error (status: 500, message: {""Error"":""Nil amount for a""}) - <nil>
{code}
 

Used chaincode.js - written the above in nodejs

repeated the same steps given above and failure message we could see here is 
{code:java}
Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: transaction returned with failure: [32fdaf5d]Calling chaincode Invoke() returned error response [Error: {""Error"":""Nil amount for a""}]. Sending ERROR message back to peer - <nil>{code}",,,,,,,,,,,,,,FAB-6678,,,,,,,,,,,,,,,,,,0|i01nr1:,,,,,,,,denyeart,nnao,Ratnakar,,,,,,,,,,,,,,master,,,true,"22/Sep/17 5:39 PM;Ratnakar;Please refer the examle02 chaincode writen in node in here: 

https://github.com/hyperledger/fabric-test/tree/master/chaincodes/example02/node","02/Oct/17 3:36 PM;Ratnakar;+*Steps to reproduce the issue:*+

  **  ensure path is set for fabric binaries
 # git clone *[https://github.com/hyperledger/fabric-test]*
 # cd fabric-test/feature
 # behave n FAB---5790

error message :

 
{code:java}
Then a user receives an error response of status: 500 # steps/endorser_impl.py:336 0.000s
Assertion Failed: Expected response was status: 500; received Error occurred [u'docker exec peer0.org1.example.com /bin/bash -c ""CORE_PEER_MSPCONFIGPATH=/var/hyperledger/configs/14474b4fa78711e7b3d580e65025f612/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp CORE_PEER_LOCALMSPID=org1.example.com CORE_PEER_ID=peer0.org1.example.com CORE_PEER_ADDRESS=peer0.org1.example.com:7051 peer chaincode query --name mycc --ctor \'{\\""Args\\"": [\\""readMarble\\"",\\""marble201\\""]}\' --channelID behavesystest ""']: 2017-10-02 15:35:55.879 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2017-10-02 15:35:55.879 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2017-10-02 15:35:55.880 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 003 Using default escc
2017-10-02 15:35:55.880 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default vscc
2017-10-02 15:35:55.880 UTC [msp/identity] Sign -> DEBU 005 Sign: plaintext: 0A9E070A6B08031A0C08DBB9C9CE0510...6172626C650A096D6172626C65323031
2017-10-02 15:35:55.880 UTC [msp/identity] Sign -> DEBU 006 Sign: digest: 9F0B4C6076536D1DDE72A8C50FAD5EF55221CCA5D168B011B8F427F7128D3135
Error: Error endorsing query: rpc error: code = Unknown desc = error executing chaincode: transaction returned with failure: [76e70a4b]Calling chaincode Invoke() returned error response [Error: {""Error"":""Marble does not exist: marble201""}]. Sending ERROR message back to peer - <nil>
Usage:
peer chaincode query [flags]
Flags:
-C, --channelID string The channel on which this command should be executed (default ""testchainid"")
-c, --ctor string Constructor message for the chaincode in JSON format (default ""{}"")
-x, --hex If true, output the query value byte array in hexadecimal. Incompatible with --raw
-n, --name string Name of the chaincode
-r, --raw If true, output the query value as raw bytes, otherwise format as a printable string
-t, --tid string Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64
Global Flags:
--cafile string Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
--logging-level string Default logging level and overrides, see core.yaml for full syntax
-o, --orderer string Ordering service endpoint
--test.coverprofile string Done (default ""coverage.cov"")
--tls Use TLS when communicating with the orderer endpoint
--transient string Transient map of arguments in JSON encoding
-v, --version Display current version of fabric peer server{code}
 

 ","29/Nov/17 7:58 PM;nnao;I tried to reproduce this problem but FAB-5790 does not exist.
These codes merged into FAB-5791. I tried FAB-5791 and ended successfully.
I think this problem is fixed. May I close this JIRA?","29/Nov/17 8:12 PM;Ratnakar;Hi [~nnao], Thanks for working on this issue.

Node related tests been disabled due to this issue,  you have to uncomment them

[https://github.com/hyperledger/fabric-test/blob/master/feature/chaincodes.feature#L516], to test them against node.js chaincode.

 

Issue still exists in Node.js chaincode , Please uncomment and try again

 ","29/Nov/17 9:22 PM;nnao;Hi [~Ratnakar], Thanks for the comment. I will try this.",08/Jan/18 2:49 AM;denyeart;[~nnao] [~Ratnakar] Could you provide an update on this one?,"08/Jan/18 9:41 AM;nnao;[~denyeart] I am working on this bug.

This bug needs FAB-6387 patch and some minor bug fix for ""chaincodes.feature""
After applying those patch I tried a behave test like that.

{code:java}
$ behave -n FAB-5791 -k -D logs=y
{code}

I had success FAB-5791 test using nodejs chaincode, but I had fail FAB-5791 test using golang chaincode.
I got the following message:
{code:java}
less peer0.org1.example.com_FAB-5791\:_Test_API_in_SHIM_interface_using_marbles02_and_shimApiDriver_chaincodes_for_solo_orderer_leveldb_db_GOLANG_lang_--_@1.1_.log 
...
ESC[36m2018-01-08 09:02:32.331 UTC [stateleveldb] GetState -> DEBU 1854ESC[0m GetState(). ns=mycc, key=marble201
ESC[36m2018-01-08 09:02:32.331 UTC [chaincode] func1 -> DEBU 1855ESC[0m [cbe831ef]No state associated with key: marble201. Sending RESPONSE with an empty payload
ESC[36m2018-01-08 09:02:32.331 UTC [chaincode] 1 -> DEBU 1856ESC[0m [cbe831ef]handleGetState serial send RESPONSE
ESC[36m2018-01-08 09:02:32.332 UTC [chaincode] processStream -> DEBU 1857ESC[0m [cbe831ef]Received message COMPLETED from shim
...

$ less peer0.org1.example.com_FAB-5791\:_Test_API_in_SHIM_interface_using_marbles02_and_shimApiDriver_chaincodes_for_solo_orderer_leveldb_db_NODE_lang_--_@1.2_.log
ESC[36m2018-01-08 09:05:42.599 UTC [stateleveldb] GetState -> DEBU 1849ESC[0m GetState(). ns=mycc, key=marble201
ESC[36m2018-01-08 09:05:42.599 UTC [chaincode] func1 -> DEBU 184aESC[0m [2f43921e]No state associated with key: marble201. Sending RESPONSE with an empty payload
ESC[36m2018-01-08 09:05:42.599 UTC [chaincode] 1 -> DEBU 184bESC[0m [2f43921e]handleGetState serial send RESPONSE
ESC[36m2018-01-08 09:05:42.601 UTC [chaincode] processStream -> DEBU 184cESC[0m [2f43921e]Received message ERROR from shim
...
{code}

This test case(get marble201 key that does not exist) returns different value COMPLETED(GOLANG chaincode) and ERROR(NODE chaincode).
I think the behavior of GOLANG and NODE shim package is different in error case.


","11/Jan/18 7:45 PM;nnao;I send patches
- [https://gerrit.hyperledger.org/r/#/c/16779/]
- [https://gerrit.hyperledger.org/r/#/c/16781/]
These patches need FAB-6387 patches



 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ledgerstore uses re-entrant Rlock and deadlocks,FAB-6260,20953,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,yacovm,yacovm,yacovm,22/Sep/17 12:28 AM,23/Sep/17 12:25 PM,26/Apr/18 6:49 AM,23/Sep/17 12:25 PM,v1.1,,,v1.1,,fabric-ledger,,,,,,0,Ledger,,,,,,,"in *core/ledger/ledgerstore/store.go* there is a re-entrant RLock that might be while a Lock (write lock) comes in between.

If that happens, the 2nd RLock waits for the Lock to finish, which never does because its waiting for the 1st RLock to be RUnlocked.
{code:java}
func (s *Store) GetPvtDataAndBlockByNum(blockNum uint64, filter ledger.PvtNsCollFilter) (*ledger.BlockAndPvtData, error) {
	s.rwlock.RLock()                   // 1st RLock
	defer s.rwlock.RUnlock()
         ... 
	if pvtdata, err = s.GetPvtDataByNum(blockNum, filter); err != nil {
		return nil, err
	}
      
}
{code}
{code:java}
func (s *Store) GetPvtDataByNum(blockNum uint64, filter ledger.PvtNsCollFilter) ([]*ledger.TxPvtData, error) {
	s.rwlock.RLock()              // 2nd RLock
	defer s.rwlock.RUnlock()

        ... 
}
{code}
This causes the following stack trace while a peer tries to catch up his fellow peer:
{code:java}
goroutine 344 [semacquire, 2 minutes]:
sync.runtime_Semacquire(0xc4226bd6a8)
        /opt/go/src/runtime/sema.go:56 +0x39
sync.(*RWMutex).Lock(0xc4226bd6a0)
        /opt/go/src/sync/rwmutex.go:98 +0x6e
github.com/hyperledger/fabric/core/ledger/ledgerstorage.(*Store).CommitWithPvtData(0xc4226bb7a0, 0xc4202eaec0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/ledgerstorage/store.go:91 +0x5c
github.com/hyperledger/fabric/core/ledger/kvledger.(*kvLedger).CommitWithPvtData(0xc4225c3600, 0xc4202eaec0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:210 +0x28a
github.com/hyperledger/fabric/core/ledger/ledgermgmt.(*closableLedger).CommitWithPvtData(0xc42270f440, 0xc4202eaec0, 0x0, 0x0)
        <autogenerated>:1 +0x47
github.com/hyperledger/fabric/core/committer.(*LedgerCommitter).CommitWithPvtData(0xc421b40cc0, 0xc4202eaec0, 0xc421843d68, 0x1)
        /opt/gopath/src/github.com/hyperledger/fabric/core/committer/committer_impl.go:118 +0x6b
github.com/hyperledger/fabric/gossip/privdata.(*coordinator).StoreBlock(0xc421b41b90, 0xc425df2b20, 0x0, 0x0, 0x0, 0x0, 0x2830)
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:142 +0xae7
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock(0xc421c2d000, 0xc425df2b20, 0x0, 0x0, 0x0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:783 +0x7d
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads(0xc421c2d000)
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:556 +0x411
created by github.com/hyperledger/fabric/gossip/state.NewGossipStateProvider
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:254 +0x6b9


goroutine 346 [semacquire, 2 minutes]:
sync.runtime_Semacquire(0xc4226bd6ac)
        /opt/go/src/runtime/sema.go:56 +0x39
sync.(*RWMutex).RLock(0xc4226bd6a0)
        /opt/go/src/sync/rwmutex.go:50 +0x49
github.com/hyperledger/fabric/core/ledger/ledgerstorage.(*Store).GetPvtDataByNum(0xc4226bb7a0, 0x82, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/ledgerstorage/store.go:129 +0x66
github.com/hyperledger/fabric/core/ledger/ledgerstorage.(*Store).GetPvtDataAndBlockByNum(0xc4226bb7a0, 0x82, 0x0, 0x0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/ledgerstorage/store.go:119 +0xe4
github.com/hyperledger/fabric/core/ledger/kvledger.(*kvLedger).GetPvtDataAndBlockByNum(0xc4225c3600, 0x82, 0x0, 0xc42189ac28, 0xc42c213c28, 0x411b58)
        /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:233 +0x43
github.com/hyperledger/fabric/core/ledger/ledgermgmt.(*closableLedger).GetPvtDataAndBlockByNum(0xc42270f440, 0x82, 0x0, 0x7b4168, 0xc420299650, 0x5)
        <autogenerated>:1 +0x51
github.com/hyperledger/fabric/core/committer.(*LedgerCommitter).GetPvtDataAndBlockByNum(0xc421b40cc0, 0x82, 0xc421c2d580, 0xc42c213cb0, 0x7b4638)
        /opt/gopath/src/github.com/hyperledger/fabric/core/committer/committer_impl.go:131 +0x46
github.com/hyperledger/fabric/gossip/privdata.(*coordinator).GetPvtDataAndBlockByNum(0xc421b41b90, 0x82, 0x3, 0x3, 0x96000, 0x0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/privdata/coordinator.go:463 +0x58
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).handleStateRequest(0xc421c2d000, 0x157e240, 0xc432974600)
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:415 +0x42f
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).processStateRequests(0xc421c2d000)
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:372 +0x89
created by github.com/hyperledger/fabric/gossip/state.NewGossipStateProvider
        /opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:258 +0x6fd

{code}
 

The [following|https://play.golang.org/p/iixabWd98I] demonstrates the root cause of the problem in a simple way.

[~denyeart] [~manish-sethi] 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01nol:,,,,,,,,manish-sethi,yacovm,,,,,,,,,,,,,,,master,,,true,22/Sep/17 12:31 AM;yacovm;https://gerrit.hyperledger.org/r/#/c/13715/,22/Sep/17 5:14 PM;manish-sethi;uploaded a new patch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Profile name typo in sample documentation - visible usability problem,FAB-6133,20787,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,pvrbharg,pvrbharg,12/Sep/17 11:35 PM,03/Oct/17 8:39 AM,26/Apr/18 6:49 AM,29/Sep/17 9:27 PM,v1.0.2,,,v1.0.3,v1.1,fabric-examples,,,,,,0,Documentation,,,,,,,"The following should read ""SampleDevModeSolo"" - a letter ""e"" missing in the profile name

Add an organization / reconfig_membership example tutorial

 

[https://github.com/hyperledger/fabric/tree/release/examples/configtxupdate]

!image-2017-09-12-19-32-28-701.png!",,,,,,,,,,,,,,,,,,,,,,,,12/Sep/17 11:32 PM;pvrbharg;image-2017-09-12-19-32-28-701.png;https://jira.hyperledger.org/secure/attachment/12085/image-2017-09-12-19-32-28-701.png,,,,,,,,0|i01mr9:,,,,,,,,mastersingh24,pvrbharg,,,,,,,,,,,,,,,release-1.0,master,,true,16/Sep/17 11:45 AM;mastersingh24;https://gerrit.hyperledger.org/r/13543,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-test: (Behave framework) The deploy should not do join/create channel,FAB-6131,20785,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,AdnanChoudhury,AdnanChoudhury,AdnanChoudhury,12/Sep/17 3:54 PM,13/Sep/17 3:34 PM,26/Apr/18 6:49 AM,13/Sep/17 3:32 PM,,,,,,fabric-quality,,,,,,0,,,,,,,,"The deploy functionality should not handle join/create channel functionality, it is already handled by the setting up a channel or creating and joining a channel.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01mqt:,,,,,,,,AdnanChoudhury,,,,,,,,,,,,,,,,master,,,true,"13/Sep/17 3:34 PM;AdnanChoudhury;[https://gerrit.hyperledger.org/r/#/c/13367/]

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer will crash in Aliyun environment with CouchDB configured as statedb,FAB-6045,20626,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,xuanyue202,xuanyue202,06/Sep/17 8:36 AM,27/Nov/17 2:24 AM,26/Apr/18 6:49 AM,27/Nov/17 2:24 AM,,,,,,fabric-ledger,,,,,,0,,,,,,,,"We are using Hyperledger Fabric to do commercial customer project in China. And we found a very severe problem that Fabric cannot run in the largest IaaS cloud platform Aliyun with CouchDB configured as statedb. We tried different OS (from centos to ubuntu) and OS version and different docker-compose version (even the one ship with composer). The crash log is attached. We can provide VM environment for testing & debugging if needed. It blocks part of our work.

 

Peer log is too long to place here. I uploaded it to a Box folder which can be access from [https://ibm.box.com/s/7nwrncxjztktslf9s3yx7jtffrhonv1s]

 ","os: Ubuntu 16.04.2 LTS

kernel: 4.4.0-85-generic

cpu: Intel(R) Xeon(R) CPU E5-2680 v3 @ 2.50GHz 8 cores

mem: 16G

disk: 100G

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzyuz:zc,,,,,,,,denyeart,mastersingh24,xuanyue202,,,,,,,,,,,,,,,,,,"08/Sep/17 2:39 AM;denyeart;I see no  evidence of CouchDB problems in the log.  Do you suspect the problem is related to CouchDB for some reason?  Can the problem be reproduced when using leveldb as state database? 

Please enable trace (e.g. CORE_LOGGING_LEVEL=DEBUG) and re-post log.","08/Sep/17 10:12 AM;xuanyue202;Hi David, I reached the conclusion by controlling variable. As long as we switched from couchdb to leveldb, fabric can work. No other configuration changes. So we are sure this crash is caused by the adoption of couchdb - But not necessarily by couchdb itself.","01/Oct/17 1:25 PM;mastersingh24;Try setting the following env variable:

GODEBUG=""netdns=go"" when starting the peer","16/Oct/17 3:22 PM;denyeart;[~xuanyue202] Just checking back.  Were you able to get things working?  If not, please provide debug log requested, peer log with CORE_LOGGING_LEVEL=DEBUG  and GODEBUG=""netdns=go"" .

 ","27/Nov/17 2:24 AM;denyeart;The problem is not reproducible and have not heard back from reporter.  The issue will have to be closed.
[~xuanyue202] please re-open if you can still reproduce and provide the requested debug.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
golang chaincode containers do not reliably exit if peer dies,FAB-6017,20583,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,muralisr,greg.haskins,greg.haskins,02/Sep/17 12:05 PM,05/Oct/17 10:21 AM,26/Apr/18 6:49 AM,05/Oct/17 10:21 AM,v1.0.0,v1.0.1,,v1.1,,fabric-peer,,,,,,0,,,,,,,,"Chaincode processes form a GRPC link to the peer.  I have noted that in v1.0.1, it is possible to kill the peer and the chaincode containers continue to run.  Expected behavior is that the shim detects GRPC has severed and terminates the process which in turn will terminate the container.",,,,,,,,,,,,,,,,,,,FAB-6333,FAB-4461,,,,,,,,,,,,0|i01lk5:,,,,,,,,AdnanChoudhury,greg.haskins,muralisr,wutongtree,,,,,,,,,,,,,master,,,true,"02/Sep/17 3:23 PM;muralisr;[~greg.haskins] Killing the peer should tear the chat stream down and take down the grpc connection as well. I'll check to make sure if we are doing everything correctly on both sides of the connection.

Do you know in your scenario if there were multiple hops between chaincode and peer ?","05/Sep/17 2:27 PM;muralisr;[~greg.haskins] tried a few variations of ""kill peer while chaincode is up"" with chaincode in various states such as waiting for requests, processing requests (tried long lived using Sleep).... in all cases chaincode got killed and container exited with message like
{code:java}
2017-09-05 13:51:08.859 UTC [shim] func1 -> ERRO 001 Received error from server: rpc error: code = Internal desc = transport is closing, ending chaincode stream{code}

The one way I can think of such a scenario is if an intermediate proxy or something keeps the chaincode side connection open (which is why I was asking about multiple hops). Thoughts please ?","05/Sep/17 5:54 PM;greg.haskins;[~muralisr] context was running in Kubernetes (OpenShift Origin v3.6.0 to be exact).  While definitely funky networking takes place within k8s, I am not aware of any intermediate hops between endpoints.","25/Sep/17 3:15 PM;muralisr;[~greg.haskins] when testing something else I believe I ran into this situation - the chaincode container was up but the peer had gone away. I was able to get the stack though FWIW


{code:java}
goroutine 0 [idle]:
runtime.futex(0x10350d0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x7ffcd24f1ad8, 0x40fefb, ...)
        /opt/go/src/runtime/sys_linux_amd64.s:438 +0x21
runtime.futexsleep(0x10350d0, 0xc400000000, 0xffffffffffffffff)
        /opt/go/src/runtime/os_linux.go:45 +0x62
runtime.notesleep(0x10350d0)
        /opt/go/src/runtime/lock_futex.go:151 +0x9b
runtime.stopm()
        /opt/go/src/runtime/proc.go:1670 +0xe5
runtime.findrunnable(0xc420021900, 0x0)
        /opt/go/src/runtime/proc.go:2125 +0x4d2
runtime.schedule()
        /opt/go/src/runtime/proc.go:2245 +0x12c
runtime.park_m(0xc420068c00)
        /opt/go/src/runtime/proc.go:2308 +0xb6
runtime.mcall(0x7ffcd24f1c70)
        /opt/go/src/runtime/asm_amd64.s:286 +0x5b

goroutine 1 [chan receive]:
github.com/hyperledger/fabric/core/chaincode/shim.chatWithPeer(0xc420016017, 0x6, 0x7f28a2cf3068, 0xc420144880, 0xffe200, 0x105af38, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:334 +0x426
github.com/hyperledger/fabric/core/chaincode/shim.Start(0xffe200, 0x105af38, 0x89d1c4, 0xc420161f60)
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:145 +0x1a2
main.main()
        /chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02/chaincode_example02.go:203 +0x41
goroutine 20 [IO wait]:
internal/poll.runtime_pollWait(0x7f28a35b8f70, 0x72, 0x0)
        /opt/go/src/runtime/netpoll.go:173 +0x57
internal/poll.(*pollDesc).wait(0xc4201a2a98, 0x72, 0xffffffffffffff00, 0xffc8c0, 0xff6dd0)
        /opt/go/src/internal/poll/fd_poll_runtime.go:85 +0xae
internal/poll.(*pollDesc).waitRead(0xc4201a2a98, 0xc420266000, 0x8000, 0x8000)
        /opt/go/src/internal/poll/fd_poll_runtime.go:90 +0x3d
internal/poll.(*FD).Read(0xc4201a2a80, 0xc420266000, 0x8000, 0x8000, 0x0, 0x0, 0x0)
        /opt/go/src/internal/poll/fd_unix.go:125 +0x18a
net.(*netFD).Read(0xc4201a2a80, 0xc420266000, 0x8000, 0x8000, 0x3, 0xc420021900, 0xc420021970)
        /opt/go/src/net/fd_unix.go:202 +0x52
net.(*conn).Read(0xc42014c160, 0xc420266000, 0x8000, 0x8000, 0x0, 0x0, 0x0)
        /opt/go/src/net/net.go:176 +0x6d
bufio.(*Reader).Read(0xc4201821e0, 0xc420276038, 0x9, 0x9, 0xc4202a8330, 0xc420038d48, 0x840d47)
        /opt/go/src/bufio/bufio.go:213 +0x30b
io.ReadAtLeast(0xff8ac0, 0xc4201821e0, 0xc420276038, 0x9, 0x9, 0x9, 0x0, 0x400eae, 0xc420038e5f)
        /opt/go/src/io/io.go:309 +0x86
io.ReadFull(0xff8ac0, 0xc4201821e0, 0xc420276038, 0x9, 0x9, 0x4ecb1a0501, 0xc50000000000004e, 0x4e)
        /opt/go/src/io/io.go:327 +0x58
github.com/hyperledger/fabric/vendor/golang.org/x/net/http2.readFrameHeader(0xc420276038, 0x9, 0x9, 0xff8ac0, 0xc4201821e0, 0x0, 0x0, 0xc4201b73b0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:237 +0x7b
github.com/hyperledger/fabric/vendor/golang.org/x/net/http2.(*Framer).ReadFrame(0xc420276000, 0xffdb40, 0xc420188ea0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:492 +0xa4
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*framer).readFrame(0xc420188e70, 0xc420188ea0, 0xc420188ea0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http_util.go:608 +0x2f
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).reader(0xc420068600)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1115 +0xc0
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:267 +0xbd8

goroutine 21 [select]:
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).controller(0xc420068600)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1188 +0x142
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:297 +0xd0e

goroutine 22 [select]:
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).transportMonitor(0xc4202501c0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:995 +0x1de
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:716 +0x67a

goroutine 24 [select]:
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream.func3(0x1006320, 0xc420068600, 0xc420250000, 0xc4201922c0, 0xc420164700)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:255 +0x1cd
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:254 +0xe23
goroutine 25 [select]:
github.com/hyperledger/fabric/core/chaincode/shim.chatWithPeer.func1(0xc420186420, 0xc420144980, 0x7f28a2cf3068, 0xc420144880, 0xc420186480, 0xc420264150)
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:285 +0x207
created by github.com/hyperledger/fabric/core/chaincode/shim.chatWithPeer
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:267 +0x40f

goroutine 43 [select]:
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*recvBufferReader).Read(0xc4201470c0, 0xc42014a890, 0x5, 0x5, 0x0, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/transport.go:145 +0x2ec
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*transportReader).Read(0xc420189110, 0xc42014a890, 0x5, 0x5, 0x46ebde, 0xc4201647c0, 0xc4200580c0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/transport.go:349 +0x55
io.ReadAtLeast(0xffa140, 0xc420189110, 0xc42014a890, 0x5, 0x5, 0x5, 0xc420068600, 0xc420164700, 0x5)
        /opt/go/src/io/io.go:309 +0x86
io.ReadFull(0xffa140, 0xc420189110, 0xc42014a890, 0x5, 0x5, 0x17, 0x1db39, 0x1034580)
        /opt/go/src/io/io.go:327 +0x58
github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*Stream).Read(0xc420164700, 0xc42014a890, 0x5, 0x5, 0xa74da0, 0xc420195c20, 0xc420026dd8)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/transport.go:333 +0xbf
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*parser).recvMsg(0xc42014a880, 0x6400000, 0xc420021900, 0x0, 0xbe69bfa8ef99ba28, 0x9eb9dc9ab, 0x1034580, 0x1db39)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/rpc_util.go:265 +0x65
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.recv(0xc42014a880, 0x10030c0, 0x105af38, 0xc420164700, 0x0, 0x0, 0xa74da0, 0xc420195c70, 0x6400000, 0x0, ...)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/rpc_util.go:361 +0x4d
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*clientStream).RecvMsg(0xc4201922c0, 0xa74da0, 0xc420195c70, 0x0, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:398 +0xe6
github.com/hyperledger/fabric/protos/peer.(*chaincodeSupportRegisterClient).Recv(0xc420144880, 0xc420264150, 0xc420195c20, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/protos/peer/chaincode_shim.pb.go:372 +0x62
github.com/hyperledger/fabric/core/chaincode/shim.chatWithPeer.func1.1(0xc420144980, 0x7f28a2cf3068, 0xc420144880, 0xc4201864e0)
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:281 +0x35
created by github.com/hyperledger/fabric/core/chaincode/shim.chatWithPeer.func1
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:279 +0xdd1

rax    0xca
rbx    0x1034fc0
rcx    0x459d63
rdx    0x0
rdi    0x10350d0
rsi    0x0
rbp    0x7ffcd24f1aa0
rsp    0x7ffcd24f1a58
r8     0x0
r9     0x0
r10    0x0
r11    0x286
r12    0x1
r13    0xc4201864e0
r14    0x1
r15    0x0
rip    0x459d61
rflags 0x286
cs     0x33
fs     0x0
gs     0x0

{code}


I'd have expected 


{code:java}
github.com/hyperledger/fabric/protos/peer.(*chaincodeSupportRegisterClient).Recv(0xc420144880, 0xc420264150, 0xc420195c20, 0x0)
        /opt/gopath/src/github.com/hyperledger/fabric/protos/peer/chaincode_shim.pb.go:372 +0x62
github.com/hyperledger/fabric/core/chaincode/shim.chatWithPeer.func1.1(0xc420144980, 0x7f28a2cf3068, 0xc420144880, 0xc4201864e0)
        /opt/gopath/src/github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go:281 +0x35

{code}

to exit

Will try to recreate now that I know it happens in my env too.","02/Oct/17 12:30 AM;muralisr;[~greg.haskins] I can now reliably recreate this by doing
{noformat}
docker network disconnect <peers network ID> <peer container>
{noformat}
After that the chaincode sticks around even if the peer is killed. Turn grpc keepalive unblocks and triggers errors. Something like that maybe a good thing to do in general to take of network delinks. We can try and see if this works in your environment to quickly check feasibility.","04/Oct/17 4:26 PM;muralisr;[~greg.haskins] when the chaincode-peer connection gets disconnected link level, bad things can happen on both sides. This is easily fixed by using gRPC keepalive support https://jira.hyperledger.org/browse/FAB-4305 (thanks [~mastersingh24] ). Will put out a CR for this ....

As an aside this should also help https://jira.hyperledger.org/browse/FAB-6333 [~AdnanChoudhury] .",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Auto-vendoring causes deployment failure in latest chaintool,FAB-5982,20538,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,greg.haskins,greg.haskins,greg.haskins,31/Aug/17 3:58 AM,08/Jan/18 1:24 PM,26/Apr/18 6:49 AM,08/Jan/18 1:24 PM,,,,,,fabric-chaintool,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01lal:,,,,,,,,denyeart,greg.haskins,,,,,,,,,,,,,,,,,,,27/Nov/17 2:22 AM;denyeart;[~greg.haskins] Anything else need to be done for this item?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB - documents deleted in multiple batches cause an error,FAB-5973,20528,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,chris.elder,chris.elder,chris.elder,30/Aug/17 2:35 PM,17/Oct/17 8:44 PM,26/Apr/18 6:49 AM,17/Oct/17 8:44 PM,,,,,,,,,,,,0,,,,,,,,"CouchDB will throw an error if a document is deleted in more than one update batch.  The first batch actually deletes the document, but if the delete is included in a subsequent batch an exception will be thrown since the document revision will not be resolved correctly.   In this case, the batch update should ignore documents that are already deleted.   Update documents are not impacted since the update operation can correctly resolve the CouchDB revision info.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01l8d:,,,,,,,,chris.elder,denyeart,,,,,,,,,,,,,,,master,,,true,17/Oct/17 8:44 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/13041/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetVersion method returns nil ,FAB-5887,20360,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,chris.elder,chris.elder,chris.elder,23/Aug/17 1:42 PM,30/Aug/17 2:39 PM,26/Apr/18 6:49 AM,30/Aug/17 2:39 PM,,,,,,fabric-ledger,,,,,,0,,,,,,,,The GetVersion method in statecouchdb may return null if a new key is added and GetVersion is immediately called.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01kd9:,,,,,,,,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,"29/Aug/17 6:09 PM;denyeart;[~chris.elder] Can you expand on the problem?

I thought we were ok since GetVersion() would be called during validation of block N, values would get updated during commit of block N, and then cache would be cleared before next call of GetVersion() during validation of block N+1.  Note, cache is getting cleared in this CR: https://gerrit.hyperledger.org/r/#/c/12669/4/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/lockbased_txmgr.go.",30/Aug/17 2:39 PM;chris.elder;This has been resolved by [FAB-5867].,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The order module has some repeat code.,FAB-5866,20321,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,TopJohn,TopJohn,TopJohn,22/Aug/17 4:43 AM,22/Aug/17 4:47 AM,26/Apr/18 6:49 AM,22/Aug/17 4:47 AM,,,,,,fabric-orderer,,,,,,0,orderer,,,,,,,The core/comm/server.go has repeated code at line 170 171.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01k65:,,,,,,,,TopJohn,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"err The supplied identity is not valid, Verify() returned x509: certificate signed by unknown authority",FAB-5851,20302,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,pvrbharg,pvrbharg,20/Aug/17 12:22 AM,17/Oct/17 10:03 PM,26/Apr/18 6:49 AM,17/Oct/17 10:03 PM,,,,,,fabric-crypto,,,,,,0,,,,,,,,"I need help - I am trying to configure first-net tutorial to work with crypto-config that uses an external root with one intermediate CA. The configuration is customized for customer test sandbox environment - with FQDN and the customer provided CN names. We are also using same set of certificates for tlsca as well as ca (app) with both CA providers being same externally well known CA.

I can demo our issue in a webex and/or provide all details for you to look at.

At this point - I need help to progress my customer project as this issue is holding up their PoC pilot project. 

Here is the actual error message:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

2017-08-19 17:35:55.211 UTC [main] main -> ERRO 001 Cannot run peer because error when setting up MSP from directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.abcd.com/users/Admin@org1.abcd.com/msp: err CA Certificate is not valid, (SN: 14347142274732774646150233778247550482) [Could not obtain certification chain, err The supplied identity is not valid, Verify() returned x509: certificate signed by unknown authority]
!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 ",,,,,,,,,,,,,,,,,,,,,,,,24/Aug/17 10:42 PM;pvrbharg;AMEX-DockerContainerLogs-Aug242017.zip;https://jira.hyperledger.org/secure/attachment/11944/AMEX-DockerContainerLogs-Aug242017.zip,23/Aug/17 8:03 PM;pvrbharg;FAB-5851DockerContainerLogs.zip;https://jira.hyperledger.org/secure/attachment/11930/FAB-5851DockerContainerLogs.zip,24/Aug/17 1:22 AM;pvrbharg;SKYTAPHosted-dockerContainerLogs4FabricSamplesFirst-networkJSONFormatedLogs.zip;https://jira.hyperledger.org/secure/attachment/11932/SKYTAPHosted-dockerContainerLogs4FabricSamplesFirst-networkJSONFormatedLogs.zip,,,,,,0|i01k1x:,,,,,,,,pvrbharg,yacovm,,,,,,,,,,,,,,,,,,,17/Oct/17 10:03 PM;yacovm;I confirmed with !https://secure.gravatar.com/avatar/e7381069cbbc71b71b6b5cbdc289d40e?d=mm&s=24! BHARGAV PEREPA  that the issue no longer persists.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"coming late to the party, lagging peer crashes due to exhaustion",FAB-5849,20300,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,yacovm,scottz,scottz,19/Aug/17 3:00 PM,02/Oct/17 9:15 PM,26/Apr/18 6:49 AM,24/Sep/17 2:01 PM,v1.0.1,,,v1.0.3,v1.1,fabric-gossip,fabric-peer,,,,,0,,,,,,,,"+Summary+:  A lagging nonleader peer has memory exhaustion and crashes while trying to catch up. A new gossip-non-leader peer resets 6-10 mins after joining a network channel when existing peers ledger exceeds 20000 blocks. It recovers close to 2000 blocks and then crashes. Also, but rarely, a peer that joins and becomes a gossip-orgleader crashes (say 1 out of 10 times). This happens on v1.0.1, with and without the solution FAB-5793.

+Scenario+
 # Establish a network using docker swarm with multihost configuration. Refer to attached configuration files. Create one channel which has processed and written more than 10000 transactions to the ledger. For all peers, set CORE_PEER_GOSSIP_USELEADERELECTION=false. With two peers in one org, set one peer as leader (CORE_PEER_GOSSIP_ORGLEADER=true) and set the other one as nonleader (CORE_PEER_GOSSIP_ORGLEADER=false).
 # Join a third peer, set as nonleader (CORE_PEER_GOSSIP_ORGLEADER=false).
 # We turned on gossip debug logs and could see the peer requesting 10 blocks at a time from neighboring peers and gradually trying to ""catch up"" its ledger closer to the size of the existing peers. (As expected, we do not see any logs saying ""cannot enqueue block with sequence of"", because the inflow of blocks to the new peer is only in groups of 10 at a time, as requested by the peer itself. A different test, when a peer joins and becomes an orgleader and connects to an orderer, produces different behavior which makes use of the ""blocking"" solution of FAB-5793.)
 # The new peer spontaneously resets, without any error logs in the peer container logs, after about 10 mins after joining new peer.

+Observations+
 * It appears to be a memory exhaustion problem.
 * It happened quickly.
 * It can be reproduced every attempt.
 * We tried configuring the ""newly joining peer"" on different host, and observed same problem.
 * And, when joining peer as an orgleader, we saw it happen once or twice in about 11 attempts.
 * We executed ""top"" in the host which contained docker containers for this new peer as well as a few others, and we noticed +CPU usage > 100%+ and noticed +memory usage climbing quickly past 50% and above 90% after 3 minutes.+ We captured some other linux system logs too.

{code:java}
top - 14:46:20 up 51 days, 4:27, 1 user, load average: 4.88, 3.69, 2.76
 Tasks: 196 total, 4 running, 192 sleeping, 0 stopped, 0 zombie
 %Cpu(s): 32.9 us, 30.2 sy, 0.0 ni, 31.8 id, 3.8 wa, 0.0 hi, 1.3 si, 0.0 st
 KiB Mem : 8175024 total, 156032 free, 7795564 used, 223428 buff/cache
 KiB Swap: 4194300 total, 1944476 free, 2249824 used. 98044 avail Mem

PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND 
 18027 root 20 0 9584564 7.084g 5704 S 120.5 90.9 5:23.09 peer 
 1650 root 20 0 111756 436 352 R 99.7 0.0 27199:48 x11vnc 
 19591 root 20 0 2861080 53368 10508 S 16.9 0.7 433:22.16 dockerd 
 18008 root 20 0 421516 1992 0 S 6.0 0.0 0:18.76 docker-containe 
 44 root 20 0 0 0 0 S 4.3 0.0 1:27.28 kswapd0

{code}
Looking in file /var/log/kern.log , we saw:
{code:java}
 Aug 17 16:55:39 multihost15 kernel: [4430259.788325] Out of memory: Kill process 23925 (peer) score 931 or sacrifice child
 Aug 17 16:55:39 multihost15 kernel: [4430259.788338] Killed process 23925 (peer) total-vm:11930304kB, anon-rss:7676004kB, file-rss:0kB

{code}
Looking in file /var/log/syslog , we saw:
{code:java}
Aug 17 16:55:43 multihost15 dockerd[19591]: time=""2017-08-17T16:55:43.129099623-04:00"" level=error msg=""fatal task error"" error=""task: non-zero exit (137)"" module=""node/agent/taskmanager"" node.id=ziblrz0z5ntplqueaq7o3zqhp service.id=nmjcpxd55wj0k83u7qjn3i3n8 task.id=sbjyia9kduyrwrst7su2aeouh

{code}
 Here are the environment variables used for the lagging peer:
{code:java}
CORE_PEER_ADDRESSAUTODETECT=false \
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock \
CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=basic \
CORE_LOGGING_LEVEL=ERROR \
CORE_PEER_TLS_ENABLED=true \
CORE_PEER_COMMITTER_ENABLED=true \
CORE_PEER_GOSSIP_ORGLEADER=false \
CORE_PEER_GOSSIP_USELEADERELECTION=false \
CORE_PEER_PROFILE_ENABLED=true \
CORE_PEER_ADDRESS=peer2.org1.example.com:7051 \
CORE_PEER_ID=peer2.org1.example.com \
CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp \
CORE_PEER_LOCALMSPID=Org1MSP \
CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051 \
CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt \
CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key \
CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt \
{code}
 ",,,,,,,,,,,,,,,,,,,,,,,,15/Sep/17 7:55 PM;suryalnvs;5849.tar.gz;https://jira.hyperledger.org/secure/attachment/12119/5849.tar.gz,21/Aug/17 1:48 PM;suryalnvs;fail_peer.log;https://jira.hyperledger.org/secure/attachment/11916/fail_peer.log,,,,,,,0|i01k1h:,,,,,,,,C0rWin,muralisr,scottz,suryalnvs,yacovm,,,,,,,,,,,,release-1.0,master,,true,21/Aug/17 1:49 PM;suryalnvs;Attached the lagging peer log,"28/Aug/17 2:17 PM;yacovm;Hi.

Can this be reproduced with using solely docker-compose? Can you please provide an adequate docker-compose file and a script that reproduces the problem?","28/Aug/17 7:41 PM;suryalnvs;[~yacovm] We are using multihost setup using docker swarm. We do not use any docker-compose file for this setup. 

For more details, you can refer https://github.com/suryalnvs/multihost_swarm_1.0.1/

Please let me know, if you need more information.  ","28/Aug/17 8:52 PM;yacovm;OK, assuming I install these [prerequisites|https://github.com/suryalnvs/startup_scripts/blob/master/setup_prereq.sh] for docker-swarm, can you please provide me with a script that if I run it (on a single VM) - I can reproduce the problem? ","06/Sep/17 11:16 AM;C0rWin;> Establish a network using docker swarm with multihost configuration. Refer to attached configuration files.

Can you please attach those files, since only attachment I can see is the errors logs file. ","06/Sep/17 3:25 PM;scottz;[~C0rWin]  Note Surya provided a link to the files:  you can refer [https://github.com/suryalnvs/multihost_swarm_1.0.1/] where you can see how the peers are configured on the multiple hosts.

I suppose one could also try reproducing on a single host, without using swarm. I would suggest reducing other factors as much as possible, such as using solo orderer and just 2 peers in one org (and create and join the second peer as a nonleader only AFTER you executed 20000 transactions on the first). We did not try to reproduce it that way, but it might be sufficient for debugging the problem.","06/Sep/17 7:45 PM;yacovm;{quote}I suppose one could also try reproducing on a single host, without using swarm. I would suggest reducing other factors as much as possible, such as using solo orderer and just 2 peers in one org (and create and join the second peer as a nonleader only AFTER you executed 20000 transactions on the first). We did not try to reproduce it that way, but it might be sufficient for debugging the problem.{quote}

Thanks for the tips, Scott.
Ruling out factors that don't effect the problem helps zooming in on the problem itself. 
Can you perhaps help [~suryalnvs] with providing us a script that reproduces the bug? ",07/Sep/17 5:32 PM;muralisr;[~scottz] just following on [~yacovm] request above... did we provide a script to isolate / recreate ?,07/Sep/17 7:33 PM;scottz;[~suryalnvs] is trying to develop a script that runs on a single machine and retest. Then he will share it.,"12/Sep/17 7:26 PM;suryalnvs;I was able to reproduce this issue and attaching the tar file for the docker-compose which launches the network on a single machine. untar the docker-compose.tar.gz and run the following command from fabric-docker-compose-svt directory.
{code:java}
./network_setup.sh -s -f docker-compose-e2e.yaml {code}
and used PTE tool to do the create, join, install, instantiate and sending invokes.

Launched the network, created the channel, joined only peer0.org1.example.com to the channel, installed and instantiated the chaincode. Waited for accumulating around 8000 blocks and then joined the peer1.org1.example.com, then observed the crash after some time(around 5 to 7 minutes).

 ","15/Sep/17 1:31 PM;yacovm;I don't see such a file named network_launch.sh in the tar.gz file.

Is it possible that you provide a script that performs the instructions you listed to produce the problem? ","15/Sep/17 1:56 PM;suryalnvs;[~yacovm] Apologies, it is network_setup.sh, I updated the command in my previous comment as well.

Sure, I will work on it and will update with a single script to perform all the steps to this bug.","15/Sep/17 8:03 PM;suryalnvs;[~yacovm] I have attached 5849.tar.gz with all the necessary compose files and PTE tool to drive the test. Untar the file and run the follow command which does start the network, create the channel, join peer0.org1.example.com to channel, install and instantiate the chaincode, and then launch a longrun of invokes on peer0.org1.example.com for about 6 hrs (to generate the huge number of blocks).
{code:java}
./5849_replication.sh -m up 
{code}
Then join the 2nd peer of org1 to channel by running the following command
{code:java}
./5849_replication.sh -m join
{code}
To repeat the process of rejoining the peer1.org1.example.com to channel, you can use the above the command which does killing the peer1.org1.example.com, restarts it and then joins the peer to channel.

To remove the network, run the following the command
{code:java}
./5849_replication.sh -m down
{code}
Please let me know, if you any have any questions.","16/Sep/17 2:25 PM;yacovm;you have any idea what I need to do to make it work? 

{code}
Launching the network
WARNING: The ENABLE_TLS variable is not set. Defaulting to a blank string.
Removing network fabricdockercomposesvt_default
WARNING: Network fabricdockercomposesvt_default not found.
---- No containers available for deletion ----
---- No images available for deletion ----
mychannel

Using cryptogen -> /opt/gopath/src/github.com/hyperledger/fabric/build/bin/cryptogen

##########################################################
##### Generate certificates using cryptogen tool #########
##########################################################
org1.example.com
org2.example.com

Using configtxgen -> /opt/gopath/src/github.com/hyperledger/fabric/build/bin/configtxgen
##########################################################
#########  Generating Orderer Genesis block ##############
##########################################################
2017-09-16 09:43:47.251 EDT [common/tools/configtxgen] main -> INFO 001 Loading configuration
2017-09-16 09:43:47.283 EDT [common/tools/configtxgen] doOutputBlock -> INFO 002 Generating genesis block
2017-09-16 09:43:47.284 EDT [common/tools/configtxgen] doOutputBlock -> INFO 003 Writing genesis block

#################################################################
### Generating channel configuration transaction 'channel.tx' ###
#################################################################
2017-09-16 09:43:47.304 EDT [common/tools/configtxgen] main -> INFO 001 Loading configuration
2017-09-16 09:43:47.308 EDT [common/tools/configtxgen] doOutputChannelCreateTx -> INFO 002 Generating new channel configtx
2017-09-16 09:43:47.308 EDT [common/tools/configtxgen] doOutputChannelCreateTx -> INFO 003 Writing new channel tx

#################################################################
### Generating anchor peer update for Org1MSP/Org2MSP/Org3MSP ###
#################################################################
2017-09-16 09:43:47.327 EDT [common/tools/configtxgen] main -> INFO 001 Loading configuration
2017-09-16 09:43:47.330 EDT [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 002 Generating anchor peer update
2017-09-16 09:43:47.331 EDT [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 003 Writing anchor peer update
2017-09-16 09:43:47.350 EDT [common/tools/configtxgen] main -> INFO 001 Loading configuration
2017-09-16 09:43:47.354 EDT [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 002 Generating anchor peer update
2017-09-16 09:43:47.354 EDT [common/tools/configtxgen] doOutputAnchorPeersUpdate -> INFO 003 Writing anchor peer update


Creating network ""fabricdockercomposesvt_default"" with the default driver
Creating zookeeper0
Creating peer0.org1.example.com
Creating zookeeper2
Creating zookeeper1
Creating ca_peerOrg1
Creating peer0.org2.example.com
Creating peer1.org2.example.com
Creating ca_peerOrg2
Creating peer1.org1.example.com
Creating kafka3
Creating kafka0
Creating kafka1
Creating kafka2
Creating orderer1.example.com
Creating orderer0.example.com
Creating orderer2.example.com
Error: No such container: cli
Installing node modules for fabric-sdk-node
fabric-sdk-node@1.0.2 /home/ibmadmin/5849/fabric-sdk-node
├── node-pre-gyp@0.6.36
└── singly-linked-list@0.2.7  extraneous

npm WARN optional Skipping failed optional dependency /chokidar/fsevents:
npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.1.2
fabric-sdk-node@1.0.2 /home/ibmadmin/5849/fabric-sdk-node
├── node-pre-gyp@0.6.36
└── singly-linked-list@0.2.7  extraneous

npm WARN optional Skipping failed optional dependency /chokidar/fsevents:
npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.1.2
[09:44:29] Working directory changed to ~/5849/fabric-sdk-node

####################################################
# debug log: /tmp/hfc/test-log/debug.log
####################################################

/home/ibmadmin/5849/fabric-sdk-node/build/tasks/watch.js:6
let gulp = require('gulp'),
^^^

SyntaxError: Block-scoped declarations (let, const, function, class) not yet supported outside strict mode
    at exports.runInThisContext (vm.js:53:16)
    at Module._compile (module.js:374:25)
    at Object.Module._extensions..js (module.js:417:10)
    at Module.load (module.js:344:32)
    at Function.Module._load (module.js:301:12)
    at Module.require (module.js:354:17)
    at require (internal/module.js:12:17)
    at requireDir (/home/ibmadmin/5849/fabric-sdk-node/node_modules/require-dir/index.js:123:33)
    at Object.<anonymous> (/home/ibmadmin/5849/fabric-sdk-node/gulpfile.js:10:1)
    at Module._compile (module.js:410:26)
    at Object.Module._extensions..js (module.js:417:10)
    at Module.load (module.js:344:32)
    at Function.Module._load (module.js:301:12)
    at Module.require (module.js:354:17)
    at require (internal/module.js:12:17)
    at Liftoff.handleArguments (/home/ibmadmin/5849/fabric-sdk-node/node_modules/gulp/bin/gulp.js:116:3)
mkdir: cannot create directory ‘/opt/gopath/src/sample_cc’: File exists
==============Creating the channel==================
./pte_driver.sh inFile= userInputs/runCases-chan-create-TLS.txt, tStart=0 iPTE=0
sdk type supported: sdk=node
sdk type unknown: #sdk=node
sdk type unknown: #sdk=node
Node Array: userInputs/samplecc-chan1-create-TLS.json
executing 1 node requests
iPTE: 0, nInstances: 1, tStart: 1505569494285
execution: userInputs/samplecc-chan1-create-TLS.json
no python requests
no java requests
module.js:328
    throw err;
    ^

Error: Cannot find module '/home/ibmadmin/5849/fabric-sdk-node/node_modules/grpc/src/node/extension_binary/node-v46-linux-x64/grpc_node.node'
    at Function.Module._resolveFilename (module.js:326:15)
    at Function.Module._load (module.js:277:25)
    at Module.require (module.js:354:17)
    at require (internal/module.js:12:17)
    at Object.<anonymous> (/home/ibmadmin/5849/fabric-sdk-node/node_modules/grpc/src/node/src/grpc_extension.js:30:15)
    at Module._compile (module.js:410:26)
    at Object.Module._extensions..js (module.js:417:10)
    at Module.load (module.js:344:32)
    at Function.Module._load (module.js:301:12)
    at Module.require (module.js:354:17)
    at require (internal/module.js:12:17)
{code}
","18/Sep/17 7:08 PM;suryalnvs;From the error, I think it is something to do with the node version. In my case, I tested the script on multiple machines with node version 6.9.5 and npm version 3.10.10 to make sure, it worked as expected.

We are working with Yacov in RocketChat,  we suggested the following to generate the blocks faster than given in the initial scripts and this may be useful for anybody who wants to reproduce faster.

Change the
{code:java}
""nProcPerOrg"": ""4""
{code}
to
{code:java}
""nProcPerOrg"": ""8""
{code} in 
{code:java}
 fabric-sdk-node/test/v1performance/userInputs/samplecc-chan1-longrun1-i-TLS.json
{code}
and then restart the test.","23/Sep/17 1:41 PM;yacovm;I ran the PTE as you advised and generated 8000 blocks:

 
{code:java}
docker logs -f peer0.org1.example.com 2>&1 | grep ""Created""

2017-09-23 13:04:29.623 UTC [gossip/state] commitBlock -> DEBU 310d5 Channel [mychannel]: Created block [8005] with 100 transaction(s)
2017-09-23 13:04:30.239 UTC [kvledger] CommitWithPvtData -> INFO 310ee Channel [mychannel]: Created block [8006] with 100 transaction(s)
2017-09-23 13:04:30.251 UTC [gossip/state] commitBlock -> DEBU 310f0 Channel [mychannel]: Created block [8006] with 100 transaction(s)
2017-09-23 13:04:32.320 UTC [kvledger] CommitWithPvtData -> INFO 3111c Channel [mychannel]: Created block [8007] with 93 transaction(s)
2017-09-23 13:04:32.327 UTC [gossip/state] commitBlock -> DEBU 3111e Channel [mychannel]: Created block [8007] with 93 transaction(s)
{code}
 

Next I executed the join: *./5849_replication.sh -m join*
{code:java}
info: [PTE 0 main]: [joinChannel] Successfully joined peers in (mychannel:Org1MSP)
{code}
 

Now I tracked the logs of *peer1.org1.example.com* and it was replicating blocks from peer0.org1.example.com in a speed of 5 blocks per second.

After about 700 blocks, linux killed it:
{quote}[2597959.961461] Memory cgroup out of memory: Kill process 6044 (peer) score 526 or sacrifice child
 [2597959.961467] Killed process 6044 (peer) total-vm:3745532kB, anon-rss:2095428kB, file-rss:8424kB
{quote}
 

I think this happens because although the state transfer attempts to fetch from a peer 10 blocks at a time, it does so repeatedly for all the missing blocks it has (8000) and the blocks are simply enqueued in the payload buffer.

Now, the problem here is that the commit is much slower than state transfer so we have a process (state transfer) that pours blocks into the payload buffer in a much higher rate than the process that consumes the payload buffer (the commit of the blocks and especially their validation, which is (still) single-threaded and involves expensive crypto computations)) so the payload buffer piles up and eventually the memory explodes.

I uploaded a fix:

[https://gerrit.hyperledger.org/r/#/c/13763/]

1)  Do you want to check and see if it fixes it? 

2) Thanks a lot for the find!","24/Sep/17 11:21 AM;yacovm;BTW I tested it and I think it works:

Peer1 is catching up while peer0 is still receiving blocks:
{code:java}
2017-09-24 11:18:52.764 UTC [gossip/state] commitBlock -> DEBU 7943 Channel [mychannel]: Created block [1343] with 100 transaction(s)
2017-09-24 11:18:52.957 UTC [kvledger] CommitWithPvtData -> INFO 794b Channel [mychannel]: Created block [1344] with 100 transaction(s)
2017-09-24 11:18:52.977 UTC [gossip/state] commitBlock -> DEBU 7956 Channel [mychannel]: Created block [1344] with 100 transaction(s)
2017-09-24 11:18:53.228 UTC [kvledger] CommitWithPvtData -> INFO 795e Channel [mychannel]: Created block [1345] with 100 transaction(s)
2017-09-24 11:18:53.235 UTC [gossip/state] commitBlock -> DEBU 7960 Channel [mychannel]: Created block [1345] with 100 transaction(s)
2017-09-24 11:18:53.410 UTC [kvledger] CommitWithPvtData -> INFO 797f Channel [mychannel]: Created block [1346] with 100 transaction(s)
2017-09-24 11:18:53.417 UTC [gossip/state] commitBlock -> DEBU 7981 Channel [mychannel]: Created block [1346] with 100 transaction(s)
2017-09-24 11:18:53.572 UTC [kvledger] CommitWithPvtData -> INFO 7989 Channel [mychannel]: Created block [1347] with 100 transaction(s)
2017-09-24 11:18:53.579 UTC [gossip/state] commitBlock -> DEBU 798b Channel [mychannel]: Created block [1347] with 100 transaction(s)
2017-09-24 11:18:53.828 UTC [kvledger] CommitWithPvtData -> INFO 799c Channel [mychannel]: Created block [1348] with 100 transaction(s)
{code}

{code}
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root     11785  0.9  0.1 477232  6760 ?        Ssl  05:26   1:03 peer node start --peer-defaultchain=false
root     12382 63.1 15.4 1496704 625160 ?      Rsl  05:26  71:38 peer node start --peer-defaultchain=false
root     12681  0.9  0.1 264232  7860 ?        Ssl  05:26   1:04 peer node start --peer-defaultchain=false
root     15650  7.1  0.1 429840  5372 ?        Ssl  05:28   7:58 chaincode -peer.address=peer0.org1.example.com:7052
root     16249 58.1 19.9 1413888 808964 ?      Ssl  07:12   4:22 peer node start --peer-defaultchain=false
{code}

The memory consumption of the peers is around 1.4GB which is what it's usually is.",25/Sep/17 12:49 AM;suryalnvs;Thank you [~yacovm]. I will rerun the test with the fix and will update the result in here.,28/Sep/17 12:53 PM;suryalnvs;Retested and working as expected without crashing with the fix.,,,,,,,,,,,,,,,,,,,,,,,
Infinite wait on slow channel update,FAB-5846,20295,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rickr,rickr,rickr,18/Aug/17 9:21 PM,23/Aug/17 12:39 PM,26/Apr/18 6:49 AM,23/Aug/17 12:39 PM,v1.0.1,,,v1.1,,fabric-sdk-java,,,,,,0,,,,,,,,Infinite wait on slow channel update,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01k0d:,,,,,,,,rickr,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fatal error during runtime execution  creating channel,FAB-5822,20250,Bug,Monitor / On Hold,FAB,Fabric,software,ChristopherFerris,,,High,,mastersingh24,clessor,clessor,17/Aug/17 3:33 PM,14/Apr/18 2:07 AM,26/Apr/18 6:50 AM,,v1.0.1,,,v1.2,,fabric-build,fabric-examples,fabric-samples,,,,1,build-system,Usability,,,,,,"On Ubuntu 16.04 EC2 instance.  when running 

./network_setup.sh up mychannel 50

 

Using cryptogen -> /home/ubuntu/godir/src/github.com/hyperledger/fabric/examples/e2e_cli/../../release/linux-amd64/bin/cryptogen

 

##########################################################

##### Generate certificates using cryptogen tool #########

##########################################################

org1.example.com

org2.example.com

 

Using configtxgen -> /home/ubuntu/godir/src/github.com/hyperledger/fabric/examples/e2e_cli/../../release/linux-amd64/bin/configtxgen

##########################################################

#########  Generating Orderer Genesis block ##############

##########################################################

2017-08-17 15:08:54.762 UTC [common/configtx/tool] main -> INFO 001 Loading configuration

2017-08-17 15:08:54.787 UTC [common/configtx/tool] doOutputBlock -> INFO 002 Generating genesis block

2017-08-17 15:08:54.788 UTC [common/configtx/tool] doOutputBlock -> INFO 003 Writing genesis block

 

#################################################################

### Generating channel configuration transaction 'channel.tx' ###

#################################################################

2017-08-17 15:08:54.806 UTC [common/configtx/tool] main -> INFO 001 Loading configuration

2017-08-17 15:08:54.809 UTC [common/configtx/tool] doOutputChannelCreateTx -> INFO 002 Generating new channel configtx

2017-08-17 15:08:54.809 UTC [common/configtx/tool] doOutputChannelCreateTx -> INFO 003 Writing new channel tx

 

#################################################################

#######    Generating anchor peer update for Org1MSP   ##########

#################################################################

2017-08-17 15:08:54.827 UTC [common/configtx/tool] main -> INFO 001 Loading configuration

2017-08-17 15:08:54.831 UTC [common/configtx/tool] doOutputAnchorPeersUpdate -> INFO 002 Generating anchor peer update

2017-08-17 15:08:54.831 UTC [common/configtx/tool] doOutputAnchorPeersUpdate -> INFO 003 Writing anchor peer update

 

#################################################################

#######    Generating anchor peer update for Org2MSP   ##########

#################################################################

2017-08-17 15:08:54.851 UTC [common/configtx/tool] main -> INFO 001 Loading configuration

2017-08-17 15:08:54.854 UTC [common/configtx/tool] doOutputAnchorPeersUpdate -> INFO 002 Generating anchor peer update

2017-08-17 15:08:54.854 UTC [common/configtx/tool] doOutputAnchorPeersUpdate -> INFO 003 Writing anchor peer update

 

Creating network ""e2ecli_default"" with the default driver

Creating peer0.org2.example.com

Creating peer0.org1.example.com

Creating peer1.org2.example.com

Creating peer1.org1.example.com

Creating orderer.example.com

Creating cli

 

 ____    _____      _      ____    _____           _____   ____    _____ 

/ ___|  |_   _|    / \    |  _ \  |_   _|         | ____| |___ \  | ____|

\___ \    | |     / _ \   | |_) |   | |    _____  |  _|     __) | |  _| 

 ___) |   | |    / ___ \  |  _ <    | |   |_____| | |___   / __/  | |___ 

|____/    |_|   /_/   \_\ |_| \_\   |_|           |_____| |_____| |_____|

 

Channel name : mychannel

Creating channel...

CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt

CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key

CORE_PEER_LOCALMSPID=Org1MSP

CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock

CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt

CORE_PEER_TLS_ENABLED=true

CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp

CORE_PEER_ID=cli

CORE_LOGGING_LEVEL=DEBUG

CORE_PEER_ADDRESS=peer0.org1.example.com:7051

2017-08-17 15:08:57.676 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP

2017-08-17 15:08:57.676 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity

2017-08-17 15:08:57.679 UTC [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized

2017-08-17 15:08:57.680 UTC [msp] GetLocalMSP -> DEBU 004 Returning existing local MSP

2017-08-17 15:08:57.680 UTC [msp] GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity

2017-08-17 15:08:57.680 UTC [msp] GetLocalMSP -> DEBU 006 Returning existing local MSP

2017-08-17 15:08:57.680 UTC [msp] GetDefaultSigningIdentity -> DEBU 007 Obtaining default signing identity

2017-08-17 15:08:57.680 UTC [msp/identity] Sign -> DEBU 008 Sign: plaintext: 0A8C060A074F7267314D53501280062D...53616D706C65436F6E736F727469756D 

2017-08-17 15:08:57.680 UTC [msp/identity] Sign -> DEBU 009 Sign: digest: 869B229C64EF36391CFB9BC74081B61FBE93540F64774DF0A3DCED76D0E1923C 

2017-08-17 15:08:57.680 UTC [msp] GetLocalMSP -> DEBU 00a Returning existing local MSP

2017-08-17 15:08:57.680 UTC [msp] GetDefaultSigningIdentity -> DEBU 00b Obtaining default signing identity

2017-08-17 15:08:57.680 UTC [msp] GetLocalMSP -> DEBU 00c Returning existing local MSP

2017-08-17 15:08:57.680 UTC [msp] GetDefaultSigningIdentity -> DEBU 00d Obtaining default signing identity

2017-08-17 15:08:57.680 UTC [msp/identity] Sign -> DEBU 00e Sign: plaintext: 0AC3060A1508021A060889E3D6CC0522...699D384F68B171EE323166DC9828416F 

2017-08-17 15:08:57.680 UTC [msp/identity] Sign -> DEBU 00f Sign: digest: 49032A464A9C7264C844F9FE2F3583C3297993ACB1C6653E96E967082F1F59C6 

fatal error: unexpected signal during runtime execution

[signal SIGSEGV: segmentation violation code=0x1 addr=0x63 pc=0x7f9193318259]

 

runtime stack:

runtime.throw(0xdc9844, 0x2a)

 /opt/go/src/runtime/panic.go:566 +0x95

runtime.sigpanic()

 /opt/go/src/runtime/sigpanic_unix.go:12 +0x2cc

 

goroutine 28 [syscall, locked to thread]:

runtime.cgocall(0xb0e530, 0xc42037edf8, 0xc400000000)

 /opt/go/src/runtime/cgocall.go:131 +0x110 fp=0xc42037edb0 sp=0xc42037ed70

net._C2func_getaddrinfo(0x2d9f1f0, 0x0, 0xc420323980, 0xc420126180, 0x0, 0x0, 0x0)

 ??:0 +0x68 fp=0xc42037edf8 sp=0xc42037edb0

net.cgoLookupIPCNAME(0x7ffe2f013a83, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)

 /opt/go/src/net/cgo_unix.go:146 +0x37c fp=0xc42037ef18 sp=0xc42037edf8

net.cgoIPLookup(0xc420378240, 0x7ffe2f013a83, 0x13)

 /opt/go/src/net/cgo_unix.go:198 +0x4d fp=0xc42037efa8 sp=0xc42037ef18

runtime.goexit()

 /opt/go/src/runtime/asm_amd64.s:2086 +0x1 fp=0xc42037efb0 sp=0xc42037efa8

created by net.cgoLookupIP

 /opt/go/src/net/cgo_unix.go:208 +0xb4

 

goroutine 1 [select]:

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext(0x7f919352e000, 0xc420378000, 0x7ffe2f013a83, 0x18, 0xc420376240, 0x3, 0x4, 0x0, 0x0, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:434 +0x856

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.Dial(0x7ffe2f013a83, 0x18, 0xc420376240, 0x3, 0x4, 0xc420376240, 0x2, 0x4)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:319 +0x96

github.com/hyperledger/fabric/peer/common.GetBroadcastClient(0x7ffe2f013a83, 0x18, 0x301, 0x7ffe2f013adf, 0xa1, 0x380, 0xc420333cc0, 0x126, 0x126)

 /opt/gopath/src/github.com/hyperledger/fabric/peer/common/ordererclient.go:66 +0x18f

github.com/hyperledger/fabric/peer/channel.InitCmdFactory.func1(0xc420322e40, 0xc420323410, 0x0, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/channel.go:144 +0x67

github.com/hyperledger/fabric/peer/channel.sendCreateChainTransaction(0xc420306a50, 0x0, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:164 +0xa7

github.com/hyperledger/fabric/peer/channel.executeCreate(0xc420306a50, 0xc420306a50, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:178 +0x2f

github.com/hyperledger/fabric/peer/channel.create(0xc42022c6c0, 0xc4201e7860, 0x1, 0xa, 0xc420306a50, 0xda37c3, 0x5)

 /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:213 +0x45

github.com/hyperledger/fabric/peer/channel.createCmd.func1(0xc42022c6c0, 0xc4201e7860, 0x1, 0xa, 0x0, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:59 +0x52

github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xc42022c6c0, 0xc4201e7720, 0xa, 0xa, 0xc42022c6c0, 0xc4201e7720)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x234

github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x13ed8c0, 0xf, 0xc420010035, 0x7)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x367

github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x13ed8c0, 0x7d, 0xc420010035)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b

main.main()

 /opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:118 +0x54e

 

goroutine 17 [syscall, locked to thread]:

runtime.goexit()

 /opt/go/src/runtime/asm_amd64.s:2086 +0x1

 

goroutine 24 [runnable]:

github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).controller(0xc420356000)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1186

created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:297 +0xea5

 

goroutine 23 [runnable]:

github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).reader(0xc420356000)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1098

created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:267 +0xd5e

 

goroutine 9 [syscall]:

os/signal.signal_recv(0x0)

 /opt/go/src/runtime/sigqueue.go:116 +0x157

os/signal.loop()

 /opt/go/src/os/signal/signal_unix.go:22 +0x22

created by os/signal.init.1

 /opt/go/src/os/signal/signal_unix.go:28 +0x41

 

goroutine 11 [select]:

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).transportMonitor(0xc4200de700)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:941 +0x66c

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn.func1(0xc4200de700)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:656 +0x1de

created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:657 +0x756

 

goroutine 25 [runnable]:

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream.func3(0x1408880, 0xc420356000, 0xc4201b1040, 0xc420328420, 0xc42013e500)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:249

created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:269 +0xf12

 

goroutine 26 [select]:

net.lookupIPContext(0x1404980, 0xc420378180, 0x7ffe2f013a83, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0)

 /opt/go/src/net/lookup.go:122 +0x7bc

net.internetAddrList(0x1404980, 0xc420378180, 0xda2b97, 0x3, 0x7ffe2f013a83, 0x18, 0x0, 0x0, 0x0, 0xa, ...)

 /opt/go/src/net/ipsock.go:241 +0x5e0

net.resolveAddrList(0x1404980, 0xc420378180, 0xda3197, 0x4, 0xda2b97, 0x3, 0x7ffe2f013a83, 0x18, 0x0, 0x0, ...)

 /opt/go/src/net/dial.go:179 +0x106

net.(*Dialer).DialContext(0xc4200474f8, 0x1404980, 0xc420378180, 0xda2b97, 0x3, 0x7ffe2f013a83, 0x18, 0x0, 0x0, 0x0, ...)

 /opt/go/src/net/dial.go:329 +0x238

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.dialContext(0x1404980, 0xc420378180, 0xda2b97, 0x3, 0x7ffe2f013a83, 0x18, 0x0, 0x0, 0xc4203204b0, 0xc420374080)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/go17.go:53 +0xaa

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext.func1(0x7f919352e000, 0xc420378180, 0x7ffe2f013a83, 0x18, 0x1, 0x0, 0x13f6140, 0xc42014b690)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:341 +0x86

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newProxyDialer.func1(0x7f919352e000, 0xc420378180, 0x7ffe2f013a83, 0x18, 0x13, 0xc420034701, 0x0, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/proxy.go:136 +0x143

github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.dial(0x7f919352e000, 0xc420378180, 0xc420368a20, 0x7ffe2f013a83, 0x18, 0x410a5e, 0xc42031ee60, 0xa0, 0x98)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:135 +0x5a

github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client(0x7f919352e000, 0xc420378180, 0x7ffe2f013a83, 0x18, 0x0, 0x0, 0xdaeb89, 0x11, 0x0, 0x0, ...)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:173 +0xbf

github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.NewClientTransport(0x7f919352e000, 0xc420378180, 0x7ffe2f013a83, 0x18, 0x0, 0x0, 0xdaeb89, 0x11, 0x0, 0x0, ...)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/transport.go:463 +0xae

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).resetTransport(0xc42033e540, 0xc420323800, 0xc42033e560, 0xc420034e10)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:876 +0x282

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn(0xc420358680, 0x7ffe2f013a83, 0x18, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:630 +0x41e

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext.func3(0xc420378060, 0xc420358680, 0x1406540, 0xc420126168, 0x7ffe2f013a83, 0x18)

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:429 +0x273

created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext

 /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:433 +0x429

 

goroutine 27 [select]:

net.cgoLookupIP(0x1404980, 0xc420378180, 0x7ffe2f013a83, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)

 /opt/go/src/net/cgo_unix.go:209 +0x2f5

net.lookupIP(0x1404980, 0xc420378180, 0x7ffe2f013a83, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0)

 /opt/go/src/net/lookup_unix.go:70 +0xf9

net.glob..func11(0x1404980, 0xc420378180, 0xe31498, 0x7ffe2f013a83, 0x13, 0xc42037e6c8, 0x71f959, 0xc42037e708, 0xc42037e718, 0x455cc0)

 /opt/go/src/net/hook.go:19 +0x52

net.lookupIPContext.func1(0xc420358680, 0x7ffe2f013a83, 0x18, 0x0)

 /opt/go/src/net/lookup.go:119 +0x5c

internal/singleflight.(*Group).doCall(0x1421860, 0xc42036a410, 0x7ffe2f013a83, 0x13, 0xc4203238f0)

 /opt/go/src/internal/singleflight/singleflight.go:93 +0x3c

created by internal/singleflight.(*Group).DoChan

 /opt/go/src/internal/singleflight/singleflight.go:86 +0x339

!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!

================== ERROR !!! FAILED to execute End-2-End Scenario ==================

 

^C

ubuntu@ip##########:~/godir/src/github.com/hyperledger/fabric/examples/e2e_cli$ go version

go version go1.8.3 linux/amd64",,,,,,,,,,,,,,,,,,,FAB-6045,,,,,,,,,,,,,0|i01jt1:,,,,,,,,chj050322,clessor,denyeart,huikang,mastersingh24,muralisr,thejibz,wutongtree,ysim,YuRuan,,,,,,,,,,,"18/Aug/17 4:47 PM;clessor;I got similar error running from the instructions for byfn.sh:

 

Build your first network (BYFN) end-to-end test

 

Channel name : mychannel

Creating channel...

CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt

CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key

CORE_PEER_LOCALMSPID=Org1MSP

CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock

CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt

CORE_PEER_TLS_ENABLED=true

CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp

CORE_PEER_ID=cli

CORE_LOGGING_LEVEL=DEBUG

CORE_PEER_ADDRESS=peer0.org1.example.com:7051

2017-08-18 16:43:00.765 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP

2017-08-18 16:43:00.765 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity

2017-08-18 16:43:00.775 UTC [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized

2017-08-18 16:43:00.775 UTC [msp] GetLocalMSP -> DEBU 004 Returning existing local MSP

2017-08-18 16:43:00.775 UTC [msp] GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity

2017-08-18 16:43:00.776 UTC [msp] GetLocalMSP -> DEBU 006 Returning existing local MSP

2017-08-18 16:43:00.776 UTC [msp] GetDefaultSigningIdentity -> DEBU 007 Obtaining default signing identity

2017-08-18 16:43:00.776 UTC [msp/identity] Sign -> DEBU 008 Sign: plaintext: 0A8C060A074F7267314D53501280062D...53616D706C65436F6E736F727469756D

2017-08-18 16:43:00.776 UTC [msp/identity] Sign -> DEBU 009 Sign: digest: 4030C9453426186836D1775D813821DFFDF2781DDBC7EA23C5FADFD27B91DE48

2017-08-18 16:43:00.776 UTC [msp] GetLocalMSP -> DEBU 00a Returning existing local MSP

2017-08-18 16:43:00.776 UTC [msp] GetDefaultSigningIdentity -> DEBU 00b Obtaining default signing identity

2017-08-18 16:43:00.776 UTC [msp] GetLocalMSP -> DEBU 00c Returning existing local MSP

2017-08-18 16:43:00.776 UTC [msp] GetDefaultSigningIdentity -> DEBU 00d Obtaining default signing identity

2017-08-18 16:43:00.776 UTC [msp/identity] Sign -> DEBU 00e Sign: plaintext: 0AC3060A1508021A060894B2DCCC0522...78744E313273F18331F5EAEBF4351838

2017-08-18 16:43:00.776 UTC [msp/identity] Sign -> DEBU 00f Sign: digest: 9D1CAFEA7DCA477F3492FFCD930C8A8427284442BBE36BD958D5862427644E74

2017-08-18 16:43:00.865 UTC [msp] GetLocalMSP -> DEBU 010 Returning existing local MSP

2017-08-18 16:43:00.865 UTC [msp] GetDefaultSigningIdentity -> DEBU 011 Obtaining default signing identity

2017-08-18 16:43:00.865 UTC [msp] GetLocalMSP -> DEBU 012 Returning existing local MSP

2017-08-18 16:43:00.865 UTC [msp] GetDefaultSigningIdentity -> DEBU 013 Obtaining default signing identity

2017-08-18 16:43:00.865 UTC [msp/identity] Sign -> DEBU 014 Sign: plaintext: 0AC3060A1508021A060894B2DCCC0522...1DB4630ED7AE12080A021A0012021A00

2017-08-18 16:43:00.865 UTC [msp/identity] Sign -> DEBU 015 Sign: digest: B6D29E57222F8CC08885D78EA599EDE7CA2707F4F7258077E92BDA03E7F17894

{color:#ff0000}*2017-08-18 16:43:00.866 UTC [channelCmd] readBlock -> DEBU 016 Got status: &\{NOT_FOUND}*{color}

2017-08-18 16:43:00.866 UTC [msp] GetLocalMSP -> DEBU 017 Returning existing local MSP

2017-08-18 16:43:00.866 UTC [msp] GetDefaultSigningIdentity -> DEBU 018 Obtaining default signing identity

fatal error: unexpected signal during runtime execution

[signal SIGSEGV: segmentation violation code=0x1 addr=0x63 pc=0x7f233082d259]

 

runtime stack:

runtime.throw(0xdc9844, 0x2a)

/opt/go/src/runtime/panic.go:566 +0x95

runtime.sigpanic()

/opt/go/src/runtime/sigpanic_unix.go:12 +0x2cc

 

goroutine 38 [syscall, locked to thread]:

runtime.cgocall(0xb0e530, 0xc4203a45f8, 0xc400000000)

/opt/go/src/runtime/cgocall.go:131 +0x110 fp=0xc4203a45b0 sp=0xc4203a4570

net._C2func_getaddrinfo(0x7f23240008c0, 0x0, 0xc420394390, 0xc420126578, 0x0, 0x0, 0x0)

??:0 +0x68 fp=0xc4203a45f8 sp=0xc4203a45b0

net.cgoLookupIPCNAME(0x7ffd2e697a83, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0)

/opt/go/src/net/cgo_unix.go:146 +0x37c fp=0xc4203a4718 sp=0xc4203a45f8

net.cgoIPLookup(0xc42037d320, 0x7ffd2e697a83, 0x13)

/opt/go/src/net/cgo_unix.go:198 +0x4d fp=0xc4203a47a8 sp=0xc4203a4718

runtime.goexit()

/opt/go/src/runtime/asm_amd64.s:2086 +0x1 fp=0xc4203a47b0 sp=0xc4203a47a8

created by net.cgoLookupIP

/opt/go/src/net/cgo_unix.go:208 +0xb4

 

goroutine 1 [select]:

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).wait(0xc4200dc380, 0x7f2330bafb30, 0xc4203ba990, 0xc420180100, 0x8046c0, 0x7f2330bafb30, 0xc4203ba990, 0x0)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:1032 +0x183

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).getTransport(0xc42007bba0, 0x7f2330bafb30, 0xc4203ba990, 0xc4203ba900, 0x7f2330bafb30, 0xc4203ba960, 0x19, 0x0, 0xc420189900)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:724 +0x2f7

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream(0x7f2330bafb30, 0xc4203ba990, 0x13e9f40, 0xc42007bba0, 0xdbdf1f, 0x20, 0x0, 0x0, 0x0, 0x0, ...)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:189 +0x599

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.NewClientStream(0x7f2330bafab0, 0xc420012290, 0x13e9f40, 0xc42007bba0, 0xdbdf1f, 0x20, 0x0, 0x0, 0x0, 0x18, ...)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:105 +0x162

github.com/hyperledger/fabric/protos/orderer.(*atomicBroadcastClient).Deliver(0xc4200282e8, 0x7f2330bafab0, 0xc420012290, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5, 0xa0)

/opt/gopath/src/github.com/hyperledger/fabric/protos/orderer/ab.pb.go:499 +0xba

github.com/hyperledger/fabric/peer/channel.InitCmdFactory(0xc420330100, 0x0, 0x0, 0x13f6140)

/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/channel.go:179 +0x2c0

github.com/hyperledger/fabric/peer/channel.getGenesisBlock(0xc42031d400, 0x0, 0x0, 0x0)

/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/deliverclient.go:141 +0x11c

github.com/hyperledger/fabric/peer/channel.executeCreate(0xc42031d400, 0xc42031d400, 0x0)

/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:183 +0x50

github.com/hyperledger/fabric/peer/channel.create(0xc4202478c0, 0xc420336140, 0x1, 0xa, 0xc42031d400, 0xda37c3, 0x5)

/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:213 +0x45

github.com/hyperledger/fabric/peer/channel.createCmd.func1(0xc4202478c0, 0xc420336140, 0x1, 0xa, 0x0, 0x0)

/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:59 +0x52

github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xc4202478c0, 0xc420336000, 0xa, 0xa, 0xc4202478c0, 0xc420336000)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x234

github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x13ed8c0, 0xf, 0xc420010035, 0x7)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x367

github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x13ed8c0, 0x7d, 0xc420010035)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b

main.main()

/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:118 +0x54e

 

goroutine 17 [syscall, locked to thread]:

runtime.goexit()

/opt/go/src/runtime/asm_amd64.s:2086 +0x1

 

goroutine 37 [select]:

net.cgoLookupIP(0x1404980, 0xc42037d260, 0x7ffd2e697a83, 0x13, 0x455ed0, 0xc42007b380, 0x4, 0xc420025e30, 0x4056be, 0xc42007b380)

/opt/go/src/net/cgo_unix.go:209 +0x2f5

net.lookupIP(0x1404980, 0xc42037d260, 0x7ffd2e697a83, 0x13, 0xc42018a2d0, 0xc420025f60, 0xc420025ea8, 0x0, 0x7f232c0008c0)

/opt/go/src/net/lookup_unix.go:70 +0xf9

net.glob..func11(0x1404980, 0xc42037d260, 0xe314a0, 0x7ffd2e697a83, 0x13, 0xc420025ec8, 0x71f959, 0xc420025f08, 0xc420025f18, 0x455cc0)

/opt/go/src/net/hook.go:19 +0x52

net.lookupIPContext.func1(0xc42007bba0, 0x7ffd2e697a83, 0x18, 0x0)

/opt/go/src/net/lookup.go:119 +0x5c

internal/singleflight.(*Group).doCall(0x1421860, 0xc42034de00, 0x7ffd2e697a83, 0x13, 0xc420394330)

/opt/go/src/internal/singleflight/singleflight.go:93 +0x3c

created by internal/singleflight.(*Group).DoChan

/opt/go/src/internal/singleflight/singleflight.go:86 +0x339

 

goroutine 21 [syscall]:

os/signal.signal_recv(0x0)

/opt/go/src/runtime/sigqueue.go:116 +0x157

os/signal.loop()

/opt/go/src/os/signal/signal_unix.go:22 +0x22

created by os/signal.init.1

/opt/go/src/os/signal/signal_unix.go:28 +0x41

 

goroutine 12 [select]:

net.lookupIPContext(0x1404980, 0xc42037d260, 0x7ffd2e697a83, 0x13, 0x0, 0x0, 0x0, 0x0, 0x0)

/opt/go/src/net/lookup.go:122 +0x7bc

net.internetAddrList(0x1404980, 0xc42037d260, 0xda2b97, 0x3, 0x7ffd2e697a83, 0x18, 0x0, 0x0, 0x0, 0x0, ...)

/opt/go/src/net/ipsock.go:241 +0x5e0

net.resolveAddrList(0x1404980, 0xc42037d260, 0xda3197, 0x4, 0xda2b97, 0x3, 0x7ffd2e697a83, 0x18, 0x0, 0x0, ...)

/opt/go/src/net/dial.go:179 +0x106

net.(*Dialer).DialContext(0xc4200536c8, 0x1404980, 0xc42037d260, 0xda2b97, 0x3, 0x7ffd2e697a83, 0x18, 0x0, 0x0, 0x0, ...)

/opt/go/src/net/dial.go:329 +0x238

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.dialContext(0x1404980, 0xc42037d260, 0xda2b97, 0x3, 0x7ffd2e697a83, 0x18, 0x0, 0x0, 0xc42013aa50, 0xc420363c80)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/go17.go:53 +0xaa

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext.func1(0x7f23313e8028, 0xc42037d260, 0x7ffd2e697a83, 0x18, 0x1, 0x0, 0x13f6140, 0xc42012d920)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:341 +0x86

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newProxyDialer.func1(0x7f23313e8028, 0xc42037d260, 0x7ffd2e697a83, 0x18, 0x13, 0x410a5e, 0x0, 0x0)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/proxy.go:136 +0x143

github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.dial(0x7f23313e8028, 0xc42037d260, 0xc4201818c0, 0x7ffd2e697a83, 0x18, 0x410a5e, 0xc420337540, 0xa0, 0x98)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:135 +0x5a

github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client(0x7f23313e8028, 0xc42037d260, 0x7ffd2e697a83, 0x18, 0x0, 0x0, 0xdaeb89, 0x11, 0x0, 0x0, ...)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:173 +0xbf

github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.NewClientTransport(0x7f23313e8028, 0xc42037d260, 0x7ffd2e697a83, 0x18, 0x0, 0x0, 0xdaeb89, 0x11, 0x0, 0x0, ...)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/transport.go:463 +0xae

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).resetTransport(0xc4200dc380, 0x0, 0xc42010b920, 0x0)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:876 +0x282

github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn.func1(0xc4200dc380)

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:648 +0x34

created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn

/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:657 +0x756

!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!

========= ERROR !!! FAILED to execute End-2-End Scenario ===========

 

 ",12/Oct/17 9:55 AM;chj050322;i also get the same error,"20/Oct/17 1:26 AM;YuRuan;Looks like an issue with DNS. Maybe /etc/resolv.conf specify some features that the pure Go resolver does not support, so fallback to use cgo instead.

Add GODEBUG=netdns=go in compose file may help.","24/Nov/17 7:51 PM;mastersingh24;At this point, not sure what we should do.  We could just document this is the FAQ/Troubleshooting and have people set 
{{GODEBUG=netdns=go}}

The other option to explore would be to use the {{netgo}} build tag for the binaries in our Docker images",24/Nov/17 7:52 PM;mastersingh24;Going to assign to myself so I remember to come back to this one after doing some more thinking on it,"06/Feb/18 4:53 PM;thejibz;Hello,

Was just going to try the getting started and got this error ! I think it should be fixed in order to not discourage newcomers.","08/Feb/18 4:07 AM;muralisr;[~clessor][~mastersingh24] [~denyeart] this doesn't look like it belongs to ""fabric-chaintool"" component....perhaps meant ""fabric-tools"" ?","08/Feb/18 9:57 PM;mastersingh24;[~muralisr] - I switched it to fabric-build and fabric-samples as I believe it's possible to ""fix"" this in either place.","08/Feb/18 9:59 PM;mastersingh24;[~thejibz] - Could you describe your runtime environment a bit?  Host operating system, Docker version, etc.  I assume you were also trying the fabric-examples?","13/Feb/18 6:35 PM;Clayton Sims;Moving status to Monitor / Hold.   This means we are waiting on originator for information, etc. ",14/Feb/18 7:04 PM;denyeart;I don't think enough is known about the problem to fix in 1.1 timeframe.  Moving to 1.2.  Please correct me if there are known fix options in 1.1 timeframe.,"14/Apr/18 2:06 AM;huikang;I am having the same issue when running the command `` docker-compose -f docker-compose-simple.yaml up`` following the tutorial [1].

My OS is Linux 4.4.0-112-generic #135-Ubuntu SMP Fri Jan 19 11:48:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux.

 [1] [http://hyperledger-fabric.readthedocs.io/en/release-1.1/chaincode4ade.html#terminal-1-start-the-network]

The problem happens to the cli container as you see below

 

~/fabric-samples# docker ps -a

CONTAINER ID        IMAGE                        COMMAND                  CREATED             STATUS                        PORTS               NAMES

8c7f92ceb41f        hyperledger/fabric-tools     ""/bin/bash -c ./scri…""   7 minutes ago       Exited (2) 7 minutes ago                          cli

 

The error log inside the container is

docker logs -f 8c7f92ceb41f 2018-04-13 21:32:40.601 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP 2018-04-13 21:32:40.601 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity 2018-04-13 21:32:40.604 UTC [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized 2018-04-13 21:32:40.605 UTC [msp] GetLocalMSP -> DEBU 004 Returning existing local MSP 2018-04-13 21:32:40.605 UTC [msp] GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity 2018-04-13 21:32:40.605 UTC [msp] GetLocalMSP -> DEBU 006 Returning existing local MSP 2018-04-13 21:32:40.605 UTC [msp] GetDefaultSigningIdentity -> DEBU 007 Obtaining default signing identity 2018-04-13 21:32:40.605 UTC [msp/identity] Sign -> DEBU 008 Sign: plaintext: 0AC6060A0744454641554C5412BA062D...53616D706C65436F6E736F727469756D 2018-04-13 21:32:40.605 UTC [msp/identity] Sign -> DEBU 009 Sign: digest: 0503A9E4B84780E099D16FD46DEDD8E0441FF0132EE4CF7110DC7E6415E42C76 2018-04-13 21:32:40.606 UTC [msp] GetLocalMSP -> DEBU 00a Returning existing local MSP 2018-04-13 21:32:40.606 UTC [msp] GetDefaultSigningIdentity -> DEBU 00b Obtaining default signing identity 2018-04-13 21:32:40.606 UTC [msp] GetLocalMSP -> DEBU 00c Returning existing local MSP 2018-04-13 21:32:40.606 UTC [msp] GetDefaultSigningIdentity -> DEBU 00d Obtaining default signing identity 2018-04-13 21:32:40.606 UTC [msp/identity] Sign -> DEBU 00e Sign: plaintext: 0AF7060A0F08021A0608F8C3C4D60522...1F0ECDD5BEA1CE8782AEEF5DD6909D37 2018-04-13 21:32:40.606 UTC [msp/identity] Sign -> DEBU 00f Sign: digest: 54A622076C037EC8961940AE2A9F18110A1869B02979CD341FA59D2B726D1146 2018-04-13 21:32:40.640 UTC [msp] GetLocalMSP -> DEBU 010 Returning existing local MSP 2018-04-13 21:32:40.640 UTC [msp] GetDefaultSigningIdentity -> DEBU 011 Obtaining default signing identity 2018-04-13 21:32:40.641 UTC [msp] GetLocalMSP -> DEBU 012 Returning existing local MSP 2018-04-13 21:32:40.641 UTC [msp] GetDefaultSigningIdentity -> DEBU 013 Obtaining default signing identity 2018-04-13 21:32:40.641 UTC [msp/identity] Sign -> DEBU 014 Sign: plaintext: 0AF7060A0F08021A0608F8C3C4D60522...541E7524656212080A021A0012021A00 2018-04-13 21:32:40.641 UTC [msp/identity] Sign -> DEBU 015 Sign: digest: A7FDF6A6A22DB2D2D624DC3B1719C1D6DC8FE3EE296EB92496B17FB73CB00068 2018-04-13 21:32:40.642 UTC [channelCmd] readBlock -> DEBU 016 Got status: &\{NOT_FOUND} 2018-04-13 21:32:40.642 UTC [msp] GetLocalMSP -> DEBU 017 Returning existing local MSP 2018-04-13 21:32:40.642 UTC [msp] GetDefaultSigningIdentity -> DEBU 018 Obtaining default signing identity fatal error: unexpected signal during runtime execution [signal SIGSEGV: segmentation violation code=0x1 addr=0x63 pc=0x7fcf41e5c259] runtime stack: runtime.throw(0xf11259, 0x2a) /opt/go/src/runtime/panic.go:605 +0x95 runtime.sigpanic() /opt/go/src/runtime/signal_unix.go:351 +0x2b8 goroutine 46 [syscall, locked to thread]: runtime.cgocall(0xbf3800, 0xc4203ed5e8, 0xf0fa21) /opt/go/src/runtime/cgocall.go:132 +0xe4 fp=0xc4203ed5a8 sp=0xc4203ed568 pc=0x4023b4 net._C2func_getaddrinfo(0x7fcf340008c0, 0x0, 0xc42044a360, 0xc4200785e0, 0x0, 0x0, 0x0) net/_obj/_cgo_gotypes.go:86 +0x5f fp=0xc4203ed5e8 sp=0xc4203ed5a8 pc=0x5f893f net.cgoLookupIPCNAME.func2(0x7fcf340008c0, 0x0, 0xc42044a360, 0xc4200785e0, 0xc420450060, 0x7ffed2e5ee02, 0x7) /opt/go/src/net/cgo_unix.go:151 +0x13f fp=0xc4203ed640 sp=0xc4203ed5e8 pc=0x5ffedf net.cgoLookupIPCNAME(0x7ffed2e5ee02, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0) /opt/go/src/net/cgo_unix.go:151 +0x175 fp=0xc4203ed738 sp=0xc4203ed640 pc=0x5fa195 net.cgoIPLookup(0xc4204501e0, 0x7ffed2e5ee02, 0x7) /opt/go/src/net/cgo_unix.go:203 +0x4d fp=0xc4203ed7c8 sp=0xc4203ed738 pc=0x5fa8dd runtime.goexit() /opt/go/src/runtime/asm_amd64.s:2337 +0x1 fp=0xc4203ed7d0 sp=0xc4203ed7c8 pc=0x45e391 created by net.cgoLookupIP /opt/go/src/net/cgo_unix.go:213 +0xaf goroutine 1 [select]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext(0x7fcf42a24a38, 0xc420407f80, 0x7ffed2e5ee02, 0xc, 0xc42040e840, 0x4, 0x4, 0x0, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:422 +0x532 github.com/hyperledger/fabric/core/comm.(*grpcClient).NewConnection(0xc4203bceb0, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/core/comm/client.go:217 +0x389 github.com/hyperledger/fabric/peer/common.(*OrdererClient).Deliver(0xc42044a210, 0x0, 0x0, 0x20, 0xd662c0) /opt/gopath/src/github.com/hyperledger/fabric/peer/common/ordererclient.go:61 +0x6c github.com/hyperledger/fabric/peer/channel.newDeliverClient(0x7ffed2e5edf1, 0x3, 0xee710d, 0x1, 0xc42040e800) /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/deliverclient.go:51 +0x143 github.com/hyperledger/fabric/peer/channel.InitCmdFactory(0xc4203c0100, 0x0, 0x0, 0x16571c0) /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/channel.go:152 +0x233 github.com/hyperledger/fabric/peer/channel.getGenesisBlock(0xc4202bbea0, 0x0, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/deliverclient.go:167 +0x124 github.com/hyperledger/fabric/peer/channel.executeCreate(0xc4202bbea0, 0xc4202bbea0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:183 +0x50 github.com/hyperledger/fabric/peer/channel.create(0xc42024f200, 0xc4202d14a0, 0x0, 0x6, 0x0, 0xd5afc0, 0x16705c0) /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:213 +0x40 github.com/hyperledger/fabric/peer/channel.createCmd.func1(0xc42024f200, 0xc4202d14a0, 0x0, 0x6, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:59 +0x52 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xc42024f200, 0xc4202d11a0, 0x6, 0x6, 0xc42024f200, 0xc4202d11a0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x3e8 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x164d4e0, 0x11, 0xc42025a900, 0x5) /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x2fe github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x164d4e0, 0x14, 0xc420014035) /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b main.main() /opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:112 +0x5e1 goroutine 24 [syscall]: os/signal.signal_recv(0x0) /opt/go/src/runtime/sigqueue.go:131 +0xa6 os/signal.loop() /opt/go/src/os/signal/signal_unix.go:22 +0x22 created by os/signal.init.0 /opt/go/src/os/signal/signal_unix.go:28 +0x41 goroutine 29 [IO wait]: internal/poll.runtime_pollWait(0x7fcf42a1c060, 0x72, 0x0) /opt/go/src/runtime/netpoll.go:173 +0x57 internal/poll.(*pollDesc).wait(0xc420121e18, 0x72, 0xffffffffffffff00, 0x165d680, 0x1654ba0) /opt/go/src/internal/poll/fd_poll_runtime.go:85 +0xae internal/poll.(*pollDesc).waitRead(0xc420121e18, 0xc4203d2000, 0x8000, 0x8000) /opt/go/src/internal/poll/fd_poll_runtime.go:90 +0x3d internal/poll.(*FD).Read(0xc420121e00, 0xc4203d2000, 0x8000, 0x8000, 0x0, 0x0, 0x0) /opt/go/src/internal/poll/fd_unix.go:126 +0x18a net.(*netFD).Read(0xc420121e00, 0xc4203d2000, 0x8000, 0x8000, 0xc4203ad2a0, 0xc42003bd40, 0xc42003bcb0) /opt/go/src/net/fd_unix.go:202 +0x52 net.(*conn).Read(0xc420078590, 0xc4203d2000, 0x8000, 0x8000, 0x0, 0x0, 0x0) /opt/go/src/net/net.go:176 +0x6d bufio.(*Reader).Read(0xc4203c6300, 0xc4202b08f8, 0x9, 0x9, 0xc42003bd50, 0x8b8806, 0xc4203b8e70) /opt/go/src/bufio/bufio.go:213 +0x30b io.ReadAtLeast(0x1656c00, 0xc4203c6300, 0xc4202b08f8, 0x9, 0x9, 0x9, 0x0, 0x0, 0xc42003be5f) /opt/go/src/io/io.go:309 +0x86 io.ReadFull(0x1656c00, 0xc4203c6300, 0xc4202b08f8, 0x9, 0x9, 0x8739eab01, 0xf600000000000008, 0x8) /opt/go/src/io/io.go:327 +0x58 github.com/hyperledger/fabric/vendor/golang.org/x/net/http2.readFrameHeader(0xc4202b08f8, 0x9, 0x9, 0x1656c00, 0xc4203c6300, 0x0, 0x0, 0xc4203b1058, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:237 +0x7b github.com/hyperledger/fabric/vendor/golang.org/x/net/http2.(*Framer).ReadFrame(0xc4202b08c0, 0x165fac0, 0xc4203b8c00, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:492 +0xa4 github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*framer).readFrame(0xc4203b8bd0, 0xc4203b8c00, 0xc4203b8c00, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http_util.go:592 +0x2f github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).reader(0xc4203e2000) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1154 +0xc0 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:260 +0xbf8 goroutine 30 [runnable]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).controller(0xc4203e2000) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1227 +0x148 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:290 +0xd2e goroutine 31 [select]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).keepalive(0xc4203e2000) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1276 +0x13c created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:292 +0xdd2 goroutine 32 [select]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).transportMonitor(0xc4201f8540) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:995 +0x1de created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:716 +0x67a goroutine 34 [select]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream.func3(0x166c200, 0xc4203e2000, 0xc4201f8380, 0xc4203ae6e0, 0xc42006d500) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:255 +0x1cd created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:254 +0xe23 goroutine 43 [select]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream.func3(0x166c200, 0xc4203e21a0, 0xc4201f8700, 0xc4203aeb00, 0xc42006d800) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:255 +0x1cd created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newClientStream /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/stream.go:254 +0xe23 goroutine 39 [IO wait]: internal/poll.runtime_pollWait(0x7fcf42a1bfa0, 0x72, 0x0) /opt/go/src/runtime/netpoll.go:173 +0x57 internal/poll.(*pollDesc).wait(0xc4203fcf98, 0x72, 0xffffffffffffff00, 0x165d680, 0x1654ba0) /opt/go/src/internal/poll/fd_poll_runtime.go:85 +0xae internal/poll.(*pollDesc).waitRead(0xc4203fcf98, 0xc420414000, 0x8000, 0x8000) /opt/go/src/internal/poll/fd_poll_runtime.go:90 +0x3d internal/poll.(*FD).Read(0xc4203fcf80, 0xc420414000, 0x8000, 0x8000, 0x0, 0x0, 0x0) /opt/go/src/internal/poll/fd_unix.go:126 +0x18a net.(*netFD).Read(0xc4203fcf80, 0xc420414000, 0x8000, 0x8000, 0xc42040cae0, 0xc4203f4d40, 0xc4203f4cb0) /opt/go/src/net/fd_unix.go:202 +0x52 net.(*conn).Read(0xc4200785c0, 0xc420414000, 0x8000, 0x8000, 0x0, 0x0, 0x0) /opt/go/src/net/net.go:176 +0x6d bufio.(*Reader).Read(0xc420407260, 0xc4202b0ab8, 0x9, 0x9, 0xc4203f4d50, 0x8b8806, 0xc4203b9e60) /opt/go/src/bufio/bufio.go:213 +0x30b io.ReadAtLeast(0x1656c00, 0xc420407260, 0xc4202b0ab8, 0x9, 0x9, 0x9, 0x0, 0x0, 0xc4203f4e5f) /opt/go/src/io/io.go:309 +0x86 io.ReadFull(0x1656c00, 0xc420407260, 0xc4202b0ab8, 0x9, 0x9, 0x8739eab01, 0xf600000000000008, 0x8) /opt/go/src/io/io.go:327 +0x58 github.com/hyperledger/fabric/vendor/golang.org/x/net/http2.readFrameHeader(0xc4202b0ab8, 0x9, 0x9, 0x1656c00, 0xc420407260, 0x0, 0x0, 0xc4200169d0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:237 +0x7b github.com/hyperledger/fabric/vendor/golang.org/x/net/http2.(*Framer).ReadFrame(0xc4202b0a80, 0x165fac0, 0xc4203b9c20, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/golang.org/x/net/http2/frame.go:492 +0xa4 github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*framer).readFrame(0xc4203b9bf0, 0xc4203b9c20, 0xc4203b9c20, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http_util.go:592 +0x2f github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).reader(0xc4203e21a0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1154 +0xc0 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:260 +0xbf8 goroutine 40 [select]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).controller(0xc4203e21a0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1227 +0x148 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:290 +0xd2e goroutine 41 [select]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.(*http2Client).keepalive(0xc4203e21a0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:1276 +0x13c created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:292 +0xdd2 goroutine 42 [select]: github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).transportMonitor(0xc4201f88c0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:995 +0x1de created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:716 +0x67a goroutine 44 [select]: net.(*Resolver).LookupIPAddr(0x169d370, 0x1667b40, 0xc420450060, 0x7ffed2e5ee02, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0) /opt/go/src/net/lookup.go:196 +0x52b net.(*Resolver).internetAddrList(0x169d370, 0x1667b40, 0xc420450060, 0xee7636, 0x3, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0x0, ...) /opt/go/src/net/ipsock.go:293 +0x644 net.(*Resolver).resolveAddrList(0x169d370, 0x1667b40, 0xc420450060, 0xee7b40, 0x4, 0xee7636, 0x3, 0x7ffed2e5ee02, 0xc, 0x0, ...) /opt/go/src/net/dial.go:193 +0x594 net.(*Dialer).DialContext(0xc420049458, 0x1667b40, 0xc420450060, 0xee7636, 0x3, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0x0, ...) /opt/go/src/net/dial.go:375 +0x248 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.dialContext(0x1667b40, 0xc420450060, 0xee7636, 0x3, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0xc42006da00, 0xc4203fd480) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/go17.go:38 +0xb3 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext.func1(0x7fcf42a24a38, 0xc420450060, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0x16571c0, 0xc42006b930) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:329 +0x86 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.newProxyDialer.func1(0x7fcf42a24a38, 0xc420450060, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/proxy.go:121 +0x137 github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.dial(0x7fcf42a24a38, 0xc420450060, 0xc42040d970, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:119 +0x5a github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.newHTTP2Client(0x7fcf42a24a38, 0xc420450060, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0xeef4b1, 0xd, 0x0, 0x0, ...) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/http2_client.go:157 +0xa7 github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport.NewClientTransport(0x7fcf42a24a38, 0xc420450060, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0xeef4b1, 0xd, 0x0, 0x0, ...) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/transport/transport.go:505 +0xae github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*addrConn).resetTransport(0xc4201f8c40, 0xc42044a200, 0xc4201f8c60, 0xc4203aeec8) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:929 +0x4b4 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).resetAddrConn(0xc4201f8a80, 0x7ffed2e5ee02, 0xc, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:702 +0x340 github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext.func3(0xc420450000, 0xc4201f8a80, 0x0, 0x0, 0x7ffed2e5ee02, 0xc) /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:417 +0x223 created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.DialContext /opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:386 +0x441 goroutine 45 [select]: net.cgoLookupIP(0x1667b40, 0xc420450060, 0x7ffed2e5ee02, 0x7, 0xc4203c8580, 0x5c008c, 0xc420076080, 0x0, 0xc4203ed5e0, 0xc4203ed600) /opt/go/src/net/cgo_unix.go:214 +0x1b0 net.(*Resolver).lookupIP(0x169d370, 0x1667b40, 0xc420450060, 0x7ffed2e5ee02, 0x7, 0x0, 0x0, 0x0, 0x0, 0x0) /opt/go/src/net/lookup_unix.go:95 +0x12d net.(*Resolver).(net.lookupIP)-fm(0x1667b40, 0xc420450060, 0x7ffed2e5ee02, 0x7, 0x3, 0xc420065e00, 0xc420058040, 0xc4203ed79a, 0xc42001f300) /opt/go/src/net/lookup.go:187 +0x56 net.glob..func10(0x1667b40, 0xc420450060, 0xc42040d9c0, 0x7ffed2e5ee02, 0x7, 0x42ad09, 0xc400000008, 0xc420058040, 0x0, 0x8db329) /opt/go/src/net/hook.go:19 +0x52 net.(*Resolver).LookupIPAddr.func1(0xc, 0x0, 0x0, 0x1) /opt/go/src/net/lookup.go:193 +0x5c internal/singleflight.(*Group).doCall(0x169d360, 0xc4203bcf00, 0x7ffed2e5ee02, 0x7, 0xc42044a300) /opt/go/src/internal/singleflight/singleflight.go:93 +0x2e created by internal/singleflight.(*Group).DoChan /opt/go/src/internal/singleflight/singleflight.go:86 +0x31f root@etcd-2c-2:~/fabric-samples#

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer crashes when on top of v1.0.1 ledger,FAB-5803,20221,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,yacovm,yacovm,yacovm,16/Aug/17 10:33 PM,19/Aug/17 6:33 PM,26/Apr/18 6:50 AM,19/Aug/17 6:33 PM,v1.0.1,,,v1.1,,fabric-ledger,,,,,,0,,,,,,,,"More information TBD
{quote}
2017-08-16 21:30:06.519 UTC [gossip/state] NewGossipCoordinatedStateProvider -> INFO 028 Updating node metadata information, current ledger sequence is at = 420136, next expected block is = 420137
2017-08-16 21:30:06.522 UTC [cscc] Init -> INFO 029 Init CSCC
2017-08-16 21:30:06.522 UTC [sccapi] deploySysCC -> INFO 02a system chaincode cscc/channel12-1(github.com/hyperledger/fabric/core/scc/cscc) deployed
2017-08-16 21:30:06.523 UTC [sccapi] deploySysCC -> INFO 02b system chaincode lscc/channel12-1(github.com/hyperledger/fabric/core/scc/lscc) deployed
2017-08-16 21:30:06.523 UTC [escc] Init -> INFO 02c Successfully initialized ESCC
2017-08-16 21:30:06.523 UTC [sccapi] deploySysCC -> INFO 02d system chaincode escc/channel12-1(github.com/hyperledger/fabric/core/scc/escc) deployed
2017-08-16 21:30:06.523 UTC [sccapi] deploySysCC -> INFO 02e system chaincode vscc/channel12-1(github.com/hyperledger/fabric/core/scc/vscc) deployed
2017-08-16 21:30:06.523 UTC [qscc] Init -> INFO 02f Init QSCC
2017-08-16 21:30:06.523 UTC [sccapi] deploySysCC -> INFO 030 system chaincode qscc/channel12-1(github.com/hyperledger/fabric/core/chaincode/qscc) deployed
2017-08-16 21:30:06.523 UTC [sccapi] deploySysCC -> INFO 031 system chaincode (rscc,github.com/hyperledger/fabric/core/chaincode/rscc) disabled
2017-08-16 21:30:06.523 UTC [nodeCmd] serve -> INFO 032 Starting peer with ID=[name:""990e677022394afe8b8dc124ea17abbf-fabric-peer-org1-21020a"" ], network ID=[990e677022394afe8b8dc124ea17abbf], address=[**********]
2017-08-16 21:30:06.525 UTC [nodeCmd] serve -> INFO 033 Started peer with ID=[name:""990e677022394afe8b8dc124ea17abbf-fabric-peer-org1-21020a"" ], network ID=[990e677022394afe8b8dc124ea17abbf], address=[****************]
2017-08-16 21:30:09.434 UTC [chaincode] ExecuteChaincode -> ERRO 034 Error executing chaincode: premature execution - chaincode (sample_cc_ch12:v0) launched and waiting for registration
2017-08-16 21:30:09.434 UTC [endorser] simulateProposal -> ERRO 035 failed to invoke chaincode name:""sample_cc_ch12""  on transaction 053fcacb0b4df5ce5b9e9072708e27f447dc282541c7e88449a09a40f173ef9a, error: Error executing chaincode: premature execution - chaincode (sample_cc_ch12:v0) launched and waiting for registration
2017-08-16 21:30:12.905 UTC [gossip/state] commitBlock -> ERRO 036 Got error while committing(Expected block number=0, recived block number=420137)
2017-08-16 21:30:12.906 UTC [gossip/state] deliverPayloads -> CRIT 037 Cannot commit block to the ledger due to Expected block number=0, recived block number=420137
panic: Cannot commit block to the ledger due to Expected block number=0, recived block number=420137

goroutine 147 [running]:
panic(0x2aa35c78640, 0xc421e40350)
	/opt/go/src/runtime/panic.go:500 +0x408
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc42019cfc0, 0x2aa35def904, 0x2b, 0xc421e40290, 0x1, 0x1)
	/root/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x136
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads(0xc4230ee500)
	/root/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:490 +0xac8
created by github.com/hyperledger/fabric/gossip/state.NewGossipCoordinatedStateProvider
	/root/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:230 +0xb38{quote}

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01jmt:,,,,,,,,manish-sethi,yacovm,,,,,,,,,,,,,,,master,,,true,"17/Aug/17 8:27 AM;yacovm;[~manish-sethi] , [~denyeart] I could use your help here... it seems like *store_impl.go*'s *getLastCommittedBlockNum* returns true, 0
{code}
func (s *store) getLastCommittedBlockNum() (bool, uint64, error) {
	var v []byte
	var err error
	if v, err = s.db.Get(lastCommittedBlkkey); v == nil || err != nil {
		return true, 0, err
	}
	return false, decodeBlockNum(v), nil
}
{code}

And when *Prepare* happens (as part of the commit) - the *s.nextBlockNum()* would check the *s.isEmpty* and would return 0 and this would fail the commit and crash the peer.

It seems like *lastCommittedBlkkey* doesn't exist in the ledger? Previously this was something like []byte(""blkMgrInfo"") (I guess it also exists now, right?) and now the private data storage has also:
{code}
lastCommittedBlkkey = []byte{1}
{code}
?

I guess the last committed block key in the private store needs to be derived from the public ledger in case of an upgrade from a v1.0.1 ledger to a v1.1 ledger.
Is this correct or am I completely off the course? ","17/Aug/17 3:50 PM;manish-sethi;[~yacovm] - yes, your finding is correct. The separate maintenance of the *lastCommittedBlkkey* for the pvt data is causing this issue. However, the solution may not be as straight as initializing this value from public block storage. This solution will work for the scenario that you are testing for i.e., initializing the peer with existing block storage from 1.0 (because, 1.0 does not contain any pvt data). But for the scenarios, where the underlying block store files are from later versions (current master?), and somehow the pvt data store is not copied over, it would lead to other complications.

 

One of the potential solutions could be to check this mismatch between *lastCommittedBlkkey* and the max block height available in the public block storage (bcInfo.Height) . If *lastCommittedBlkkey* is found behind bcInfo.Height, the blocks should be parsed to bring *lastCommittedBlkkey* up to date. However, this may require a large number of block parsing and hence some versioning scheme for block file may help in this.

 

As a short-fix, we can assume that the migration of block files with uninitialized *lastCommittedBlkkey* is because of the upgrade scenario and not because of the fact that the administrator copied block files from somewhere and forgot to copy the pvt data.

I'll fix this and submit a CR.",17/Aug/17 8:24 PM;manish-sethi;Submitted a CR - https://gerrit.hyperledger.org/r/#/c/12579,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Bad handling of failed responses,FAB-5717,20110,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rickr,rickr,rickr,10/Aug/17 8:01 PM,14/Aug/17 6:27 PM,26/Apr/18 6:50 AM,14/Aug/17 6:27 PM,v1.0.0,,,v1.0.1,,fabric-sdk-java,,,,,,0,,,,,,,,Bad handling of failed responses resulted in NPE instead of better handling or better exceptions,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01iz1:,,,,,,,,rickr,,,,,,,,,,,,,,,,master,,,true,10/Aug/17 8:09 PM;rickr;https://gerrit.hyperledger.org/r/#/c/12331/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB image fails to start with host mounted volume,FAB-5700,20087,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,rhegde,rhegde,09/Aug/17 10:15 PM,02/Oct/17 10:35 AM,26/Apr/18 6:50 AM,01/Oct/17 11:04 AM,v1.0.2,,,v1.0.3,v1.1,fabric-ledger,,,,,,0,,,,,,,,"Following is the documented approach for data persistence

[https://hyperledger-fabric.readthedocs.io/en/latest/build_network.html#a-note-on-data-persistence]

Couch DB fails to stand-up when the above method is followed on Host Machine running on Ubuntu 14.04 and RHELv7.2

This was discussed with [~mastersingh24] on RC and it was noticed the folder created by the docker doesn't have required permission and hence the problem at the time of writing by couch db.

Creating a folder and assigning o+w  permission and then running couch db with above steps - works well. But this is not going to be well accepted by Security.

Gari mentioned on working on a fix so this issue is resolved. Creating a JIRA for tracking purpose.

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01iu5:,,,,,,,,eetti,mastersingh24,rhegde,,,,,,,,,,,,,,release-1.0,master,,true,"15/Sep/17 8:09 PM;eetti;The docker container starts with the user *couchdb.* So when when you try to share the volume for the data directory, the docker container tries to create this folder and assign ownership to root. So I think the user variable should be left blank in the dockerfile instead of specifying it as *couchdb*. My environment is RHEL release 7.3 (Maipo). To fix this I started the container with the following commands and specified the user as root
{code:java}
docker run --rm -itd --name couchdb0 --user root \
--publish 5984:5984 \
--volume /var/hyperledger/couchdb0:/opt/couchdb/data \
hyperledger/fabric-couchdb:x86_64-1.0.0
{code}
 ","30/Sep/17 9:36 AM;mastersingh24;https://gerrit.hyperledger.org/r/14003
https://gerrit.hyperledger.org/r/14005",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Persistent State in System Chaincode,FAB-5671,20045,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,aleksandar.likic,bstasyszyn,bstasyszyn,08/Aug/17 6:25 PM,14/Aug/17 10:20 PM,26/Apr/18 6:50 AM,14/Aug/17 10:20 PM,v1.0.0,,,v1.1,,fabric-peer,,,,,,0,Release-planning-1.1,,,,,,,"Currently system chaincodes (other than lscc) are unable to persist state to the ledger since validation fails with the following error:

 [txvalidator] GetInfoForValidate -> ERRO 34e Unable to get chaincode data from ledger for txid xxxxx, due to lscc's state for [xxxscc] not found.

This is because system chaincode instantiations are not stored in LSCC.

For system chaincodes, the chaincode data should be declared in the System Chaincode registry. This data will also include the Policy so that chaincode policies can be validated. This chaincode data will obviously be global across all channels.
 ",,,,,,,,,,,,,,,,,,,FAB-5688,,,,,,,,,,,,,0|i01imt:,,,,,,,,aleksandar.likic,binhn,bstasyszyn,muralisr,,,,,,,,,,,,,master,,,true,"08/Aug/17 7:14 PM;muralisr;As described in the description we currently do not ""instantiate"" System CCs on the LSCC's table like we do with user chaincodes (scc's are not instantiated via a proposal). This means that we don't have endorsement policies for the SCCs in the LSCC table and so will fail at commit validation time.

The approach suggested here is a peer wide policy baked into the SCC to be retrieved and used at commit validation time. The problem is that if two peers have different policies for whatever reason (say different versions of peer) then we introduce non-determinism. 

We should consider other approaches first (1) try find other means to solve the requirement that gave rise to SCC transactions or (2) use a baked-in policy check as is done for ""lscc"" validation - signed by channel members - which will be the same on the channel for all peers.

 

 

 

 ","08/Aug/17 7:55 PM;aleksandar.likic;[~muralisr]

(1) try find other means to solve the requirement that gave rise to SCC transactions
 * We have framework components (implemented as SCCs) that need to persist their own data (not application data). Calls could come from a client, or from another CC. I see two ways of implementing this:
 ** SCC calling a companion user CC to persist data; in this case there should be a way to restrict access to the companion user CC, and currently there isn't.
 ** SCC persisting data itself

(2) use a baked-in policy check as is done for ""lscc"" validation - signed by channel members - which will be the same on the channel for all peers.
 * ""sign by any member"" should work for these use cases, so +1 for this option

 ","09/Aug/17 4:35 PM;aleksandar.likic;[~muralisr] How do you think we should test SCC persistence? Normally we would add a new SCC that has some persistence, but that would mean adding it to the Fabric core source code, as it's the only way to do it now.","09/Aug/17 6:04 PM;aleksandar.likic;We could test it using an external SCC, see https://jira.hyperledger.org/browse/FAB-5688

 ","11/Aug/17 6:12 PM;binhn;I would classify this one as bug.

I would proposal that the default behavior is what you mentioned in option 2, but we should look into the possibility of allowing user to instantiate an scc on a channel to bind it to a different endorsement policy and/or with different e/vscc.","11/Aug/17 6:24 PM;aleksandar.likic;OK, just changed it to a bug.","14/Aug/17 10:43 AM;aleksandar.likic;The change has been submitted for review, see [https://gerrit.hyperledger.org/r/#/c/12385/.] The existing test cases involving lscc's persistence should be sufficient for all SCCs, as 'lscc' is not hard-coded any more and the code now handles all SCCs the same.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric unit-tests are taking nearly 3 hrs to complete in x86_64 build nodes,FAB-5643,19988,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rameshthoomu,rameshthoomu,rameshthoomu,07/Aug/17 12:16 PM,31/Aug/17 7:19 AM,26/Apr/18 6:50 AM,08/Aug/17 1:38 PM,v1.0.0-rc1,,,v1.0.1,v1.0.2,fabric-build,fabric-ci,,,,,0,peer,,,,,,,"Observed fabric unit-tests are taking more than 3 hr to complete after merge of this patch [https://gerrit.hyperledger.org/r/#/c/12141/|https://gerrit.hyperledger.org/r/#/c/12141/.] Verify job of this patch also took more than 2 hr 30 mins where as the average build time is 50 mins. See the verify job of this patch 

https://jenkins.hyperledger.org/job/fabric-verify-x86_64/14995/consoleFull

didn't see this error in z build machines but it's repeating in x86_64 build machines.",Jenkins x86_64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01iat:,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,"07/Aug/17 1:20 PM;rameshthoomu;Verified few more builds and observed all tests on x86_64 build nodes are failing because of slowness in the builds. [~ryjones] [~jwagantall] Could you please check why x86_64 builds are taking longer time to process the requests.

Note: Same builds are working as expected in `z` platform.","08/Aug/17 1:38 PM;rameshthoomu;This issue has been fixed by @manser from LF infra team. Chat message is here:

[ ](https://chat.hyperledger.org/channel/infra-support?msg=BmBFnGtBE68h7c97H) @mnaser. Closing this issue now",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Submitting invalid admin cert on system channel causes new channel creation to fail,FAB-5606,19937,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jyellick,varadatibm,varadatibm,03/Aug/17 8:45 PM,13/Oct/17 6:58 PM,26/Apr/18 6:50 AM,04/Aug/17 5:56 PM,v1.0.0,v1.0.1,,v1.0.1,v1.1,fabric-orderer,,,,,,0,HSBN,,,,,,,"Submitting invalid admin cert causes new channel creation to fail

Steps:
 # Create a new channel - Success
 # Get cert from CA
 # Submit a _valid_ public cert to add to system channel - Success
 # Create a new channel - Success
 # Submit a _invalid_ public cert to add to system channel - Failure from UI
 # Create a new channel - Failure

Update system channel fails with the following error

[33m2017-08-03 18:34:16.863 UTC [orderer/common/broadcast] Handle -> WARN 094�[0m Rejecting CONFIG_UPDATE because: Error processing updated config: Setting up the MSP manager failed, err getIdentityFromBytes error: could not decode pem bytes [[45 45 45 45 45 66 69 71 73 78 32 67 69 82 84 73 70 73 67 65 84 69 45 45 45 45 45 10 77 73 73 67 65 68 67 67 65 97 101 103 65 119 73 66 65 103 73 85 83 109 111 80 75 72 97 69 75 53 90 121 81 82 67 78 122 111 56 49 55 107 113 84 82 82 48 119 67 103 89 73 75 111 90 73 122 106 48 69 65 119 73 119 10 71 122 69 90 77 66 99 71 65 49 85 69 65 120 77 81 89 87 82 116 97 87 53 81 90 87 86 121 84 51 74 110 77 107 78 66 77 84 65 101 70 119 48 120 78 122 65 52 77 68 73 121 77 68 65 52 77 68 66 97 70 119 48 120 10 79 68 65 52 77 68 73 121 77 68 65 52 77 68 66 97 77 70 48 120 67 122 65 74 66 103 78 86 66 65 89 84 65 108 86 84 77 82 99 119 70 81 89 68 86 81 81 73 69 119 53 79 98 51 74 48 97 67 66 68 89 88 74 118 10 98 71 108 117 89 84 69 85 77 66 73 71 65 49 85 69 67 104 77 76 83 72 108 119 90 88 74 115 90 87 82 110 90 88 73 120 68 122 65 78 66 103 78 86 66 65 115 84 66 107 90 104 89 110 74 112 89 122 69 79 77 65 119 71 10 65 49 85 69 65 120 77 70 89 87 82 116 97 87 52 119 87 84 65 84 66 103 99 113 104 107 106 79 80 81 73 66 66 103 103 113 104 107 106 79 80 81 77 66 66 119 78 67 65 65 82 115 72 116 89 48 54 77 80 103 101 111 99 97 10 120 112 114 87 90 116 120 75 77 67 55 90 53 55 110 105 47 120 55 118 51 77 74 111 55 53 65 67 66 103 74 89 111 51 90 71 49 88 116 97 100 102 108 114 114 77 70 74 49 99 72 73 89 71 122 71 82 77 74 107 99 89 105 74 10 99 102 122 52 78 113 118 107 111 52 71 71 77 73 71 68 77 65 52 71 65 49 85 100 68 119 69 66 47 119 81 69 65 119 73 67 66 68 65 77 66 103 78 86 72 82 77 66 65 102 56 69 65 106 65 65 77 66 48 71 65 49 85 100 10 68 103 81 87 66 66 84 120 115 43 56 85 48 115 78 106 69 56 55 52 49 90 70 114 103 86 57 109 115 104 75 69 50 84 65 102 66 103 78 86 72 83 77 69 71 68 65 87 103 66 81 71 89 77 65 81 49 75 48 111 57 108 117 74 10 69 88 75 69 121 88 69 66 86 108 84 117 51 84 65 106 66 103 78 86 72 82 69 69 72 68 65 97 103 104 104 50 89 88 74 104 90 71 49 104 89 121 53 121 89 87 120 108 97 87 100 111 76 109 108 105 98 83 53 106 98 50 48 119 10 67 103 89 73 75 111 90 73 122 106 48 69 65 119 73 68 82 119 65 119 82 65 73 103 79 51 73 52 52 113 110 76 54 113 43 83 83 86 108 97 65 53 105 121 89 83 70 100 51 121 68 84 55 87 78 67 88 88 90 78 106 76 121 109 10 85 49 115 67 73 72 52 100 118 98 52 105 98 119 73 83 83 109 115 108 74 105 82 55 55 101 118 101 82 119 115 70 49 55 99 100 56 65 108 98 49 90 80 51 119 78 106 84 49 10 45 45 45 45 45 69 78 68 32 67 69 82 84 73 70 73 67 65 84 69 45 45 45 45 45]]

Create channel fails with the following error

�[33m2017-08-03 18:35:52.358 UTC [orderer/common/broadcast] Handle -> WARN 095�[0m Rejecting CONFIG_UPDATE because: Setting up the MSP manager failed, err getIdentityFromBytes error: could not decode pem bytes [[45 45 45 45 45 66 69 71 73 78 32 67 69 82 84 73 70 73 67 65 84 69 45 45 45 45 45 10 77 73 73 67 65 68 67 67 65 97 101 103 65 119 73 66 65 103 73 85 83 109 111 80 75 72 97 69 75 53 90 121 81 82 67 78 122 111 56 49 55 107 113 84 82 82 48 119 67 103 89 73 75 111 90 73 122 106 48 69 65 119 73 119 10 71 122 69 90 77 66 99 71 65 49 85 69 65 120 77 81 89 87 82 116 97 87 53 81 90 87 86 121 84 51 74 110 77 107 78 66 77 84 65 101 70 119 48 120 78 122 65 52 77 68 73 121 77 68 65 52 77 68 66 97 70 119 48 120 10 79 68 65 52 77 68 73 121 77 68 65 52 77 68 66 97 77 70 48 120 67 122 65 74 66 103 78 86 66 65 89 84 65 108 86 84 77 82 99 119 70 81 89 68 86 81 81 73 69 119 53 79 98 51 74 48 97 67 66 68 89 88 74 118 10 98 71 108 117 89 84 69 85 77 66 73 71 65 49 85 69 67 104 77 76 83 72 108 119 90 88 74 115 90 87 82 110 90 88 73 120 68 122 65 78 66 103 78 86 66 65 115 84 66 107 90 104 89 110 74 112 89 122 69 79 77 65 119 71 10 65 49 85 69 65 120 77 70 89 87 82 116 97 87 52 119 87 84 65 84 66 103 99 113 104 107 106 79 80 81 73 66 66 103 103 113 104 107 106 79 80 81 77 66 66 119 78 67 65 65 82 115 72 116 89 48 54 77 80 103 101 111 99 97 10 120 112 114 87 90 116 120 75 77 67 55 90 53 55 110 105 47 120 55 118 51 77 74 111 55 53 65 67 66 103 74 89 111 51 90 71 49 88 116 97 100 102 108 114 114 77 70 74 49 99 72 73 89 71 122 71 82 77 74 107 99 89 105 74 10 99 102 122 52 78 113 118 107 111 52 71 71 77 73 71 68 77 65 52 71 65 49 85 100 68 119 69 66 47 119 81 69 65 119 73 67 66 68 65 77 66 103 78 86 72 82 77 66 65 102 56 69 65 106 65 65 77 66 48 71 65 49 85 100 10 68 103 81 87 66 66 84 120 115 43 56 85 48 115 78 106 69 56 55 52 49 90 70 114 103 86 57 109 115 104 75 69 50 84 65 102 66 103 78 86 72 83 77 69 71 68 65 87 103 66 81 71 89 77 65 81 49 75 48 111 57 108 117 74 10 69 88 75 69 121 88 69 66 86 108 84 117 51 84 65 106 66 103 78 86 72 82 69 69 72 68 65 97 103 104 104 50 89 88 74 104 90 71 49 104 89 121 53 121 89 87 120 108 97 87 100 111 76 109 108 105 98 83 53 106 98 50 48 119 10 67 103 89 73 75 111 90 73 122 106 48 69 65 119 73 68 82 119 65 119 82 65 73 103 79 51 73 52 52 113 110 76 54 113 43 83 83 86 108 97 65 53 105 121 89 83 70 100 51 121 68 84 55 87 78 67 88 88 90 78 106 76 121 109 10 85 49 115 67 73 72 52 100 118 98 52 105 98 119 73 83 83 109 115 108 74 105 82 55 55 101 118 101 82 119 115 70 49 55 99 100 56 65 108 98 49 90 80 51 119 78 106 84 49 10 45 45 45 45 45 69 78 68 32 67 69 82 84 73 70 73 67 65 84 69 45 45 45 45 45]]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01hzh:,,,,,,,,jyellick,mastersingh24,varadatibm,,,,,,,,,,,,,,release-1.0,master,,true,"03/Aug/17 9:00 PM;jyellick;Thanks for another great bug report Varad!

I've put together a CR which should address the problem here:

https://gerrit.hyperledger.org/r/#/c/12135/","04/Aug/17 5:57 PM;mastersingh24;We have had a delay with 1.0.1 so will include [https://gerrit.hyperledger.org/r/c/12145/] with 1.0.1

Thanks to [~jyellick] for the backport

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric SDK Node docs broken links,FAB-5600,19928,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,ChristopherFerris,ChristopherFerris,03/Aug/17 3:53 PM,31/Aug/17 2:50 PM,26/Apr/18 6:50 AM,31/Aug/17 2:49 PM,v1.0.0,,,,,fabric-sdk-node,,,,,,0,,,,,,,,See [https://stackoverflow.com/questions/45484878/sample-application-of-hypeledger] for details.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01hxh:,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,31/Aug/17 2:50 PM;jimthematrix;this was taken care of by replacing the fabric's RTD link to fabric node SDK (this page: http://hyperledger-fabric.readthedocs.io/en/latest/fabric-sdks.html) with the official reference doc: https://fabric-sdk-node.github.io/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Eventhub reconnect failure.,FAB-5577,19891,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rickr,rickr,rickr,02/Aug/17 12:50 PM,03/Aug/17 2:48 PM,26/Apr/18 6:50 AM,03/Aug/17 2:48 PM,v1.0.0,,,v1.0.1,,fabric-sdk-java,,,,,,0,,,,,,,,Due to a small timing window bug the eventhub could show as connected when it really hasn't and thus resulting in it not retrying.  Using the REGISTER block send back from the Eventhub to determine that the Eventhub client has really connected and to not report back till it actually has or throw a timeout error,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01hpx:,,,,,,,,rickr,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[CI] - Plugin incompaitable issues causing hyperledger fabric CI jobs failures,FAB-5541,19615,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rameshthoomu,rameshthoomu,rameshthoomu,31/Jul/17 1:26 PM,02/Aug/17 1:55 AM,26/Apr/18 6:50 AM,02/Aug/17 1:55 AM,v1.0.0-rc1,,,v1.0.1,,fabric-build,,,,,,0,build-system,,,,,,,"Observed all CI builds are failing  with the below error. Seems recent updates on the Gerri-trigger plugin is not compatible or recent java updates might be causing this error.
{code:java}
0:00:29.244 java.lang.NoSuchMethodError: org.eclipse.jgit.revwalk.RevWalk.release()V
00:00:29.244     at com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser$1.invoke(GerritTriggerBuildChooser.java:185)
00:00:29.244     at com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser$1.invoke(GerritTriggerBuildChooser.java:166)
00:00:29.244     at org.jenkinsci.plugins.gitclient.AbstractGitAPIImpl.withRepository(AbstractGitAPIImpl.java:29)
00:00:29.244     at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.withRepository(CliGitAPIImpl.java:71)
00:00:29.244     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
00:00:29.244     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
00:00:29.244     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
00:00:29.244     at java.lang.reflect.Method.invoke(Method.java:606)
00:00:29.244     at hudson.remoting.RemoteInvocationHandler$RPCRequest.perform(RemoteInvocationHandler.java:895)
00:00:29.244     at hudson.remoting.RemoteInvocationHandler$RPCRequest.call(RemoteInvocationHandler.java:870)
00:00:29.244     at hudson.remoting.RemoteInvocationHandler$RPCRequest.call(RemoteInvocationHandler.java:829)
00:00:29.244     at hudson.remoting.UserRequest.perform(UserRequest.java:153)
00:00:29.244     at hudson.remoting.UserRequest.perform(UserRequest.java:50)
00:00:29.244     at hudson.remoting.Request$2.run(Request.java:336)
00:00:29.244     at hudson.remoting.InterceptingExecutorService$1.call(InterceptingExecutorService.java:68)
00:00:29.244     at java.util.concurrent.FutureTask.run(FutureTask.java:262)
00:00:29.244     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
00:00:29.244     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
00:00:29.244     at java.lang.Thread.run(Thread.java:745)
00:00:29.244     at ......remote call to ubuntu1604-x86_64-4c-4g-1551(Native Method)
00:00:29.244     at hudson.remoting.Channel.attachCallSiteStackTrace(Channel.java:1545)
00:00:29.244     at hudson.remoting.UserResponse.retrieve(UserRequest.java:253)
00:00:29.244     at hudson.remoting.Channel.call(Channel.java:830)
00:00:29.244 Caused: java.io.IOException: Remote call on ubuntu1604-x86_64-4c-4g-1551 failed
00:00:29.244     at hudson.remoting.Channel.call(Channel.java:838)
00:00:29.244     at hudson.remoting.RemoteInvocationHandler.invoke(RemoteInvocationHandler.java:257)
00:00:29.244     at com.sun.proxy.$Proxy96.withRepository(Unknown Source)
00:00:29.244     at org.jenkinsci.plugins.gitclient.RemoteGitImpl.withRepository(RemoteGitImpl.java:235)
00:00:29.244     at com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser.getFirstParent(GerritTriggerBuildChooser.java:166)
00:00:29.245     at com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.GerritTriggerBuildChooser.prevBuildForChangelog(GerritTriggerBuildChooser.java:132)
00:00:29.245     at hudson.plugins.git.GitSCM.computeChangeLog(GitSCM.java:1257)
00:00:29.245     at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1182)
00:00:29.245     at hudson.scm.SCM.checkout(SCM.java:496)
00:00:29.245     at hudson.model.AbstractProject.checkout(AbstractProject.java:1281)
00:00:29.245     at hudson.model.AbstractBuild$AbstractBuildExecution.defaultCheckout(AbstractBuild.java:604)
00:00:29.245     at jenkins.scm.SCMCheckoutStrategy.checkout(SCMCheckoutStrategy.java:86)
00:00:29.245     at hudson.model.AbstractBuild$AbstractBuildExecution.run(AbstractBuild.java:529)
00:00:29.245     at hudson.model.Run.execute(Run.java:1728)
00:00:29.245     at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)
00:00:29.245     at hudson.model.ResourceController.execute(ResourceController.java:98)
00:00:29.245     at hudson.model.Executor.run(Executor.java:405){code}",hyperledger Jenkins,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01g1p:,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
node SDK entry page in RTD has formatting issues,FAB-5502,19530,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,jimthematrix,jimthematrix,27/Jul/17 2:03 PM,04/Nov/17 12:05 PM,26/Apr/18 6:50 AM,04/Nov/17 12:05 PM,,,,,,fabric-docs,,,,,,0,,,,,,,,https://fabric-sdk-node.readthedocs.io/en/master/#features-of-the-sdk-for-nodejs,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01fq5:,,,,,,,,markparz,,,,,,,,,,,,,,,,,,,,"25/Oct/17 7:10 PM;markparz;[~jimthematrix] I think this is resolved with the new links to the SDKs, would you agree this could be closed? http://hyperledger-fabric.readthedocs.io/en/latest/fabric-sdks.html?highlight=sdk",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Heavy load on event hub might cause event stream disconnection,FAB-5464,19482,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,wlahti,shimos,shimos,26/Jul/17 12:54 AM,30/Jan/18 7:49 PM,26/Apr/18 6:50 AM,30/Jan/18 7:49 PM,v1.0.0,,,v1.1,,fabric-peer,,,,,,3,,,,,,,,"I tried concurrent invocation of a chaincode function based on the node-sdk's integration test, and the connection of the event stream is sometimes disconnected in the middle of execution.

The configuration are as follows:
  - One solo orderer
  - Two peers (two orgs, one peer for each org)
  - One sdk-node test program (based on test/integaration/invoke.js, see attached)
    -- Each invocation writes to a different key, so no conflicts occurs during the invocation.
    -- EventHub is shared by all the invocations, thus the number of event connection is just one.
  - Chaincode: test/fixture/src/github.com/examplecc modified to have 'put' function to write a value to an arbitrary key

After increasing the concurrency to over 300 (in my AWS environment), some of the invocations start to fail.
In the peer side, all the transactions are successfully committed, showing solely one error as follows:

{noformat}
2017-07-25 22:56:38.554 UTC [eventhub_producer] SendProducerBlockEvent -> INFO 152baf Channel [mychannel]: Sending event for block number [773]
2017-07-25 22:56:38.554 UTC [eventhub_producer] Send -> DEBU 152bb0 Entry
2017-07-25 22:56:38.554 UTC [eventhub_producer] Send -> DEBU 152bb1 Event processor timeout > 0
2017-07-25 22:56:38.554 UTC [eventhub_producer] Send -> DEBU 152bb2 Event sent successfully
2017-07-25 22:56:38.554 UTC [eventhub_producer] Send -> DEBU 152bb3 Exit
2017-07-25 22:56:38.554 UTC [eventhub_producer] SendProducerBlockEvent -> DEBU 152bb4 Exit
2017-07-25 22:56:41.730 UTC [eventhub_producer] Chat -> ERRO 152bb5 error during Chat, stopping handler: rpc error: code = Canceled desc = context canceled
2017-07-25 22:56:41.731 UTC [eventhub_producer] deRegisterHandler -> DEBU 152bb6 deregistering event type: BLOCK
2017-07-25 22:56:41.974 UTC [blocksProvider] DeliverBlocks -> DEBU 152bb7 [mychannel] Adding payload locally, buffer seqNum = [774], peers number [0]
2017-07-25 22:56:41.974 UTC [blocksProvider] DeliverBlocks -> DEBU 152bb8 [mychannel] Gossiping block [774], peers number [0]
2017-07-25 22:56:41.974 UTC [committer] Commit -> DEBU 152bb9 Validating block
2017-07-25 22:56:41.974 UTC [txvalidator] Validate -> DEBU 152bba START Block Validation
2017-07-25 22:56:41.974 UTC [txvalidator] Validate -> DEBU 152bbb Validating transaction peer.ValidateTransaction() {noformat}

In the SDK side, EventHub gets some error, and closing the connection, failing all the callbacks registered.
{noformat}
ok 480 [815] The balance transaction successfully committed
debug: [EventHub.js]: _processChainCodeOnEvents block=764
debug: [EventHub.js]: _processChainCodeOnEvents - no registered chaincode event ""listeners""
debug: [EventHub.js]: on.error - event stream:1 _current_stream:1
debug: [EventHub.js]: on.error - grpc stream state :3
debug: [EventHub.js]: _disconnect - start -- called due to:: Failed parsing HTTP/2
debug: [EventHub.js]: _closeAllCallbacks - start
debug: [EventHub.js]: _closeAllCallbacks - blockOnErrors 0
debug: [EventHub.js]: _closeAllCallbacks - transactionOnErrors 521
debug: [EventHub.js]: _closeAllCallbacks - closing this callback d55fc6c1a39cb185001f9bf623640cd9350caf6ead0a333b1f977bf42b991d18
not ok 481 [386] Event callback canceled
  ---
    operator: fail
    at: eh.registerTxEvent (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/invoke-parallel-simplified.js:195:10)
    stack: |-
      Error: [386] Event callback canceled
          at Test.assert [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:212:54)
          at Test.bound [as _assert] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:64:32)
          at Test.fail (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:277:10)
          at Test.bound [as fail] (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:64:32)
          at eh.registerTxEvent (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/invoke-parallel-simplified.js:195:10)
          at closer (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/EventHub.js:430:5)
          at EventHub._closeAllCallbacks (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/EventHub.js:440:3)
          at EventHub._disconnect (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/EventHub.js:383:8)
          at ClientDuplexStream.<anonymous> (/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/EventHub.js:354:10)
          at emitOne (events.js:96:13)
  ...
debug: [EventHub.js]: _closeAllCallbacks - closing this callback 9cf8d26e05d028025dd32722dcedffa848e9cd6aa6d92a00e83f2133172d377d
{noformat}
","fabric commit 2232d0ec348c81004e36ebbb1e1ab4d61f24b2cc
fabric-sdk-node commit 34dd6496fb65b8eaaf10901dd88df3e67f1f2a71
",,,,,,,,,,,,,,,,,,FAB-5775,,,,,30/Oct/17 6:54 PM;shimos;example_cc.go;https://jira.hyperledger.org/secure/attachment/12830/example_cc.go,26/Jul/17 12:54 AM;shimos;invoke-parallel-simplified.js;https://jira.hyperledger.org/secure/attachment/11772/invoke-parallel-simplified.js,,,,,,,0|i01ffx:,,,,,,,,bmos299,denyeart,dongming,ishihara.shun,jeffgarratt,JohanLee,JonathanLevi,lin2K,muralisr,n-someya,shimos,wlahti,xixuejia,ynamiki,yoheiueda,,,,,,"21/Sep/17 5:25 PM;shimos;Some error messages are seen also in endorsement proposals and commit requests.

{noformat}
[2017-09-14 22:23:39.249] [INFO] invoke-chaincode - transaction proposal was good
[2017-09-14 22:23:39.249] [DEBUG] invoke-chaincode - Successfully sent Proposal and received ProposalResponse: Status - 200, message - ""OK"", metadata - """", endorsement signature: 0E^B!^@���oϵ�
�^Y��JH��&�HN�6��3�S�ݗ��^B &^P=X����x4���o��$��7�^Y��N^^^X3
info: [EventHub.js]: _connect - options {""grpc.ssl_target_name_override"":""peer0.org1.example.com"",""grpc.default_authority"":""peer0.org1.example.com""}
[2017-09-14 22:23:39.252] [DEBUG] Helper - [crypto_ecdsa_aes]: ecdsa signature:  Signature {
  r: <BN: 2a31e714058b2bb3bb1d8c01a1b97812dcbcc5d9087b2adbe4e15c177986ec93>,
  s: <BN: 56fa1d3c6e03b6282079a03bcbecdbd3d0e9931b7d705d0d650c442bdde0f825>,
  recoveryParam: 1 }
[2017-09-14 22:23:39.254] [DEBUG] Helper - [crypto_ecdsa_aes]: ecdsa signature:  Signature {
  r: <BN: 634ebad74604a1463ff6762841e9875c6b1a64a9d5b26a8d797a6046c2b2d70b>,
  s: <BN: 190b46d99b659e8c70fce48ce55520ea31104a3f3c5f9d0a594af71fbdaccc9b>,
  recoveryParam: 0 }
E0914 22:23:39.255486949       9 ssl_transport_security.c:575] Could not add root certificate to ssl context.
E0914 22:23:39.255547752       9 ssl_transport_security.c:1297] Cannot load server root certificates.
E0914 22:23:39.255564368       9 security_connector.c:857]   Handshaker factory creation failed with TSI_INTERNAL_ERROR.
E0914 22:23:39.255569266       9 secure_channel_create.c:112] Failed to create secure subchannel for secure name 'peer0.org1.example.com:7053'
E0914 22:23:39.255574025       9 secure_channel_create.c:143] Failed to create subchannel arguments during subchannel creation.
E0914 22:23:39.258106349       9 ssl_transport_security.c:427] Corruption detected.
E0914 22:23:39.258136302       9 ssl_transport_security.c:403] error:0B07C065:x509 certificate routines:X509_STORE_add_cert:cert already in hash table
E0914 22:23:39.258142067       9 secure_endpoint.c:177]      Decryption error: TSI_DATA_CORRUPTED
error: [Orderer.js]: sendBroadcast - on error: ""Error: Endpoint read failed\n    at ClientDuplexStream._emitStatusIfDone (/opt/app/dev/node_modules/grpc/src/node/src/client.js:255:19)\n    at
ClientDuplexStream._receiveStatus (/opt/app/dev/node_modules/grpc/src/node/src/client.js:233:8)\n    at /opt/app/dev/node_modules/grpc/src/node/src/client.js:757:12""
[2017-09-14 22:23:39.258] [ERROR] invoke-chaincode - Failed to send transaction and get notifications within the timeout period.
[2017-09-14 22:23:39.258] [ERROR] invoke-chaincode - Failed to order the transaction. Error code: undefined
{noformat}

It seems it comes from grpc, so I reported to grpc community: https://github.com/grpc/grpc/issues/12642

The issue above might be related to this one.",18/Oct/17 2:00 PM;bmos299;This bug does sound like a match with https://github.com/grpc/grpc/issues/12642.  In our having to use an older version of the node sdk to avoid this issue.  I am changing the status to high.   It probably borders on highest as concurrency breaks.,"18/Oct/17 2:10 PM;bmos299;In talking with [~denyeart] moving to highest. Murali suspects this may not be a grpc bug, but a bug in our locking. He suggests the following lock may need to used from handler.go:

 

 
{code:java}
//serialSend serializes msgs so gRPC will be happy
 func (handler *Handler) serialSend(msg *pb.ChaincodeMessage) error {
 handler.serialLock.Lock()
 defer handler.serialLock.Unlock()
var err error
 if err = handler.ChatStream.Send(msg); err != nil
{ err = errors.WithMessage(err, fmt.Sprintf(""[%s]Error sending %s"", shorttxid(msg.Txid), msg.Type.String())) chaincodeLogger.Errorf(""%+v"", err) }
return err
 }
{code}
 

 ",18/Oct/17 3:35 PM;bmos299;This seems to have occurred more consistently between the node sdk and the fabric ca. ,"18/Oct/17 11:22 PM;shimos;[~bmos299] Recently when I tried to run PTE with TLS disabled, this bug seemed to occur. So probably you're right, it might not be because of the gRPC bug (it's a TLS-related issue)...

But note that there seems to be a different bug related to the gRPC bug as reported in FAB-6266.",20/Oct/17 6:55 AM;lin2K;same problem with java sdk. I think this is a server side problem.,"20/Oct/17 7:33 PM;denyeart;Based on latest comments, shifting to fabric-peer.

 [~muralisr] can you elaborate on your theory here?","21/Oct/17 5:58 PM;muralisr;[~denyeart] I was going by 
{code:java}
E0914 22:23:39.258106349       9 ssl_transport_security.c:427] Corruption detected.
{code}

One possibility is concurrent writes on the gRPC stream without locks to serialize those writes. This can happen if there are multiple fabric channels generating blocks concurrently (that's probably NOT the case here if we are dealing with a single channel). 

The other possibility is client (nodejs) is sending multiple events on the same event stream concurrently. Is this what you mean by the following [~lin2K] ?
{code:java}
EventHub is shared by all the invocations, thus the number of event connection is just one.
{code}

A quick check would be to wrap this snippet of code with a lock in events/producer/handler.go
https://github.com/hyperledger/fabric/blob/master/events/producer/handler.go#L127 like shown in the ""serialSend"" example by [~bmos299] comment.  Tagging ...  [~wlahti]

If you are sending concurrent events from the client side, [~lin2K] you would have to do a similar fix on the nodejs side as well.","23/Oct/17 6:31 PM;shimos;[~muralisr] I'm answering because I think below is for me..

{noformat}
The other possibility is client (nodejs) is sending multiple events on the same event stream concurrently. Is this what you mean by the following Tony kong ?

EventHub is shared by all the invocations, thus the number of event connection is just one.
{noformat}

Right. I invoked transactions concurrently form a single nodejs client, and register their transactions to the same EventHub. So all the block events should have come through the single event stream. (And they did for a while until this disconnection happened)",26/Oct/17 7:06 PM;jeffgarratt;Have you taken a look at this [~wlahti]?,30/Oct/17 5:32 PM;wlahti;[~shimos] Can you provide the modified chaincode you used?,"30/Oct/17 6:54 PM;shimos;[~wlahti] Sure, I have attached the chaincode. [^example_cc.go] ","30/Oct/17 7:44 PM;wlahti;Thanks.

To clarify, you're using invoke-parallel-simplified.js in place of invoke.js, the updated example_cc.go, and then running `{{node test/integration/e2e.js}}` (or the individual tests one by one) to reproduce this? Any other necessary steps?","30/Oct/17 8:34 PM;shimos;[~wlahti] Yes, I rather ran tests individually ( create-channel.js, join-channel.js, ..) but the steps you mention should be sufficient.","30/Oct/17 9:57 PM;wlahti;Are you able to hit this error every time? I finally have the Node SDK tests working locally but I haven't seen this issue using the latest Fabric, Node SDK, and Fabric CA code from master. I'll try with the v1.0 code next.

[~shimos] Any chance you can log in to Rocketchat to discuss at some point? I think that'll help move things along. ","31/Oct/17 4:17 PM;shimos;[~wlahti] Thanks for testing. When I reported this in July, it occurred almost every time.
But now I run with the current master and release branch, it seems not to be happening any more as you say.

I also tested with v1.0.0, and it produced eventhub reconnection and timeout errors, so something after 1.0.0 has fixed at least my issue.

As for Rocket.chat, sure, which channel would be suitable?","01/Nov/17 1:48 PM;wlahti;[~shimos] Since this no longer appears to be an issue with the latest code, do you think we can go ahead and close this JIRA?","01/Nov/17 3:35 PM;shimos;[~wlahti] Okay for my case, but I'm wondering if this might still happen because some people posted comments here reporting this in the different situation..","01/Nov/17 3:39 PM;wlahti;Ah yes, good point. They hadn't chimed in here recently so I overlooked those comments. [~lin2K] [~bmos299], do you notice this issue using the code from master or only in v1.0 networks?",01/Nov/17 7:40 PM;bmos299;I have hit this problem on Fabric 1.0.3. ,04/Nov/17 5:12 PM;jeffgarratt;[~bmos299] was this sporadic or easily repeatable under a specific load?,27/Nov/17 1:38 AM;denyeart;[~bmos299] It the problem easily reproducible on 1.0.x?  How about on 1.0 master?,"06/Dec/17 9:33 PM;xixuejia;This issue should also be fixed by https://gerrit.hyperledger.org/r/#/c/15719/  

Hi [~bmos299], would you please also try that fix? Several users have confirmed that the above patch fixed this issue",08/Jan/18 4:12 PM;wlahti;[~bmos299] Any update on trying the workaround mentioned above by Xi Xue Jia?,26/Jan/18 2:03 PM;wlahti;[~bmos299] [~dongming] Any chance to try out this workaround yet?,"26/Jan/18 3:19 PM;dongming;[~wlahti] In my PTE test, I do not see the issue with the latest master fabric and sdk.","30/Jan/18 7:49 PM;wlahti;Since [~shimos] (the reporter of this item) and [~dongming] have both reported positive test results, marking this item as complete. If there's anyone else I'm unaware of who's still hitting this issue, please comment and re-open the item.",,,,,,,,,,,,,,,
"Fabric is behaving in a funny way - transaction times out, context cancelled",FAB-5438,19438,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,rmohta,rmohta,24/Jul/17 4:25 AM,08/Aug/17 4:55 AM,26/Apr/18 6:50 AM,08/Aug/17 4:55 AM,v1.0.0-alpha2,,,,,fabric-peer,,,,,,0,,,,,,,,"Using image: x86_64-1.0.0-alpha2

Not sure how to break this behavior in multiple bug. And I'm not sure if this is fixed in any future release. Couldn't see anything mentioned in Release Notes

*Issue 1:* Chaincode container restarts automatically. 
*Issue 2:* Post restart, Fabric enters a limbo state where either of these two happen
* When we try to create a new asset via Nodejs SDK - transaction times out during endorsement stage
* If endorsement is successful, then I can see a success message from peer. But then, orderer prints error message as - 

{noformat}
transport: http2Server.HandleStreams failed to receive the preface from client: EOF
{noformat}

Consequence of this: 
* Cannot perform stable transaction on the network
* post multiple attempts (without restarting) the network - if successful, block is not pushed to all peers

Will attach logs. 
",,,,,,,,,,,,,,,,,,,,,,,,24/Jul/17 4:27 AM;rmohta;container_restarted_automatically.log.17July2017;https://jira.hyperledger.org/secure/attachment/11753/container_restarted_automatically.log.17July2017,24/Jul/17 4:26 AM;rmohta;logs-nodejssdk-errormessage.txt;https://jira.hyperledger.org/secure/attachment/11750/logs-nodejssdk-errormessage.txt,24/Jul/17 4:26 AM;rmohta;logs-orderer.txt;https://jira.hyperledger.org/secure/attachment/11751/logs-orderer.txt,24/Jul/17 4:26 AM;rmohta;logs-org1-peer0.txt;https://jira.hyperledger.org/secure/attachment/11752/logs-org1-peer0.txt,,,,,0|i01f7x:,,,,,,,,rmohta,,,,,,,,,,,,,,,,,,,,"08/Aug/17 4:55 AM;rmohta;After upgrading to 1.0, everything seems to work normally. Will open a new ticket, if this re-occurs.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kafka retry process should do an initial operation before waiting for time tick,FAB-5413,19403,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,guoger,guoger,guoger,21/Jul/17 7:31 AM,30/Jul/17 1:22 PM,26/Apr/18 6:50 AM,24/Jul/17 1:17 PM,v1.0.0,,,v1.0.1,,fabric-orderer,,,,,,0,,,,,,,,"in https://github.com/hyperledger/fabric/blob/release/orderer/kafka/retry.go#L46 first operation will be executed when time ticker fires, which causes a delay for every initial operation. These delay are accumulated in `startThread`, which causes slow start of kafka-based chain. We should use `do...while`  semantics here, instead of `while...do`, as currently implemented.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01f11:,,,,,,,,guoger,,,,,,,,,,,,,,,,release-1.0,master,,true,21/Jul/17 7:49 AM;guoger;https://gerrit.hyperledger.org/r/#/c/11797/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Missing channel upgrade method.,FAB-5408,19394,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rickr,rickr,rickr,20/Jul/17 7:56 PM,26/Jul/17 11:23 AM,26/Apr/18 6:50 AM,26/Jul/17 11:23 AM,v1.0.0,,,v1.0.1,,fabric-sdk-java,,,,,,0,,,,,,,,Missing channel upgrade method.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01ez9:,,,,,,,,mastersingh24,rickr,smita0709,,,,,,,,,,,,,,master,,,true,22/Jul/17 11:39 AM;mastersingh24;I assume you mean channel update?  And why is this a bug?  Isn't this a new feature?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Concurrent transactions are not going through on org2 on a channel formed with two orgs (org1 and org2) ,FAB-5391,19370,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,wlahti,suryalnvs,suryalnvs,19/Jul/17 7:58 PM,30/Jul/17 1:22 PM,26/Apr/18 6:50 AM,26/Jul/17 10:31 AM,,,,v1.0.1,v1.1,fabric-quality,,,,,,0,HSBN,quality,,,,,,"*Recreate steps:*

1.  channel '*mychannel0*' has been created with Org1 and Org2

    Org1 contains endorser *peer1* (peer0.org1.example.com) and comitter *peer2* (peer1.org1.example.com)

Org2 contains endorser *peer1* (peer0.org2.example.com) and comitter *peer2* (peer1.org2.example.com)

2. used CLI commands to create and join the channel

3. Installed *sample_cc* chaincode on peer1 of  org1 and org2

4. instantiated *sample_cc* chaincode on peer1 of org1

5. PTE tool has been used to send *constant* *mode* transactions with 4 threads and 0.01 s delay between each invoke.

 

*Expected Result:*

Chaincode instantiation should be per channel, transaction sent to Org2 should go though .

 

*Actual result:*

All the traffic sent to Org2 are failing with the following error:

 

*Gist of error logs from PTE:*

 
{code:java}
info: [PTE 0 main]: stderr: error: [Peer.js]: sendProposal - timed out after:45000
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: REQUEST_TIMEOUT
    at Timeout._onTimeout (/home/ibmadmin/fabric-sdk-node/node_modules/fabric-client/lib/Peer.js:100:19)
    at ontimeout (timers.js:386:14)
    at tryOnTimeout (timers.js:250:5)
    at Timer.listOnTimeout (timers.js:214:5)

info: [PTE 0 main]: stderr: error: [PTE 0 exec]: [Nid:chan:org:id=0:mychannel0:org2:3 invoke_move_const] Failed to send transaction proposal due to error:  TypeError: Illegal buffer
    at TypeError (native)
    at Function.module.exports.ByteBuffer.wrap (/home/ibmadmin/fabric-sdk-node/node_modules/bytebuffer/dist/bytebuffer-node.js:346:19)
    at Element.ProtoBuf.Reflect.ElementPrototype.verifyValue (/home/ibmadmin/fabric-sdk-node/node_modules/protobufjs/dist/protobuf.js:1886:39)
    at T.ProtoBuf.Reflect.FieldPrototype.verifyValue (/home/ibmadmin/fabric-sdk-node/node_modules/protobufjs/dist/protobuf.js:3499:33)
    at setter (/home/ibmadmin/fabric-sdk-node/node_modules/protobufjs/dist/protobuf.js:2582:77)
    at Channel.sendTransaction (/home/ibmadmin/fabric-sdk-node/node_modules/fabric-client/lib/Channel.js:1441:27)
    at /home/ibmadmin/fabric-sdk-node/test/v1performance/pte-execRequest.js:981:43
    at eventRegister (/home/ibmadmin/fabric-sdk-node/test/v1performance/pte-execRequest.js:720:5)
    at channel.sendTransactionProposal.then (/home/ibmadmin/fabric-sdk-node/test/v1performance/pte-execRequest.js:979:13)
    at process._tickCallback (internal/process/next_tick.js:109:7{code}
 

*Gist of error logs from peer0.org2.example.com:*
{code}
2017-07-19 20:12:34.881 UTC [chaincode] processStream -> ERRO e0c Error handling chaincode support stream: rpc error: code = Canceled desc = context canceled
2017-07-19 20:12:35.547 UTC [chaincode] Launch -> ERRO e0d launchAndWaitForRegister failed Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:9eaa0392890e6eb6a5bbef35cf83942f8fbc5fa3f89b4a57379d4a378b2b5320)
2017-07-19 20:12:35.548 UTC [chaincode] ExecuteChaincode -> ERRO e0e Error executing chaincode: Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:9eaa0392890e6eb6a5bbef35cf83942f8fbc5fa3f89b4a57379d4a378b2b5320)
2017-07-19 20:12:35.548 UTC [endorser] simulateProposal -> ERRO e0f failed to invoke chaincode name:""sample_cc_ch1""  on transaction 9eaa0392890e6eb6a5bbef35cf83942f8fbc5fa3f89b4a57379d4a378b2b5320, error: Error executing chaincode: Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:9eaa0392890e6eb6a5bbef35cf83942f8fbc5fa3f89b4a57379d4a378b2b5320)
2017-07-19 20:12:35.659 UTC [chaincode] Launch -> ERRO e10 launchAndWaitForRegister failed Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:a2292c21f3a2dea2598e2f41ba59825d2920189393f2187008a92e566cf6f49b)
2017-07-19 20:12:35.660 UTC [chaincode] ExecuteChaincode -> ERRO e11 Error executing chaincode: Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:a2292c21f3a2dea2598e2f41ba59825d2920189393f2187008a92e566cf6f49b)
2017-07-19 20:12:35.660 UTC [endorser] simulateProposal -> ERRO e12 failed to invoke chaincode name:""sample_cc_ch1""  on transaction a2292c21f3a2dea2598e2f41ba59825d2920189393f2187008a92e566cf6f49b, error: Error executing chaincode: Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:a2292c21f3a2dea2598e2f41ba59825d2920189393f2187008a92e566cf6f49b)
2017-07-19 20:12:36.337 UTC [chaincode] Launch -> ERRO e13 launchAndWaitForRegister failed Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:4efd480577901237f36b1f922634a13775f96c349575eeea9e96c5b7fd03c742)
2017-07-19 20:12:36.337 UTC [chaincode] ExecuteChaincode -> ERRO e14 Error executing chaincode: Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:4efd480577901237f36b1f922634a13775f96c349575eeea9e96c5b7fd03c742)
2017-07-19 20:12:36.337 UTC [endorser] simulateProposal -> ERRO e15 failed to invoke chaincode name:""sample_cc_ch1""  on transaction 4efd480577901237f36b1f922634a13775f96c349575eeea9e96c5b7fd03c742, error: Error executing chaincode: Timeout expired while starting chaincode sample_cc_ch1:v0(networkid:dev,peerid:peer0.org2.example.com,tx:4efd480577901237f36b1f922634a13775f96c349575eeea9e96c5b7fd03c742)
2017-07-19 20:12:36.511 UTC [chaincode] Launch -> ERRO e16 launchAndWaitForRegister failed Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.512 UTC [chaincode] ExecuteChaincode -> ERRO e17 Error executing chaincode: Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.512 UTC [endorser] simulateProposal -> ERRO e18 failed to invoke chaincode name:""sample_cc_ch1""  on transaction 8104b9a92af9aa81f7976c8640d33fb689303e485da1abd25fbbc2617dccb849, error: Error executing chaincode: Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.512 UTC [chaincode] Launch -> ERRO e19 launchAndWaitForRegister failed Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.512 UTC [chaincode] ExecuteChaincode -> ERRO e1a Error executing chaincode: Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.512 UTC [endorser] simulateProposal -> ERRO e1b failed to invoke chaincode name:""sample_cc_ch1""  on transaction ca0ad44e91b2f0c0ad7abc8189ed592f53ba9ea89f5ee325f2365a79a2baa3dd, error: Error executing chaincode: Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.558 UTC [chaincode] Launch -> ERRO e1c launchAndWaitForRegister failed Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.558 UTC [chaincode] ExecuteChaincode -> ERRO e1d Error executing chaincode: Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.558 UTC [endorser] simulateProposal -> ERRO e1e failed to invoke chaincode name:""sample_cc_ch1""  on transaction 1aa1f424f4958204adcbd3908d7dc785d13c4c9a240cbbd32541f461278c78ae, error: Error executing chaincode: Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.558 UTC [chaincode] Launch -> ERRO e1f launchAndWaitForRegister failed Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.558 UTC [chaincode] ExecuteChaincode -> ERRO e20 Error executing chaincode: Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.558 UTC [endorser] simulateProposal -> ERRO e21 failed to invoke chaincode name:""sample_cc_ch1""  on transaction 8bf90f7c6724f45ceb184fe30af46c615d2d7ac7cc0a17d9745fb0e7364158be, error: Error executing chaincode: Error chaincode is being launched: sample_cc_ch1:v0
2017-07-19 20:12:36.561 UTC [chaincode] ExecuteChaincode -> ERRO e22 Error executing chaincode: premature execution - chaincode (sample_cc_ch1:v0) is being launched
{code}




 

 ",,,,,,,,,,,,,,,,,,,,,,,,24/Jul/17 8:12 PM;suryalnvs;chaincode_support.go;https://jira.hyperledger.org/secure/attachment/11764/chaincode_support.go,20/Jul/17 8:16 PM;suryalnvs;peer0org2.txt;https://jira.hyperledger.org/secure/attachment/11740/peer0org2.txt,20/Jul/17 8:22 PM;suryalnvs;samplecc-chan1-longrun-i-TLS.json;https://jira.hyperledger.org/secure/attachment/11741/samplecc-chan1-longrun-i-TLS.json,,,,,,0|i01ev9:,,,,,,,,muralisr,suryalnvs,wlahti,,,,,,,,,,,,,,release-1.0,master,,true,"20/Jul/17 8:19 PM;suryalnvs;Tried by changing the gossip parameters a bit, disabled gossip by making all the peers as orgLeaders, issue still persists. ","22/Jul/17 9:16 PM;muralisr;[~suryalnvs] Just as the app sends sends 1 ""instantiate"" TX to peer0/Org1 which also brings up the chaincode there , before starting the perf test, can we send 1 ""invoke"" to peer0/Org2 which will bring up the chaincode on there ? If that works, this will be a good work around with which you can do the rest of performance testing.","23/Jul/17 5:17 PM;Clayton Sims;Sunday checkpoint status: Root cause determined.   Per Murali, straightforward fix.   HSBN already uses workaround above.   ","24/Jul/17 8:13 PM;suryalnvs;With changes in [^chaincode_support.go] given by [~muralisr], ran the concurrency tests with 6 orgs, 3 channels (2 orgs per 1 channel) and sent transactions to each organization with 4 and 8 threads and issue is not reproducible.",25/Jul/17 2:51 AM;wlahti;CR submitted to gerrit: https://gerrit.hyperledger.org/r/#/c/11889/,"25/Jul/17 12:52 PM;muralisr;A bit of background... we were doubling the chaincode registration flag to do exactly this (""in progress""). when we narrowed the gap to register a chaincode just before launching the container (preLaunchSetup) that flag got moved.  When a bunch of invokes came in at the same time the thundering herd went into a ""launch/cleanup... launch/cleanup"" sequence.  The new ""in progress"" fixes simply restores old behavior while at the same time preserves the security of setting the registration at the time of container start up",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Node SDK install, instantiate, invoke does not work with distinct TLS & E cert chains",FAB-5370,19341,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mrkiouak,mrkiouak,mrkiouak,18/Jul/17 10:51 PM,01/Sep/17 6:31 PM,26/Apr/18 6:50 AM,01/Sep/17 6:31 PM,v1.0.0,,,,,fabric-crypto,fabric-sdk-node,,,,,0,node-SDK,tls,,,,,,"[https://chat.hyperledger.org/channel/fabric-sdk-node?msg=v8prm7vr8gdJwFgq9]

log: [https://pastebin.com/m203005k] using TLS cert + key

log: [https://pastebin.com/88ehQQsu] using E cert + key

I am not able to find an example or location in the code where i can provide the node sdk both TLS crypto and enrollment crypto

Steps to reproduce:

cd $GOPATH/src/github.com/hyperledger/fabric

make docker

cd $GOPATH/src/github.com/hyperledger/fabric-ca

make docker

cd $GOPATH/src/github.com/hyperledger/fabric/examples/cluster

make  [clean required if previously run make compose-up] compose-up

cp build/client.config $GOPATH/src/github.com/hyperledger/fabric-chaintool/examples/example02/client/nodejs

cd $GOPATH/src/github.com/hyperledger/fabric-chaintool/examples/example02/app

chaintool package

cd ../client/nodejs

npm install

node client.js -p HFC_LOGGING='\{""debug"": ""console""}' node client.js install -p /opt/gopath/src/github.com/hyperledger/fabric-chaintool/examples/example02/app/build/org.hyperledger.chaincode.example02-0.1-SNAPSHOT.car

 

To easily swap tls vs msp cert & key:

fabric/examples/cluster/report-env.sh L101-104 fork available at [https://github.com/Rkiouak/fabric/tree/master] (branch master)

fabric-chaintool/examples/example02/client/nodejs/client.js L90-91 fork available at: [https://github.com/Rkiouak/fabric-chaintool]  can be modified to either:

privateKeyPEM: config.identity.tlsprivatekey,
 signedCertPEM: config.identity.tlscertificate

OR

privateKeyPEM: config.identity.privatekey,
signedCertPEM: config.identity.certificate

 

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01elp:,,,,,,,,mrkiouak,muralisr,,,,,,,,,,,,,,,,,,,"19/Jul/17 3:42 PM;jimthematrix;[~mrkiouak] with the node sdk you set the tls certs in the constructors for orderers and peers (https://github.com/hyperledger/fabric-samples/blob/master/balance-transfer/app/helper.js#L63), and the enrollment certs when constructing the user (https://github.com/hyperledger/fabric-samples/blob/master/balance-transfer/app/helper.js#L316). these two sets of crypto materials are clearly separated in the APIs. I would agree with the diagnosis from @jeffgarratt so you should double check the ecerts

Removed the fabric-sdk-node from the components list","20/Jul/17 8:27 PM;jimthematrix;based on conversations with Matt on RC, seems like there are further investigations needed to drill down to the bottom of the error",30/Aug/17 3:46 AM;muralisr;[~jimthematrix] removing peer labels for now,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No means to get channel config bytes for update.,FAB-5368,19337,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rickr,rickr,rickr,18/Jul/17 8:42 PM,26/Jul/17 6:23 AM,26/Apr/18 6:50 AM,24/Jul/17 7:40 PM,v1.0.1,,,v1.0.1,,,,,,,,0,,,,,,,,"In fabric sdk java currently there in no method to retrieve channel configuration bytes.

There is a method getConfigurationBlock() method in Channel class. However this method is marked private. The getConfigurationBlock() method  returns a Block(org.hyperledger.fabric.protos.common.Common$Block). However some tools like the configtxlator take as input the configuration block in .pb (protobuf) format. Hence we need a way to retrieve the configuration block in .pb format",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01el9:,,,,,,,,rhegde,rickr,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Block validation logic is not deterministic with respect to error handling,FAB-5353,19317,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,C0rWin,denyeart,denyeart,18/Jul/17 10:13 AM,30/Jul/17 1:22 PM,26/Apr/18 6:50 AM,25/Jul/17 11:40 AM,v1.0.0,,,v1.0.1,,fabric-peer,,,,,,0,,,,,,,,"If an unexpected error occurs during block validation for a certain transaction, the transaction will get marked as invalid and processing will continue, the block will get committed with the tran marked invalid.  Other peers that do not hit the unexpected error will pass validation and the block will get committed with the tran marked valid. Valid trans will cause state db to get updated. Invalid trans will not update state db.

txvalidator needs to carefully distinguish between unexpected errors and invalidations, to ensure deterministic behavior across peers.  Unexpected errors should result in a peer panic so that an administrator can identify the problem.

One specific example of the problem has been found, although there may be others.  In the specific example, if the state database is unavailable (e.g. couchdb container stopped), then VSCCValidateTx() returns an error and the Validate function simply marks the tran as invalid and continues.  VSCCValidateTx() should distinguish between normal invalidations and unexpected errors, and then the Validate function should panic if an unexpected error is hit.

Here is the peer log entry for this scenario:

{code}
2017-07-18 08:44:49.964 UTC [txvalidator] GetInfoForValidate -> ERRO 5f6 Unable to get chaincode data from ledger for txid 6b975cc80cf0605188460b6e9b9a15b6d102e5d9c5b25fbcda3538b335cf7963, due to Could not retrieve state for chaincode marbles, error Get [http://127.0.0.1:5984/myc/lscc%00marbles?attachments=true:] dial tcp 127.0.0.1:5984: getsockopt: connection refused
 2017-07-18 08:44:49.964 UTC [txvalidator] VSCCValidateTx -> ERRO 5f7 GetInfoForValidate for txId = 6b975cc80cf0605188460b6e9b9a15b6d102e5d9c5b25fbcda3538b335cf7963 returned error Could not retrieve state for chaincode marbles, error Get [http://127.0.0.1:5984/myc/lscc%00marbles?attachments=true:] dial tcp 127.0.0.1:5984: getsockopt: connection refused
 2017-07-18 08:44:49.964 UTC [txvalidator] Validate -> ERRO 5f8 VSCCValidateTx for transaction txId = 6b975cc80cf0605188460b6e9b9a15b6d102e5d9c5b25fbcda3538b335cf7963 returned error Could not retrieve state for chaincode marbles, error Get [http://127.0.0.1:5984/myc/lscc%00marbles?attachments=true:] dial tcp 127.0.0.1:5984: getsockopt: connection refused
{code}

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz4r:z28r,,,,,,,,angelo.decaro,C0rWin,denyeart,harrijk,,,,,,,,,,,,,release-1.0,master,,true,"18/Jul/17 10:22 AM;denyeart;It looks like there was a TODO in the validator code to revisit errors and invalidations, see [https://gerrit.hyperledger.org/r/#/c/3703/.]

[~C0rWin] [~muralisr] can you take a look?","18/Jul/17 11:04 AM;denyeart;[~adc] [~ales] Artem mentioned you have been working on txvalidator more recently, can you take a look?","20/Jul/17 7:04 AM;angelo.decaro;If the peer panics then, at restart, will it be able to pick up from where it was at the validation process?","20/Jul/17 10:56 PM;C0rWin;[~angelo.decaro] yes, once peer will fail to commit it will panic, later it will sync up with other peer and should be able to continue.",20/Jul/17 10:56 PM;C0rWin;https://gerrit.hyperledger.org/r/#/c/11753/,"21/Jul/17 1:21 AM;angelo.decaro;[~C0rWin], thanks, got it. Now, when the peer panic, will it also crash? If yes, then I'm wondering that an adversary will be able to leverage this to make peers crashing and block the network. ","21/Jul/17 1:20 PM;C0rWin;[~angelo.decaro] for adversary to take advantage of this, means he already took down either file system or database, hence peer panic is least concern here, IMO.","22/Jul/17 9:42 AM;angelo.decaro;I agree with you but I don't see from your change-set how you distinguish between the errors. If the peer always crashes for any error then we have a problem. But, I think at this point we are on the same page, right? :)","22/Jul/17 10:06 AM;C0rWin;Let me try to show you :)

At this point I've distinguish two possible case of external failure which might lead to inconsistency of the state:

1. You failed to query DB LSCC for VSCC info, due to connectivity issue with DB
2. You failed to invoke VSCC.

The way I've made it is to define error to clearly state the problem:

{code}
// VSCCInfoLookupFailureError error to indicate inability
// to obtain VSCC information from LCCC
type VSCCInfoLookupFailureError struct {
	reason string
}

// Error returns reasons which lead to the failure
func (e VSCCInfoLookupFailureError) Error() string {
	return e.reason
}

// VSCCEndorsementPolicyError error to mark transaction
// failed endrosement policy check
type VSCCEndorsementPolicyError struct {
	reason string
}

// Error returns reasons which lead to the failure
func (e VSCCEndorsementPolicyError) Error() string {
	return e.reason
}

// VSCCExecutionFailureError error to indicate
// failure during attempt of executing VSCC
// endorsement policy check
type VSCCExecutionFailureError struct {
	reason string
}

// Error returns reasons which lead to the failure
func (e VSCCExecutionFailureError) Error() string {
	return e.reason
}
{code}


Next in the method which seeks for VSCC info I've added:

{code}
	bytes, err := qe.GetState(""lscc"", ccid)
	if err != nil {
		return nil, &VSCCInfoLookupFailureError{fmt.Sprintf(""Could not retrieve state for chaincode %s, error %s"", ccid, err)}
	}
{code}

Now if validation returns any of these errors, I'm stopping iterating over transactions and existing with error, stopping commit.

{code}
					// Validate tx with vscc and policy
					logger.Debug(""Validating transaction vscc tx validate"")
					err, cde := v.vscc.VSCCValidateTx(payload, d, env)
					if err != nil {
						txID := txID
						logger.Errorf(""VSCCValidateTx for transaction txId = %s returned error %s"", txID, err)
						switch err.(type) {
						case *VSCCExecutionFailureError:
							return err
						case *VSCCInfoLookupFailureError:
							return err
						default:
							txsfltr.SetFlag(tIdx, cde)
							continue
						}
					}
{code}",22/Jul/17 10:06 AM;C0rWin;Hope it makes it clear now.,"22/Jul/17 10:17 AM;angelo.decaro;Cool, that helped and I must say it was clear from the code. So, I guess, I'm missing the part where the peer crashes on certain errors. Does it crash?","22/Jul/17 10:19 AM;angelo.decaro;But for 
```
bytes, err := qe.GetState(""lscc"", ccid)
```
What happens if the GetState fails because the ccid was not valid?","22/Jul/17 3:32 PM;C0rWin;I assumed that error returns in case of failure, in case of invalid ccid, there will be nil slice of bytes.

But really thanks for your observation [~angelo.decaro], I will double check it again, now.","26/Jul/17 12:47 AM;angelo.decaro;[~C0rWin], please, may you clarify what happens if the VSCC fails? My understanding is that the peer will panic (and then exit?). Is this correct?","26/Jul/17 4:46 AM;C0rWin;[~angelo.decaro] only if you failed to invoke it, while if VSCC check fails it will mark transaction as invalid.","26/Jul/17 5:11 AM;angelo.decaro;[~C0rWin], in validator.go, line 623, I see the following code:

{code}
res, _, err := v.ccprovider.ExecuteChaincode(ctxt, cccid, args)
	if err != nil {
		msg := fmt.Sprintf(""Invoke VSCC failed for transaction txid=%s, error %s"", txid, err)
		logger.Errorf(msg)
		return &VSCCExecutionFailureError{msg}
	}
{code}

How do you distinguish from a failure of the invocation and the failure of VSCC itself? Now, because VSCCExecutionFailureError is returned, the transaction will not just be marked invalid (validator.go, line 208, btw test coverage does not touch that line), no?

Sorry to continuing insisting. I fear that an attacker can just crash all the peers in a channel in one shot :(","26/Jul/17 6:56 AM;C0rWin;[~angelo.decaro] error returned from execution of VSCC signals of a failure, while state of the result provides information regarding whenever the validation was successful or not, please see few lines below:

{code}
	if res.Status != shim.OK {
		logger.Errorf(""VSCC check failed for transaction txid=%s, error %s"", txid, res.Message)
		return &VSCCEndorsementPolicyError{fmt.Sprintf(""%s"", res.Message)}
	}
{code}","26/Jul/17 7:20 AM;angelo.decaro;Yeah, Yeah, I have just reached the same conclusion. Perfect, we are safe :)",26/Jul/17 7:26 AM;C0rWin;[~angelo.decaro] thanks for reviewing thoroughly my CR.,"26/Jul/17 7:46 AM;angelo.decaro;I'm just paranoid, sorry :(",,,,,,,,,,,,,,,,,,,,,,
Provide common handling for Seek,FAB-5344,19302,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rickr,rickr,rickr,17/Jul/17 4:12 PM,21/Jul/17 12:27 PM,26/Apr/18 6:50 AM,21/Jul/17 12:27 PM,v1.0.1,,,v1.0.1,,fabric-sdk-java,,,,,,0,,,,,,,,"Make sure all Orderer block seeks handle 404 and 503 with some retry capability.

Code cleanup put common code in one place.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01eel:,,,,,,,,mastersingh24,rickr,,,,,,,,,,,,,,,master,,,true,17/Jul/17 7:42 PM;mastersingh24;Is this a bug or is this fixing the current design?,17/Jul/17 7:45 PM;rickr;Both – wasn't handling 503 response for all request. Instead of duplicating code cleaned it up to have a common method.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Creating new channel does not check inconsistency of channel_name and channel_id,FAB-5207,19014,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jyellick,xixuejia,xixuejia,07/Jul/17 12:07 PM,07/Jul/17 6:13 PM,26/Apr/18 6:50 AM,07/Jul/17 6:13 PM,v1.0.0-rc1,,,v1.0.0,,,,,,,,0,orderer,Security,,,,,,"Creating new channel with fabric-sdk-node, neither sdk nor orderer would check the inconsistency of [channel_name|https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/create-channel.js#L191] and channel_id(specified in create channel transaction, say mychannel.tx).

If we just change the field [channel_name|https://github.com/hyperledger/fabric-sdk-node/blob/master/test/integration/e2e/create-channel.js#L191] to another name and leave all other fields in request object unchanged, we can create as many channels as we want only if we provide a new channel_name each time. That means orderer does not check uniqueness of txId nor consistency of channel_name and channel_id. This may cause security issues.

While if we create a new channel with cli, peer will check the consistency of channel_name and channel_id and print out error if they do not match. This could prevent the issue to some extent, but a radical solution should do the check by ordering service.
{code:java}
root@029cab82d5fa:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer channel create -c xixue -f channel-artifacts/channel.tx -o orderer.example.com:7050
2017-07-07 03:35:30.963 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2017-07-07 03:35:30.963 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2017-07-07 03:35:30.966 UTC [channelCmd] InitCmdFactory -> INFO 003 Endorser and orderer connections initialized
Error: Invalid channel create transaction : mismatched channel ID mychannel != xixue
{code}",fabric commit level: d4adf7ab29b9e9454d3573f4f6f813689354b73f,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz4r:xpb2,,,,,,,,jyellick,Ratnakar,xixuejia,,,,,,,,,,,,,,master,,,true,"07/Jul/17 2:34 PM;Ratnakar;[~scottz] and I tested this using node-sdk sample [balance-transfer|https://github.com/hyperledger/fabric-samples/tree/master/balance-transfer] and we could reproduce the issue.

We used the available channel configuration transaction which has chain-id '*mychannel*' , we could create multiple channels and we could join the peers to those channels.","07/Jul/17 2:50 PM;jyellick;I've identified the issue, a fix is pending.",07/Jul/17 3:11 PM;jyellick;In review via: https://gerrit.hyperledger.org/r/#/c/11437/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
deliver envelope get 503 error,FAB-5178,18959,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,liuwenliang0632,liuwenliang0632,liuwenliang0632,05/Jul/17 3:17 AM,17/Jul/17 4:47 PM,26/Apr/18 6:50 AM,17/Jul/17 4:47 PM,,,,v1.0.1,,fabric-sdk-java,,,,,,0,,,,,,,,when i create channel and deliver envelope from orderer. i got 503 error .,,,,,,,,,,,,,,,,,,,FAB-5344,,,,,,,,,,,,,0|i01cid:,,,,,,,,chenxuan,liuwenliang0632,rickr,,,,,,,,,,,,,,master,,,true,"13/Jul/17 5:00 PM;liuwenliang0632;i see your comment for my Patch Set 9 ""If the resp.getStatusValue is not 200 don't we want to throw an exception by adding an exception to throwable ?""

----------------------------------------------

i start one  docker-compose file which contains  peer*4+  ca*2 + orderer*2 + kafka*3 + zookeeper*3. 

before using my patchset i got 503 and throw a excetion .

and then using my patchset .the log will show.

DEBUG OrdererClient:233 - resp status value: 503, resp: SERVICE_UNAVAILABLE, type case: STATUS
DEBUG OrdererClient:233 - resp status value: 503, resp: SERVICE_UNAVAILABLE, type case: STATUS
DEBUG OrdererClient:233 - resp status value: 503, resp: SERVICE_UNAVAILABLE, type case: STATUS
DEBUG OrdererClient:233 - resp status value: 503, resp: SERVICE_UNAVAILABLE, type case: STATUS
DEBUG OrdererClient:233 - resp status value: 503, resp: SERVICE_UNAVAILABLE, type case: STATUS
DEBUG OrdererClient:233 - resp status value: 503, resp: SERVICE_UNAVAILABLE, type case: STATUS
..........................................some times .......................................

DEBUG OrdererClient:233 - resp status value: 0, resp: UNKNOWN, type case: BLOCK
DEBUG OrdererClient:233 - resp status value: 200, resp: SUCCESS, type case: STATUS
DEBUG OrdererClient:233 - resp status value: 0, resp: UNKNOWN, type case: BLOCK
DEBUG OrdererClient:233 - resp status value: 200, resp: SUCCESS, type case: STATUS
DEBUG OrdererClient:233 - resp status value: 0, resp: UNKNOWN, type case: BLOCK
DEBUG OrdererClient:233 - resp status value: 200, resp: SUCCESS, type case: STATUS

 i can work well.

so that is why i cannot add an exception to the throwlist  to throwable. ",13/Jul/17 5:08 PM;liuwenliang0632;when i got 503 the type case is also equals STATUS :(,"13/Jul/17 5:15 PM;rickr;I need to investigate some.

How does this happen .. I've not seen this ?

 ",13/Jul/17 5:23 PM;liuwenliang0632;it can show every time,"13/Jul/17 6:05 PM;rickr;I don't think we want this fix to OrdererClient it's too low in the stack.

Look at Channel.java  getGenesisBlock method.

see:
if (status.getStatusValue() == 404) \{
                            logger.warn(format(""Bad deliver expected status 200  got  %d, Channel %s"", status.getStatusValue(), name));
                            // keep trying...

 

try changing to :

 

if (status.getStatusValue() == 404 _|| status.getStatusValue() == 503_) \{
                            logger.warn(format(""Bad deliver expected status 200  got  %d, Channel %s"", status.getStatusValue(), name));
                            // keep trying...

 

 

 

Can you try that instead","14/Jul/17 3:40 AM;liuwenliang0632;yes  , i will follow .she works well",14/Jul/17 8:32 AM;chenxuan;yes i meet the same error about the create the channel,14/Jul/17 8:34 AM;liuwenliang0632;vote please :),14/Jul/17 11:45 AM;rickr;Do the change in Channel.java,"14/Jul/17 11:54 AM;liuwenliang0632;yes ,i had fixed it in Channel.java . https//gerrit.hyperledger.org/r/#/c/11375/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot join any peer into one channel once there are any chaincodes instantiated on that channel,FAB-5159,18931,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,muralisr,csftan,csftan,04/Jul/17 8:35 AM,07/Jul/17 1:47 PM,26/Apr/18 6:50 AM,07/Jul/17 1:46 PM,,,,Unverifiable,,fabric-ledger,,,,,,0,,,,,,,,"The step to reproduce this bug is as follows:
 # I create the channel using the foo.tx in the fabric-sdk-java
 # I join one peer (peer0) into the channel (foo) I just created
 # I install and instantiate the chaincode example_cc on the peer in the channel foo
 # I try to join another peer (peer1) into channel foo, but fabric returns bad request: Join peer to channel foo failed.  Status FAILURE, details: Sending proposal to peer1.org1.example.com failed because of: gRPC failure=Status\{code=UNKNOWN, description=chaincode error (status: 500, message: Cannot create ledger from genesis block, due to LedgerID already exists), cause=null}""",,,,,,,,,,,,,,,,,,,,,,,,06/Jul/17 1:17 PM;yacovm;Capture.PNG;https://jira.hyperledger.org/secure/attachment/11598/Capture.PNG,,,,,,,,0|i01cdh:,,,,,,,,binhn,csftan,mastersingh24,muralisr,Ratnakar,yacovm,,,,,,,,,,,,,,,"04/Jul/17 10:41 AM;mastersingh24;[~csftan] Can you provide some additional detail(s) about your setup?  Are you using Docker, etc?","05/Jul/17 1:06 AM;csftan;[~mastersingh24] yes, I use docker-compose file in the sdkIntegration-test directory of fabric-java-sdk to boot the network. The chaincode I used is also the example_cc.go in the same directory. ","05/Jul/17 1:52 PM;muralisr;[~csftan] ""Cannot create ledger from genesis block, due to LedgerID already exists"" suggests that the peer's may have alread joined (ledger exists). Are you mounting ledger volume by any chance ?","05/Jul/17 3:16 PM;binhn;[~csftan] we can't recreate using your provided steps above. Here's the description
https://chat.hyperledger.org/channel/fabric-scrum?msg=nNCvLufRyRPLN2QH3

Could you provide more detail or debug logs.  Thanks.",05/Jul/17 4:06 PM;Ratnakar;Tried with both *_e2e_cli_* sample and node-sdk based *_balance-transfer_* sample and unable to recreate the issue,"06/Jul/17 1:18 PM;yacovm; 

I can't reproduce this.

I used [https://github.com/yacovm/fabricDeployment] and modified it to reproduce the steps above and the bug didn't manifest:

 

!Capture.PNG!","07/Jul/17 1:45 PM;muralisr;[~csftan] will close this as we can't recreate the issue (and based on the error, clearly the old ledger being there will preven the join from succeeding).  Do reopen if you like with the information (logs, docker compose file etc).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot join any peer into one channel once there are any chaincodes instantiated on that channel,FAB-5158,18930,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,csftan,csftan,04/Jul/17 8:33 AM,04/Jul/17 10:39 AM,26/Apr/18 6:50 AM,04/Jul/17 10:39 AM,,,,DUPLICATE,,fabric-ledger,fabric-orderer,,,,,0,,,,,,,,"The step to reproduce this bug is as follows:
 # I create the channel using the foo.tx in the fabric-sdk-java
 # I join one peer (peer0) into the channel (foo) I just created
 # I install and instantiate the chaincode example_cc on the peer in the channel foo
 # I try to join another peer (peer1) into channel foo, but fabric returns bad request: Join peer to channel foo failed.  Status FAILURE, details: Sending proposal to peer1.org1.example.com failed because of: gRPC failure=Status\{code=UNKNOWN, description=chaincode error (status: 500, message: Cannot create ledger from genesis block, due to LedgerID already exists), cause=null}""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01cd9:,,,,,,,,csftan,mastersingh24,,,,,,,,,,,,,,,,,,,04/Jul/17 10:39 AM;mastersingh24;Duplicate of FAB-5159,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition in eventhub,FAB-5143,18877,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,divyank,troyronda,troyronda,01/Jul/17 3:30 PM,15/Aug/17 8:02 PM,26/Apr/18 6:50 AM,15/Aug/17 8:02 PM,,,,,,fabric-sdk-go,,,,,,0,,,,,,,,"You can see details by running make race-test.

Summary -  While reconnecting eventhub, the go routine that receives events from the gRPC stream waits for eventhub.Disconnect() to release the eventhub mutex lock before proceeding with event delivery. This causes it to exit after Disconnect(), accessing the stream object from subsequent invocations of eventhub.Connect().

Disconnect() and the processEvents() routine must be synchronized to prevent this. 

Side-note: this code is hard to follow and should be refactored.

Data race at lines: 
 * pkg/fabric-client/events/consumer/consumer.go:252

 * pkg/fabric-client/events/consumer/consumer.go:261 called by pkg/fabric-client/events/eventhub.go:262

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01c3p:,,,,,,,,troyronda,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
FAQ does not meet brand guidelines,FAB-5139,18873,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,tkuhrt,tkuhrt,30/Jun/17 10:09 PM,05/Jul/17 7:29 PM,26/Apr/18 6:50 AM,05/Jul/17 7:29 PM,,,,v1.0.0,,fabric-docs,,,,,,0,Documentation,v1.0,,,,,,"[http://hyperledger-fabric.readthedocs.io/en/latest/Fabric-FAQ.html:] has many violations of the Hyperledger Brand Guidelines ([https://www.hyperledger.org/trademark-usage).] Specifically, I saw a lot of violations of:
 * When referring to a specific Hyperledger software project, *do* use the full project name (e.g., “Acme uses Hyperledger Iroha”) and *do* refer to it as a “framework” or a “tool,” as appropriate (e.g., “the Hyperledger Iroha framework”, “the Hyperledger Explorer tool”).

In many cases, the phrase ""the fabric"" or just ""Fabric"" was used.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i01c2t:,,,,,,,,ChristopherFerris,JonathanLevi,mastersingh24,tkuhrt,,,,,,,,,,,,,master,,,true,30/Jun/17 11:38 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/11327,01/Jul/17 3:41 PM;mastersingh24;[~tkuhrt] - can you verify and close this if all is good?,"03/Jul/17 4:54 PM;tkuhrt;[~ChristopherFerris], [~mastersingh24]: How do we re-open this bug?

I found the following that does not meet Brand Guidelines:

??Does its Membership Service make +Fabric+ a centralized solution???",03/Jul/17 9:37 PM;JonathanLevi;(re-opened at [~tkuhrt] 's behest),04/Jul/17 12:32 PM;mastersingh24;The issue is in the membership services Q&A and frankly it's wrong anyway.  I'll take a look,04/Jul/17 2:52 PM;mastersingh24;https://gerrit.hyperledger.org/r/11355,"05/Jul/17 11:34 AM;mastersingh24;[~tkuhrt] - I attempted to update all references to ""Fabric, fabric"" and change them to Hyperledger Fabric.   I also updated any Composer references to Hyperledger Composer

Is it ok to close this one now?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message Size Incorrect,FAB-5117,18843,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,harrisob@us.ibm.com,latitiah,latitiah,29/Jun/17 10:26 PM,17/Jan/18 2:11 PM,26/Apr/18 6:50 AM,24/Nov/17 8:07 PM,v1.0.0-rc1,,,v1.1,,fabric-sdk-node,,,,,,0,ci_failure,,,,,,,"*commit:* RC1
*api:* sdk-node

*Steps:*
Scenario: FAB-3851: Message Payloads Greater than 1MB
1.    Given I have a bootstrapped fabric network of type kafka
2.    When a user deploys chaincode at path ""github.com/hyperledger/fabric/examples/chaincode/go/test"" with [""""] #Keystore chaincode
3.    And I wait ""30"" seconds
4.    And a user invokes on the chaincode named ""mycc"" with random args [""put"",""a"",""{random}""] of length 1048576
5.    And I wait ""30"" seconds
6.    And a user queries on the chaincode named ""mycc"" with args [""get"",""a""]
7.    Then a user receives response containing set length value
8.    And a user invokes on the chaincode named ""mycc"" with random args [""put"",""a"",""{random}""] of length 2097152
9.    And I wait ""30"" seconds
10.    And a user queries on the chaincode named ""mycc"" with args [""get"",""a""]
11.    Then a user receives response containing set length value

On Kafka (setting the KAFKA environment variables), 1MB, 1.5MB works fine.
Kafka environment variables set to:
- KAFKA_MESSAGE_MAX_BYTES=103809024
- KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
- KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES=103809024

2MB has problems on the query. When looking through the peer and orderer logs, there are no errors. The error comes from the sdk during a query.

{code}
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Received message larger than max (4195347 vs. 4194304)
    at /home/itpc/experims/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:434:17
error: [client-utils.js]: sendPeersProposal - Promise is rejected: Error: Received message larger than max (4195347 vs. 4194304)
    at /home/itpc/experims/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:434:17
Error: Received message larger than max (4195347 vs. 4194304)
Error: Received message larger than max (4195347 vs. 4194304)
{code}

What is strange is the message size reported is twice as much as the actual payload.",,,,,,,,,,,,,,,,,,,FAB-5049,FAB-3851,,,,,,,,,,,,0|i01bxp:,,,,,,,,blw,harrisob@us.ibm.com,jeffgarratt,latitiah,mastersingh24,muralisr,scottz,,,,,,,,,,master,,,true,12/Jul/17 4:38 PM;jimthematrix;[~latitiah] I'm changing the target to fabric-peer because the error messages come directly from the peer. the SDK is simply displaying what the peer returns,"23/Jul/17 12:16 AM;blw;[~latitiah] I don't see a ""test"" chaincode in github.com/hyperledger/fabric/examples/chaincode/go/. Has the name been changed, or is there another chaincode that can be used to repro?","24/Jul/17 7:01 PM;latitiah;I believe you can try the same test using the ""hyperledger/fabric/examples/chaincode/go/map"" chaincode.",02/Aug/17 4:37 PM;blw;[~latitiah] Could you share the SDK client code you used to invoke large message payloads?,"08/Aug/17 7:15 PM;latitiah;Hi [~blw] Here is a link to the setup that I used when I ran into this issue. https://gerrit.hyperledger.org/r/12261
Thanks!",07/Sep/17 6:03 PM;muralisr;[~blw] any update on the recreate please ?,"13/Sep/17 4:49 PM;blw;No updates right now, still trying to reproduce.","26/Oct/17 7:12 PM;jeffgarratt;Hey [~blw], is this still an issue or can we close this? ","26/Oct/17 8:26 PM;latitiah;There is a CR that contains a behave test that reproduces this problem. (Please see the readme in the fabric-test repo for setting up your environment for executing this test.)
https://gerrit.hyperledger.org/r/#/c/14157/ 
{code}
behave -n ""FAB-3851: Message Payloads More than 1MB"" -k
{code}

I'm going to abandon the CR which contains the previous test.","01/Nov/17 3:12 PM;jeffgarratt;[~latitiah][~blw][~muralisr]  This appears to be a limit from the node GRPC client lib, not the peer.  The peer is defaulted per https://github.com/hyperledger/fabric/blob/master/core/comm/config.go#L23-L24

Going to reassign to fabric-sdk-node.","01/Nov/17 9:08 PM;muralisr;[~jeffgarratt] One thing (should have caught this earlier)... I think the limits were changed post 1.0.0 (more recently, basically). Worth checking if the problem occurs in master ? Or has that been done already ?","08/Nov/17 5:12 PM;harrisob@us.ibm.com;Setting the NodeSDK default grpc send and receive sizes to unlimited, thereby letting the size be controlled by the fabric size.

[~muralisr] [~jeffgarratt] Do you think we should be setting a limit on the send from the NodeSDK size to somewhat protect the fabric network. ",08/Nov/17 5:21 PM;harrisob@us.ibm.com;https://gerrit.hyperledger.org/r/#/c/15309/,"13/Nov/17 11:35 PM;scottz;The test still fails in the same place. Notice the returned length (4195328) is double+1024.

```

ubuntu@hyperledger-devenv:a454d61:/opt/gopath/src/github.com/hyperledger/fabric-test/feature$ behave -n FAB-3851

Feature: Orderer Service # orderer.feature:7
 As a user I want to be able to have my transactions ordered correctly
 @skip @daily
 Scenario Outline: FAB-3851: Message Payloads More than 1MB, for solo orderer -- @1.1

 ...

When a user invokes on the chaincode named ""mycc"" with random args [""put"",""i"",""\{random_value}""] of length 2097152
 And I wait ""7"" seconds 

And a user queries on the chaincode named ""mycc"" with args [""get"",""i""] 
 Then a user receives a response containing a value of length 2097152
 Assertion Failed: Expected response to be of length 2097152; received length 62; Result: Error: Received message larger than max (4195328 vs. 4194304)

```

And so I tried again with some other lengths, and got these results:

if I use length 2096000, the test passes

if I use length 2097150, the test fails with the following error message (and the returned length 4195320 is double+1016):

`Assertion Failed: Expected response to be of length 2097150; received length 62; Result: Error: Received message larger than max (4195320 vs. 4194304)`",24/Nov/17 8:07 PM;mastersingh24;https://gerrit.hyperledger.org/r/15499,"16/Jan/18 4:21 PM;latitiah;Verified as passing. This test was added back into the CI test suite with the CR: https://gerrit.hyperledger.org/r/#/c/16853/
",,,,,,,,,,,,,,,,,,,,,,,,,,
"SECURITY Event registration request should not be ""relayable""",FAB-4824,18136,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,wlahti,elli-androulaki,elli-androulaki,16/Jun/17 9:00 AM,14/Mar/18 7:18 PM,26/Apr/18 6:50 AM,27/Feb/18 10:33 PM,,,,v1.1,,fabric-crypto,fabric-orderer,fabric-peer,fabric-sdk-go,fabric-sdk-py,,0,A&D,ARCH,Release-planning-1.1,sdk,Security,,,"This issue was reported by [~yacovm], and respective attacks / solutions discussed with [~angelo.decaro], and [~jimthematrix].

 

This bug has to do with client impersonation attack for event registration that a malicious peer can spawn to escalate its access rights. The attacker in this case would be a peer who had once access to a channel, and after a while its organisation revoked its certificate and should thus be restricted access to the organisation's resources.

 

*Background/source of the problem*:

Essentially event messages that (among others things) serve event registration, and the required requestor authentication/authorisation assessment is based on these messages. 

Event messages contain requestor signature, *but* the message signed is not bound to the underlying connection in which the message was exchanged (e.g., communication parties), and can thus be easily relay-able. That is the recipient of such messages can easily initiate another (TLS) connection with another node (of the same org), and request registration to events using the request once received by a client. Implicitly, that peer would be allowed to _impersonate the message creator._

In particular,  events have the following form:

 
{code:java}
// SignedEvent is used for any communication between consumer and producer
message SignedEvent {
   // Signature over the event bytes
   bytes signature = 1;
   // Marshal of Event object
   bytes eventBytes = 2;
}

//Event is used by
// - consumers (adapters) to send Register
// - producer to advertise supported types and events
message Event {
  //TODO need timestamp

  oneof Event {
    //Register consumer sent event
    Register register = 1;

    //producer events
    common.Block block = 2;
    ChaincodeEvent chaincode_event = 3;
    Rejection rejection = 4;

    //Unregister consumer sent events
    Unregister unregister = 5;
  }
  // Creator of the event, specified as a certificate chain
  bytes creator = 6;
}
{code}
 

*Potential attacks*:

 

*Attack 1*: Alice (client) and Bob( peer), and Charlie (peer) are members of the same org, Org. 
 # Alice (client) connects to Bob(peer) requesting registration to events. 
 # Bob accepts, and stores Alice's registration request, say AliceReq
 # Org revokes Bob
 # Bob contacts Charlie and requests to register for events using AliceReq

 

*Attack 2*: Alice (client) and Bob( peer), and Charlie (peer) are members of the same org, Org. 
 # Alice (client) connects to Bob(peer) requesting registration to events, with a request AliceReq
 # Bob accepts
 # Bob uses AliceReq to connect to Charlie (and potentially to other peers of the same org). Notice that Bob at this point has access to the channels himself, but with this act of his, he is able to receive events of the same org as ""Alice"".
 # Org revokes Bob
 # Charlie stops sending other types of messages to Bob, but as for the event connections Bob was also registered under Alice's name, Charlie will keep sending messages to Bob. 

 

*Attack 3*: Alice (client) and Bob( peer), and Charlie (peer) are members of the same org, Org. Trudy (peer) is a member of another org.
 # Alice (client) wants to register to events and sends a registration request AliceReq by mistake to Trudy. 
 # Trudy will reject the request as Alice comes from different org, but can now use AliceReq to register under Alice's name and receive events for Org.
 # Trudy connects to Bob using AliceReq (and potentially to other peers of the same org).
 # Bob, not being able to recognise the relay, will accept the request and open a connection with Trudy (thinking that it is talking to Alice).
 # Trudy will be receiving events of Org.  

 

*Solutions:*

As a first step we can add a timestamp inside the signed message in event registration requests (as already marked in the code) that is checked at the recipient end. Messages that are deemed by the peer as ""old"" will be rejected. This would prevent attacks of type Attack1. This would require changes to the following parts:
  - change to the Event proto message to include a timestamp
  - enhancement to clientsdk to fill in the timestamp field of Event
  - enhancement of peer to check the timestamp field (with version dependency)
  - enhancement of the peer setup configuration with a time-window, assuming the peer is to be considering requests within time-window < |peer-local-time - event-timestamp|

As a second step we need to bind the event registration request to the intended recipient. The challenge here is twofold. On one side, the client is not possible to be authenticated at the tls layer (nodejs limitations), and on the other hand the client who sends the event registration requests does not know in advance the enrollment/tls certificate of the party it will end up connecting to. However, we could leverage the TLS certificate of the peer that the client receives during the TLS handshake to bind the request to the intended recipient.

The flow would be the following. The client *does* know the certificate of the root CA of TLS certificates of its organisation, and authenticates the peer it connects to using that root CA cert, and the TLS certificate received by the peer side during TLS hand-shake. After the TLS handshake is completed successfully, the client retrieves the tls certificate of the peer, it hashes it and signs current event registration payload concatenated with the hash of the tls peer certificate.

The peer side, that receives the event registration request will need to check that the signature in it matches the event request payload and the hash of the peer's tls cert. The peer will reject the request if this is not the case. 

Note: Ultimately, when long enough tls-unique TLS connection identifiers are supported, the tls-unique of the client-peer connection can be used to bind the event request to the underlying connection.

With this second step Attacks 2 and 3 will not be possible to be spawned.

 ",,,,,,,,,,,,,,,,,,,FAB-8563,,,,,,,,,,,,,0|hzzz6a:rhw90i,,,,,,,,angelo.decaro,baohua,binhn,denyeart,dhuseby,elli-androulaki,harrisob@us.ibm.com,jeffgarratt,kchristidis,mastersingh24,rickr,ryjones,smithbk,wlahti,yacovm,,master,,,true,"16/Jun/17 10:28 AM;yacovm;{quote}we could leverage the TLS certificate of the peer that the client receives during the TLS handshake to bind the request to the intended recipient.
{quote}

This sounds to me like a good idea. We may (or may not, depends on implementation) need to change the signed event message but I think that's not that bad.
","16/Jun/17 6:54 PM;binhn;[~elli-androulaki], so basically we try to prevent a malicious peer from taking a SignedEvent from a client and registering for events.  We have 2 tasks:
 # Peer: check signedEvent = event payload + hash(peer tls cert)
 # SDK: sign(event payload + hash(peer tls cert))

[~jimthematrix] SDK side to expand the signature to include the hash

[~troyronda]  [~yeasy]","19/Jun/17 5:21 PM;mastersingh24;While I agree that Attack 3 is a *bit* of an exposure (I say this because in order to actually capture the request would at least take some forethought on the part of Trudy's organization), overall the current design of Fabric assumes trust within your own organization.

We also have some future work to do to revamp the event infrastructure in the next release, so I personally do not think we need to make any changes at this point","20/Jun/17 4:13 AM;baohua;1) For step 1: Need to discuss an appropriate timeout value. There's risk if set the valid timeout too long.

Beside binding the receipt id to the request, maybe it's also helpful to bind the sender id.

Consider a scenario: Alice sends valid request to Bob, while Charlie steals that request, and use it to connect to Bob.

2) Another question is that are we forced to enable TLS from sdk side?

3) I also agree with gari, this can be considered as post v1.0 design.","07/Aug/17 10:47 AM;elli-androulaki;Hi, would now be a good time to resume with this ? :)","07/Aug/17 11:01 AM;yacovm;Since [~wlahti] is already defining a new event type - ( FAB-5568 )  I think now is actually the perfect time to extend the [SignedEvent|https://github.com/hyperledger/fabric/blob/release/protos/peer/events.proto#L78-L83] to have an additional field which would be a binding.
With this way we can have backwards compatibility with clients that don't populate the binding field, and only apply the logic if the binding field exists. ",08/Aug/17 3:11 PM;rickr;This is targeted for v1.1  it looks like the suggestion is to incorporate this into  FAB-5568  but that has no target for v1.1.  Trying to find out what impact to the JDKs here for v1.1 [~muralisr] [~jimthematrix]  When if at all CR for the work will be ready for the SDKs,"09/Aug/17 12:58 PM;elli-androulaki;Ok, will bring this up to our scrum then. Thanks [~yacovm], [~rickr]!","01/Sep/17 11:28 AM;elli-androulaki;Here there is a small backward compatibility issue with 1.0 in the following sense:

 - A client would always be motivated to include the recipient into its registration request; hence:

   * a client who includes the recipient into the request runs 1.1

   * a  client who does not include the recipient into the request runs 1.0

 - A peer who runs v1.1 would be able to parse both even registration requests: the requests that originate from a client with v1.0 would simply have empty recipient field

 - A peer who runs 1.0 and receives a request from a client running 1.1 would reject the event registration request as invalid. Would this be considered a backward compatibility issue? If we assume the client has the information of which peer runs which version we can go around this, but not sure this is a valid assumption?

[~yacovm], [~rickr], [~harrisob@us.ibm.com], [~wlahti], [~angelo.decaro], [~mastersingh24], what do you think? ","01/Sep/17 1:20 PM;yacovm;{quote}A peer who runs 1.0 and receives a request from a client running 1.1 would reject the event registration request as invalid{quote}

why?
If the events are as following:
{code}
// SignedEvent is used for any communication between consumer and producer
message SignedEvent {
   // Signature over the event bytes
   bytes signature = 1;
   // Marshal of Event object
   bytes eventBytes = 2;
}

message Event {

  oneof Event {
    //Register consumer sent event
    Register register = 1;

    //producer events
    common.Block block = 2;
    ChaincodeEvent chaincode_event = 3;
    Rejection rejection = 4;

    //Unregister consumer sent events
    Unregister unregister = 5;
  }
  // Creator of the event, specified as a certificate chain
  bytes creator = 6;
  bytes TLS_cert_of_peer = 7;
}
{code}
In the case of v1.1 client and v1.0 peer, the eventBytes are unmarshaled according to the proto schema of v1.0 and the proto parser would just skip parsing the last field since it doesn't have it in its schema (the schema of v1.0 should be the schema of v1.1 modulo the 7th field).
This, btw - can be easily verified with a code example.","05/Sep/17 8:33 PM;rickr;I'm not sure if obtaining the *exact certificate bytes* from the server is possible with Java. I've asked on the grpc forum.

In general, I don't think that this is a good assumption that all language implementations would have this capability.


[https://groups.google.com/forum/#!topic/grpc-io/LoB4mflwy9k]

[~wlahti] [~jimthematrix]",06/Sep/17 1:19 PM;rickr;Don't think this is *reliably* possible with Java SDK.,19/Oct/17 3:46 PM;rickr;Where are we with the ETA of this and what the SDKs specifically need to do for it ?,"19/Oct/17 3:57 PM;wlahti;FAB-6075 is almost ready to be merged. After that, a timestamp should be added to the registration message the SDKs send to the eventhub. ","21/Oct/17 10:14 AM;yacovm;{quote}As a second step we need to bind the event registration request to the intended recipient. The challenge here is twofold. On one side, the client is not possible to be authenticated at the tls layer (nodejs limitations)
{quote}

I tried and I think it works, at least with the grpc version in the node_modules that is in the balance_transfer sample. 

I just did the following crude change:
{code}
            var d = '/home/yacovm/fabricDeployment/crypto-config/peerOrganizations/hrl.ibm.il/peers/vm2.hrl.ibm.il/tls/';
            var cert = fs.readFileSync(d + 'server.crt');
            var key = fs.readFileSync(d + 'server.key');
			this.creds = grpc.credentials.createSsl(new Buffer(pem), key, cert);
{code}
in *Remote.js* and then added an *else* to the secureServer in the peer:
{code}
grpcServer.tlsConfig.ClientAuth = tls.RequestClientCert
{code}

Also the java grpc implementation, [according to the documentation|https://github.com/grpc/grpc-java/blob/master/SECURITY.md#mutual-tls] - supports it.","21/Oct/17 10:33 AM;yacovm;So, what I'm trying to say is: Instead of obtaining the server cert from the gRPC connection what we really need to do is have the client either have a preconfigured TLS certificate, or if lacking one - generate a self signed one itself, and then include the cert's hash in the request sent to the peer.

The peer, in turn would extract the TLS certificate from the gRPC context (there is sample code in gossip/comm/crypto.go and in core/chaincode/accesscontrol/mapper), hash it, and compare the hash to the one in the request.
* If it's not the same, it means that request wasn't signed by the client on the other side of the connection, but instead was forwarded.
* If it's the same, it means the client on the other side of the connection has:
** The TLS cert's private key
** A signature of the signing identity matching the one in the creator field of the request over the TLS certificate. 
 ","27/Oct/17 11:29 AM;angelo.decaro;I agree with [~yacovm], let's have that.",27/Nov/17 2:10 AM;denyeart;[~elli-androulaki] Could you (or somebody else) summarize the work required and propose owner(s)?,27/Nov/17 9:00 PM;harrisob@us.ibm.com;Removed the SDK tag as the SDK's are not required to implement this change,"27/Nov/17 9:12 PM;yacovm;{quote}Removed the SDK tag as the SDK's are not required to implement this change
{quote}
How so? Can you elaborate please?","28/Nov/17 6:30 PM;harrisob@us.ibm.com;# the SDK client will not be able to connect with a 1.0 fabric
 # there will be a new secure event service
 # timestamp is only a partial fix","29/Nov/17 7:58 AM;elli-androulaki;Hi,

Regarding (1):
Why not? We could have a version on the peer side to detect if the client he is talking to is a 1.0 or a 1.1 one? So when the clientsdk is updated, it can leverage this feature. 

Regarding (2):
I am not familiar with the architecture of the new event infrastructure. Is the attacks described above already covered? If not, I think we need to adopt a similar mechanism to address them. 

Regarding (3):
Indeed, it is a first step towards it. Notice that including a timestamp in an event request is not something that can hurt the system in any case. IN addition to this, and moving towards the full fix [~yacovm] has already submitted this [CR|https://gerrit.hyperledger.org/r/#/c/15137/] that was merged. ","29/Nov/17 9:00 AM;yacovm;{quote}# the SDK client will not be able to connect with a 1.0 fabric
 # there will be a new secure event service
 # timestamp is only a partial fix
 {quote}

# We're discussing v1.1, not v1.0. Unless we do something in the client side, this problem will persist in v1.1 
# To my understanding, unless the client-side cooperates - it will not be secure, as long as the only way we identify the client stays the same as it is now.
# Right, and I would say we should leverage mutual TLS when possible (if the client has a TLS certificate) and when not - fallback to timestamp, so we should implement both. 

[~jimthematrix]  [~mastersingh24] your thoughts?","30/Nov/17 4:38 PM;jeffgarratt;Just spoke with [~elli-androulaki] and [~yacovm] and [~wlahti] and [~harrisob@us.ibm.com]  about this..

 

Will create items to address the plan immediately.","04/Dec/17 5:51 PM;dhuseby;Hi Everybody,

This is clearly a security issue and the bug should have been flagged as a security issue so that we can have a private conversation about it.  Hopefully you are all watchers and can see this.",15/Dec/17 1:08 AM;ryjones;Watchers that are not in the security LDAP group should now be able to see this issue.,02/Jan/18 10:39 PM;dhuseby;[~wlahti] any updates on this bug?,"02/Jan/18 10:50 PM;dhuseby;[~rickr] this bug looks to be a duplicate of FAB-6030.  Is that is true, I will close out FAB-6030 and we can focus on this bug.","08/Jan/18 4:07 PM;wlahti;The server-side fixes have been merged. We now need the SDKs to make sure they're setting the timestamp and TLSCertHash in each event ""registration"" message they're sending. ",08/Jan/18 4:31 PM;yacovm;Just to add to what Will said - this needs to happen only when mutual TLS is activated + this also needs to be done for peer and orderer Deliver clients (the peer deliver client side (when the peer pulls blocks from the orderer) is already ready),"31/Jan/18 7:35 PM;rickr;The above does not appear to match what was pasted into java sdk JIRA
{quote}mutual TLS: the TLSCertHash must be set in the envelope's channel header. The TLS certificate hash to set is the SHA256 hash of the DER representation of the client's TLS certificate
{quote}","31/Jan/18 7:57 PM;rickr;I don't think all SDK's can get the Peer's tls certifiate as the exact bytes sent on the wire.  Best I could find for the JSDK was a certificate object.  Which I don't think will guarrentee it would be serialized to exact bytes on the wire.


For TLS client certificate I was told that TLS on the server side will not enforce that certificate matches the host or its IP.  Sort of seems reasonable given the more dynamic nature of clients.   But if the certificate is not tied and guaranteed coming from the client source what's to prevent a rovked peer from using a previous collected clients tls cert . to connect to any other peer ?","31/Jan/18 8:13 PM;wlahti;This JIRA needs to be updated to incorporate the subsequent discussions and decisions made in the linked JIRA items for the peer-side handling of this vulnerability. [~elli-androulaki] Do you think you can update this item when you have a chance?

To sum it up briefly until the updates have been made, the linked JIRA items for the SDKs are accurate. The SDKs should always set the timestamp and, when mutual TLS is enabled, the TLSCertHash of the client's TLS certificate in the messages sent to register for the eventhub and deliver services. ",06/Feb/18 10:01 PM;harrisob@us.ibm.com;Removed the NodeSDK component as this causes double counting of issue when there is a child issue for NodeSDK,26/Feb/18 12:07 PM;denyeart;[~smithbk] I believe you were working on the last piece of this.  Could you provide an update?,"27/Feb/18 10:31 PM;denyeart;Resolved by FAB-8563. I will close, but please re-open if anything else is needed.",,,,,,
SDK unnecessarily creating tgz file .,FAB-4034,16885,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rickr,rickr,rickr,19/May/17 10:11 AM,19/May/17 1:26 PM,26/Apr/18 6:50 AM,19/May/17 1:26 PM,,,,v1.0.0,,fabric-sdk-java,,,,,,0,,,,,,,,SDK unnecessarily creating tgz file .,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i011id:,,,,,,,,rickr,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove guidance in end-to-end.rst for checkout v1.0.0-alpha2,FAB-4033,16884,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,ChristopherFerris,denyeart,denyeart,19/May/17 2:54 AM,26/May/17 4:50 PM,26/Apr/18 6:50 AM,26/May/17 4:50 PM,,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,,"end-to-end.rst recently added guidance for developers to *checkout v1.0.0-alpha2* when doing e2e trials.  The intent was to avoid any potential problems in latest master.  However this advise has backfired, as the instructions and docker-compose in fact had problems at that alpha2 tag level.

After discussing with maintainers, it was agreed that the checkout v1.0.0-alpha2 guidance should therefore be removed.

Also, in a follow-on work item end-to-end.rst may be removed in favor of Getting Started.  Or perhaps refactored with obvious paths for 'consumers' (who download images) vs 'developers' (who clone repositories and make docker images).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz4r:y,,,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,master,,,true,25/May/17 4:44 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/#/c/9807/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-ca-client -M option does not work for the MSP keystore,FAB-4015,16865,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,smithbk,smithbk,smithbk,18/May/17 4:40 PM,26/May/17 1:51 AM,26/Apr/18 6:50 AM,26/May/17 1:51 AM,,,,v1.0.0,v1.0.0-alpha2,fabric-ca,,,,,,0,,,,,,,,"To reproduce the problem, issue the following command.
{code:java}
# fabric-ca-client enroll -u http://admin:adminpw@localhost:7054 -M /tmp/msp{code}
The keystore directory is created at /tmp/msp/keystore but the key is stored incorrectly in the $HOME/.fabric-ca-client/msp/keystore directory.

This means that when the -M option is used to enroll an orderer or peer, the key is not accessible to the orderer or peer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i011et:,,,,,,,,Clayton Sims,smithbk,,,,,,,,,,,,,,,master,,,true,18/May/17 10:27 PM;smithbk;http://gerrit.hyperledger.org/r/9553 [FAB-4015] Fix -M option of fabric-ca-client,22/May/17 2:20 PM;Clayton Sims;did this make it into alpha 2?  should we remove alpha2 tag?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
invoke transaction API in SDK should not include chaincode version,FAB-4014,16864,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,cdaughtr,jimthematrix,jimthematrix,18/May/17 4:25 PM,22/May/17 6:58 PM,26/Apr/18 6:50 AM,22/May/17 6:58 PM,,,,,,fabric-sdk-node,,,,,,0,,,,,,,,"based on my understanding from chatting with Murali, there can only ever be a single version of the chaincode that in effect on a channel, which is the version that was instantiated last. so the send transaction proposal request should not need to include the chaincode version, just the name.

[~muralisr] please chime in if my understanding is inaccurate.
[~rickr] FYI",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz6a:r3,,,,,,,,muralisr,,,,,,,,,,,,,,,,master,,,true,"19/May/17 12:34 AM;muralisr; right [~jimthematrix].. to summarize the install, instantiate, upgrade and invoke need the following information

{code:java}
install - path, name, version
instantiate, upgrade - name, version
invoke - name 
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
OU certificates fail to match due to inconsistent processing,FAB-4003,16852,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,passkit,passkit,passkit,18/May/17 10:32 AM,29/May/17 11:23 PM,26/Apr/18 6:50 AM,29/May/17 11:23 PM,v1.0.0-alpha2,,,v1.0.0,,fabric-crypto,,,,,,1,,,,,,,,"When checking the OU certificate against the intermediates and roots, the OU certificate is extracted using {{x509.ParseCertificate}} whereas the intermediates and roots are sanitised then reimported through {{msp.bccsp.KeyImport}}. The reimporting has the potential to change the signature algorithm which in turn results in certificates not matching, even though they are the same.

Attached is a certificate chain (intermediate and root) that demonstrates the problem",,,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,18/May/17 10:32 AM;passkit;ca-chain.cert.pem;https://jira.hyperledger.org/secure/attachment/10830/ca-chain.cert.pem,,,,,,,,0|i011bx:,,,,,,,,ChristopherFerris,passkit,pmcosta1,yacovm,,,,,,,,,,,,,master,,,true,18/May/17 10:40 AM;passkit;http://gerrit.hyperledger.org/r/9519,29/May/17 6:02 PM;ChristopherFerris;This is borderline IMO in terms of the amount of production code affected. I think it should be merged.,29/May/17 6:05 PM;yacovm;I also agree. This is a bug and the resolution to fix it is tiny and focused on a single file.,"29/May/17 11:22 PM;ChristopherFerris;ok, removed review-needed and merging",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[SECURITY] Fabric CA not handling valid Certificate Signing Request.,FAB-3979,16812,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,rickr,rickr,17/May/17 12:17 PM,04/Nov/17 1:34 PM,26/Apr/18 6:50 AM,04/Nov/17 1:30 PM,v1.0.0-rc1,,,WON'T FIX,,fabric-ca,,,,,,0,,,,,,,," Bouncy Castle produce CSR and IBMJCE providers create CSRs that work.  IBMPKCS11 provider needed for HSM produces a different CSR  but I think is also valid fails

 

2017/05/17 12:13:15 [DEBUG] Received request
 POST /api/v1/enroll
 Authorization: Basic YWRtaW46YWRtaW5wdw==
 \{""certificate_request"":""-----BEGIN CERTIFICATE REQUEST-----\nMIIBqDCCAU4CAQAwEDEOMAwGA1UEAxMFYWRtaW4wggEzMIHsBgcqhkjOPQIBMIHg\nAgEBMCwGByqGSM49AQECIQD/////AAAAAQAAAAAAAAAAAAAAAP//////////////\n/zBEBCD/////AAAAAQAAAAAAAAAAAAAAAP///////////////AQgWsY12Ko6k+ez\n671VdpiGvGUdBrDMU7D2O848PifSYEsEQQRrF9Hy4SxCR/i85uVjpEDydwN9gS3r\nM6D0oTlF2JjClk/jQuL+Gn+bjufrSnwPnhYrzjNXazFezsu2QGg3v1H1AiEA////\n/wAAAAD//////////7zm+q2nF56E87nKwvxjJVECAQEDQgAE80dMWkLUc1JHRBcr\nEcpBVUkBfLiJ2NPY56anGU19ZRSE1w7DZIybcTLbz6UqCKZHPYzr+SrMA8wdY7qH\n3C/VxKAAMAoGCCqGSM49BAMCA0gAMEUCIQD+YcWlMUFV21EA4JnxyxmWXk6R6f0u\n2eMlEQ3FdS///QIgO6zWfKzEg359t9fhsYeNZUG4EHPbk0ZNXCwe1spn3vg=\n-----END CERTIFICATE REQUEST-----\n""}
 2017/05/17 12:13:15 [DEBUG] Directing traffic to default CA
 2017/05/17 12:13:15 [DEBUG] DB: Getting identity admin
 2017/05/17 12:13:15 [DEBUG] DB: Login identity admin with max enrollments of 0 and state of 0
 2017/05/17 12:13:15 [DEBUGAutomatic] DB: Successfully incremented state for identity admin to 1
 2017/05/17 12:13:15 [DEBUG] DB: identity admin successfully logged in
 2017/05/17 12:13:15 [DEBUG] Identity/Pass was correct
 2017/05/17 12:13:15 [DEBUG] Received request for endpoint enroll
 2017/05/17 12:13:15 [DEBUG] Enrollment request: \{SignRequest:\{Hosts:[] Request:-----BEGIN CERTIFICATE REQUEST-----
 MIIBqDCCAU4CAQAwEDEOMAwGA1UEAxMFYWRtaW4wggEzMIHsBgcqhkjOPQIBMIHg
 AgEBMCwGByqGSM49AQECIQD/////AAAAAQAAAAAAAAAAAAAAAP//////////////
 /zBEBCD/////AAAAAQAAAAAAAAAAAAAAAP///////////////AQgWsY12Ko6k+ez
 671VdpiGvGUdBrDMU7D2O848PifSYEsEQQRrF9Hy4SxCR/i85uVjpEDydwN9gS3r
 M6D0oTlF2JjClk/jQuL+Gn+bjufrSnwPnhYrzjNXazFezsu2QGg3v1H1AiEA////
 /wAAAAD//////////7zm+q2nF56E87nKwvxjJVECAQEDQgAE80dMWkLUc1JHRBcr
 EcpBVUkBfLiJ2NPY56anGU19ZRSE1w7DZIybcTLbz6UqCKZHPYzr+SrMA8wdY7qH
 3C/VxKAAMAoGCCqGSM49BAMCA0gAMEUCIQD+YcWlMUFV21EA4JnxyxmWXk6R6f0u
 2eMlEQ3FdS///QIgO6zWfKzEg359t9fhsYeNZUG4EHPbk0ZNXCwe1spn3vg=
 -----END CERTIFICATE REQUEST-----
  Subject:<nil> Profile: CRLOverride: Label: Serial:<nil> Extensions:[]} CAName:}
 2017/05/17 12:13:15 [INFO] 172.18.0.1:44966 - ""POST /api/v1/enroll"" 0

 

 

""success"":false,""result"":null,""errors"":[\\{""code"":0,""message"":""asn1: structure error: tags don't match (6 vs \\{class:0 tag:16 length:224 isCompound:true}) \\{optional:false explicit:false application:false defaultValue:\u003cnil\u003e tag:\u003cnil\u003e stringType:0 timeType:0 set:false omitEmpty:false} ObjectIdentifier @3""}],""messages"":[

I wrote the pems sent to a file and attached them.  the bouncycastle is BC.pem 
 The IBM pkcs10 produced is ibm.pem

Both of these runt though openssl  just fine. I think both are valid CSRs","Fabric CA level

commit ed5ed51ac75b5006c827704aa589f335ac723d8e
Merge: 92aec7f 34ec53e
Author: Srinivasan Muralidharan <muralisr@us.ibm.com>
Date:   Tue May 9 19:01:55 2017 +0000",,,,,,,,,,,,,FAB-3137,FAB-4546,,,,,,,,,17/May/17 12:01 PM;rickr;bc.pem;https://jira.hyperledger.org/secure/attachment/10825/bc.pem,17/May/17 12:01 PM;rickr;ibm.pem;https://jira.hyperledger.org/secure/attachment/10824/ibm.pem,,,,,,,0|hzzz6a:rhw9y,,,,,,,,mastersingh24,rickr,smithbk,vpaprots,,,,,,,,,,,,,,,,,"17/May/17 9:52 PM;smithbk;So the CSRs in bc.pem and ibm.pem work correctly, but the CSR shown in the trace does not work.  Is that correct? 

I properly formatted the CSR from the trace and placed it in a file named `csr.pem` as shown below.
{code:java}
----BEGIN CERTIFICATE REQUEST---
MIIBqDCCAU4CAQAwEDEOMAwGA1UEAxMFYWRtaW4wggEzMIHsBgcqhkjOPQIBMIHg
AgEBMCwGByqGSM49AQECIQD/////AAAAAQAAAAAAAAAAAAAAAP//////////////
/zBEBCD/////AAAAAQAAAAAAAAAAAAAAAP///////////////AQgWsY12Ko6k+ez
671VdpiGvGUdBrDMU7D2O848PifSYEsEQQRrF9Hy4SxCR/i85uVjpEDydwN9gS3r
M6D0oTlF2JjClk/jQuL+Gn+bjufrSnwPnhYrzjNXazFezsu2QGg3v1H1AiEA////
/wAAAAD//////////7zm+q2nF56E87nKwvxjJVECAQEDQgAE80dMWkLUc1JHRBcr
EcpBVUkBfLiJ2NPY56anGU19ZRSE1w7DZIybcTLbz6UqCKZHPYzr+SrMA8wdY7qH
3C/VxKAAMAoGCCqGSM49BAMCA0gAMEUCIQD+YcWlMUFV21EA4JnxyxmWXk6R6f0u
2eMlEQ3FdS///QIgO6zWfKzEg359t9fhsYeNZUG4EHPbk0ZNXCwe1spn3vg=
---END CERTIFICATE REQUEST----{code}
And then try to parse it as follows, I get an error from openssl:
{code:java}
$ openssl req -in csr.pem -noout -text
unable to load X509 request
85197:error:0906D06C:PEM routines:PEM_read_bio:no start line:/BuildRoot/Library/Caches/com.apple.xbs/Sources/OpenSSL098/OpenSSL098-64.30.2/src/crypto/pem/pem_lib.c:648:Expecting: CERTIFICATE REQUEST{code}
 ","17/May/17 9:57 PM;rickr;openssl req -in bc.pem -noout -text
Certificate Request:
 Data:
 Version: 0 (0x0)
 Subject: CN=admin
 Subject Public Key Info:
 Public Key Algorithm: id-ecPublicKey
 Public-Key: (256 bit)
 pub: 
 04:64:df:ce:bc:a3:34:1f:96:d4:6a:9d:aa:12:7a:
 b5:3c:98:40:26:b3:e3:13:f3:64:0d:be:10:5c:a2:
 86:d0:81:33:ac:92:5f:43:a8:f2:91:c0:b6:75:23:
 49:52:fd:e9:7d:01:98:39:50:d4:11:fb:54:f2:78:
 f0:98:b0:cb:fd
 ASN1 OID: prime256v1
 NIST CURVE: P-256
 Attributes:
 a0:00
 Signature Algorithm: ecdsa-with-SHA256
 30:44:02:20:79:6b:34:26:f4:fb:60:c6:69:93:67:07:9e:c3:
 a7:c2:b8:52:37:20:c2:ad:6c:c1:c5:5a:e0:24:05:32:e7:37:
 02:20:49:73:bd:f7:f5:14:55:16:11:7f:70:9d:2c:fa:2c:40:
 1b:92:e9:f4:0a:b3:86:c5:78:71:a9:1d:a0:d5:91:15","17/May/17 9:58 PM;rickr;openssl req -in ibm.pem -noout -text
Certificate Request:
 Data:
 Version: 0 (0x0)
 Subject: CN=admin
 Subject Public Key Info:
 Public Key Algorithm: id-ecPublicKey
 Public-Key: (256 bit)
 pub: 
 04:cf:28:1f:f7:70:70:45:d7:e3:36:1a:dd:68:b6:
 8e:6d:92:24:bb:3d:cc:45:c5:39:f0:9f:40:a6:56:
 47:5c:4d:07:0b:80:f8:9d:d3:fe:b3:e7:2c:25:50:
 8b:19:f5:30:67:b6:91:fb:3a:9e:a9:a3:5c:c8:56:
 86:13:f1:48:b0
 Field Type: prime-field
 Prime:
 00:ff:ff:ff:ff:00:00:00:01:00:00:00:00:00:00:
 00:00:00:00:00:00:ff:ff:ff:ff:ff:ff:ff:ff:ff:
 ff:ff:ff
 A: 
 00:ff:ff:ff:ff:00:00:00:01:00:00:00:00:00:00:
 00:00:00:00:00:00:ff:ff:ff:ff:ff:ff:ff:ff:ff:
 ff:ff:fc
 B: 
 5a:c6:35:d8:aa:3a:93:e7:b3:eb:bd:55:76:98:86:
 bc:65:1d:06:b0:cc:53:b0:f6:3b:ce:3c:3e:27:d2:
 60:4b
 Generator (uncompressed):
 04:6b:17:d1:f2:e1:2c:42:47:f8:bc:e6:e5:63:a4:
 40:f2:77:03:7d:81:2d:eb:33:a0:f4:a1:39:45:d8:
 98:c2:96:4f:e3:42:e2:fe:1a:7f:9b:8e:e7:eb:4a:
 7c:0f:9e:16:2b:ce:33:57:6b:31:5e:ce:cb:b6:40:
 68:37:bf:51:f5
 Order: 
 00:ff:ff:ff:ff:00:00:00:00:ff:ff:ff:ff:ff:ff:
 ff:ff:bc:e6:fa:ad:a7:17:9e:84:f3:b9:ca:c2:fc:
 63:25:51
 Cofactor: 1 (0x1)
 Attributes:
 Requested Extensions:
 X509v3 Subject Key Identifier: 
 94:D9:6A:5E:22:2D:0D:90:94:91:ED:80:91:74:D2:75:BB:4D:AD:02
 Signature Algorithm: ecdsa-with-SHA256
 30:45:02:20:11:bb:04:5f:05:91:2e:ce:65:ef:bc:8c:25:39:
 23:e2:50:3f:3b:49:e0:18:0c:93:62:32:2e:4e:03:2a:f5:9a:
 02:21:00:8f:b4:0e:88:03:9c:8c:c1:0d:8c:ec:29:fc:63:1e:
 d5:77:57:ed:8b:45:53:08:d2:ac:e5:0c:09:d0:8d:c3:16","17/May/17 9:59 PM;rickr;Down loaded both .. see results above.

 

No bc.pem IS accepted by FabricCA
ibm.pem is NOT","17/May/17 10:27 PM;smithbk;Given the BCCSP integration, fabric-ca-server now uses BCCSP to sign a CSR, so the error is occurring there.

Note the error ""asn1: structure error: tags don't match"" in the trace.

Unfortunately, BCCSP doesn't prepend context to an error so we don't know for sure what path it took to return this error.

My guess would be that the call to ""ecdsa.Sign"" below in fabric/bccsp/sw is returning the error, but without any debug logging or adding context to errors, it is difficult to tell for sure.  Anyway, hopefully Vlad will know off the top of his head.  If not, we will need to be able to reproduce and add more logging to debug.
{code:java}
func signECDSA(k *ecdsa.PrivateKey, digest []byte, opts bccsp.SignerOpts) (signature []byte, err error) {
        r, s, err := ecdsa.Sign(rand.Reader, k, digest)
        if err != nil {
                return nil, err
        }

        s, _, err = ToLowS(&k.PublicKey, s)
        if err != nil {
                return nil, err
        }

        return MarshalECDSASignature(r, s)
}
{code}
 

 ",17/May/17 10:30 PM;rickr;Was told that CSSFL was doing the parsing. Are you using the latest CSSFL ? ,"18/May/17 12:30 PM;smithbk;The problem is not in CFSSL nor in BCCSP.  It is in the x509.ParseCertificateRequest function apparently.

I was able to reproduce the error with the code below.  One thing I don't yet understand is why I had to add some extra dash characters to the csr string below in the code in order to reproduce; otherwise, pem.Decode fails since it expects 5 dash characters.   Without these characters in the original request in the description, I'm still not sure why we don't get a ""PEM block not found"" error instead, which makes me think that we may be losing some characters in the process of logging some how???

Anyway, next to dig into the x509.ParseCertificateRequest method.  I'm wondering if the inner encoding may be BER instead of DER for example.  BER is a superset of DER.  Continuing to investigate.
{code:java}
package main

import (
  ""fmt""
  ""encoding/pem""
  ""crypto/x509""
)

func main() {
   csr := `
-----BEGIN CERTIFICATE REQUEST-----
MIIBqDCCAU4CAQAwEDEOMAwGA1UEAxMFYWRtaW4wggEzMIHsBgcqhkjOPQIBMIHg
AgEBMCwGByqGSM49AQECIQD/////AAAAAQAAAAAAAAAAAAAAAP//////////////
/zBEBCD/////AAAAAQAAAAAAAAAAAAAAAP///////////////AQgWsY12Ko6k+ez
671VdpiGvGUdBrDMU7D2O848PifSYEsEQQRrF9Hy4SxCR/i85uVjpEDydwN9gS3r
M6D0oTlF2JjClk/jQuL+Gn+bjufrSnwPnhYrzjNXazFezsu2QGg3v1H1AiEA////
/wAAAAD//////////7zm+q2nF56E87nKwvxjJVECAQEDQgAE80dMWkLUc1JHRBcr
EcpBVUkBfLiJ2NPY56anGU19ZRSE1w7DZIybcTLbz6UqCKZHPYzr+SrMA8wdY7qH
3C/VxKAAMAoGCCqGSM49BAMCA0gAMEUCIQD+YcWlMUFV21EA4JnxyxmWXk6R6f0u
2eMlEQ3FdS///QIgO6zWfKzEg359t9fhsYeNZUG4EHPbk0ZNXCwe1spn3vg=
-----END CERTIFICATE REQUEST-----
   `
   block, _ := pem.Decode([]byte(csr))
   if block == nil {
      panic(""PEM block not found"")
   }
   if block.Type != ""NEW CERTIFICATE REQUEST"" && block.Type != ""CERTIFICATE REQUEST"" {
      panic(""Invalid PEM block type: ""+block.Type)
   }
   req, err := x509.ParseCertificateRequest(block.Bytes)
   if err != nil {
      panic(""Failed to parse request: ""+err.Error())
   }
   fmt.Printf(""OK: %+v\n"", req)
}
{code}
 

 

 ","18/May/17 4:21 PM;smithbk;OK, I've taken this as far as I can for now, until we get more info from the provider.   Here is a modified version of the program above which they can use to both reproduce and verify if/when they are able to support this other format which the golang x509.ParseCertificateRequest supports.   To use it, just compile and run with the filename as the argument to see if it works.
{code:java}
package main

import (
    ""crypto/x509""
    ""encoding/pem""
    ""fmt""
    ""io/ioutil""
    ""os""
)

func main() {
    if len(os.Args) != 2 {
        fmt.Printf(""Usage: %s <CSR-file>\n"", os.Args[0])
        os.Exit(1)
    }
    buf, err := ioutil.ReadFile(os.Args[1])
    if err != nil {
        fmt.Printf(""Failed to read file: %s\n"", err)
        os.Exit(1)
    }
    block, _ := pem.Decode(buf)
    if block == nil {
        fmt.Printf(""Failed to find PEM block: %s\n"", err)
        os.Exit(1)
    }
    if block.Type != ""NEW CERTIFICATE REQUEST"" && block.Type != ""CERTIFICATE REQUEST"" {
        fmt.Printf(""Invalid PEM block type: %s\n"", block.Type)
        os.Exit(1)
    }
    _, err = x509.ParseCertificateRequest(block.Bytes)
    if err != nil {
        fmt.Printf(""Failed to parse CSR: %s\n"", err)
        os.Exit(1)
    }
    fmt.Printf(""Successfully parsed CSR\n"")
}
{code}
 ",02/Jun/17 10:47 AM;rickr;Has this been reported to the _provider_?  Issue/ticket # ?,03/Jun/17 9:50 AM;mastersingh24;I'm adding fabric-sdk-java as a component as well,03/Jun/17 12:17 PM;rickr;The issue/fix is with fabric_ca any other user of ca could generate valid certificates as those and hit the same issue.,"07/Jun/17 3:35 PM;smithbk;Vlad, I'm assigning to you so that you can paste the link for the issue opened against the provider.  IIRC, you opened one.
We decided to wait until hearing from the provider before proceeding with writing our own code to handle this format.

This is the issue in which the ecdsa public key in the CSR was stored with A & B values directly, but the golang ParseCertificate doesn't recognize that format.
","19/Jul/17 5:19 PM;vpaprots;[~rickr] can you confirm that you got the fix from IBMJCE team and it works please?

That said, even if the fix is there, do we want to handle this case regardless? (somebody that did not apply the above ifix.. or some other library that specifies the curve via A&B.. we could include the ifix as part of the dependency lists)

I looked through the Golang code, no A or B specified..

 
{quote}// See FIPS 186-3, section D.2.3

p256Params = &CurveParams\{Name: ""P-256""}

p256Params.P, _ = new(big.Int).SetString(""115792089210356248762697446949407573530086143415290314195533631308867097853951"", 10)

p256Params.N, _ = new(big.Int).SetString(""115792089210356248762697446949407573529996955224135760342422259061068512044369"", 10)

p256Params.B, _ = new(big.Int).SetString(""5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b"", 16)

p256Params.Gx, _ = new(big.Int).SetString(""6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296"", 16)

p256Params.Gy, _ = new(big.Int).SetString(""4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5"", 16)

p256Params.BitSize = 256

 

p256RInverse, _ = new(big.Int).SetString(""7fffffff00000001fffffffe8000000100000000ffffffff0000000180000000"", 16)
{quote}

 so we would have to hardcode our own A&B, to match it to the right curve..",19/Jul/17 5:25 PM;rickr;Yes I got a fix and it worked.  However still see this as an issue as the certificate was valid even without the _fix._,05/Sep/17 1:43 PM;smithbk;Is this really a highest priority?,05/Sep/17 1:52 PM;rickr;Given that it's not been addressed in over 3 months guess not. ,"04/Nov/17 1:34 PM;mastersingh24;I'm closing this as WON'T FIX as there is no requirement to support every possible format, especially formats that don't appear to be in widespread use.  Unless I'm missing something, fabric-ca (via Golang) supports PKCS10 using RFC5480 for EC Subject Public Key Info.  

And FWIW - openssl generates CSRs in the above format as well",,,,,,,,,,,,,,,,,,,,,,,,,
Crash on Windows as a from the hastable npm module's native code,FAB-3977,16810,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,mbwhite,mbwhite,17/May/17 11:42 AM,23/May/17 8:05 AM,26/Apr/18 6:50 AM,23/May/17 2:11 AM,,,,DUPLICATE,,fabric-sdk-node,,,,,,0,,,,,,,,"Within the EventHub.js there is use of the hashtable npm module. This is implemented using C++ code.

 

When running on Windows, this code causes an access violation. By swapping this model out to use the pure javascript version I'm able to successfully use the fabric-client.

I don't know exactly what triggers the failure here, but the event hubs use of the hashtable is minimal. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz6a:rh79,,,,,,,,mbwhite,,,,,,,,,,,,,,,,,,,,"23/May/17 3:05 AM;jimthematrix;[~mbwhite] please take a look http://gerrit.hyperledger.org/r/9681, not sure if you were working on fixing this already... feel free to comment in the CR if you have different ideas.","23/May/17 8:05 AM;mbwhite;Thank you [~jimthematrix]  Locally I'd removed the native version of the hashtable and replaced with hashtable-js - I didn't want to disrupt the code. (I hadn't worked out how to deliver the code yet :))

However your solution looks better if the dependency on a hashtable can be removed.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GettingStarted flow on Mac fails when attempting to use the cli ,FAB-3973,16806,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,nickgaski,elli-androulaki,elli-androulaki,17/May/17 9:02 AM,23/May/17 12:58 PM,26/Apr/18 6:50 AM,23/May/17 12:58 PM,,,,v1.0.0,,fabric-docs,,,,,,0,documentation,,,,,,,"Platform: darwin-amd64:

Dolphin:e2e hplfabric$ CHANNEL_NAME=mychannel docker-compose -f docker-compose-no-tls.yaml up -d
Creating orderer.example.com
Creating peer0.org1.example.com
Creating peer1.org1.example.com
Creating peer0.org2.example.com
Creating peer1.org2.example.com
Creating cli
Dolphin:e2e hplfabric$ docker images
REPOSITORY TAG IMAGE ID CREATED SIZE
hyperledger/fabric-couchdb x86_64-1.0.0-alpha f3ce31e25872 2 months ago 1.51 GB
hyperledger/fabric-kafka x86_64-1.0.0-alpha 589dad0b93fc 2 months ago 1.3 GB
hyperledger/fabric-zookeeper x86_64-1.0.0-alpha 9a51f5be29c1 2 months ago 1.31 GB
hyperledger/fabric-orderer x86_64-1.0.0-alpha 5685fd77ab7c 2 months ago 182 MB
hyperledger/fabric-peer x86_64-1.0.0-alpha 784c5d41ac1d 2 months ago 184 MB
hyperledger/fabric-javaenv x86_64-1.0.0-alpha a08f85d8f0a9 2 months ago 1.42 GB
hyperledger/fabric-ccenv x86_64-1.0.0-alpha 91792014b61f 2 months ago 1.29 GB
Dolphin:e2e hplfabric$ docker exec -it cli bash
root@7007022ae07f:/opt/gopath/src/github.com/hyperledger/fabric/peer# CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com CORE_PEER_LOCALMSPID=""OrdererMSP"" peer channel create -o orderer.example.com:7050 -c mychannel -f channel.tx
2017-05-17 08:56:53.732 UTC [logging] InitFromViper -> DEBU 001 Setting default logging level to DEBUG for command 'channel'
2017-05-17 08:56:53.732 UTC [msp] GetLocalMSP -> DEBU 002 Returning existing local MSP
2017-05-17 08:56:53.732 UTC [msp] GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity
[Error: Got unexpected status: BAD_REQUEST
Usage:
 peer channel create [flags]

Global Flags:
 -b, --blockpath string Path to file containing genesis block
 --cafile string Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
 -c, --chain string In case of a newChain command, the chain ID to create.
 -f, --file string Configuration transaction file generated by a tool such as configtxgen for submitting to orderer
 --logging-level string Default logging level and overrides, see core.yaml for full syntax
 -o, --orderer string Ordering service endpoint
 --test.coverprofile string Done (default ""coverage.cov"")
 --tls Use TLS when communicating with the orderer endpoint
 -v, --version Display current version of fabric peer server]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i0113h:,,,,,,,,denyeart,elli-androulaki,nickgaski,,,,,,,,,,,,,,,,,,"17/May/17 11:52 AM;denyeart;[~elli-androulaki] Getting Started in readthedocs has not yet been refreshed.  The latest instructions are here and will be used to update Getting Started: [https://github.com/hyperledger/fabric/blob/master/examples/e2e_cli/end-to-end.rst]

Did you follow these instructions?

Is there an error in orderer logs?  'docker logs <orderer_container_id>'","17/May/17 1:48 PM;nickgaski;[~elli-androulaki] - while we are going to update the Getting Started to alpha2 today, I'm a little concerned that your experience did not work.  The ""alpha"" stuff is very much baked, so it definitely should work.  Out of curiosity can you please try the following:

 

./network_setup.sh down

Restart your docker process

Clear cached key vals

rm -rf ~/.hfc-key-store/*

rm -rf /tmp/hfc-*

./network_setup.sh up

 

This SHOULD work!

 

And then proceed to run against the link Dave provided - [https://github.com/hyperledger/fabric/blob/master/examples/e2e_cli/end-to-end.rst] - as this is the content that will ultimately replace Getting Started (albeit without running makes).","17/May/17 2:55 PM;elli-androulaki;Hi [~denyeart], 

I followed the instructions on the current ""Getting Started"" page, that does not require any explicit compilation of the source code, as i believe docker containers are already properly equipped.

Will follow Nick's recommendation and see if this works out. Will keep you posted.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
gossip generateCertificates fails because of concurrency,FAB-3950,16765,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,yacovm,yacovm,yacovm,16/May/17 1:51 PM,22/May/17 4:52 PM,26/Apr/18 6:50 AM,22/May/17 4:52 PM,v1.0.0,,,v1.0.0,,fabric-gossip,,,,,,0,gossip,,,,,,,"* gossip/comm/crypto.go:GenerateCertificates * receives as input 2 file names, and creates certificates and writes them into these files, and later on these files are deleted by the calling functions.

In the tests we always use the same file names, because sometimes it's called in the same function that is re-used and this results into a race condition in which files are deleted via some goroutines and read attempts are made by other goroutines because some tests run concurrently.

I think we need to refactor the GenerateCertfificate method to simply create a private and public key pair with random file names (to support concurrency)  internally and then simply return the loaded TLS certs.

[~C0rWin]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i010vh:,,Sprint 16 - Gossip,,,,,,yacovm,,,,,,,,,,,,,,,,master,,,true,16/May/17 2:47 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/9405/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chainId should not be required in Chain's various methods,FAB-3945,16760,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,jimthematrix,jimthematrix,16/May/17 3:08 AM,17/May/17 4:58 PM,26/Apr/18 6:50 AM,17/May/17 4:58 PM,,,,,,fabric-sdk-node,,,,,,0,,,,,,,,"the chain's name, which is a required parameter for the constructor, is already representing the chainId. should not require that to be passed in again in methods like sendTransactionProposal()",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i010ud:,,,,,,,,,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TCert-related methods still exists in the SDK API,FAB-3943,16758,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,jimthematrix,jimthematrix,16/May/17 2:34 AM,17/May/17 4:58 PM,26/Apr/18 6:50 AM,17/May/17 4:58 PM,,,,,,fabric-sdk-node,,,,,,0,,,,,,,,TCert support is not part of v1.0 so this needs to be cleaned up from the SDK API,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i010nk:,,,,,,,,,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Install/instantiate fails without ccenv image in fabric-sdk-node e2e tests,FAB-3919,16726,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,rameshthoomu,rameshthoomu,15/May/17 4:42 AM,23/May/17 4:58 PM,26/Apr/18 6:50 AM,23/May/17 4:58 PM,,,,v1.0.0,,fabric-quality,fabric-sdk-node,,,,,0,node-SDK,quality,,,,,,"Issue Description: Install/instantiate fails without ccenv image in fabric-sdk-node e2e tests

Steps to reproduce: 
1) update x86_64-1.0.0-alpha2 tags for each image in the existing docker-compose file ([https://github.com/hyperledger/fabric-sdk-node/blob/master/test/fixtures/docker-compose.yaml)]

2) follow the steps mentioned in readme to execute e2e-tests

Expected Result:

e2e-test should work as expected

Actual Result:

Install/instantiate is failing with the below error log
{code:java}
 error: [Chain.js]: Chain-sendPeersProposal - Promise is rejected: Error: Error starting container: Failed to generate platform-specific docker build: Error creating container: no such image at /w/workspace/fabric-sdk-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:434:17 error: [Chain.js]: Chain-sendPeersProposal - Promise is rejected: Error: Error starting container: Failed to generate platform-specific docker build: Error creating container: no such image at /w/workspace/fabric-sdk-node-verify-x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:434:17
{code}
Root Cause: observed ccenv image reference is not available in above mentioned docker-compose file. While install/instantiate, code is looking for ccenv image.

Workaround: pull ccenv image and re-run the tests. It's working as expected. execute below command

`docker pull hyperledge/fabric-ccenv:x86_64:1.0.0-alpha2`

 

 ",,,,,,,,,,,,,,,,,FAB-3118,,,,,,,,,,,,,,,0|i010nh:,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric images are still referring previous baseimage reference (0.3.0),FAB-3918,16725,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,nnao,rameshthoomu,rameshthoomu,15/May/17 3:36 AM,23/May/17 8:51 PM,26/Apr/18 6:50 AM,23/May/17 8:51 PM,,,,v1.0.0,,fabric-baseimage,fabric-build,fabric-quality,,,,0,build-system,quality,,,,,,"fabric and fabric-ca images are still referring old baseimage release reference (0.3.0). Recently we had a baseimage release and the new version is 0.3.1 but below two references are not updated to new release version
*00:05:25.426* Step 1/10 : FROM hyperledger/fabric-baseimage:x86_64-0.3.0
Fabric-ca:

[https://github.com/hyperledger/fabric-ca/blob/master/Makefile#L46]

Fabric:

[https://github.com/hyperledger/fabric/blob/master/.baseimage-release#L1]

Is this expected or have to upload images with new baseimage release reference?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i010n9:,,,,,,,,ChristopherFerris,rameshthoomu,,,,,,,,,,,,,,,master,,,true,23/May/17 8:29 PM;ChristopherFerris;[https://gerrit.hyperledger.org/r/#/c/9387/] and https://gerrit.hyperledger.org/r/#/c/9385/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
behave tests are failing intermittently,FAB-3908,16715,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jeffgarratt,rameshthoomu,rameshthoomu,13/May/17 3:51 PM,22/May/17 12:58 PM,26/Apr/18 6:50 AM,22/May/17 12:58 PM,,,,v1.0.0,,fabric-quality,,,,,,0,build-system,quality,,,,,,"observed behave tests are failing intermittently on latest fabric commits. Observed below error logs in few merge builds
*00:19:19.071*       _Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.UNKNOWN, chaincode instantiation policy violated(Failed to authenticate policy))
*00:19:27.337* Failing scenarios:*00:19:27.337*   features/bootstrap.feature:304  Bootstrap a development network with 4 peers (2 orgs)  and 1 orderer (1 org), each having a single independent root of trust (No fabric-ca, just openssl) -- @1.1 Orderer Options
Another build failure with below error:
*00:20:00.390*       _Rendezvous: <_Rendezvous of RPC that terminated with (StatusCode.UNKNOWN, failed to obtain cds for example02 - could not find chaincode with name 'example02')>
 ",Jenkins x86_64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i010l1:,,,,,,,,jeffgarratt,rameshthoomu,,,,,,,,,,,,,,,,,,,"13/May/17 4:30 PM;jeffgarratt;The second issue may be addressed by [https://gerrit.hyperledger.org/r/#/c/9337/.]

 

The first issue above I have not see before.  Please update if you see it again and we can gather the logs.","13/May/17 9:35 PM;jeffgarratt;The first issue seems to be because you are not running the latest behave feature.  The latest uses a mspAdmin to instantiate, not dev0Org0.",15/May/17 9:28 PM;rameshthoomu;Observed behave tests are working as expected on latest fabric-commit. Below is the build reference: [https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-behave-x86_64/807/consoleFull.] Will monitor this bug and close.,17/May/17 2:12 PM;jeffgarratt;[~rameshthoomu] awesome!!! Thanks so much Ramesh!!,22/May/17 12:58 PM;rameshthoomu;Didn't see behave test failure from past 3-4 days in Jenkins x86_64.. Closing this issue. Will create new issue if issue repeats..,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document identity validity conditions implemented by FAB-3677 ,FAB-3893,16684,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,elli-androulaki,elli-androulaki,elli-androulaki,12/May/17 1:27 PM,06/Jun/17 8:11 PM,26/Apr/18 6:50 AM,06/Jun/17 8:11 PM,,,,v1.0.0,,fabric-crypto,,,,,,0,documentation,,,,,,,"MSPs may be configured with a set of root CAs, and optionally a set of intermediate CAs. Each root CA defines a tree of certificate hierarchies. What we need to ensure that validateIdentity function of the MSP accepts if and only if the identity is no sibling to an intermediate CA in any of the MSP certificate trees.

Examples (assuming an identity ID, root CAs prefixed with ""rCA"", and intermediate CAs prefixed with iCA):
 * Identity *ID* should be considered *valid*:

rCA or rCA1 rCA2
/ \ / \ | 
iCA1 iCA2 iCA11 iCA12 *ID*
 
*ID*
 * Identity ID should be considered *invalid*:

rCA or rCA1 rCA2
/ | \ / \ | \ 
iCA1 *ID* iCA2 iCA11 iCA12 *ID* iCA21",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz4r:zji,,,,,,,,ChristopherFerris,elli-androulaki,,,,,,,,,,,,,,,master,,,true,"29/May/17 1:37 PM;elli-androulaki;Related CR:

[https://gerrit.hyperledger.org/r/#/c/9897/]

 ",29/May/17 6:09 PM;ChristopherFerris;This does not meet the criteria needed to be labeled 'review-needed',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance cc2cc with securtiy (pre-endorsement) checks,FAB-3892,16683,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,ales,elli-androulaki,elli-androulaki,12/May/17 1:23 PM,06/Jun/17 12:46 PM,26/Apr/18 6:50 AM,06/Jun/17 12:46 PM,,,,v1.0.0,,fabric-crypto,,,,,,2,,,,,,,,"This is a follow-up for FAB-3156. 

FAB-3156 deals with security checks performed prior to a chaincode's execution be simulated to ensure that the instance of the chaincode on the chain matches the installed on the peer chaincode. 

This check needs to be extended to cover cases where a chaincode is invoked via another chaincode.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz4r:zik,,,,,,,,binhn,ChristopherFerris,elli-androulaki,troyronda,yacovm,,,,,,,,,,,,master,,,true,"26/May/17 6:11 AM;ChristopherFerris;[~elli-androulaki] This seems more like an enhancement than a bug fix. Can it be deferred? How invasive is the change? Before we start this, we should weigh the merits of this change.","26/May/17 11:50 AM;elli-androulaki;Hi [~ChristopherFerris],

So it was classified by us indeed as a bug, but a security bug to be more precise.

The reason for this check is to always ensure that the instantiation policy of an instantiated chaincode on the chain is respected. This check is already done when a chaincode is invoked directly by a proposal, and needs to be extended for the chaincode to chaincode case. In this sense the change is not that invasive.

We believe this bug needs to be addressed, otherwise an attacker could bypass the instantiation policy of a chaincode. 

If you still think we should classify it as an improvement I could change the issue's type. ","26/May/17 2:36 PM;yacovm;I concur with Elli.
As the previous item (3156) this may look like an enhancement but is actually a fix of a design flaw that leads to a security vulnerability. ",26/May/17 6:01 PM;binhn;+1,"01/Jun/17 11:41 PM;elli-androulaki;Related CR:

https://gerrit.hyperledger.org/r/#/c/10021/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Reduce manual steps to prepare for running ""gulp test""",FAB-3886,16672,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,jimthematrix,jimthematrix,12/May/17 4:07 AM,17/May/17 4:59 PM,26/Apr/18 6:50 AM,17/May/17 4:59 PM,,,,v1.0.0,,fabric-sdk-node,,,,,,0,,,,,,,,"you have to:
- make sure `gulp ca` is run so shared dependencies are copied from fabric-client to fabric-ca-client
- delete temp folders so older persisted users and private keys are cleaned up
- delete chaincode images so any chaincode updates can be picked up

this makes the running of gulp test error-prone.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz6a:rh7i,,,,,,,,,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Orderer should reject config updates that result in policies referencing orgs not in the network,FAB-3831,16603,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jyellick,ptippett,ptippett,10/May/17 9:14 PM,10/Jun/17 10:24 AM,26/Apr/18 6:50 AM,10/Jun/17 10:24 AM,v1.0.0-alpha2,,,v1.0.0,,fabric-orderer,,,,,,5,configuration,,,,,,,"Currently Policies may be implicit or explicit.  For explicit policies, which require specific network members to approve a policy change, it's possible for a policy to get to get in a state where it can never be satisfied because a member required to approve the policy has left the channel or consortium.

For example a policy is set up such that any channel modification requires user1 and user2 to approve.  user2 leaves the channel or consortium which is approved by both user1 and user2.  The next time user1 attempts to modify the channel, the transaction will fail because user2 is no longer a member of the channel but is listed in the policy.

One way to fix this is to have the orderer reject any config updates that result in policies referencing orgs that no longer exist.  So in the case I listed above, the policy change to remove user2 from the channel or consortium would have been rejected by the orderer since it would result in an invalid policy.  The reason for the rejection should be clearly specified.",,,,,,,,,,,,,,FAB-4518,,,,,,,,,,,,,,,,,,0|i00zzh:,,,,,,,,angelo.decaro,binhn,ChristopherFerris,denyeart,jyellick,kchristidis,mastersingh24,ptippett,shanlusun,weeds,,,,,,,master,,,true,19/May/17 12:16 PM;kchristidis;([~jyellick]: tagging you on this so that it's on your radar.),"06/Jun/17 3:17 PM;jyellick;I've looked at implementing this a couple of ways.  No matter how this is cut, it's likely to be a substantial amount of work, and I'm a little concerned about how invasive it might be.

Do we see this as a must have for v1? Or are we open to deferring it?","06/Jun/17 5:18 PM;ptippett;It seems we have to prevent this somehow, or if someone gets themselves in this situation, they've ruined their network.  Perhaps we can fix this in the HSBN UI, but that wouldn't fix any flows outside of that.","06/Jun/17 8:08 PM;mastersingh24;I have some ideas on what we *might* be able to do here to handle the obvious cases, but we might need to defer until a minor or patch release","07/Jun/17 3:12 PM;jyellick;The difficulty in implementing this, is that to do so really requires working against the design of the system.

Identities in the policy system ultimately end up being represented by MSP principals.  MSP principals are designed to be opaque to the consumer, and instead, the consumer is supposed to ask if a given identity satisfies a principal.  The question of ""what organization is capable of satisfying this principal"" is not a natural one in this system, and in fact, in general this question is not answerable for all principal types (IDENTITY principals in particular cannot map in this direction).

So, in order to implement this, I see this as requiring one of two things to happen:

1. Modify the configtx related code which is not supposed to have any understanding of the internal workings of the MSP structures to gain that knowledge and start interrogating them. (Now we have potentially a maintenance headache)
2. Modifying the MSP interfaces to map principals back to MSP ID if it is possible, then modifying the configtx related code to consume this. (Hopefully cleaner, but I suspect more work, and the interfaces are not obvious to me).

I'd be curious to hear from [~ellaki] [~angelo.decaro] [~ales] or anyone else what the most 'true to the spriit of MSPs' solution is.","07/Jun/17 6:12 PM;jyellick;After some out of band discussion with [~ptippett], here is a compromise solution which seems to address everyone's concerns.

Rather than have the orderer perform these sanity checks directly on incoming config transactions, which comes with all of the problems outlined above, we can build this functionality into the `configtxlator` tool.

In this way, there is no risk to the hardened production code path, but a client application can still get error reports about configuration before it takes affect.","07/Jun/17 9:28 PM;denyeart;[~jyellick]

Could you outline what the configtxlator flow would look like?

Do we expect the majority of Fabric consumers to utilize configtxlator tool?  Or should it be thought of as a stopgap that will eventually be replaced by something else?

 ","08/Jun/17 2:59 AM;jyellick;[~denyeart] The typical {{configtxlator}} flow works (already) as follows.

1. User fetches config block via SDK
2. User uses {{configtxlator}} to get user friendlier version of config
3. User modifies copy of config
4. User submits original config, and updated config to {{configtxlator}} to compute config update.
5. User submits config update with signatures via the SDK.

Essentially, this would inject a step between 3/4, where the user submits the updated config to {{configtxlator}} to perform sanity checks against the target configuration.

As I said, in the long term, we may wish to try enforcing this issue outlined in the original description in the core configtx processing logic, (which would render the {{configtxlator}} sanity check redundant), but as for the moment, we expect users to be utilizing the {{configtxlator}} for config updates, it seems like a reasonable stopgap.","08/Jun/17 3:11 PM;binhn;[~jyellick] So my understanding from reading your stopgap proposal above is that we modify step 4 to perform sanity checks, but we don't want to (or can't) touch step 5 (mostly backend processing) because of the[# potential risks | https://jira.hyperledger.org/browse/FAB-3831?focusedCommentId=25654&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-25654].

That sounds reasonable, and it would give the user the confidence that he would not be shooting himself by submitting the config update, but this is also the drawback – I would consider this as new feature, and we would have to test the heck out of this to make sure it would not allow the users to shoot themselves.

I believe that, beside test networks, users would have appropriate admin tools to manage their networks, and so this is API document, and [~ptippett] 's admin tool would follow the API and not allow this situation.

In summary, I propose that we do the right thing post 1.0 rather than this stopgap (with a lot of work) at this point. However, we do need to document this scenario in our configuration doc.","08/Jun/17 4:08 PM;jyellick;> but this is also the drawback – I would consider this as new feature

So I would point out, that this is a 'new feature' only in so far as it enhances the {{configxlator}} tool, but since the tool has only existed for about a week at this point, I'm not certain that the new feature stop condition is reasonable here.  There has been a hard freeze on features in the core components for some time now, but as this is a tool, I think we can and should be a little more open to enhancements.

> and we would have to test the heck out of this to make sure it would not allow the users to shoot themselves.

I guess I am not certain where the large testing burden comes from.  We can test the scenario described here in 3831 rather easily, and for the time being, this will be the only scenario (other than general well formed-ness) that the sanity checking will catch.

As you can see from FAB-4468 and FAB-4469 (with CRs https://gerrit.hyperledger.org/r/10341 and https://gerrit.hyperledger.org/r/10343) respectively, this is actually fairly small from a code perspective, excluding tests, there is noticeably less than 200 new lines.

> beside test networks, users would have appropriate admin tools to manage their networks

I agree this is the goal, but I also believe we should make this as painless as possible for those admin tool developers.  The entire motivation for including {{configtxlator}} in the v1 release was so that admin tool developers (regardless of SDK) had some code to do some of the heavy lifting.  By including a small amount of additional code in {{configtxlator}} if we can potentially save days or weeks of frustration for an admin tool developer, this seems worthwhile to me.

> In summary, I propose that we do the right thing post 1.0 rather than this stopgap (with a lot of work) at this point.

The code is complete, though testing beyond unit tests and basic manual integration tests is pending.

I believe that sanity checking could be a valuable feature beyond even v1 and this issue as described.  Warning about expired certificates, modification policies with no backing definition, and other potential misconfigurations which should not be treated as fatal could still provide real value to users; so I'm not convinced that this is throwaway for when we 'do the right thing'.","08/Jun/17 4:22 PM;kchristidis;I'm all in favor of deferring, but I think the balance we're striking with this sanity check addition now is right. The scope of the sanity checks – as Jason noted – is limited and the work's already done. FWIW, my vote's for getting this in.","09/Jun/17 7:35 AM;angelo.decaro;[~jyellick], it looks to me an hard problem this. The question can be phrased as: given the new configuration is a policy still satisfiable? In general, this is hard problem whose complexity can be reduced if we add enough constraints. I would not say anyway that we need to modify the MSP logic to perform such an analysis, anyway.  

I guess when you say 'user2 leaves' you mean either that user2 gets revoked or his organisation is revoked or the corresponding MSP gets removed from the channel. These conditions can be analysed by looking at the MSP principals and at the MSP configuration alone. No? Am I missing something?","09/Jun/17 11:39 AM;mastersingh24;Sanity checking in a tool which creates policies makes perfect sense and is not an uncommon practice.  I don't think we need to hold up a release for this, but if it's possible to get some basic sanity checking in for the common case(s) (e.g. don't remove an org when it is explicity reference elsewhere and don't explicitly include an org in a policy if it's not in the consortium or channel / app orgs) we should try to do this.

We are also trying to guide people to use best practices as well and while technically we support some very complex policies, I struggle to see why anyone would REALLY need to use some of them.",09/Jun/17 11:43 AM;mastersingh24;So based on looking at the code up for review (which is more or less in line with my comment above) there's no reason not to get this in.,09/Jun/17 4:58 PM;weeds;Gerrit 10337,"09/Jun/17 7:07 PM;jyellick;Moved back to review, as still waiting on: 
https://gerrit.hyperledger.org/r/10341
https://gerrit.hyperledger.org/r/10343",10/Jun/17 12:00 AM;ChristopherFerris;This has the requisite number of votes to be merged,,,,,,,,,,,,,,,,,,,,,,,,,
update fabric-client and fabric-ca-client readmes,FAB-3806,16577,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,jimthematrix,jimthematrix,10/May/17 7:19 PM,11/May/17 2:29 AM,26/Apr/18 6:50 AM,11/May/17 2:29 AM,,,,,,fabric-sdk-node,,,,,,0,,,,,,,,Need to update the link to the documentation,,,,,,,,,,,,,,FAB-3040,,,,,,,,,,,,,,,,,,0|i00ztp:,,,,,,,,,,,,,,,,,,,,,,,,master,,,true,10/May/17 7:36 PM;jimthematrix;https://gerrit.hyperledger.org/r/#/c/9207/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CLI peer channel create call should retry delivery,FAB-3786,16557,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,kchristidis,kchristidis,10/May/17 5:29 PM,10/May/17 6:24 PM,26/Apr/18 6:50 AM,10/May/17 6:24 PM,v1.0.0-alpha1,,,WON'T FIX,,fabric-peer,,,,,,0,,,,,,,,"During the channel create call, the peer pauses _once_ for a _hard-coded_ 2 seconds before issuing a deliver request to the ordering service for the genesis block of the newly-created channel:

[https://github.com/hyperledger/fabric/blob/master/peer/channel/create.go#L177]

This is brittle (will occasionally break the Kafka tests for one), and should be changed to a for-loop with a timeout.",,,,,,,,,,,,,,FAB-3787,,,,,,,,,,,,,,,,,,0|i00zph:,,,,,,,,kchristidis,,,,,,,,,,,,,,,,,,,,"10/May/17 6:24 PM;kchristidis;Duplicate of https://jira.hyperledger.org/browse/FAB-2982, closing.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Intermediate CA certificates must be sanitized against their parent certificate,FAB-3763,16533,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,angelo.decaro,angelo.decaro,angelo.decaro,10/May/17 10:47 AM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,10/May/17 5:23 PM,,,,v1.0.0,,fabric-crypto,,,,,,0,,,,,,,,"Currently, certificates of intermediate CAs are sanitized in the same way root CA certificates are (https://github.com/hyperledger/fabric/blob/master/msp/mspimpl.go#L845). Namely, by using as parent certificate the certificate itself. But intermediate CA certificates must have a parent and therefore the sanitation must happen with the respect to that certificate.

 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00zkt:,,,,,,,,angelo.decaro,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer TLS CA certs given to deliveryService need to be per channel and not global,FAB-3715,16436,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,yacovm,yacovm,yacovm,08/May/17 10:28 AM,09/Jun/17 3:45 PM,26/Apr/18 6:50 AM,09/Jun/17 3:45 PM,v1.0.0-alpha1,,,v1.0.0,v1.0.0-rc1,fabric-peer,,,,,,5,security,Security,,,,,,"The connection from the peer to the ordering service with TLS [iterates over all root CA certs|https://github.com/hyperledger/fabric/blob/master/core/comm/connection.go#L90-L112] that are of orgs that have ordering service instances and configures the rootCA cert pool accordingly.

This has the following vulnerability:

Consider a network with 3 orgs: \{A, B, C} and 2 channels: 
X: \{A, C}, Y: \{B, C}  and let's say that the ordering service of X is of org A and the ordering service of Y is of org B.

If we have a peer in org C or in org A and it connects (to obtain blocks of channel X) to an ordering service that its host is *orderer.orgA.com*, the TLS handshake would work also for a malicious node from orgB that has a certificate with *orderer.orgA.com* that is signed by the CA of orgB.

This exposes the connection from the peer to the ordering service (in orgA) to a MITM attack in which an attacker (that stands between the peer and the ordering service from orgA) impersonates *orderer.orgA.com* and tunnels the connection through itself without the peer knowing it.

 

This can be fixed if when we obtain the rootCA cert pool, it will be in the context of a channel.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3040,0|i00z6l:,,,,,,,,binhn,mastersingh24,muralisr,troyronda,yacovm,,,,,,,,,,,,master,,,true,"01/Jun/17 8:50 PM;muralisr;[~mastersingh24] [~yacovm] is this something needed for 1.0 or can it be moved ? If needed looks like we need a ""review-needed"" label.","06/Jun/17 8:06 PM;mastersingh24;We can probably add a review needed label although this is not really hard and is transparent to users.

But there is always the risk since this involves TLS","06/Jun/17 8:52 PM;yacovm;Wait, why can't I vote on this? Just because I opened the JIRA?
oh well, consider me as voted +1. ","08/Jun/17 12:55 AM;jimthematrix;[~yacovm] I don't understand this part: _ordering service of X is of org A, and the ordering service of Y is of org B_

I thought it's more likely that an organization would want to have all the orderer nodes available so it can distribute the broadcast() and deliver() load. If the orderer nodes use certs that are signed by different CAs, then you have to trust them (the CAs) equally. To eliminate this you'd have to limit the peer to connect to orderers signed by a single CA, isn't that too limiting? Also this attack is predicated on the CA being compromised or the org goes rogue, isn't there a much bigger problem if this is the case?","08/Jun/17 9:40 AM;yacovm;{quote}it's more likely that an organization would want to have all the orderer nodes available so it can distribute the broadcast() and deliver() load{quote}
But this issue is about orderers of different orgs.

{quote} If the orderer nodes use certs that are signed by different CAs, then you have to trust them (the CAs) equally.{quote}
Yeah but the trust should be a function over the members of the channel, not cross channels - where it is now (because of the implementation) and this is where the problem lies.

{quote} To eliminate this you'd have to limit the peer to connect to orderers signed by a single CA{quote}
Why?

{quote} Also this attack is predicated on the CA being compromised or the org goes rogue, isn't there a much bigger problem if this is the case?{quote}
Well, why wouldn't an org be rogue? If you have channels that segregate the information between orgs, and now your implementation of root CA cert pool makes it possible for an orderer not from the channel to impersonate an orderer in the channel, that's a security vulnerability. ",08/Jun/17 4:28 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/10353/ ,09/Jun/17 1:44 PM;binhn;remove review-needed as 5 voted,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The restart of kafka backed orderer will lead to failure of block delivery ,FAB-3711,16431,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,kchristidis,csftan,csftan,08/May/17 7:55 AM,17/May/17 2:31 AM,26/Apr/18 6:50 AM,17/May/17 2:31 AM,v1.0.0-alpha1,,,v1.0.0,,fabric-orderer,,,,,,0,kafka,,,,,,,"I started a network with 4 peers of 2 orgs, 2 orderers (orderer0 and orderer1), 2 kafka brokers. I could use node SDK to create channel (mychannel.tx), manage peers joining channel, install chaicode, instantiate chain code etc...  

However, when I restart orderer0 and orderer1, chaincode invocation cannot be processed by the orderer any more. The Orderer verification passed but it does not deliver the block. The last statement in the command line is: ""

Consenter instructed us to shut down""

 

Using the file ledger, I have already configured the Orderer/kafka persisting data into the mounted volume. It can reload the block file after restarting but still cannot deliver the block. 

 

If the orderer is not fault-resilient even using file ledger, then the application of hyper ledger fabric will be greatly compromised 

 ",,,,,,,,,,,,,,,,,,,,,,,,11/May/17 2:13 AM;csftan;test_net.zip;https://jira.hyperledger.org/secure/attachment/10813/test_net.zip,,,,,,,,0|i00z5h:,,,,,,,,csftan,kchristidis,,,,,,,,,,,,,,,,,,,10/May/17 3:41 AM;kchristidis;Thanks for reporting this. Can you submit the logs of the two orderers?,"10/May/17 12:52 PM;kchristidis;I will also need the Docker Compose configuration file with which you brought the network up.

Basically, anything that will help me reproduce this setup locally.","11/May/17 2:13 AM;csftan;here is the configuration set I sued, please see the attachment. Log file is named as orderer0.log[^test_net.zip]","11/May/17 2:15 AM;csftan;Oh, BTW, I use the chain code keyvalue_cc as the test example.","11/May/17 6:28 AM;kchristidis;Feng, thank you for getting back to me with details.

I've inspected your setup and the logs, and I am fairly confident that you were hitting the bug fixed in -FAB-2915-.

If you know how to build Fabric Docker images (assuming a proper Golang dev environment, you git clone the Fabric repo to $GOPATH/src/github.com/hyperledger, then cd into the fabric directory and do ""make docker""), please try it out with the current master and let me know if the issue persists.

Otherwise, hold on for a few more days – we're about to cut alpha-2 any day now, maybe even this Friday. Try it out with the new release and let me know if the problem persists, so that we can update this JIRA accordingly.","11/May/17 6:32 AM;csftan;Kostats, thank you for your prompt response. 

Ok, I did not notice this JIRA Bug report as I have been using the alpha1 version as our testbed. 

Great to know this, looking forward to the alpha 2 release, and hopefully, it can function stably in some way.... ","17/May/17 2:31 AM;kchristidis;Feng tan: will close this, but if you notice that the issue persists please re-open.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Trusted roots for orderer and peer connections should not be the same,FAB-3701,16414,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,mastersingh24,mastersingh24,07/May/17 5:34 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,08/May/17 3:39 PM,v1.0.0,v1.0.0-alpha1,,v1.0.0,,fabric-peer,,,,,,0,Security,,,,,,,"peer.buildTrustedRootsForChain had a todo from earlier to properly populate the trusted roots used to connect to ordering nodes and to peer nodes.  Currently, both the app and orderer roots are the same and include both app and orderer roots.  While this works, it is a security hole",,;07/May/17 7:45 PM;mastersingh24;150,;07/May/17 7:45 PM;mastersingh24;7350,,,7200,0,7500,104%,7200,0,7500,,,,,,,,,,,,,,,,,,,,0|i00z25:,,,,,,,,mastersingh24,,,,,,,,,,,,,,,,master,,,true,07/May/17 7:46 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/9069/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB timeout causes error upon retry,FAB-3686,16391,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,chris.elder,denyeart,denyeart,06/May/17 2:22 AM,01/Jun/17 11:37 AM,26/Apr/18 6:50 AM,01/Jun/17 11:37 AM,v1.0.0-alpha1,,,v1.0.0,,fabric-ledger,,,,,,0,,,,,,,,"If a state db document update to CouchDB has a http timeout (currently defaulted at 35s), the transaction may eventually succeed in CouchDB, but the peer will do a retry using the previous CouchDB document revision number.  The retry will therefore fail due to revision number conflict.  The peer will think it failed, when in fact it succeeded.  Peer panics when it can't process the block to completion, since subsequent blocks should not be processed. Need to fix retry logic to account for this scenario, potentially by introducing a higher level retry that could get the new revision number for a final attempt.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz76:zzzssi,,Sprint 16  - Ledger,,,,,,denyeart,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB in docker pauses for 30s occassionally,FAB-3685,16390,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,chris.elder,denyeart,denyeart,06/May/17 2:14 AM,06/May/17 2:25 AM,26/Apr/18 6:50 AM,06/May/17 2:25 AM,,,,,,fabric-ledger,,,,,,0,,,,,,,,"For details see the bug opened in CouchDB jira:
https://issues.apache.org/jira/browse/COUCHDB-3409",,,,,,,,,,,,,,,,,FAB-3318,,,,,,,,,,,,,,,0|hzzz76:zzzs4,,Sprint 16  - Ledger,,,,,,denyeart,,,,,,,,,,,,,,,,,,,,06/May/17 2:25 AM;denyeart;Bug was previously opened.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Identities signed rootCA instead of existing intermediate CAs should be rejected as members of that MSP,FAB-3677,16354,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,angelo.decaro,elli-androulaki,elli-androulaki,05/May/17 12:44 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,12/May/17 9:16 AM,,,,v1.0.0,,fabric-crypto,,,,,,0,,,,,,,,"MSPs may be configured with a set of root CAs, and optionally a set of intermediate CAs. Each root CA defines a tree of certificate hierarchies. What we need to ensure that validateIdentity function of the MSP accepts if and only if the identity is no sibling to an intermediate CA in any of the MSP certificate trees.

Examples (assuming an identity ID, root CAs prefixed with ""rCA"", and intermediate CAs prefixed with iCA):

* Identity *ID* should be considered *valid*:  

               rCA                               or                               rCA1                 rCA2
               /    \                                                                   /   \                     |   
          iCA1  iCA2                                                    iCA11   iCA12           *ID*
            |          
         *ID*

* Identity ID should be considered *invalid*:  

               rCA                               or                                  rCA1                 rCA2
             /    |    \                                                                   /   \                     |   \ 
     iCA1   *ID*  iCA2                                                    iCA11   iCA12        *ID*  iCA21 
           
",,,,,,,,,,,,,,,,,,,FAB-3893,,,,,,,,,,,,,0|hzzzbt:l0av,,,,,,,,elli-androulaki,mastersingh24,,,,,,,,,,,,,,,master,,,true,12/May/17 9:08 AM;mastersingh24;We are going to need to document this,"12/May/17 1:42 PM;elli-androulaki;[~mastersingh24], just created FAB-3898 for documenting identity validity specs, and linked this item to it. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sdk-node e2e tests are failed on latest commit [sdk=80d8508],FAB-3657,16321,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,rameshthoomu,rameshthoomu,04/May/17 1:35 PM,04/May/17 8:03 PM,26/Apr/18 6:50 AM,04/May/17 8:03 PM,,,,v1.0.0,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"Observed sdk-node e2e tests are failing.. Below is the error log from CI build

https://jenkins.hyperledger.org/sandbox/job/e2e_FIT_x86_64/11/consoleText

{code:java}
00:25:49.299 ok 11 Successfully enrolled orderer 'admin'
00:25:49.324 error: [Orderer.js]: sendDeliver - rejecting - status:NOT_FOUND
00:25:49.332 not ok 12 Error: Invalid results returned ::NOT_FOUND at ClientDuplexStream.<anonymous> (/w/workspace/e2e_FIT_x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/Orderer.js:9:9047) at emitOne (events.js:96:13) at ClientDuplexStream.emit (events.js:188:7) at readableAddChunk (_stream_readable.js:176:18) at ClientDuplexStream.Readable.push (_stream_readable.js:134:10) at readCallback (/w/workspace/e2e_FIT_x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/grpc/src/node/src/client.js:245:14)
00:25:49.333   ---
00:25:49.333     operator: fail
00:25:49.333     at: hfc.newDefaultKeyValueStore.then.then.then.then (/w/workspace/e2e_FIT_x86_64/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/join-channel.js:224:5)
00:25:49.333   ...
00:25:49.333 not ok 13 Error: Error: Invalid results returned ::NOT_FOUND at ClientDuplexStream.<anonymous> (/w/workspace/e2e_FIT_x86_64
{code}

=======> FABRIC PEER COMMIT NUMBER - 99867e6 =======> FABRIC CA COMMIT NUMBER - 71fa531 =======> FABRIC SDK NODE COMMIT NUMBER - 80d8508

observed the same tests are worked as expected on ""power"" and ""z"" platforms.. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00ylh:,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
../signcerts: no such file or directory,FAB-3646,16308,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,pvrbharg,pvrbharg,04/May/17 12:43 AM,05/Jun/17 7:23 PM,26/Apr/18 6:50 AM,01/Jun/17 1:51 PM,v1.0.0-alpha1,,,v1.0.0,,fabric-docs,,,,,,0,broken,,,,,,,"Hi, I am following the steps listed at this URL - 
https://github.com/hyperledger/fabric/blob/fd623d18ad5ed1611939ea1b98c8a06534fc4c11/docs/source/getting_startedv2.rst 
and 
I am failing on the indicated step:

+++
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com CORE_PEER_LOCALMSPID=""OrdererMSP"" peer channel create -o orderer.example.com:7050 -c mychannel -f channel.tx
+++

I am running in Ubuntu 16.04 and I was able to succeed prior to most recent refresh (like 10 days ago).


root@36145c23687e:/opt/gopath/src/github.com/hyperledger/fabric/peer# ls
channel.tx crypto scripts

root@36145c23687e:/opt/gopath/src/github.com/hyperledger/fabric/peer# CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com CORE_PEER_LOCALMSPID=""OrdererMSP"" peer channel create -o orderer.example.com:7050 -c mychannel -f channel.tx
panic: Fatal error when setting up MSP from directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com: err Could not load a valid signer certificate from directory /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/signcerts, err Could not read directory open /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/signcerts: no such file or directory, err /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/signcerts


goroutine 1 [running]:
panic(0xbe1b00, 0xc42020e970)
/opt/go/src/runtime/panic.go:500 +0x1a1
main.main()
/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:107 +0x67a
root@36145c23687e:/opt/gopath/src/github.com/hyperledger/fabric/peer#

Can you please help and guide me?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00yil:,,,,,,,,markparz,mastersingh24,pvrbharg,,,,,,,,,,,,,,,,,,31/May/17 11:52 PM;mastersingh24;I'm not sure I see a bug here.  The error message seems to be clear and correct.  Is this a bug against the doc?,"01/Jun/17 1:51 PM;markparz;I agree with [~mastersingh24]

[~pvrbharg] The error message is showing the issue with your crypto directory. There was a mismatch with the old getting started and the level of code you were using. If you go back and use the current getting started you'll be in good shape.

peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls $CORE_PEER_TLS_ENABLED --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/cacerts/ca.example.com-cert.pem

I'm going to close this particular issue, if you run into something else please let us know.",05/Jun/17 7:23 PM;pvrbharg;Hi Mark - OK I followed your suggestion and re-created my sandbox - all is well for me at this point. Thanks.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Instantiation proposals have increased in size,FAB-3645,16307,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,muralisr,kchristidis,kchristidis,03/May/17 10:16 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,06/May/17 8:36 AM,,,,v1.0.0,,fabric-endorser,,,,,,0,,,,,,,,"An endorsed instantiation proposal for chaincode02 used to be 4KB, and now it's around 16MB.

This change seems to have taken effect three weeks ago or so.

See attached screenshots from [~jeffgarratt]'s `bootstrap.feature` test, which is using the chaincode located in: github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -- focus on the ""dev0org0-instantiatetx1.protobuf"" file.",,,,,,,,,,,,,,,,,,,,,,,,03/May/17 10:15 PM;kchristidis;after.png;https://jira.hyperledger.org/secure/attachment/10703/after.png,03/May/17 10:15 PM;kchristidis;before.png;https://jira.hyperledger.org/secure/attachment/10704/before.png,,,,,,,0|i00yid:,,,,,,,,kchristidis,mastersingh24,muralisr,,,,,,,,,,,,,,master,,,true,05/May/17 11:04 PM;muralisr;LSCC return ChaincodeData. ChaincodeData.Data contains chaincode bytes instead of hash.,06/May/17 8:36 AM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/9031/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
gossip layer is not respecting peer.gossip.endpoint configuration,FAB-3643,16305,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,greg.haskins,greg.haskins,greg.haskins,03/May/17 8:52 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,04/May/17 8:43 AM,,,,v1.0.0,,fabric-gossip,,,,,,0,,,,,,,,This can be particularly problematic with TLS enabled since the endpoint representation becomes critically important to the x509 validation.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00yhx:,,,,,,,,greg.haskins,,,,,,,,,,,,,,,,master,,,true,03/May/17 9:04 PM;greg.haskins;https://gerrit.hyperledger.org/r/#/c/8923/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
orderer docker container should not set ORDERER_GENERAL_GENESISPROFILE,FAB-3641,16296,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,greg.haskins,greg.haskins,greg.haskins,03/May/17 7:49 PM,31/May/17 1:58 PM,26/Apr/18 6:50 AM,04/May/17 5:28 PM,,,,v1.0.0,,fabric-orderer,,,,,,0,,,,,,,,"The baseline container for the orderer sets the genesis profile in the ENV.  This is bad because it means that it will always override any configuration file that a consumer may use, such as in /etc/hyperledger/fabric.  Instead, we should set any defaults in the sampleconfig/orderer.yaml and allow the user to choose how they would like to override (if at all)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00yg5:,,,,,,,,greg.haskins,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Fabric-CA APIs with json tag for field 'CAName',FAB-3622,16241,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,skarim,skarim,skarim,03/May/17 2:53 PM,27/Nov/17 2:03 AM,26/Apr/18 6:50 AM,27/Nov/17 2:01 AM,,,,v1.0.0,,fabric-sdk-py,,,,,,0,,,,,,,,"A new field has been introduced to the Fabric-CA APIs called 'CAName' to support multiple CAs running in a single Fabric-CA server. A JSON tag is needed for this field, and all SDKs must take this into account in their REST calls. 

Swagger documentation also needs to be updated to reflect this new field",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00y45:,,Sprint 16 - Membership Service,,,,,,denyeart,skarim,,,,,,,,,,,,,,,master,,,true,03/May/17 4:20 PM;skarim;https://gerrit.hyperledger.org/r/#/c/8901/,27/Nov/17 2:01 AM;denyeart;[~skarim] Looks like this is merged and all SDK subtasks are Done.  Closing.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
extend error level down to 400 from 500,FAB-3618,16234,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,wlahti,muralisr,muralisr,03/May/17 1:11 PM,24/Jun/17 9:36 AM,26/Apr/18 6:50 AM,05/Jun/17 6:06 PM,,,,v1.0.0,,fabric-endorser,,,,,,5,,,,,,,,"[~binhn] in https://jira.hyperledger.org/browse/FAB-3548 defines error codes in the 400-500 range to follow HTTP codes. Some examples from that
* BadRequest = ""400""  	// Invalid inputs on API calls
* Forbidden = ""403"" // Forbidden due to access control issues
* NotFound = ""404"" // Not Found (eg chaincode not found)

(there are more).

These would be useful for chaincode developers too. In all these cases we likely don't want to endorse and allow a transaction to be created by default. ie, extend non-endorsing errors to >= 400 (from >= 500). 

We should have considered this earlier but need to fix this - if agreed to - before we 1.0.

Also noting that [~sanchezl] did already make this point while doing Java CC implementation. Whatever we decide here we need to make sure Java CC maintains parity with GO CC.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00wls:,,Sprint 16  - Endorser,,,,,,binhn,ChristopherFerris,denyeart,mastersingh24,muralisr,troyronda,wlahti,,,,,,,,,,master,,,true,"24/May/17 1:28 PM;ChristopherFerris;this is not a bug, why is it classified as such? [~muralisr]","24/May/17 1:28 PM;ChristopherFerris;personally, I think that this should wait to post 1.0.","24/May/17 5:29 PM;binhn;I changed the priority to ""high"" as this bug would allow bogus transactions to get into the ledger. We need to fix this for 1.0.","25/May/17 1:54 AM;denyeart;Agree with Binh, this looks like an important bug to fix with relatively small risk.","26/May/17 9:03 AM;mastersingh24;I am pretty sure I understand the issue, but I don't think it is clear to everyone.

[~muralisr]  I believe that we are saying we should change [https://github.com/hyperledger/fabric/blob/master/core/chaincode/shim/response.go#L28]  from 
{noformat}
ERROR=500
{noformat}
 to 
{noformat}
ERROR=400
{noformat}
?",26/May/17 11:26 AM;muralisr;[~mastersingh24] right. Should have been clearer. Added the details so anyone can pick this JIRA up.,"29/May/17 4:26 AM;jimthematrix;+1, if I'm implementing ACL in my chaincode and I decided the Creator is not authorized, according to API spec I'd use 403 (not authorized) in my response. but that would be interpreted by the validation as non-error (endorsement succeeded).","29/May/17 7:06 PM;ChristopherFerris;If this gets approved (I won't be the last one to vote, since I think this is just creeping improvements) then I will INSIST that it be a single comprehensive change that addresses the fix, the tests and the documentation, and any example/sample in the code base that is affected. Over all, I think this could wait. It may not be ideal, but it IS an API change and we are supposedly frozen vis our API and SPI.",29/May/17 7:08 PM;ChristopherFerris;I'll also note that IMNSHO this is not a bug but as designed and hence an improvement.,"31/May/17 5:09 AM;denyeart;I dont think anybody would by design indicate that a 403 (not authorized) should result in an endorsement.  This looks like an oversight/bug that needs to be fixed.  We can't be changing fundamental behavior after 1.0, therefore need to fix before 1.0.","31/May/17 5:35 PM;ChristopherFerris;Quite possibly then, there is some lack of clarity on the nature of this change. It isn't clear that there IS actually a bug, it seems to me that the request is to align the error codes for chaincode developers. It may result in misunderstanding, I suppose, and yes, it will mean an API change but as I have noted elsewhere, every time we do this, we create inconsistencies in the documentation (or omit it altogether) and there are likely other areas that need to be addressed. 

 

In other words, this is no small change and IMO it really needs to be considered carefully before we merge such a change, as it introduces an API change when we have previously said that the API is FROZEN.

 ","01/Jun/17 1:28 PM;muralisr;[~ChristopherFerris] we have changing  interpretation of what the ""error"" is. You are right that its not a bug in the sense that it is working as designed (we didn't by mistake say 500 when we meant 400). However, this change will invalidate all TXs stored in the ledger prior to the change with Errors in the range 400-500. If we don't mind that then we can do post 1.0.

Suggest we have [~wlahti] put out a CR to assess the extent of changes and go from there ?","01/Jun/17 1:55 PM;ChristopherFerris;Ok, so if I understand this (and thanks [~denyeart] and [~muralisr] for clarifying) if we do not change this before 1.0, any change we make post 1.0 will mean that if I have a network deployed with v1.0.0 level code, and I upgrade to the post 1.0 level code with this change, that committed transactions in the ledger prior to the upgrade will be invalidated? Have I got that correct? That changes my understanding considerably.

 

However, and I will say this again I am sure, I'm willing to bet a considerable amount of beers that this will not be the only breaking change that we might consider post 1.0 because of anything we know now or because of any feedback/experience we get from having 1.0 deployed.","01/Jun/17 2:07 PM;muralisr;_>I upgrade to the post 1.0 level code with this change, that_ _committed transactions in the ledger prior to the upgrade will be invalidated_

That's right [~ChristopherFerris] (I'd have said , ""ledger will contain txs that would not have been committed post 1.0"" but the spirit is right. The ledger will have ambiguous/inconsistent txs).

... and I'm _NOT_ taking you up on the bet :) .","01/Jun/17 3:01 PM;ChristopherFerris;OK, I AM CHANGING MY VOTE. to apply Gari's suggested fix https://jira.hyperledger.org/browse/FAB-3618?focusedCommentId=24415&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-24415

 

It also needs to be documented CLEARLY","01/Jun/17 3:02 PM;ChristopherFerris;issue has reached the necessary 5 votes, and a CR may be submitted and merged.","02/Jun/17 5:41 PM;wlahti;After discussing with [~muralisr], the plan is to create a new constant, ERRORTHRESHOLD, which will be set to 400. The endorser will use this constant to determine whether to endorse/reject a proposal while shim.ERROR will still be used as the generic error status code of 500 (calls to shim.Error(msg) use this constant to set the status). ",02/Jun/17 6:59 PM;muralisr;A bit of explanation for ERRORTHRESHOLD - basically don't overload ERROR to be both a value of an error *and*  a threshold to test against. Separating them out makes for fewer implementation changes and keeps it clean.,02/Jun/17 7:58 PM;wlahti;CR out for review: https://gerrit.hyperledger.org/r/#/c/10085/,,,,,,,,,,,,,,,,,,,,,,,
"When config block has no anchor peers, gossip considers channel as having no orgs",FAB-3613,16229,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,yacovm,yacovm,yacovm,03/May/17 8:56 AM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,05/May/17 1:19 PM,v1.0.0,,,,,fabric-gossip,,,,,,0,gossip,,,,,,,"Since https://gerrit.hyperledger.org/r/#/c/7105/ is merged, when a channel is created- no anchor peers are supplied inside. 

There is a bug in gossip_service.go that if a config with an empty set of anchor peers for each org is given, the channel's membership (list of orgs) is considered empty, and then each peer considers itself alone in the channel.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,0|i00y1h:,,,,,,,,yacovm,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Copy relative paths and deep copy pointers from default CA,FAB-3574,16176,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,skarim,skarim,skarim,02/May/17 8:42 PM,13/May/17 3:16 PM,26/Apr/18 6:50 AM,12/May/17 12:29 AM,v1.0.0,,,v1.0.0-alpha2,,fabric-ca,,,,,,0,MembershipServices,,,,,,,"Missing values in configuration of additional CA must be replaced with values from the default CA configuration. If relative paths are specified in the default CA configuration, the same relative paths must copied over to additional CAs if missing before the paths are made absolute.

If absolute paths are specified in the default CA, then the entire absolute path should also be copied over to additional CAs if missing.

Also, need to do a deep copy of any pointers that exist in the default CA. Otherwise, it creates conflicts with additional CAs and values get overwritten.

For example, assume the default CA and one non-default CA (CA1), with two files as follows:

1) fabric-ca-server-config.yaml (for the default CA)

This is the main config file which contains among other things, the following two relative filenames.

keystore: msp/keystore cafiles: cas/ca1/config.yaml

The cafiles property points to the file below.

2) cas/ca1/config.yaml (for CA1)

This is a sparse file which contains the name of the CA but need not contain anything else since it inherits values from the default CA; obviously you can override any of the values that you want.

Consider where CA1 gets its ""keystore"" value. It should be at ""msp/keystore"" relative to the ""cas/ca1/config.yaml"" file. In order to make this work, we are supposed to do the following: a) read CA1's sparse config b) copy the missing values from the default CA's config, doing a deep copy

There are two problems with the current code: 1) Not doing a deep copy, so the keystore wasn't copied because it wasn't at the top level. And a lot of other info was missing of course. This is fixed by [https://gerrit.hyperledger.org/r/#/c/8853] 2) The filenames in the default CA's config were being made absolute before the copy rather than after, which meant they pointed to the same path as the default CA.

 

This also fixes some problems with intermediate CA support.

For example, this fixes the following error when starting an intermediate CA:

Start the root CA as follows:
{code:java}
# fabric-ca-server start -c root/config.yaml -b a:b -p 7055
2017/05/09 09:24:17 [INFO] Created default configuration file at /Users/keith/go/src/github.com/hyperledger/fabric-ca/bin/root/config.yaml
2017/05/09 09:24:17 [INFO] Starting server in home directory: /Users/keith/go/src/github.com/hyperledger/fabric-ca/bin/root
2017/05/09 09:24:17 [INFO] generating key: &{A:ecdsa S:256}
2017/05/09 09:24:17 [INFO] encoded CSR
2017/05/09 09:24:17 [INFO] signed certificate with serial number 501629925030367703483356481723098271810642071467
2017/05/09 09:24:17 [INFO] The CA key and certificate were generated for CA
2017/05/09 09:24:17 [INFO] The key was stored by BCCSP provider 'SW'
2017/05/09 09:24:17 [INFO] The certificate is at: /Users/keith/go/src/github.com/hyperledger/fabric-ca/bin/root/ca-cert.pem
2017/05/09 09:24:17 [INFO] Initialized sqlite3 database at /Users/keith/go/src/github.com/hyperledger/fabric-ca/bin/root/fabric-ca-server.db
2017/05/09 09:24:17 [INFO] Home directory for default CA: /Users/keith/go/src/github.com/hyperledger/fabric-ca/bin/root
2017/05/09 09:24:17 [INFO] Listening at http://0.0.0.0:7055
2017/05/09 09:24:41 [INFO] signed certificate with serial number 669469741261274226287810516031688469970869826451
2017/05/09 09:24:41 [INFO] [::1]:60832 - ""POST /enroll"" 200{code}
 

Attempt to start the intermediate CA as follows:
{code:java}
# fabric-ca-server start -c intermediate/config.yaml -b c:d -u http://a:b@localhost:7055
2017/05/09 09:18:19 [INFO] Created default configuration file at /Users/keith/go/src/github.com/hyperledger/fabric-ca/bin/intermediate/config.yaml
2017/05/09 09:18:19 [INFO] Starting server in home directory: /Users/keith/go/src/github.com/hyperledger/fabric-ca/bin/intermediate
2017/05/09 09:18:19 [INFO] CA Home Directory: /Users/keith/go/src/github.com/hyperledger/fabric-ca/bin/intermediate
2017/05/09 09:18:19 [INFO] generating key: &{A:ecdsa S:256}
2017/05/09 09:18:19 [INFO] encoded CSR
2017/05/09 09:18:19 [INFO] The CA key and certificate were generated for CA
2017/05/09 09:18:19 [INFO] The key was stored by BCCSP provider 'SW'
2017/05/09 09:18:19 [INFO] The certificate is at: /Users/keith/go/src/github.com/hyperledger/fabric-ca/bin/intermediate/ca-cert.pem
2017/05/09 09:18:19 [INFO] Initialized sqlite3 database at /Users/keith/go/src/github.com/hyperledger/fabric-ca/bin/intermediate/fabric-ca-server.db
Error: Could not find the private key in BCCSP keystore nor in keyfile /Users/keith/go/src/github.com/hyperledger/fabric-ca/bin/intermediate/ca-key.pem: open /Users/keith/go/src/github.com/hyperledger/fabric-ca/bin/intermediate/ca-key.pem: no such file or directory{code}
 ",,,,,,,,,,,,,,FAB-3040,,,,,,,,,,,,,,,,,FAB-3040,0|i00xpp:,,Sprint 16 - Membership Service,,,,,,skarim,smithbk,,,,,,,,,,,,,,,master,,,true,02/May/17 8:54 PM;smithbk;See http://gerrit.hyperledger.org/r/8853,08/May/17 7:19 PM;smithbk;[https://gerrit.hyperledger.org/r/#/c/8944],10/May/17 3:42 PM;skarim;https://gerrit.hyperledger.org/r/#/c/8909,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer CLI provides incorrect status code o/p for Successful Endorsement Response,FAB-3562,16159,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,wlahti,rhegde,rhegde,02/May/17 3:20 PM,02/Jun/17 6:53 PM,26/Apr/18 6:50 AM,02/Jun/17 6:53 PM,,,,v1.0.0,,fabric-endorser,,,,,,0,,,,,,,,"Endorsement response code from 0 to 499 are marked as Endorsement Success. However our chaincode logic uses values from this range and this is used further by client to determine and execute response code specific operations.

We see a defect in Peer CLI output where for example Endorsement Response code set as 201 is returned as 200. 

{quote}
2017-05-02 15:00:50.917 UTC [msp] Sign -> DEBU 006 Sign: digest: E4E1F2AE1CFDA1A84FFC8E0C730DE5BD22F1DCA3A82F37BCCD7DBBC45957CD62
2017-05-02 15:00:50.919 UTC [chaincodeCmd] chaincodeInvokeOrQuery -> INFO 007 Invoke result: version:1 response:<status:200 message:""OK"" payload:""{\""participantShortName\"":\""BANK2\"",\""nettingGroupName\"":\""TESTING2\"",\""currencyIso\"":\""USD\"",\""nettingCutOffTime\"":\""07:21:00\"",\""nettingCutOffTimeShift\"":0}"" > payload:""\n o\315mF\325T&\347\r\210O\006\210\247\247a6\320E\""\236\000\342\343\3357<\020\005\327AB\022\272\002\nd\022\030\n\004lscc\022\020\n\016\n\006public\022\004\010\001\020\001\022H\n\006public\022>\n\022\n\nCLS001_101\022\004\010\002\020\001\n(\n CLS005_BANK2_TESTING2_2017-03-28\022\004\010\003\020\001\032\321\001\010\311\001\022=netting group response populated with default netting cut-off\032\214\001{\""participantShortName\"":\""BANK2\"",\""nettingGroupName\"":\""TESTING2\"",\""currencyIso\"":\""USD\"",\""nettingCutOffTime\"":\""07:21:00\"",\""nettingCutOffTimeShift\"":0}"" endorsement:<endorser:""\n\007Org0MSP\022\210\004-----BEGIN -----\nMIIBYzCCAQmgAwIBAwICA+gwCgYIKoZIzj0EAwIwEzERMA8GA1UEAwwIcGVlck9y\nZzAwHhcNMTcwMjIwMTkwNjExWhcNMTgwMjIwMTkwNjExWjAQMQ4wDAYDVQQDDAVw\nZWVyMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABEF6dfqjqfbIgZuOR+dgoJMl\n/FaUlGI70A/ixmVUY83Yp4YtV3FDBSOPiO5O+s8pHnpbwB1LqhrxAx1Plr0M/UWj\nUDBOMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFBY2bc84vLEwkX1fSAER2p48jJXw\nMB8GA1UdIwQYMBaAFFQzuQR1RZP/Qn/BNDtGSa8n4eN/MAoGCCqGSM49BAMCA0gA\nMEUCIQDeDZ71L+OTYcbbqiDNRf0L8OExO59mH1O3xpdwMAM0MgIgXySG4sv9yV31\nWcWRFfRFyu7o3T72kqiLZ1nkDuJ8jWI=\n-----END -----\n"" signature:""0D\002 L^>\363\237\376\tI;\231\346<\027\212T\006\0325\200\033\277\272\032\013\224l,'%\006sK\002 \021\323V\350tdN>Nc\330\030\276\302\014T\202\002\375\206\257\353\352,\204\320\346`\031\014K\333"" >
2017-05-02 15:00:50.920 UTC [main] main -> INFO 008 Exiting.....
{quote}

At the same time - this is another thing to fix (https://github.com/hyperledger/fabric/blob/master/protos/peer/proposal_response.proto#L58)?
1. 'message' field is populated with ""OK"" whereas user-chain-code had populated it with ""netting group response populated with default netting cut-off""

note: 'payload' byte array field is populated by a JSON byte array by user-chaincode which can be seen as string translated in the 'Payload' field. 

This is run on 19th April published Fabric Images on CI Channel (https://chat.hyperledger.org/channel/fabric-ci?msg=7jxNech7WzkP9ngi3)

*Impact*: Our chaincode E2E testing is performed using Peer CLI and this information is helpful to confirm whether this is really part of the response before we start integrating with the HFC using SDK.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00xmd:,,,,,,,,muralisr,rhegde,wlahti,,,,,,,,,,,,,,master,,,true,"02/May/17 3:25 PM;rhegde;Can you please confirm if client using Fabric Java SDK will receive the following response (3 parts - status (int32), payload (byte array) and message (string) as a direct access variable) as we set in the user-chaincode?","03/May/17 6:52 PM;muralisr;[~rhegde] not sure if I understand the problems correctly...

Are you saying
* response code is set as 201 but CLI outputs it as 200 ?
* message is set ""netting group response populated with default netting cut-off"" but CLI outputs it as ""OK"" ?

Can you attach a sample Chaincode with CLI instructions to recreate the problem please ?","03/May/17 8:24 PM;rhegde;Your understanding is correct.
","11/May/17 7:56 PM;wlahti;The CLI was returning the invoke result for the ESCC call and not the user chaincode call. My pending CR updates the messages to display as follows:

 
{code:java}
2017-05-11 19:22:13.271 UTC [chaincodeCmd] chaincodeInvokeOrQuery -> DEBU 00a ESCC invoke result: version:1 response:<status:200 message:""OK"" payload:""function=invoke args=[a b 10]"" > payload:""\n \243\202\227\255%\327\333(\037\301\022Y`\006[\260\211\311~\001\241\220\031}\355\363(\344\371~\323$\022\224\001\nE\022\024\n\004lscc\022\014\n\n\n\004mycc\022\002\010\003\022-\n\004mycc\022%\n\007\n\001a\022\002\010\004\n\007\n\001b\022\002\010\004\032\007\n\001a\032\00280\032\010\n\001b\032\003220\032>\010\312\001\022\032endorsing transaction message\032\035function=invoke args=[a b 10]\""\013\022\004mycc\032\0031.0"" endorsement:<endorser:""\n\007Org1MSP\022\325\006-----BEGIN -----\nMIICWTCCAgCgAwIBAgIQZv4TMXaaqBUzrev1HwiybDAKBggqhkjOPQQDAjBzMQsw\nCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy\nYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEcMBoGA1UEAxMTY2Eu\nb3JnMS5leGFtcGxlLmNvbTAeFw0xNzA1MTExOTIxMTdaFw0yNzA1MDkxOTIxMTda\nMFsxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1T\nYW4gRnJhbmNpc2NvMR8wHQYDVQQDExZwZWVyMC5vcmcxLmV4YW1wbGUuY29tMFkw\nEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEETq2TkoSxSYeBwj/RzP8pE7nm0wLPvH0\no/pkNdBLz2xwcv9lRG0aIMZ8e6HlZTcYexF34C3mkdbV8Kgrwr3OT6OBjTCBijAO\nBgNVHQ8BAf8EBAMCBaAwEwYDVR0lBAwwCgYIKwYBBQUHAwEwDAYDVR0TAQH/BAIw\nADArBgNVHSMEJDAigCD0kY8yzci3YqmRhwOEEzb6JQSaSd40kjUmMktbibGKcTAo\nBgNVHREEITAfghZwZWVyMC5vcmcxLmV4YW1wbGUuY29tggVwZWVyMDAKBggqhkjO\nPQQDAgNHADBEAiBtBIchJYRCl3YIcWxtNDtcXrJ1HsqyvS7btMec0MEDhwIgReJ9\n5Nso3gPXWbL2Lid/MgzOx9hto8yWwPgZJLa+Q9E=\n-----END -----\n"" signature:""0D\002 \""8c\221i{kw\006\r1\304\231\236G\0044\014qHL\266G\270a\275\262z\251\225\317\220\002 n[\276\224\311\365\207\367\324\323\372\313\203\202`K,\216\257\354\344\317\372\026I\025_\247\355\003\344\377"" >
2017-05-11 19:22:13.271 UTC [chaincodeCmd] chaincodeInvokeOrQuery -> INFO 00b Chaincode invoke successful. result: status:202 message:""endorsing transaction message"" payload:""function=invoke args=[a b 10]""{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer CLI doesn't provide clear console output for Endorsement Failure Response ,FAB-3560,16157,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,wlahti,rhegde,rhegde,02/May/17 2:15 PM,02/Jun/17 6:53 PM,26/Apr/18 6:50 AM,02/Jun/17 6:53 PM,,,,v1.0.0,,fabric-endorser,,,,,,0,,,,,,,,"Running via Peer CLI and for any Endorsement failure response set by the user-chaincode is not printed to the console. 

This should include a similar output alike when Endorsement Proposal is successful. This should at least list out the fields set by the user-chaincode (https://github.com/hyperledger/fabric/blob/master/protos/peer/proposal_response.proto#L58)

{quote}
Error: Error endorsing invoke: rpc error: code = 2 desc = <pb.response.message>
{quote}

This is run on 19th April published Fabric Images on CI Channel (https://chat.hyperledger.org/channel/fabric-ci?msg=7jxNech7WzkP9ngi3)

*Impact*: Our chaincode E2E testing is performed using Peer CLI and this information is helpful to confirm whether this is really part of the response before we start integrating with the HFC using SDK.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00xlx:,,,,,,,,rhegde,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fabric-client npm module appears to not have been transpiled back to ES5,FAB-3553,16150,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,marlenac,marlenac,01/May/17 9:30 PM,31/May/17 2:07 AM,26/Apr/18 6:50 AM,31/May/17 2:06 AM,v1.0.0-alpha1,,,Not a Bug,WON'T FIX,fabric-sdk-node,,,,,,0,,,,,,,,"1. Import the fabric-client into a node project with `npm i fabric-client --save`
2. Open node_modules/fabric-client/lib/Client.js

Expected: All of the code should be ES5. It's a best practice for npm modules to have already been transpiled. 

Actual:
This particular file contains the `class` keyword which is ES6.

The problem this is causing and the reason I'm logging this bug is that this creates challenges when running a project through mocha. 

Here is the mocha command I'm using for npm test:
node_modules/mocha/bin/mocha --require babel-polyfill --compilers js:babel-register --reporter progress 'test/**/*_spec.js'

Attaching the stack trace in a comment for reference of what it looks like when I run a project containing the fabric-client module through mocha.  

Here are some instructions for how to do this: https://booker.codes/how-to-build-and-publish-es6-npm-modules-today-with-babel/
and a popular stack overflow on this topic: http://stackoverflow.com/questions/29738381/how-to-publish-a-module-written-in-es6-to-npm

There is not much of a way around this for writing tests with mocha using this package so marking it as high.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz6a:rhq,,,,,,,,marlenac,,,,,,,,,,,,,,,,,,,,"01/May/17 9:30 PM;marlenac;/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/node_modules/fabric-client/lib/Client.js:45
var Client = class {
             ^^^^^
SyntaxError: Unexpected reserved word
    at Module._compile (module.js:439:25)
    at Module._extensions..js (module.js:474:10)
    at Object.require.extensions.(anonymous function) [as .js] (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/node_modules/babel-register/lib/node.js:152:7)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Module.require (module.js:364:17)
    at require (module.js:380:17)
    at Object.<anonymous> (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/node_modules/fabric-client/index.js:24:18)
    at Module._compile (module.js:456:26)
    at Module._extensions..js (module.js:474:10)
    at Object.require.extensions.(anonymous function) [as .js] (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/node_modules/babel-register/lib/node.js:152:7)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Module.require (module.js:364:17)
    at require (module.js:380:17)
    at Object.<anonymous> (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/api/helpers/chaincodeHelper.js:25:11)
    at Module._compile (module.js:456:26)
    at loader (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/node_modules/babel-register/lib/node.js:144:5)
    at Object.require.extensions.(anonymous function) [as .js] (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/node_modules/babel-register/lib/node.js:154:7)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Module.require (module.js:364:17)
    at require (module.js:380:17)
    at Object.<anonymous> (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/api/routes/api_routes.js:4:23)
    at Module._compile (module.js:456:26)
    at loader (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/node_modules/babel-register/lib/node.js:144:5)
    at Object.require.extensions.(anonymous function) [as .js] (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/node_modules/babel-register/lib/node.js:154:7)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Module.require (module.js:364:17)
    at require (module.js:380:17)
    at Object.<anonymous> (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/index.js:10:17)
    at Module._compile (module.js:456:26)
    at loader (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/node_modules/babel-register/lib/node.js:144:5)
    at Object.require.extensions.(anonymous function) [as .js] (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/node_modules/babel-register/lib/node.js:154:7)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Module.require (module.js:364:17)
    at require (module.js:380:17)
    at Object.<anonymous> (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/test/api/api_routes_spec.js:4:11)
    at Module._compile (module.js:456:26)
    at loader (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/node_modules/babel-register/lib/node.js:144:5)
    at Object.require.extensions.(anonymous function) [as .js] (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/node_modules/babel-register/lib/node.js:154:7)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Module.require (module.js:364:17)
    at require (module.js:380:17)
    at /home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/node_modules/mocha/lib/mocha.js:230:27
    at Array.forEach (native)
    at Mocha.loadFiles (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/node_modules/mocha/lib/mocha.js:227:14)
    at Mocha.run (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/node_modules/mocha/lib/mocha.js:495:10)
    at Object.<anonymous> (/home/pipeline/61102847-3b49-4ca3-81a7-616f808be75d/node_modules/mocha/bin/_mocha:460:18)
    at Module._compile (module.js:456:26)
    at Object.Module._extensions..js (module.js:474:10)
    at Module.load (module.js:356:32)
    at Function.Module._load (module.js:312:12)
    at Function.Module.runMain (module.js:497:10)
    at startup (node.js:119:16)
    at node.js:935:3
npm ERR! Test failed.  See above for more details.

Finished: FAILED","31/May/17 2:06 AM;jimthematrix;thanks for writing this up [~marlenac], i think what you are doing in mocha command is the best course of action: it keeps the fix scoped to using mocha, which is the source of the issue in the first place (other test frameworks like tape works fine with modules written in ES6 code)

I do not think doing the transpiling during npm publish is warranted because the SDK code is not intended to run in browsers and node.js has started supporting these ES6 features since 4.7.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-ca-server error/crash,FAB-3547,16144,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,pmullaney,pmullaney,01/May/17 6:54 PM,04/May/17 8:04 PM,26/Apr/18 6:50 AM,04/May/17 8:04 PM,,,,v1.0.0,,fabric-sdk-node,,,,,,0,,,,,,,,"Steps to reproduce:

cd fabric-sdk-node/tests/fixtures
docker-compose up --force-recreate

Output should indicate:
ubuntu@hyperledger-devenv:16cb17a:/opt/gopath/src/github.com/hyperledger/fabric-sdk-node/test/fixtures$ docker-compose up --force-recreate
Creating network ""fixtures_default"" with the default driver
Creating ca_peerOrg2
Creating ca_peerOrg1
Creating orderer0
Creating couchdb
Creating peer0
Creating peer2
Attaching to ca_peerOrg2, ca_peerOrg1, couchdb, orderer0, peer0, peer2
ca_peerOrg2 | 2017/05/01 18:39:39 [INFO] Configuration file location: /etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml
ca_peerOrg2 | Error: Incorrect format in file '/etc/hyperledger/fabric-ca-server/fabric-ca-server-config.yaml': 1 error(s) decoding:
ca_peerOrg2 | 
ca_peerOrg2 | * 'LDAP.TLS.CertFiles': source data must be an array or slice, got string
ca_peerOrg2 | Usage:
ca_peerOrg2 |   fabric-ca-server start [flags]
ca_peerOrg2 | 
ca_peerOrg2 | Global Flags:
ca_peerOrg2 |       --address string                         Listening address of fabric-ca-server (default ""0.0.0.0"")
ca_peerOrg2 |   -b, --boot string                            The user:pass for bootstrap admin which is required to build default config file
ca_peerOrg2 |       --ca.certfile string                     PEM-encoded CA certificate file (default ""ca-cert.pem"")

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00xjh:,,,,,,,,pmullaney,smithbk,,,,,,,,,,,,,,,,,,,"01/May/17 7:19 PM;smithbk;I just spoke to [~jimthematrix] about this and he will make the necessary change to the node SDK to fix this, so assigning to him.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java Fabric SDK needs to support Ranges of Response Statuses,FAB-3542,16139,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,timpii,timpii,01/May/17 4:21 PM,01/Jun/17 1:22 PM,26/Apr/18 6:50 AM,01/Jun/17 1:22 PM,,,,v1.0.0,,fabric-sdk-java,,,,,,0,,,,,,,,"The Java Fabric SDK defines an enum within the ChainCodeResponse which only has 3 items (see below).
	public enum Status {
        UNDEFINED(0),
        SUCCESS(200),
        FAILURE(500);

The Fabric Peer chaincode supports a range of values for both Success and Failure. As such the Java Fabric SDK ChaincodeResponse should be an Integer value which supports the ranges instead of an enum. ",,,,,,,,,,,,,,,,,,,,,,,,02/May/17 1:14 PM;timpii;Chain.java;https://jira.hyperledger.org/secure/attachment/10693/Chain.java,02/May/17 1:14 PM;timpii;ChainCodeResponse.java;https://jira.hyperledger.org/secure/attachment/10694/ChainCodeResponse.java,,,,,,,0|i00xid:,,,,,,,,binhn,muralisr,rickr,timpii,,,,,,,,,,,,,,,,,"01/May/17 8:27 PM;jimthematrix;I agree, the chaincode response status code follows HTTP response code design, which can be a range of values. the shim provides Success() and Error() as convenient methods but the chaincode developer can easily use the Response proto to construct a custom status code.","02/May/17 1:16 PM;timpii;Attached 2 files - ChaincodeResponse.java and Chain.java with the temp fixes I am using to keep moving forward. It should be noted that while the code still compiles and supports the ranges of status codes, I did not update the test classes. I just don't compile them.","11/May/17 2:37 PM;rickr;This is not the response from the chaincode.  It's from Fabric – talking to Jim again on this having an abstraction ( the enum ) helps insulate the application from possible future changes

 ",11/May/17 3:36 PM;timpii;I do not understand the comment on the response code not being from the chaincode but from the Fabric. The issue with the enum is that the response codes are application specific within the ranges and thus do not lend themselves to the enum.,"11/May/17 4:36 PM;rickr;The only values that will be returned for this is 200 := success and 500 := failure 
The fabric Peer is the application",15/May/17 12:13 PM;rickr;The return being check there is from the endorsement which will be 200 or 500.  Nothing from the chaincode itself.,15/May/17 4:22 PM;timpii;Note that CR 9213 and CR 9253 are incorporating the range responses from the Peer. Once this is in place the SUCCESS responses will be 200-499 and the Failure responses 500+. Thus having user defined user chaincode response codes mapped within an enum is not going to work.,15/May/17 5:25 PM;muralisr;[~timpii] There are two responses. One from the chaincode (inner response) and another from the peer (outer response). Currently the outer returns 200 & 500 but this could become a proper range to drill into the type of error (and we can then have enums). The inner response should be preserved unmodified  (if the chaincode did execute).  CR 9213 and CR 9253 should make sure the above rules are met. Its up to the SDKs to use the actual responses appropriately. ,"17/May/17 6:56 PM;jimthematrix;the wrapper class will be enhanced to support the CC return code, under FAB-3930",01/Jun/17 1:22 PM;binhn;Done per [~jimthematrix] ref -FAB-3930-,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sdk node e2e tests are getting stuck while querying chaincode in updatechannel tests,FAB-3539,16136,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,rameshthoomu,rameshthoomu,01/May/17 1:50 PM,03/May/17 2:20 AM,26/Apr/18 6:50 AM,03/May/17 2:20 AM,,,,v1.0.0,,fabric-sdk-node,,,,,,0,build-system,node-SDK,,,,,,"node-sdk e2e tests are failing (FAB-3459) but tests are getting stuck while querying chaincode in update channel tests.

All end-2-end jobs are getting stuck in CI.  Below is the log for reference

https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-end-2-end-x86_64/2451/console",Jenkins CI,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00xhp:,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,,,,,"03/May/17 2:20 AM;rameshthoomu;Issue is resolved after fix https://gerrit.hyperledger.org/r/#/c/8823/ merged in fabric-sdk-node. Tested and verified node e2e tests are working as expected on above patch merge.

Closing this issue.. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger gets stuck at startup if chain size is big,FAB-3525,16122,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,yacovm,yacovm,30/Apr/17 12:30 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,10/May/17 5:22 PM,v1.0.0-alpha1,,,v1.0.0-alpha2,,fabric-ledger,fabric-peer,,,,,0,alpha2,Ledger,peer,,,,,"Using commit level: 
{quote}
commit 4e0f96ba689f1390ebb6839b519e47fa281cefbf
Author: manish <manish.sethi@gmail.com>
Date:   Thu Mar 30 12:30:24 2017 +0530

    create ledger with genesis block
{quote}

And a peer with a chain of size ~ 600K blocks (yes, it has been running for a long time)
The peer was restarted (due to a reboot).
After startup, the logs output the following lines almost indefinitely:


{quote}
ESC[36m2017-04-30 07:46:40.357 EDT [kvledger] retrieveBlockByNumber -> DEBU 874efESC[0m retrieveBlockByNumber() - blockNum = [596319]
ESC[36m2017-04-30 07:46:40.357 EDT [kvledger] newBlockfileStream -> DEBU 874f0ESC[0m newBlockfileStream(): filePath=[/var/hyperledger/production/ledgersData/chains/chains/YACOV2/blockfile_000030], startOffset=[58701678]
ESC[36m2017-04-30 07:46:40.357 EDT [kvledger] nextBlockBytesAndPlacementInfo -> DEBU 874f1ESC[0m Remaining bytes=[8405347], Going to peek [8] bytes
ESC[36m2017-04-30 07:46:40.365 EDT [kvledger] nextBlockBytesAndPlacementInfo -> DEBU 874f2ESC[0m Returning blockbytes - length=[3473], placementInfo={fileNum=[30], startOffset=[58701678], bytesOffset=[58701680]}
ESC[36m2017-04-30 07:46:40.365 EDT [kvledger] retrieveBlockByNumber -> DEBU 874f3ESC[0m retrieveBlockByNumber() - blockNum = [596318]
ESC[36m2017-04-30 07:46:40.365 EDT [kvledger] newBlockfileStream -> DEBU 874f4ESC[0m newBlockfileStream(): filePath=[/var/hyperledger/production/ledgersData/chains/chains/YACOV2/blockfile_000030], startOffset=[58698204]
ESC[36m2017-04-30 07:46:40.365 EDT [kvledger] nextBlockBytesAndPlacementInfo -> DEBU 874f5ESC[0m Remaining bytes=[8408821], Going to peek [8] bytes
ESC[36m2017-04-30 07:46:40.373 EDT [kvledger] nextBlockBytesAndPlacementInfo -> DEBU 874f6ESC[0m Returning blockbytes - length=[3472], placementInfo={fileNum=[30], startOffset=[58698204], bytesOffset=[58698206]}
ESC[36m2017-04-30 07:46:40.374 EDT [kvledger] retrieveBlockByNumber -> DEBU 874f7ESC[0m retrieveBlockByNumber() - blockNum = [596317]
{quote}

This is most likely because in peer.go the peer attempts to get the latest config block from the ledger by fetching the latest block and then going [backwards | https://github.com/hyperledger/fabric/blob/master/core/peer/peer.go#L149-L176] until the last config block is reached:


The stack trace of the peer is attached [here | https://gist.github.com/yacovm/f3f8f6f1a9596a0eff17efb7d9fbe8cb].

For those that want to reproduce the issue, I uploaded the content of */var/hyperledger/production* to a web server [here | http://fab-3525.stage1.mybluemix.net/peerLedger.tar.gz].

[~C0rWin] [~binhn] [~denyeart] [~mastersingh24] [~muralisr]


",,,,,,,,,,,,,,FAB-3040,,,,,,,,,,,,,,,,,,0|hzzz76:zzzs7,,Sprint 16  - Ledger,,,,,,C0rWin,denyeart,kchristidis,yacovm,,,,,,,,,,,,,master,,,true,"03/May/17 2:18 PM;denyeart;The block metadata contains the last config block location.  This can be used to directly navigate to the correct config block, rather than checking all the blocks.

[~kchristidis]
Jeff mentioned you were making some changes to this metadata.  He suggested we connect before any fix is done here, to ensure you work is merged first.  Please add details/links.  Thanks.","03/May/17 2:59 PM;kchristidis;[~jeffgarratt] is right.

My LAST_CONFIG fix was merged earlier today so you should be good to go: https://gerrit.hyperledger.org/r/#/c/8825/

Let me know if you bump into any issues.",10/May/17 12:24 PM;denyeart;https://gerrit.hyperledger.org/r/#/c/9185/,10/May/17 1:03 PM;yacovm;I applied this patch locally on the server I discovered the problem on and it fixed the problem (the peer started right away),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
msp keystore directory is not relative to the config file,FAB-3503,16100,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,smithbk,smithbk,smithbk,28/Apr/17 6:46 PM,12/May/17 4:55 PM,26/Apr/18 6:50 AM,29/Apr/17 11:33 AM,,,,v1.0.0,,fabric-ca,,,,,,0,MembershipServices,,,,,,,"The client keystore is put in the wrong location, which has the side effect that it breaks the reenroll command.  The problem is that it was not being made absolute relative to the config file.

To reproduce the problem:
1) fabric-ca-server start -b a:b
Switch to another terminal
2) fabric-ca-client enroll http://a:b@localhost:7054
3) fabric-ca-client reenroll
The final command fails saying that it is not enrolled.  This is because it can't find the msp and keystore directory.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00x9x:,,Sprint 16 - Membership Service,,,,,,smithbk,,,,,,,,,,,,,,,,master,,,true,28/Apr/17 6:53 PM;smithbk;http://gerrit.hyperledger.org/r/8735,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SDK crashes after current GRPC 1.3.0 release,FAB-3491,16088,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,chrisf,chrisf,28/Apr/17 11:27 AM,14/Aug/17 9:42 PM,26/Apr/18 6:50 AM,02/May/17 6:40 AM,,,,,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"Hi fabric-sdk-node Team!

Currently the SDK has a range value for the grpc npm modukle: ""grpc"": "">=1.1.2 <2.0.0"".
Yesterday a new version 1.3.0 of grpc was released and it seems to be incompatible with the fabric-sdk-node component.

The specific error is as follows:
Error: TypeError: identityProto.SerializedIdentity is not a constructor

This happens if I execute for example queryInfo().
The error seems to come from the file identity.js line 113:
var serializedIdentity = new identityProto.SerializedIdentity();
There the new grpc module doesn'r return a constrcutor.

I manually installed version 1.2.0 of grpc and there it is working.
",,,,,,,,,,,,,,,,,,,FAB-5775,,,,,,,,,,,,,0|i00x7p:,,,,,,,,chrisf,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Configx tool inadequately checks inputs,FAB-3447,16042,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,rickr,rickr,27/Apr/17 10:54 AM,31/May/17 1:58 PM,26/Apr/18 6:50 AM,12/May/17 1:14 PM,v1.0.0-alpha1,,,WON'T FIX,,fabric-orderer,,,,,,0,configuration,,,,,,,Give the configtx tool old yaml file without any consortiums and it will produce chanels and orderer blocks without any errors. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00wx9:,,,,,,,,jyellick,kchristidis,rickr,,,,,,,,,,,,,,,,,,"27/Apr/17 10:22 PM;kchristidis;Hi Rick, thanks for reporting this.

I am slightly skeptical about this, given that:
* https://github.com/hyperledger/fabric/blob/master/orderer/multichain/manager.go#L228 suggests that you cannot skip the consortium name when you send out a channel transaction, and
* https://github.com/hyperledger/fabric/blob/master/orderer/multichain/manager.go#L245 suggests that if you refer to a consortium that doesn't exist you will get an error.

Can you please upload the YAML file that you used along with a detailed listing of the minimum steps one needs to follow in order to reproduce this?

Thank you.","10/May/17 2:06 PM;jyellick;I would point out that indeed, it is perfectly valid to start the orderer without any consortiums defined.

But, as [~kchristidis] points out, channel creation should fail unless the appropriate consortium information is set.  In addition to the YAML file could you include the commit you are reproducing this at? There was a brief period of time where both the consortiums and the old channel model configuration were present, and this behavior could have been observed, but that behavior should no longer be present.","12/May/17 1:14 PM;kchristidis;Will close, as this hasn't been updated with the requested info for more than 2w now.

Feel free to re-open if details to reproduce are provided.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
e2e create channel error  from commit c5c60c3,FAB-3419,16013,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,roamerxv,roamerxv,26/Apr/17 4:10 AM,08/May/17 7:51 AM,26/Apr/18 6:50 AM,08/May/17 7:51 AM,v1.0.0,,,,,fabric-examples,,,,,,0,,,,,,,,"h4. Error At CentOS 7.2 
kernel : Linux fabric.alcor 3.10.0-514.16.1.el7.x86_64
docker: Docker version 17.04.0-ce, build 4845c56

Running the ""Getting Started"" e2e flow from commit c5c60c3 fails with:

cd $GOPATH/src/github.com/hyperledger/fabric/examples/e2e_cli
./network_setup.sh up mytestchannel

Creating network ""e2ecli_default"" with the default driver
Creating orderer0
Creating peer0
Creating peer1
Creating peer2
Creating peer3
Creating cli
Channel name : mytestchannel
2017-04-26 03:43:10.677 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2017-04-26 03:43:10.677 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
Error: Error connecting to orderer0:7050 due to grpc: timed out when dialing
Usage:
  peer channel create [flags]

Global Flags:
  -b, --blockpath string           Path to file containing genesis block
      --cafile string              Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
  -c, --chain string               In case of a newChain command, the chain ID to create.
  -f, --file string                Configuration transaction file generated by a tool such as configtxgen for submitting to orderer
      --logging-level string       Default logging level and overrides, see core.yaml for full syntax
  -o, --orderer string             Ordering service endpoint
      --test.coverprofile string   Done (default ""coverage.cov"")
      --tls                        Use TLS when communicating with the orderer endpoint
  -v, --version                    Display current version of fabric peer server

!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!
================== ERROR !!! FAILED to execute End-2-End Scenario ==================

h1. {color:red}But the e2e flow can run at Ubuntu 16.04 {color}","CentOS 7.2 
kernel : Linux fabric.alcor 3.10.0-514.16.1.el7.x86_64
docker: Docker version 17.04.0-ce, build 4845c56",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00wrh:,,,,,,,,roamerxv,,,,,,,,,,,,,,,,,,,,08/May/17 7:51 AM;roamerxv;fixed from 346b06 commit ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
User attributes are not populated when LDAP is enabled,FAB-3416,16010,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,smithbk,rennman,rennman,25/Apr/17 9:13 PM,09/Feb/18 4:50 PM,26/Apr/18 6:50 AM,05/Jan/18 5:59 PM,v1.0.0-alpha1,,,Future,,fabric-ca,,,,,,0,,,,,,,,"When ldap is enabled, there is currently no mechanism to populate the user's data (attributes, identity type, maxenrollments, etc.)

This cripples any functions that relies on this data.

--------------------------------------
NOTE: In order to uncripple this function, as mentioned in my last comment, we will support the following:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz6a:rhw9w,,,,,,,,Hangyu_FJH,leonlov,OBrezhniev,rennman,skarim,smithbk,,,,,,,,,,,master,,,true,"18/May/17 12:04 AM;smithbk;The bug appears to be that the lib/spi/userregistry.go API is polluted a bit.
I think the GetUserInfo function should be removed from the UserRegistry interface.
All places which currently use this call via this interface (lib/ca.go and lib/serverrevoke.go)
should use GetUser instead.
There is no need to support both and the GetUser API is the higher level abstraction that
we intended to be used.
Of course GetUserInfo can still be used in the DB implementation of UserRegistry, but it
should not be used outside of DB specific code.

Also note that maxenrollments is not supported for LDAP.  The reason is that in order to support this, we would either need to write to the LDAP registry to keep track of the current number of enrollments for the user, or we would need to keep parallel information in fabric-ca-server's DB for the users in LDAP.  I don't think either of these is desirable, so we choose for now to not support this for LDAP.   So maxenrollments is only something that is checked in the DB implementation of the UserRegistry.Login call, not in LDAP's implementation of this function.","18/May/17 12:11 AM;smithbk;For attributes, see [https://godoc.org/gopkg.in/ldap.v2#NewSearchRequest]

I pass the names of attributes and the response contains [https://godoc.org/gopkg.in/ldap.v2#EntryAttribute]  which are associated with the user.","25/May/17 4:51 PM;smithbk;I'm marking as v1.1 because there is currently no support for attributes in certificates in v1.

Also note that the code is already there for LDAP to retrieve attributes, but this JIRA item should be used to provide documentation and test cases. ","23/Jun/17 3:58 PM;rennman;It's slightly more complicated, I think. Although we do have a mechanism to retrieve attributes from the LDAP server (I believe ink the original test did include a retrieval of the user's email),  we have not yet defined a schema that would accommodate the fields that we actually use, e.g.
  hf.Registrar.Roles
  hf.Registrar.DelegateRoles
  hf.Revoker
  hf.IntermediateCA

We currently rely on the structural object class of inetOrgPerson, which doesn't contain these attributes. We would need to get registered OIDs from IANA, associate with the custom attributes, then create auxiliary object classes that would be added to the user entry.","13/Jul/17 11:31 AM;smithbk;I don't think we need to register OIDs with IANA.  We can simply provide an example.
That is, we can create an object class, say ""hfInetOrgPerson"" which extends ""inetOrgPerson"" and adds these attributes.   See http://www.yolinux.com/TUTORIALS/LinuxTutorialLDAP-DefineObjectsAndAttributes.html for an example of how to do this.","13/Jul/17 11:38 AM;smithbk;On 2nd thought, in order to allow existing LDAP repositories to be used without modification (i.e. without extending the schema), we should consider providing a way to map the ""hf.*"" attributes to other LDAP attributes.  I'll give this some thought.","13/Jul/17 5:44 PM;skarim;Proposing the following on how to tackle fabric-ca attributes with LDAP. With LDAP enabled the only attributes that come into play are hf.Revoker and hf.IntermediateCA. Attributes hf.Registrar.Roles and hf.Registrar.DelegateRoles only come into play during user registration and registration via fabric-ca is not supported with LDAP enabled.

To indicate if a user in the LDAP directory has one of these fabric-ca attributes, we will use the 'ou' LDAP attribute. In the LDAP configuration section of the fabric-ca server, two new configuration parameters will be added.  The configuration section may look like:

{code:none}
LDAP:
   hf.Revoker: revoker # OU name for identities with revocation privileges
   hf.IntermediateCA: intermediateCA # OU name for intermediate CA identities
{code}

With the configuration above, if a user in LDAP has an 'ou' of 'revoker' then they can revoke a specific certificate or revoke all the certificates of a specific user. But, they cannot revoke the user itself only all its associated certificates. Affiliation hierarchy is not going to be supported with LDAP, thus no affiliation check will be performed. The same approach will be taken for hf.IntermediateCA attribute. ","25/Aug/17 5:07 PM;smithbk;A single OU will not be sufficient.  OUs are arranged hierarchically, are order dependent, and need not be unique.
For example, the Admin OU is not unique below, and the order of OUs is significant.
{code}
C=US, O=Org1, OU=Finance, OU=Admin, CN=Alice
C=US, O=Org1, OU=Engineering, OU=Admin, CN=Bob
{code}

The following should work though:
{code}
LDAP:
   attributes:
      hf.Revoker: DN like 'C=US, O=Org1, OU=Finance, OU=Admin, CN=*'
{code}

So in this example, Alice is a revoker but Bob is not.
Obviously the ""DN like"" part depends on the expr framework, so unless someone is really pushing to get this, should wait until post v1.1.","06/Oct/17 7:05 PM;smithbk;https://gerrit.hyperledger.org/r/14275 [FAB-3416] Vendoring govaluate
https://gerrit.hyperledger.org/r/14279 [FAB-3416] Map LDAP attrs to fabric CA attrs","15/Nov/17 9:14 PM;rennman;[https://gerrit.hyperledger.org/r/#/c/15455/]  Enhance fvt image LDAP attributes

 

In order to exploit the new function, the fvt environment will be updated to include the following:
 # Enable the memberOf overlay for the slapd server
 # Create groups that infer access control and can be used to correlate with native fabric-ca server attributes:
|Attr|Group|
|hf.Revoker|cn=Revoker,ou=groups,dc=example,dc=com|
|hf.GenCrl|cn=Gencrl,ou=groups,dc=example,dc=com|
|hf.Revoker
 hf.GenCrl|cn=pkiAdmin,ou=groups,dc=example,dc=com|
|hf.IntermediateCa|cn=Ca,ou=groups,dc=example,dc=com|
 # Create groups that be used to correlate with user 'type' as defined by native fabric-ca server attribute hf.Type:
|Type|Group|
|peer|cn=Peer,ou=groups,dc=example,dc=com|
|client|cn=Client,ou=groups,dc=example,dc=com|
|user|cn=User,ou=groups,dc=example,dc=com|
|app|cn=App,ou=groups,dc=example,dc=com|
|auditor|cn=Auditor,ou=groups,dc=example,dc=com|
|validator|cn=Validator,ou=groups,dc=example,dc=com|
 # Create new organizational hierarchies that correspond to existing fabric-ca test artifacts and samples:
 ## ou=department1,ou=bank_a,dc=hyperledeger,dc=example,dc=com
 ## ou=department1,ou=bank_b,dc=hyperledeger,dc=example,dc=com
 ## ou=department1,ou=bank_c,dc=hyperledeger,dc=example,dc=com
 ## ou=department1,ou=org1,dc=hyperledeger,dc=example,dc=com
 ## ou=department2,ou=org1,dc=hyperledeger,dc=example,dc=com
 ## ou=department1,ou=org2,dc=hyperledeger,dc=example,dc=com
 ## ou=department2,ou=org2,dc=hyperledeger,dc=example,dc=com
 # Create new user groups with divergent affiliation paths:
 ## dn: ou=dev,ou=fabric,dc=hyperledeger,dc=example,dc=com
 ## dn: ou=users,ou=dev,ou=fabric,dc=hyperledeger,dc=example,dc=com
 ## dn: ou=peers,ou=dev,ou=fabric,dc=hyperledeger,dc=example,dc=com
 ## dn: ou=tst,ou=fabric,dc=hyperledeger,dc=example,dc=com
 ## dn: ou=users,ou=tst,ou=fabric,dc=hyperledeger,dc=example,dc=com
 ## dn: ou=peers,ou=tst,ou=fabric,dc=hyperledeger,dc=example,dc=com
 # Create new admins that have affiliation authority only with their domain scope:
 ## uid=devadmin,ou=dev,ou=fabric,dc=hyperledeger,dc=example,dc=com
 ## uid=tstadmin,ou=dev,ou=fabric,dc=hyperledeger,dc=example,dc=com
 # Create a new admin that hangs off of the LDAP root hierarchy and has implicit authority to all sub-nodes: uid=rootadmin,dc=example,dc=com
 # Create converters to map LDAP groups to fabric-ca attributes
{code:java}
    converters:
      - name: hf.GenCRL
        value: attr(""memberOf"") =~ ""cn=Gencrl,ou=groups,dc=example,dc=com"" || attr(""memberOf"") =~ ""cn=pkiAdmin,ou=groups,dc=example,dc=com""
      - name: hf.Revoker 
        value: attr(""memberOf"") =~ ""cn=Revoker,ou=groups,dc=example,dc=com"" || attr(""memberOf"") =~ ""cn=pkiAdmin,ou=groups,dc=example,dc=com""
      - name: hf.IntermediateCA
        value: attr(""memberOf"") =~ ""cn=Ca,ou=groups,dc=example,dc=com""
      - name: hf.Registrar.Roles
        value: map(attr(""memberOf""),""roles"")
    maps:
      ROLES:
         - name: cn=Client,ou=groups,dc=example,dc=com
           value: client
         - name: cn=User,ou=groups,dc=example,dc=com
           value: user
         - name: cn=Peer,ou=groups,dc=example,dc=com
           value: peer
         - name: cn=App,ou=groups,dc=example,dc=com
           value: app
         - name: cn=Auditor,ou=groups,dc=example,dc=com
           value: auditor
         - name: cn=Validator,ou=groups,dc=example,dc=com
           value: validator
         - name: cn=pkiAdmin,ou=groups,dc=example,dc=com
           value: pkiadmin
{code}
# Update the fvt ldap_test to check access control equivalent to
## hf.Revoker ( both + and - )
## hf.GenCrl  ( both + and - )
## proper affiliation path for revocation
# Fix a bug in lib/ldap/client.go that does not account for case sensitivity when calculating affiliation path from DN
# Fix a debug print bug in lib/serverrequestcontext.go
# scripts/fvt/intermediateca_test.sh is updated to use LDAP instead of the fabric-ca native registry in order to test hf.intermediateCa for LDAP identities",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fails to compile with IBM JDK in HFCAClient,FAB-3377,15970,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,suganuma,rickr,rickr,24/Apr/17 3:34 PM,26/Apr/17 4:43 PM,26/Apr/18 6:50 AM,26/Apr/17 4:43 PM,,,,v1.0.0,,fabric-sdk-java,,,,,,0,,,,,,,,"Failes to complie due to use of 
import sun.security.util.DerValue;
import sun.security.x509.AuthorityKeyIdentifierExtension;
import sun.security.x509.KeyIdentifier

Compile with IBM JDK to make sure it then compiles

Look into using bouncycastle to do this.


Then we need a test that enrolls a user or use an already enrolled user to revoke them and try to reenroll that user and see that it fails

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzck:l,,,,,,,,rickr,suganuma,,,,,,,,,,,,,,,master,,,true,"25/Apr/17 4:35 PM;suganuma;I removed the three import statements and instead used some bouncy castle library classes.
We can now compile the code successfully with IBM Java (I'm using the version 1.8.0 SR4 FP2)
However, when running the integration test, we get the following problem:

RUNNING: End2endIT.

Constructing chain foo
2017-04-26 01:13:55 ERROR CryptoPrimitives:170 - Unable to converts byte array to certificate. error : Unable to initialize, java.io.IOException: insufficient data
2017-04-26 01:13:55 ERROR Endpoint:100 - Error getting Subject CN from certificate. Try setting it specifically with hostnameOverride property. Unable to converts byte array to certificate. error : Unable to initialize, java.io.IOException: insufficient data
2017-04-26 01:13:57 WARN  MacAddressUtil:139 - Failed to find a usable hardware address from the network interfaces; using random bytes: 00:37:5c:06:8f:6b:c5:dd
2017-04-26 01:13:57 ERROR OrdererClient:129 - sendTransaction error Send transactions failed. Reason: UNAVAILABLE: Channel closed while performing protocol negotiation
org.hyperledger.fabric.sdk.exception.TransactionException: Send transactions failed. Reason: UNAVAILABLE: Channel closed while performing protocol negotiation
        at org.hyperledger.fabric.sdk.OrdererClient.sendTransaction(OrdererClient.java:128)
        at org.hyperledger.fabric.sdk.Orderer.sendTransaction(Orderer.java:127)
        at org.hyperledger.fabric.sdk.Chain.<init>(Chain.java:175)
        at org.hyperledger.fabric.sdk.Chain.createNewInstance(Chain.java:1098)
        at org.hyperledger.fabric.sdk.HFClient.newChain(HFClient.java:124)
        at org.hyperledger.fabric.sdkintegration.End2endIT.constructChain(End2endIT.java:474)
        at org.hyperledger.fabric.sdkintegration.End2endIT.setup(End2endIT.java:167)

The same code compiled with Open JDK runs fine.","25/Apr/17 5:20 PM;suganuma;If we disable TLS, the End2endIT test runs successfully even with IBM Java
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add support for all array type configuration options,FAB-3369,15962,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,skarim,skarim,skarim,24/Apr/17 1:05 PM,12/May/17 4:55 PM,26/Apr/18 6:50 AM,28/Apr/17 10:13 PM,v1.0.0,v1.0.0-alpha1,,v1.0.0,,fabric-ca,,,,,,0,,,,,,,,"All array type configuration options should be supported from configuration file. Currently, there certain types that cause an error if missing from configuration file. The following error is seen:

* 'DB.TLS.CertFiles': source data must be an array or slice, got string

Also adds check in the viperunmarshal function to only do assertion on slices that are present in the configuration file, otherwise nil related errors seen.

panic: interface conversion: interface {} is nil, not map[string]interface {} [recovered]
	panic: interface conversion: interface {} is nil, not map[string]interface {}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00wgt:,,Sprint 16 - Membership Service,,,,,,skarim,,,,,,,,,,,,,,,,master,,,true,24/Apr/17 1:27 PM;skarim;https://gerrit.hyperledger.org/r/#/c/8475/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer warning (v1.0-alpha),FAB-3366,15959,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,baohua,jsong1230,jsong1230,24/Apr/17 4:05 AM,12/May/17 2:01 AM,26/Apr/18 6:50 AM,12/May/17 2:01 AM,,,,,,,,,,,,0,,,,,,,,"I cannot guess what the problem is.

2017-04-24 12:00:46.758 KST [gossip/discovery#0.0.0.0:7051] resurrectMember -> INFO 05a Entering, AliveMessage: GossipMessage: tag:EMPTY alive_msg:<membership:<pki_id:""\212\324\352\260\352\264\212\210es\233\030\204\206\377\036\363\331Wz9'\224Nt\277\306\35238\276\334"" > timestamp:<inc_number:1493002837169531594 seq_num:7 > identity:""\n\004org1\022\244\006-----BEGIN -----\nMIICNjCCAd2gAwIBAgIUAwsjoiANzHWtEPPMRWjxRPur0LkwCgYIKoZIzj0EAwIw\naDELMAkGA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9saW5hMRQwEgYDVQQK\nEwtIeXBlcmxlZGdlcjEPMA0GA1UECxMGRmFicmljMRkwFwYDVQQDExBmYWJyaWMt\nY2Etc2VydmVyMB4XDTE3MDQyNDAyMDUwMFoXDTE4MDMyMzEwMDUwMFowWzELMAkG\nA1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9saW5hMRQwEgYDVQQKEwtIeXBl\ncmxlZGdlcjEPMA0GA1UECxMGRmFicmljMQwwCgYDVQQDEwNjcDMwWTATBgcqhkjO\nPQIBBggqhkjOPQMBBwNCAARsjfDTCrzo2AWAOdGgkR4BZEo5kjLrpVtV+MYRcZ/6\nHbC6J4pg1pgu5bZCVluP+rLhOLtOhEQZd14XOeVGj8mjo3IwcDAOBgNVHQ8BAf8E\nBAMCAgQwDAYDVR0TAQH/BAIwADAdBgNVHQ4EFgQUcNobAjkpOQ17iSiQQADEae9X\nkycwHwYDVR0jBBgwFoAU0/TMJmTLwIaYpv1FGeIWyp1qAx8wEAYDVR0RBAkwB4IF\nYWxvZTMwCgYIKoZIzj0EAwIDRwAwRAIgOrpN3xIJy69kVFF7+fjjvrsr1cHuvkRI\nfQvutS7kF6ICIE+pZTrhEJMRjZf8GWuJy9sR0X9hCHkh8RU7gYMYVNUW\n-----END -----\n"" > , Envelope: 871 bytes, Signature: 71 bytes Secret payload: 14 bytes, Secret Signature: 70 bytes t: {1493002837169531594 7}
2017-04-24 12:00:46.758 KST [gossip/discovery#0.0.0.0:7051] resurrectMember -> INFO 05b Exiting
2017-04-24 12:00:47.198 KST [gossip/comm#-1] createConnection -> WARN 05c Remote endpoint claims to be a different peer, expected [138 212 234 176 234 180 138 136 101 115 155 24 132 134 255 30 243 217 87 122 57 39 148 78 116 191 198 234 51 56 190 220] but got [208 108 204 135 115 65 130 36 117 241 199 27 148 181 225 3 35 124 153 51 232 17 221 33 162 146 222 78 226 232 22 117]
2017-04-24 12:00:47.199 KST [gossip/comm#-1] sendToEndpoint -> WARN 05d Failed obtaining connection for 0.0.0.0:7051, PKIid:[138 212 234 176 234 180 138 136 101 115 155 24 132 134 255 30 243 217 87 122 57 39 148 78 116 191 198 234 51 56 190 220] reason: Authentication failure
2017-04-24 12:00:47.199 KST [gossip/discovery#0.0.0.0:7051] expireDeadMembers -> WARN 05e Entering [[138 212 234 176 234 180 138 136 101 115 155 24 132 134 255 30 243 217 87 122 57 39 148 78 116 191 198 234 51 56 190 220]]
2017-04-24 12:00:47.199 KST [gossip/discovery#0.0.0.0:7051] expireDeadMembers -> WARN 05f Closing connection to Endpoint: , InternalEndpoint: 0.0.0.0:7051, PKI-ID: [138 212 234 176 234 180 138 136 101 115 155 24 132 134 255 30 243 217 87 122 57 39 148 78 116 191 198 234 51 56 190 220], Metadata: []
2017-04-24 12:00:47.199 KST [gossip/discovery#0.0.0.0:7051] expireDeadMembers -> WARN 060 Exiting",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00wgd:,,,,,,,,baohua,jsong1230,,,,,,,,,,,,,,,,,,,"12/May/17 2:01 AM;baohua;the alpha is a intermediate release, pls see master for latest code, thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Re-introduce usage of TLS-Unique in gossip handshake,FAB-3359,15952,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,yacovm,yacovm,yacovm,23/Apr/17 6:49 PM,05/Jun/17 9:56 PM,26/Apr/18 6:50 AM,05/Jun/17 9:56 PM,v1.0.0-alpha2,,,v1.0.0,,fabric-gossip,,,,,,5,gossip,Security,,,,,,"Long long ago, the gossip comm layer used TLS-Unique as a challenge to be signed during the communication layer handshake.
 At some point it was decided to use a [different TLS binding |https://github.com/hyperledger/fabric/commit/a9508542cf3125ef9aa2883b70e7c14140b152c1] that takes advantage of mutual TLS between peers.

After some time when TLS was introduced (however- without client authentication), it was decided to [add a configuration flag to disable checking |https://github.com/hyperledger/fabric/commit/cc03cac020eebfefa058adcf98f9c2cbb8f50d34] the TLS binding of the handshake in order to allow peers to communicate with no TLS.

The gossip layer uses the TLS binding in order to authenticate the identity of the peer on the other side of the connection.
 Using the configuration flag above *exposes the peer to impersonation attacks* on the one hand, but on the other hand- it's not possible to make peers communicate without this flag, until mutual TLS can be supported in the peer.

Since we are at the brink of the release and it doesn't seem like mutual TLS will be supported anytime soon, I suggest the following:
 * To bring back the use of TLS-Unique (it enables authenticating both sides of the connection) and include that too in the gossip [handshake message |https://github.com/hyperledger/fabric/blob/master/protos/gossip/message.proto#L155-L159]
 * To get rid of the [skipHandshake flag |https://github.com/hyperledger/fabric/blob/master/sampleconfig/core.yaml#L138] and instead have the runtime decide which binding to use according to what's available:
 ** If TLS is detected, and the client-side peer sent its certificate, use both the signature over the TLS-Unique and the the signature over the remote peer's certificate's hash (that's what is used now) to authenticate the remote peer.
 ** If TLS is detected, and the client side peer hasn't sent it's certificate, use only TLS-Unique to authenticate the remote peer.
 ** If TLS isn't detected, do what is done now

Time-wise I don't think it's a big of a change because we already have unit tests that test the current flow, and we even have the old code (from git) that extracts the TLS-Unique. 
 All that is needed to test such a change is just adjust the [existing unit test |https://github.com/hyperledger/fabric/blob/master/gossip/comm/comm_test.go#L204-L258].

Also- our current e2e test uses TLS without mutual authentication, so if it passes we know that the change didn't hurt the existing situation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3040,0|i00wet:,,Sprint 16 - Gossip,,,,,,binhn,C0rWin,ChristopherFerris,Clayton Sims,elli-androulaki,mastersingh24,troyronda,weeds,yacovm,,,,,,,,master,,,true,23/Apr/17 6:51 PM;yacovm;[~C0rWin] [~mastersingh24] [~binhn] and also [~ellaki] and [~adc] and [~ales] Please weigh in,"24/Apr/17 9:29 AM;mastersingh24;this makes sense - I was also thinking that we might possible be able to try out using mutual TLS by making in optional but having the peer(s) use their MSP signing cert as their client certificate.  But I think that looking to add the TLS-Unique back might make sense.

Let's get through merging any new features and suggest we schedule a review of critical issues later in the week","24/Apr/17 10:01 AM;elli-androulaki;Makes sense to me too. New version of TLS is to fix the issue with TLS-Unique (essentially being so short), so ideally we would finally move entirely to the TLS-Unique binding :)",24/Apr/17 11:11 AM;yacovm;I'd say that ideally we use both since this only happens once per connection attempt so there is no waste of resources if we sign 2 challenges instead of 1,"08/May/17 1:24 PM;binhn;If we use TLS binding, would it work with TLS-terminating proxy (fronting peers)?","08/May/17 8:49 PM;mastersingh24;Terminating proxies always present some type of problem when trying to do any type of mutual authentication end to end.

We'd have to do a little extra work, but it's possible to support both cases (depending on the proxy).  It's definitely easier to support mutual TLS because most proxies have the ability to use a standard HTTP header to pass the client certificate through to the actual backend node (which in our case is of course the peer).  I know you can extract tls-unique in haproxy but not sure about others.

My preference would be of course to use tls-unique but I fear that it *might* be hard to support proxies.  Of course there are only a few (well at least one - nghttpx) proxies which actually support acting as a reverse proxy for HTTP/2 in any case","08/May/17 10:42 PM;mastersingh24;OK - I vote for 

 
 * If TLS is enabled, request but not not require client certificates.  If the peer sends a client certificate, authenticate them at the gossip layer
 * If TLS is detected, and the client side peer hasn't sent it's certificate, reject them at the gossip layer
 * If TLS isn't detected, do what is done now
 * To support proxies, we'll look to use the common practice of having the proxy extract the client certificate and forward via an HTTP header  (this will require that the proxy authenticate with a client certificate though).
 * Test with at least one HTTP/2 reverse proxy (nghttpx is the only one I've seen to date which works with gRPC)

 ",09/May/17 1:06 PM;yacovm;https://gerrit.hyperledger.org/r/#/c/9119/,"30/May/17 2:23 PM;ChristopherFerris;This CR has languished but does need to be addressed before 1.0. What it needs is careful scrutiny because of the production code changes. I doubt anyone would say that the fix should not be made. However, let's get some eyeballs on the CR please.","30/May/17 2:35 PM;yacovm;I'm waiting for [~mastersingh24]'s gRPC change set to be merged, no point in resolving the merge conflict before that.",31/May/17 5:26 PM;ChristopherFerris;[~yacovm] it's been merged...,"31/May/17 6:26 PM;yacovm;So it seems.

 I will need to change the code of the change set and test it all over again, it's not so simple as resolving a merge conflict.",05/Jun/17 1:40 PM;ChristopherFerris;This now has the requisite votes to proceed and the CR may be merged when ready.,05/Jun/17 1:44 PM;yacovm;I am testing. will comment when ready.,05/Jun/17 5:47 PM;weeds;Yacov- can you add the CR number please?  Thanks!,"05/Jun/17 5:49 PM;Clayton Sims;[https://gerrit.hyperledger.org/r/#/c/9119/]

 ","05/Jun/17 7:29 PM;yacovm;OK I verified that the TLS change set works for gossip by deploying it on a few peers and:
* Seeing that they chat with one another
* Invoking *nmap --script ssl-enum-ciphers -p 7051* to ensure they indeed use TLS ",,,,,,,,,,,,,,,,,,,,,,,,,
fabric-ca fvt tests need make target to build in docker,FAB-3357,15950,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rennman,ChristopherFerris,ChristopherFerris,23/Apr/17 4:48 PM,25/Apr/17 4:48 PM,26/Apr/18 6:50 AM,25/Apr/17 4:48 PM,v1.0.0,v1.0.0-alpha1,,v1.0.0,,fabric-ca,,,,,,0,build-system,quality,,,,,,"fabric-ca fvt tests need make target to build in docker

The README.md in scripts/fvt seems either dated or was never merged. There is no make target for docker-fvt. As a developer or maintainer, I should be able to simply run the tests without any secret handshaking necessary. Anyone randomly pulling the source should be able to build and run all tests from the Makefile.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00wed:,,,,,,,,ChristopherFerris,rennman,,,,,,,,,,,,,,,,,,,23/Apr/17 4:50 PM;ChristopherFerris;[~bmos299] [~smithbk] I would like this addressed please,"24/Apr/17 6:28 PM;rennman;Ok, I don't understand this requirement, since the docker-fvt target was added to the Makefile in commit d10fd42 on Apr 5, and it there now on master.","24/Apr/17 6:42 PM;rennman;fyi,  https://gerrit.hyperledger.org/r/#/c/8485/ fixes all of the the remaining CI issues and is net < 50 LOC",24/Apr/17 7:20 PM;rennman;Considered done when 8485 is merged.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Issue with starting chaincode - after deploy,FAB-3346,15939,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,Amjadnz,Amjadnz,23/Apr/17 6:20 AM,29/Apr/17 9:21 AM,26/Apr/18 6:50 AM,29/Apr/17 9:21 AM,,,,v1.0.0,,fabric-baseimage,fabric-chaintool,fabric-devenv,fabric-samples,,,0,,,,,,,,"{code:java}
2017-04-22 11:37:07.177 UTC [msp] Sign -> DEBU 006 Sign: plaintext: 0A8B050A5508032205616A3030352A40...304D53500A04657363630A0476736363 
2017-04-22 11:37:07.177 UTC [msp] Sign -> DEBU 007 Sign: digest: C0955F453C7309BFB4096941118E7F28B3901A655C2E08C6365D36027EF3388B 
Error: Error endorsing chaincode: rpc error: code = 2 desc = Timeout expired while starting chaincode aj005:1.0(networkid:dev,peerid:peer0,tx:3edd80708ea8ed61285933575b094356a743d142c6431ef8445f9120d932d136)
{code}

Following the steps as mentioned in the getting started guide:
# Step 1: Create new channel with TX and BLOCK files (as per the getting started on fabric site)
# Step 2: Create a new channel at the start up by pasing the channel name
	CHANNEL_NAME=aj005 docker-compose -f ./docker-compose.yaml up -d
# Step 3: Create a new network of peers using docker-compose.yaml
##*	this creates 4 Peers Peer 0, Peer 1 for (ORG0) and Peer 2 and Peer 3 (for ORG1)
##*	1 Orderer
##*	4 Couch DB State DBs
##*	1 Fabric CA
##*	1 Cli
# Step 4: All start up fine and I login to CLI (as per the fabric site)
# Step 5: Create channels again within CLI (by passing peer0 to peer3) - All looks fine.
# Step 6: Join the channels - all is fine here too (no errors)
# Step 7: Deploy the chaincode - all fine here too (no errors)
# Step 8: Initialize the chain code - here is where the things breaks and cannot get hte container up and running.

My ""docker images"" output:

{code:java}
REPOSITORY                     TAG                  IMAGE ID            CREATED             SIZE
dev-peer0-aj005-1.0            latest               ca2bae4d3179        3 hours ago         176 MB
dev-peer0-aj004-1.0            latest               e6773217c7e4        4 hours ago         176 MB
dev-peer0-aj002-1.0            latest               f3e828838f17        2 days ago          176 MB
{code}

So my chaincode is getting deployed by not getting initiated.

Command used to initiate:
{code:java}
CORE_PEER_ADDRESS=peer0:7051 peer chaincode instantiate -o orderer0:7050 --tls false --cafile $GOPATH/src/github.com/hyperledger/fabric/peer/crypto/orderer/localMspConfig/cacerts/ordererOrg0.pem -C aj005 -n aj005 -v 1.0 -p tts/sc/user05 -c '{""Args"":[""init""]}' -P ""OR ('Org0MSP.member','Org1MSP.member')""
{code}

Now tried with the script as well that is shipped with the getting started pack.
{code:java}
2017-04-23 10:36:00.203 UTC [logging] InitFromViper -> DEBU 001 Setting default logging level to DEBUG for command 'chaincode'
2017-04-23 10:36:00.213 UTC [msp] GetLocalMSP -> DEBU 002 Returning existing local MSP
2017-04-23 10:36:00.213 UTC [msp] GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity
2017-04-23 10:36:00.213 UTC [golang-platform] collectChaincodeFiles -> DEBU 004 not using input for hash computation for path:""tts/sc/user05"" name:""aj009"" version:""1.0""  
2017-04-23 10:36:00.213 UTC [golang-platform] getCodeFromFS -> DEBU 005 getCodeFromFS tts/sc/user05
2017-04-23 10:36:00.213 UTC [util] HashFilesInDir -> DEBU 006 hashFiles /opt/gopath/src/tts/sc/user05
2017-04-23 10:36:00.214 UTC [golang-platform] writeGopathSrc -> INFO 007 rootDirectory = /opt/gopath/src
2017-04-23 10:36:00.214 UTC [container] WriteFolderToTarPackage -> INFO 008 rootDirectory = /opt/gopath/src
2017-04-23 10:36:00.216 UTC [msp] Sign -> DEBU 009 Sign: plaintext: 0A84050A4E08032A4062316462333934...C13EFF370000FFFF7AA0F75500800000 
2017-04-23 10:36:00.216 UTC [msp] Sign -> DEBU 00a Sign: digest: 710BB9E967C398DA73EC3110D3BA6D450085E2B34DF714E45F05DCCCA918AD5E 
2017-04-23 10:36:00.218 UTC [chaincodeCmd] install -> DEBU 00b Installed remotely %v response:<status:200 payload:""OK"" > 
2017-04-23 10:36:00.219 UTC [main] main -> INFO 00c Exiting.....
===================== Chaincode is installed on remote peer PEER2 ===================== 

Instantiating chaincode on Peer2/Org1 ...
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peer/peer2/localMspConfig/cacerts/peerOrg1.pem
CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peer/peer0/localMspConfig/keystore/peer0Signer.pem
CORE_PEER_LOCALMSPID=Org1MSP
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peer/peer0/localMspConfig/signcerts/peer0Signer.pem
CORE_PEER_ADDRESSAUTODETECT=true
CORE_PEER_TLS_ENABLED=true
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peer/peer2/localMspConfig
CORE_PEER_ID=cli
CORE_LOGGING_LEVEL=DEBUG
CORE_PEER_ADDRESS=peer2:7051
CORE_PEER_ENDORSER_ENABLED=true
CORE_NEXT=true
2017-04-23 10:36:00.252 UTC [logging] InitFromViper -> DEBU 001 Setting default logging level to DEBUG for command 'chaincode'
2017-04-23 10:36:00.260 UTC [msp] GetLocalMSP -> DEBU 002 Returning existing local MSP
2017-04-23 10:36:00.260 UTC [msp] GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity
2017-04-23 10:36:00.271 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default escc
2017-04-23 10:36:00.272 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 005 Using default vscc
2017-04-23 10:36:00.283 UTC [msp] Sign -> DEBU 006 Sign: plaintext: 0A8B050A5508032205616A3030392A40...314D53500A04657363630A0476736363 
2017-04-23 10:36:00.283 UTC [msp] Sign -> DEBU 007 Sign: digest: 12D9BBC2DB04066A53374514335FB92E745BFFA06B7DCFD205E18295AC5D6497 
Error: Error endorsing chaincode: rpc error: code = 2 desc = Timeout expired while starting chaincode aj009:1.0(networkid:dev,peerid:peer2,tx:3b8b586fe5477d248920c41530a0d4826921a698c763fd1a8fe198a0a188570d)
Usage:
  peer chaincode instantiate [flags]

Global Flags:
      --cafile string              Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
  -C, --chainID string             The chain on which this command should be executed (default ""testchainid"")
  -c, --ctor string                Constructor message for the chaincode in JSON format (default ""{}"")
  -E, --escc string                The name of the endorsement system chaincode to be used for this chaincode
  -l, --lang string                Language the chaincode is written in (default ""golang"")
      --logging-level string       Default logging level and overrides, see core.yaml for full syntax
  -n, --name string                Name of the chaincode
  -o, --orderer string             Ordering service endpoint
  -p, --path string                Path to chaincode
  -P, --policy string              The endorsement policy associated to this chaincode
      --test.coverprofile string   Done (default ""coverage.cov"")
  -t, --tid string                 Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64
      --tls                        Use TLS when communicating with the orderer endpoint
  -u, --username string            Username for chaincode operations when security is enabled
  -v, --version string             Version of the chaincode specified in install/instantiate/upgrade commands
  -V, --vscc string                The name of the verification system chaincode to be used for this chaincode

!!!!!!!!!!!!!!! Chaincode instantiation on PEER2 on channel 'aj009' failed !!!!!!!!!!!!!!!!
================== ERROR !!! FAILED to execute End-2-End Scenario ==================
{code}","Mac Pro OSX 10.11.6 running Virtual Host (FEDORA LINUX 13)
VM Fedora Version: Fedora release 25 (Twenty Five)
Hyper-ledger Fabric : 1.0.0 - Alpha
Samples : Downloaded latest form the ""getting started guide""
Go : 1.7
Docker compose version:
-------------------------
docker-compose version 1.8.0, build 94f7016
docker-py version: 1.10.6
CPython version: 2.7.13
OpenSSL version: OpenSSL 1.0.2j-fips  26 Sep 2016
--------------------------

Docker Version:
---------------------------------------
Client:
 Version:      1.13.0
 API version:  1.25
 Go version:   go1.7.3
 Git commit:   49bf474
 Built:        Tue Jan 17 09:58:06 2017
 OS/Arch:      linux/amd64

Server:
 Version:      1.13.0
 API version:  1.25 (minimum version 1.12)
 Go version:   go1.7.3
 Git commit:   49bf474
 Built:        Tue Jan 17 09:58:06 2017
 OS/Arch:      linux/amd64
 Experimental: false
---------------------------------------
User: Running everything as root
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00wcd:,,,,,,,,Amjadnz,,,,,,,,,,,,,,,,,,,,"29/Apr/17 9:20 AM;Amjadnz;This item is now resolved - the resolution is as follows

1. Created the new go chaincode under the src folder
2. The same folder is mapped to the containers hyperledger src folder
3. Ran the the docker compose (after configTXGen) and manually generated the .block an tx files
4. Containers started up fine now issues
5. Deploy and Inititalization happens with no issues
6. Could do all CRUD activity and all the transactions get replicated with other nodes as well

The key was paths not set properly. if I use the e2e_client folder - all went fine.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vagrant fails to launch on Windows using vagrant 1.9.3 (the latest),FAB-3342,15934,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,lehors,lehors,lehors,22/Apr/17 1:58 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,22/Apr/17 6:16 PM,,,,v1.0.0,,fabric-devenv,,,,,,0,,,,,,,,"Unfortunately the latest release of vagrant on Windows has a bug that prevents the environment to successfully launch:

$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Checking if box 'hyperledger/fabric-baseimage' is up to date...
==> default: Clearing any previously set forwarded ports...
C:/HashiCorp/Vagrant/embedded/gems/gems/vagrant-1.9.3/lib/vagrant/util/is_port_open.rb:21:in `initialize': The requested address is not valid in its context. - connect(2) for ""0.0.0.0"" port 7050 (Errno::EADDRNOTAVAIL)
from C:/HashiCorp/Vagrant/embedded/gems/gems/vagrant-1.9.3/lib/vagrant/util/is_port_open.rb:21:in `new'
...

This is a known bug with a workaround, see [http://stackoverflow.com/questions/43032321/hyperledger-fabric-end-to-end-flow-vagrant-up-in-devenv-fails]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00wb9:,,,,,,,,lehors,mastersingh24,,,,,,,,,,,,,,,master,,,true,22/Apr/17 6:16 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/8025/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
check version of chaincode against version in LSCC,FAB-3330,15922,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jiangyaoguo,muralisr,muralisr,21/Apr/17 11:44 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,03/May/17 1:12 AM,,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,,"this is the complement of fab-3329 where the version in the proposal response is checked against the version the LSCC.

So this guards against the following scenario

The following transactions are issued to the endorsers
* TX1, ....TX15 on chaincode CC:v0/mychannel
* TXUpgrade to CC:v1/mychannel

The following blocks are validated on the committers
* TX1-TX8 and TXUpgrade in Block-11 , TX1-TX8 get rejected and TXUpgrade gets committed 
* TX9-TX15 in Block-12 get validated
** TX9-TX12 use the KV pairs that were touched by the Init method of TXUpgrade and will get invalidated by ledger validation
** TX13-TX15 do not use KV pairs touched by TXUpgrade and would pass ledger validation

By checking for Chaincode Version set by the endorser in the Proposal response (FAB-3329) , TX13-TX15 will be invalidated. Note that TX9-TX12 will also get invalidated by this same method which is a good thing (consistency and early weed-out of invalid TXs).

",,,,,,,,,,,,,,FAB-198,,,,,,,,,,,,,,,,,,0|i00w8l:,,,,,,,,binhn,Clayton Sims,muralisr,,,,,,,,,,,,,,master,,,true,"24/Apr/17 3:10 PM;Clayton Sims;Sprint 16 should be our final sprint.   We want to feature freeze.    I see you just created (2 days ago)  this Jira and it references 3329 (also create 2 days ago).    Can we defer these.   If you think these can;t be deferred please talk to [~binhn] or [~mastersingh24]. 

Maintainers are now cross referencing CRs to Jira items. ",24/Apr/17 4:29 PM;binhn;I would consider this as a bug because the current implementation of cc upgrade doesn't work in the scenario you described.,25/Apr/17 5:18 AM;muralisr;[~Clayton Sims] [~binhn] this is a task for fixing part of bug FAB-198 (blocks it) which in turn is needed for FAB-183. So treating this as a bug is fine.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB in docker occasionally doesn't respond for 30s,FAB-3318,15910,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,chris.elder,denyeart,denyeart,21/Apr/17 8:12 PM,19/Aug/17 3:52 PM,26/Apr/18 6:50 AM,23/May/17 6:54 PM,,,,v1.0.0,,fabric-ledger,,,,,,0,,,,,,,,"Occasionally CouchDB doesn't respond for (exactly) 30s.  This work item will investigate root cause of the 30s delay with CouchDB.  

For details see the bug opened in CouchDB jira:
https://issues.apache.org/jira/browse/COUCHDB-3409",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz76:zzzrkw,,Sprint 16  - Ledger,,,,,,chris.elder,denyeart,,,,,,,,,,,,,,,,,,,23/May/17 6:54 PM;chris.elder;Root cause for the delay is CouchDB is the docker image installed inside Vagrant.  The delays do not occur with CouchDB installed in docker outside of Vagrant.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB occasionally doesn't respond for 30s - update peer timeout,FAB-3317,15909,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,denyeart,denyeart,21/Apr/17 8:10 PM,19/Aug/17 3:52 PM,26/Apr/18 6:50 AM,22/Apr/17 12:20 AM,,,,,,fabric-ledger,,,,,,0,,,,,,,,"CouchDB occasionally doesn't respond for 30s - update peer timeout.

Occasionally CouchDB doesn't respond for (exactly) 30s.  This is most often seen in create database calls which happens frequently during unit tests. 

The default peer behavior is to retry couch after 20s, and therefore these occurrences disrupt unit tests and causes them to fail occasionally.

This change will set the peer CouchDB timeout to 35s for now, in order to avoid the retries in the peer avoid the unit test problems.

The root cause of the 30s delay is being worked with CouchDB team in FAB-3318.

",,,,,,,,,,,,,,,,,,,FAB-3318,,,,,,,,,,,,,0|hzzz76:zzzrks,,Sprint 16  - Ledger,,,,,,denyeart,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
An identity can correspond to two valid identity identifiers as returns with existing Identity.getIdentifier method,FAB-3315,15907,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,angelo.decaro,elli-androulaki,elli-androulaki,21/Apr/17 7:06 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,09/May/17 1:38 PM,,,,v1.0.0,,fabric-crypto,fabric-gossip,,,,,0,,,,,,,,"Identity.getIdentifier for the default MSP returns the HASH of the x509 certificate representing the identity.

ECDSA signature malleability allows for two valid representations of a signature.

Notice that though we have fixed related issues in ECDSA signatures with BCCSP , certificate validation leverages X.509 golang library that does not consider the same fix.

Given this a certificate who has a valid ECDSA signature under a root CA, can have two valid identities. We want to eliminate valid identity identifiers to one.

Solution:
We convert the signature of the certificate to a specific one of the two available valid signature representations, and hash the certificate with that signature representation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzbt:l0hy,,,,,,,,angelo.decaro,elli-androulaki,mastersingh24,yacovm,,,,,,,,,,,,,master,,,true,02/May/17 10:52 PM;yacovm;What about just using the To-Be-Signed (RawTBSCertificate) certificate field instead of the cert.Raw field? Would that work?,06/May/17 11:31 AM;mastersingh24;I honestly don't know why we need this nor should care about this at this point?  ,"08/May/17 7:39 AM;angelo.decaro;[~mastersingh24], let's consider a policy that can be satisfied by any two members of Org1. Then a malicious member of Org1 can manipulate his certificate by changing its ECDSA signature. Notice that the new certificate is still valid. The new certificate and the old one have different representation and therefore will be considered as coming from different entities. This should be avoided in a way or in another. Wdyt?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JoinChannel failing in End2End test at the current master (e4074cee2e30e89b7b1d8514b125b2d3ce859577),FAB-3292,15884,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,angelo.decaro,angelo.decaro,angelo.decaro,21/Apr/17 7:52 AM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,23/Apr/17 12:49 PM,,,,,,fabric-crypto,,,,,,0,security,,,,,,,"The e2e example is failing in the current master because who signs the JoinChannel is not recognized as administrator of the peer.

A fix for this is by setting the peer's identity as its own administrator. This is done by copying
the peer's certificate into the admincerts folder.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00w2l:,,,,,,,,angelo.decaro,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error in docker-compose 1.12.0 ,FAB-3256,15848,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,david_dornseifer,david_dornseifer,david_dornseifer,19/Apr/17 4:40 PM,11/May/17 9:23 PM,26/Apr/18 6:50 AM,11/May/17 9:23 PM,,,,,,fabric-sdk-py,,,,,,0,SDK-Python,,,,,,,"Running `make check` breaks right now when the testing dependency
`docker-compose` is installed in the version 1.12.0 (see the following
GitHub issue: https://github.com/docker/compose/issues/4729).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00vv1:,,,,,,,,baohua,david_dornseifer,,,,,,,,,,,,,,,,,,,20/Apr/17 1:14 AM;baohua;patchset posted to https://gerrit.hyperledger.org/r/#/c/8177/,"20/Apr/17 2:41 AM;baohua;I tested at ubuntu 16.04, and it works?

docker-compose version 1.12.0, build b31ff33","20/Apr/17 6:17 PM;david_dornseifer;Tested it with different versions on macOS 10.12.4. It breaks with Python3.5.0 - see error bellow / py3.5.1, 3.5.2, 3.5.3 is working

E               subprocess.CalledProcessError: Command '['docker-compose', '-f', '/Users/david/Dev/hyperledger/fabric-sdk-py-gerrit/test/fixtures/ca/docker-compose.yml', 'up', '-d']' returned non-zero exit status 1

test/unit/util.py:40: CalledProcessError
-------------------------------------------------------------------------- Captured stdout call --------------------------------------------------------------------------
Error Message:
b'Creating fabric-ca\n\nERROR: for ca  Cannot create container for service ca: b\'invalid port specification: ""None""\'\nEncountered errors while bringing up the project.\n'
================================================================== 2 failed, 21 passed in 18.25 seconds ==================================================================
ERROR: InvocationError: '/Users/david/Dev/hyperledger/fabric-sdk-py-gerrit/.tox/py35/bin/py.test --cov=hfc test'
________________________________________________________________________________ summary _________________________________________________________________________________
ERROR:   py35: commands failed
make[1]: *** [py35] Error 1
make: *** [check] Error 2
","21/Apr/17 1:38 AM;baohua;Thanks, david!

Can we confirm the reason is the docker-compose lib now?

Thanks!
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger txmgr commontests are not running,FAB-3249,15841,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,denyeart,denyeart,19/Apr/17 3:08 PM,25/Apr/17 6:02 PM,26/Apr/18 6:50 AM,23/Apr/17 12:36 PM,,,,v1.0.0,,fabric-ledger,,,,,,0,,,,,,,,"These tests are no longer running:
/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/commontests$ go test ./... -v

Need to Run() the tests from TestMain().",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz76:zzzrl,,Sprint 16  - Ledger,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,"21/Apr/17 8:51 PM;ChristopherFerris;[~denyeart] this seems fixed, but I cannot find the CR that did that.",23/Apr/17 12:37 PM;ChristopherFerris;[~denyeart] NVM found it - please add FAB-nnnn in commit title thanks,23/Apr/17 12:37 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/#/c/8321/,"23/Apr/17 2:43 PM;denyeart;Actually it was fixed by FAB-2897:
https://gerrit.hyperledger.org/r/#/c/7605/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
MSP setup with rootCA CRLs including one of the MSP intermediate CAs should return an error,FAB-3240,15832,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,angelo.decaro,elli-androulaki,elli-androulaki,19/Apr/17 9:43 AM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,11/May/17 5:04 PM,,,,v1.0.0-alpha2,,fabric-crypto,,,,,,0,,,,,,,,"Currently setting up an MSP with a root CA, a bunch of intermediate CAs, and a CRL through which rootCA is blacklisting one of the listed intermediate CAs is not outputing an error of malformed MSP configuration. We should address this.",,,,,,,,,,,,,,FAB-3040,,,,,,,,,,,,,,,,,,0|hzzzbt:l0d,,,,,,,,binhn,elli-androulaki,,,,,,,,,,,,,,,master,,,true,11/May/17 5:00 PM;binhn;https://gerrit.hyperledger.org/r/#/c/9221/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot link to pkcs11 library with -static builds,FAB-3196,15783,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,vpaprots,vpaprots,vpaprots,17/Apr/17 8:45 AM,11/Sep/17 3:40 PM,26/Apr/18 6:50 AM,08/May/17 4:22 PM,v1.0.0-alpha1,,,v1.0.0,,fabric-build,,,,,,0,,,,,,,,"It should be possible (nss does it, thanks [~ghaskins] for taking me through)

However, something about the build causes glibc not to initialize the lock needed at dlopen() time causing a crash.
<TODO: more info, backtraces, links.. spent two days here>

Gave up to make progress elsewhere, need to come back and resolve. As a workaround in my sandbox, https://gerrit.hyperledger.org/r/#/c/7927/9/docker-env.mk however, I also needed to install libtool in baseos, which wont work..

For [~greg.haskins] and [~mastersingh24] attention and help!

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00vhp:,,,,,,,,divyank,vpaprots,,,,,,,,,,,,,,,,,,,"20/Apr/17 4:19 PM;vpaprots;Sent to hyperledger-fabric@lists.hyperledger.org

-----------

I have been trying to get PKCS11 support into fabric so that our crypto operations can be backed up by a crypto card. Over the last several days I ran into issues with builds, so I had a lengthy chat with Greg Haskins for what it means to support PKCS11. (At lowest level, PKCS11 is set of headers/function definitions that a DLL/SO is built to be made pluggable)

Our current status:
(0) FROM: ubuntu:16.04 + static peer

As much as I try, I cannot get static peer to link with PKCS11 library (crash in glibc). Also, as Greg points out, one pkcs11 dll that works on one release, might not work on another

Alternatives:
(1) FROM: scratch + static peer
(2) FROM: ubuntu:16.04 + dynamic peer
(3) build fabric for various distros

The good and the bad:
1) [FROM: scratch + static peer] No HSM support. As a docker distribution, this is probably the most portable. This executable can be copied out, distro-independent, and the smallest footprint.

2) [FROM: ubuntu:16.04 + dynamic peer] (Some) HSM support. Card vendors must support Ubuntu (i.e. provide deb packages, etc.). Changing base OS or even updating base OS release now becomes something that could break customers.

3) [build fabric for various distros] (Best) HSM support. Customer chose their supported distro. Install their pkcs11 hsm.so (`yum install hsm`, `apt-get install hsm`, etc.), install fabric (`yum install fabric-peer`, `apt-get install fabric-peer`, etc.) and compose their (arbitrary) container as they like. However, this explodes the support configuration requirements.

----

Two questions:
- For v1.0, I would propose (0)->(2). This gets us HSM, but at the price of static builds. (This is https://jira.hyperledger.org/browse/FAB-3196 Has two gerrit patches associated)
- For v1.x, we need to reconsider our distribution strategy. There is value in scratch builds. Is locking down to Ubuntu (2) ok? Should we be heading to distro repos?

Greg, is that about what we discussed? What are the thoughts of other maintainers and the community?",08/May/17 4:22 PM;vpaprots;Won't fix. Staying at option (0). Closing.,11/Sep/17 3:40 PM;divyank;[~vpaprots] How was this resolved? Were you able to statically link the libraries that PKCS11 requires?,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Outdated documents should be removed,FAB-3173,15760,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,ChristopherFerris,binhn,binhn,15/Apr/17 3:01 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,21/Apr/17 2:52 PM,,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,,"We have a number of outdated documents that are still linked to by the online readthedoc.io or in the repo that we should update and remove:

# https://github.com/hyperledger/fabric/blob/master/docs/source/tech/attributes.rst
# https://github.com/hyperledger/fabric/blob/master/docs/source/tech/application-ACL.rst
# https://github.com/hyperledger/fabric/blob/master/docs/source/protocol-spec.rst
# https://github.com/hyperledger/fabric/blob/master/docs/source/protocol-spec_zh.rst
# https://github.com/hyperledger/fabric/blob/master/docs/source/SystemChaincode-noop.rst

[~ellaki] [~adecaro] [~marko.vukolic] [~muralisr] [~nickgaski]  Please review the list. 

We probably should save away attributes.rst and application-acl.rst for post 1.0 branch
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00vcl:,,,,,,,,binhn,ChristopherFerris,,,,,,,,,,,,,,,master,,,true,15/Apr/17 3:08 PM;ChristopherFerris;[~binhn] releases.rst should NOT be removed. It actually needs to be updated and relinked from the TOC,"16/Apr/17 4:09 PM;ChristopherFerris;deleted:    docs/source/API/AttributesUsage.rst
	deleted:    docs/source/API/CLI.rst
	deleted:    docs/source/API/ChaincodeAPI.rst
	deleted:    docs/source/API/Samples/Sample_1.js
	deleted:    docs/source/API/Samples/Sample_1.zip
	deleted:    docs/source/SystemChaincode-noop.rst
	deleted:    docs/source/protocol-spec.rst
	deleted:    docs/source/protocol-spec_zh.rst
	deleted:    docs/source/tech/application-ACL.rst
	deleted:    docs/source/tech/attributes.rst
	deleted:    docs/source/tech/best-practices.rst
",16/Apr/17 4:09 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/#/c/8089/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
files in docs/source/Gerrit not translated to .rst,FAB-3168,15755,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,14/Apr/17 6:38 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,15/Apr/17 2:48 PM,v1.0.0,,,v1.0.0,,fabric-docs,,,,,,0,Documentation,,,,,,,markdown files in docs/source/Gerrit folder were never translated to .rst and their references in the CONTRIBUTING.rst need to be updated accordingly.,,,,,,3600,3600,,0%,3600,3600,,,,,,,,,,,,,,,,,,,,,0|hzzz5b:,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,master,,,true,14/Apr/17 6:56 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/#/c/8051/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add missing pip packages to install_behave.sh,FAB-3149,15736,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,yuki-kon,yuki-kon,yuki-kon,13/Apr/17 6:01 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,22/Apr/17 7:03 PM,,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,,"Behave test fails after setting up the behave environment with ""fabric/scripts/install_behave.sh"".
According to the error message, pip package listed below is required to run behave test. 

pyOpenSSL
pysha3
ecdsa
python-slugify
b3j0f.aop
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00v7x:,,,,,,,,yuki-kon,,,,,,,,,,,,,,,,master,,,true,13/Apr/17 6:21 PM;yuki-kon;The patch set is submitted. https://gerrit.hyperledger.org/r/#/c/8025/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer hangs if CouchDB connection becomes unresponsive - need a timeout,FAB-3131,15718,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,chris.elder,denyeart,denyeart,12/Apr/17 10:15 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,18/Apr/17 5:40 PM,,,,v1.0.0,,fabric-ledger,,,,,,0,,,,,,,,"Need to set a timeout for the couchdb http client connection.
See explanation and sample solution here:
https://medium.com/@nate510/don-t-use-go-s-default-http-client-4804cb19f779

The timeout can be configurable in core.yaml couchdb section.

Once the timeout is in place, hung connections will error out and retry logic would take over.

Timeout needs to be relatively high, it has nothing to do with how 'close' couchdb is to peer.  Let's look at worst case... CouchDB builds indexes at query time (for any new docs since last index update), not at insert/update time like most databases.  Let's say a new peer has just come up and done state transfer on 1 million blocks.  CouchDB state db will be built out, but the first query during a simulation will have to build out an index covering millions of documents. The amount of time is probably measured in seconds.

The other thing to consider is chaincode timeout.  Chaincode execution timeout is 30 seconds by default.

Given these two facts, I would suggest default timeout for CouchDB to be 20 seconds.  In the case of a CouchDB connection anomaly during simulation, this will allow for one failure after 20s and one subsequent retry before hitting the simulation timeout.

I have created Jira item (for future) to help with the worst case state transfer scenario, by warming up the indexes prior to simulation:
https://jira.hyperledger.org/browse/FAB-3183",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-60,0|hzzz76:zzzm,,Sprint 16  - Ledger,,,,,,baohua,denyeart,,,,,,,,,,,,,,,master,,,true,"15/Apr/17 2:45 PM;baohua;I would say, this is indeed necessary. 

Surprise no support before.","16/Apr/17 11:53 AM;denyeart;[~AdnanChoudhury]
Please see the scenario in the Description... We'll need a system test looking at CouchDB behavior upon large state transfer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip DialOptions need to use the comm.SecureServer cert pools,FAB-3105,15692,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,yacovm,yacovm,11/Apr/17 9:01 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,30/Apr/17 9:32 PM,v1.0.0-alpha1,,,v1.0.0,,fabric-gossip,,,,,,0,,,,,,,,"Currently, the DialOptions passed to gossip is from https://github.com/hyperledger/fabric/blob/master/core/comm/connection.go#L171-L187 
which prevents peers from communicating with peers from different orgs, when TLS is used, because the TLS client rejects the TLS server from the other org.",,;14/Apr/17 10:27 AM;mastersingh24;3600,;30/Apr/17 11:23 AM;mastersingh24;3600,;30/Apr/17 5:23 PM;mastersingh24;7200,;30/Apr/17 5:39 PM;mastersingh24;60,43200,0,14460,33%,50400,0,25260,,,,,,,,,,,,,,,,,,,,0|i00uz1:,,,,,,,,mastersingh24,yacovm,,,,,,,,,,,,,,,master,,,true,"13/Apr/17 11:43 AM;mastersingh24;Hopefully this will be straightforward as we already do something similar for connecting to the orderer here:  https://github.com/hyperledger/fabric/blob/master/core/comm/connection.go#L89

The proposal to fix this would be to add a {{GetGossipServiceCredentials()}} method which does the same thing as {{GetDeliverServiceCredentials()}} except it will return the app (aka peer) roots rather than the orderer roots","13/Apr/17 11:59 AM;yacovm;It's a bit more complicated than that in my opinion:
in: https://github.com/hyperledger/fabric/blob/master/gossip/comm/comm_impl.go#L153
we have opts []grpc.DialOption that are used both in production and in test code.
The peer also works in cases where no TLS is used, but in tests- we have our own self-signed TLS certs that are generated in the tests (to test running with TLS)

Now, the dial options are set here: https://github.com/hyperledger/fabric/blob/master/gossip/service/gossip_service.go#L134-L139

I suggest that instead of dialOptions, we would have a callback that returns dialOptions on demand, and in all places in *gossip/comm/comm_impl*, that callback would be called instead of referencing the *opts* variable. 
This way- it'll work both for test code, both for non-TLS, and both for TLS code.

What do you think? [~mastersingh24] [~C0rWin]","14/Apr/17 9:39 AM;mastersingh24;[~yacovm] I see what you are saying here, but  https://github.com/hyperledger/fabric/blob/master/gossip/service/gossip_service.go#L134-L139 was the only place I found that used {{InitTLSFor Peer()}} (as you stated above) and it seems that should be the only call we need to replace.  It seems it would also be the least invasive in the code and should solve the problem for non-test scenarios.

","14/Apr/17 10:01 AM;yacovm;I don't think it'll work. DialOptions is immutable, isn't it?
This is set on startup, but peers join channels at runtime.

Maybe I'm missing something though",30/Apr/17 5:22 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/8777/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
capabilities doc was never converted from md ,FAB-3099,15686,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,11/Apr/17 6:20 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,15/Apr/17 2:48 PM,v1.0.0,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,,"capabilities,md was submitted but never merged, when the transpose to rst was done, there was no content. copy content from 4855 to the docs/source/capabilities.rst.",,,,,,3600,3600,,0%,3600,3600,,,,,,FAB-1694,,,,,,,,,,,,,,,0|i00uxp:,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Errors in CouchDB log if system databases are not created,FAB-3094,15676,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,chris.elder,denyeart,denyeart,11/Apr/17 1:40 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,21/Apr/17 8:20 PM,,,,v1.0.0,,fabric-ledger,,,,,,0,,,,,,,,"CouchDB log fills with errors if its system databases are not created. The system databases should be created upon peer startup, if they do not yet exist.

http://docs.couchdb.org/en/2.0.0/install/index.html#single-node-setup

curl -X PUT http://127.0.0.1:5984/_users
curl -X PUT http://127.0.0.1:5984/_replicator
curl -X PUT http://127.0.0.1:5984/_global_changes
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-60,0|hzzz76:zzzr9,,Sprint 16  - Ledger,,,,,,dbshah,denyeart,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
No error upon peer startup if CouchDB user/password not set,FAB-3093,15675,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,chris.elder,denyeart,denyeart,11/Apr/17 1:27 PM,21/Apr/17 8:02 PM,26/Apr/18 6:50 AM,21/Apr/17 8:02 PM,,,,DUPLICATE,v1.0.0,fabric-ledger,,,,,,0,,,,,,,,"If CouchDB user/password is enabled in CouchDB, but the peer is not configured to use a user/password, you don't receive an error upon channel creation.  You should receive an error upon peer startup during the CouchDB connection verification.",,,,,,,,,,,,,,,,,FAB-3094,,,,,,,,,,,,,,FAB-60,0|hzzz76:zzzri,,Sprint 16  - Ledger,,,,,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,,,,,21/Apr/17 7:27 PM;ChristopherFerris;I cannot find a CR that references this JIRA. Not sure what is in review. [~denyeart],21/Apr/17 8:01 PM;denyeart;This is fixed as a byproduct of FAB-3094.  Closing as dup.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
txid missing in config tx in genesis block,FAB-3091,15673,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,kchristidis,manish-sethi,manish-sethi,11/Apr/17 12:37 PM,31/May/17 1:58 PM,26/Apr/18 6:50 AM,23/Apr/17 10:59 AM,v1.0.0-alpha1,,,v1.0.0-alpha2,,fabric-orderer,,,,,,0,configuration,,,,,,,"While running ledger tests, I noticed that the configuration transactions does not have a txid set.
Is this behavior intentional? (https://github.com/hyperledger/fabric/blob/master/common/genesis/genesis.go#L46)

If yes, then we would need to change in the ledger code so as to check for the transaction type and index by txid only for endorser transactions.

Marked one test (core/scc/qscc/query_test.go - TestQueryGetBlockByTxID) as skip in https://gerrit.hyperledger.org/r/#/c/7929/ which should be un-skipped after we resolve this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3040,0|i00s80:i,,,,,,,,kchristidis,manish-sethi,,,,,,,,,,,,,,,master,,,true,11/Apr/17 12:39 PM;manish-sethi;[~jyellick] [~muralisr] [~denyeart] - Can you please comment on the above?,"11/Apr/17 4:15 PM;manish-sethi;Just learned that Murali and Jason are out. [~binhn], [~kchristidis] can you please comment.","14/Apr/17 5:19 PM;kchristidis;Studied the various config TX-related outputs in our codebase and this does seem like an omission.

For reference:
# `configtx.MakeChainCreationTransaction` does set a tx_id, so you get it via the configtxgen tool when the option to output a channel creation transaction is selected. (`configtxgen.doOutputChannelCreateTx` calls `configtx.MakeChainCreationTransaction`.) You also get this in the calls happening in `peer/channel/create.go` and `broadcast_config/newchain.go`.
# However, as you point out, `genesis.Block` does not set a tx_id, so you do not get it via the configtxgen tool when the option to output a genesis block is selected. (`configtxgen.doOutputBlock` calls `provisional.GenesisBlockForChannel` which in turns calls `genesis.Block`.)

Even if the argument is that for some reason the tx_id is not necessary, I'd argue that we should still have it for uniformity's sake.

I'll submit a patch and update this JIRA accordingly.",14/Apr/17 7:06 PM;kchristidis;Patch submitted: http://gerrit.hyperledger.org/r/8053,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Wrong peers described in the Getting Started guide,FAB-3049,15630,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,nickgaski,rjkuro,rjkuro,08/Apr/17 4:37 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,23/Apr/17 1:00 PM,v1.0.0,v1.0.0-alpha1,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,,"The new getting started page (http://hyperledger-fabric.readthedocs.io/en/latest/getting_started.html#what-happened-behind-the-scenes) describes:

{quote}
PEER0 and PEER3 belong to Org0; PEER1 and PEER2 belong to Org1
{quote}

But similar line exists in examples/e2e_cli/end-to-end.rst, which shows slightly differently:

-  ``PEER0`` and ``PEER1`` belong to Org0; ``PEER2`` and ``PEER3`` belong to Org1

I think the latter is correct because the file examples/e2e_cli/scripts/script.sh sets the Org0MSP for the $1 (=peer) is 0 or 1: 

{code}
setGlobals () {
	...
	if [ $1 -eq 0 -o $1 -eq 1 ] ; then
		CORE_PEER_LOCALMSPID=""Org0MSP""
		...
	else
		CORE_PEER_LOCALMSPID=""Org1MSP""
```
{code}

The content of the end-to-end.rst and getting_started.html are almost same. 
Probably there was an error in copying the line from end-to-end.rst to source of getting_started.html file. 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00uo1:,,,,,,,,rjkuro,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enhance eventhub to avoid waits,FAB-3033,15613,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rickr,rickr,rickr,07/Apr/17 3:29 AM,12/Apr/17 2:11 PM,26/Apr/18 6:50 AM,12/Apr/17 2:11 PM,,,,v1.0.0,,fabric-sdk-java,,,,,,0,java-SDK,v1.0,,,,,,"Track block event to identify which eventhubs are reporting them. Don't clear transactions futures till all eventhub have reported. Remove waits in End2endIt scenarios.

https://gerrit.hyperledger.org/r/#/c/7811/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzcm:z4,,Sprint 16 - SDK Java,,,,,,rickr,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
marbles02 example fails @ chaincode instantiation time,FAB-3029,15609,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,Nishi,Nishi,06/Apr/17 8:56 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,08/Apr/17 5:46 PM,v1.0.0,,,v1.0.0,,fabric-ledger,,,,,,0,,,,,,,,"When marbles02 from github.com/hyperledger/fabric/examples/chaincode/go/marbles02 was used inside e2e CLI test.

It failed on commit level: *cacb292921553900ea808344599b9914632bf1d3*

With following error message during chaincode instantiation on imports line 84:

{code}

2017-04-06 20:45:24.599 UTC [msp] Sign -> DEBU 006 Sign: digest: 8D7397B62A8048A28269CE494361FC10E918CCC9323E42D1390855E1BDEE2F4C 
Error: Error endorsing chaincode: rpc error: code = 2 desc = Error starting container: Failed to generate platform-specific docker build: Error returned from build: 1 ""chaincode/input/src/github.com/hyperledger/fabric/examples/chaincode/go/marbles02/marbles_chaincode.go:84:2: cannot find package ""github.com/golang/protobuf/ptypes"" in any of:
	/opt/go/src/github.com/golang/protobuf/ptypes (from $GOROOT)
	/chaincode/input/src/github.com/golang/protobuf/ptypes (from $GOPATH)
	/opt/gopath/src/github.com/golang/protobuf/ptypes

{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz96:j9,,Sprint 15  - Ledger,,,,,,Nishi,,,,,,,,,,,,,,,,master,,,true,"10/Apr/17 4:21 PM;Nishi;Verified marbles02 chaincode can be installed, instantiated, invoked and queried successfully on commit level: *7984725990fd8227124ab46cb27bed127e699cfc*
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[SECURITY] Out-of-memory condition - need defensive code for CRL/OSCP retrieval,FAB-3026,15606,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,skarim,rennman,rennman,06/Apr/17 7:00 PM,31/Jul/17 10:03 AM,26/Apr/18 6:50 AM,27/Jul/17 8:07 PM,v1.0.0-rc1,,,v1.0.1,,fabric-ca,,,,,,0,security,Security,,,,,,"There are other cases where we aren't defending against this (reading a config file comes to mind) but in those cases the server administrator is in control.

In this case, we are at the mercy of bad actors sending requests to an active server.

Given the enrollment of an admin, and the following structure:
{code:java}
/tmp/fabric-ca
├── admin
│   ├── enroll.yaml
│   ├── fabric-ca-client-config.yaml
│   └── msp
│       ├── cacerts
│       ├── keystore
│       │   ├── key.pem
│       │   └── key.pem.old
│       └── signcerts
│           ├── cert.pem
│           └── cert.pem.old
{code}

cert.pem.old and key.pem.old represent the original enrollment authentication data.
Trudy has replaced them with cert.pem that contains a CDP with a vaule of
http://mal-server/10G.file

We just keep reading until we choke:

{code:java}
fatal error: runtime: out of memory
          runtime stack:
     runtime.throw(0xaaeca9, 0x16)
     	/usr/local/go/src/runtime/panic.go:566 +0x95
     runtime.sysMap(0xc820500000, 0x400000000, 0x0, 0xfbcd78)
     	/usr/local/go/src/runtime/mem_linux.go:219 +0x1d0
     runtime.(*mheap).sysAlloc(0xfa3100, 0x400000000, 0x41a600)
     	/usr/local/go/src/runtime/malloc.go:407 +0x37a
....
{code}

traceable back to here:
{code:java}
vendor/github.com/cloudflare/cfssl/revoke/revoke.go:105
{code}

",,,,,,,,,,,,,,FAB-4546,,,,,,,,,,08/May/17 7:12 PM;rennman;cdp_exploit.sh;https://jira.hyperledger.org/secure/attachment/10805/cdp_exploit.sh,08/May/17 7:08 PM;rennman;cdp_exploit.sh;https://jira.hyperledger.org/secure/attachment/10804/cdp_exploit.sh,,,,,,,0|hzzz6a:rhw9m,,,,,,,,ChristopherFerris,rennman,skarim,smithbk,,,,,,,,,,,,,release-1.0,master,,true,07/Apr/17 12:54 PM;ChristopherFerris;This appears to present a DoS opportunity... should be fixed for v1.0,"01/May/17 2:35 PM;smithbk;Allen, I'm not sure that this is still possible.  Please provide instructions on how to reproduce and reopen if this is still a problem.","08/May/17 7:13 PM;rennman;Yes, it is still possible to recreate. Fortunately, that's easier now that the ci tests are checked in.

Beware that you should be prepared to kill the container. It will eventually lock up your workstation.

 

On the host machine cd to fabric-ca src root and place this file there:

[^cdp_exploit.sh]

make it executable:
{code:java}
chmod +x ./cdp_exploit.sh{code}
build the test image
{code:java}
make docker-fvt{code}
run the test inside the container
{code:java}
docker run -v $PWD:/opt/gopath/src/github.com/hyperledger/fabric-ca -ti hyperledger/fabric-ca-fvt ./cdp_exploit.sh{code}




 

 

 ",26/May/17 6:16 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/#/c/9817/,"01/Jun/17 2:18 PM;smithbk;The only way to really fix this is in CFSSL code.
So rather than doing a partial solution in fabric-ca code, I suggest abandoning 9817 and just pushing a solution into CFSSL.
I've opened an issue against cfssl at https://github.com/cloudflare/cfssl/issues/775.
The place to fix this is going to be in cfssl/revoke/revoke.go.   All calls to ioutil.ReadAll should be changed to read into a fixed size buffer.
There may be other places which require this as well.

","02/Jun/17 3:42 PM;skarim;Based on Keith's comment above, I am marking the fix version to be 'Future' as we need changes to be made in CFSSL to correctly handle this.",02/Jun/17 3:55 PM;skarim;CFSSL Pull Request: https://github.com/cloudflare/cfssl/pull/776,21/Jul/17 3:28 PM;skarim;https://gerrit.hyperledger.org/r/#/c/11815/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-ca permits registration of users with affiliations that do not exist,FAB-3024,15604,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,skarim,rennman,rennman,06/Apr/17 3:02 PM,02/May/17 8:23 PM,26/Apr/18 6:50 AM,02/May/17 8:23 PM,v1.0.0,,,v1.0.0,,fabric-ca,,,,,,0,,,,,,,,"Although we check to ensure a user registration includes a group affiliation, we do not validate against the affiliations that are defined in the DB.  I am able to register with virtually any random string for 'affiliation' attribute.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00uih:,,,,,,,,rennman,skarim,,,,,,,,,,,,,,,,,,,02/May/17 8:23 PM;skarim;Issue has been resolved,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Dynamic log level adjustment does not work for most of the components ,FAB-3005,15585,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,wlahti,Nishi,Nishi,05/Apr/17 7:44 PM,17/Apr/17 2:17 PM,26/Apr/18 6:50 AM,17/Apr/17 2:17 PM,v1.0.0,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,,"When logging level was dynamically updated on docker container on individual peers on following components
{code}
 peer:       warning
    node:       info
    network:    warning
    version:    warning
    protoutils: debug
    error:      warning
    msp:        warning
{code}

{code}
using: 
docker exec -it <peer> bash
peer logging setlevel node INFO
peer logging getlevel node
{code}
it does display updated loglevel on the command inside docker exe container - but no changes happen in actual logging for all components during ""docker logs -f <peer>"", except for component 'msp' where updated log levels reflected in peer loggging.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00uf5:,,,,,,,,dbshah,denyeart,mrshah-ibm,muralisr,Nishi,wlahti,,,,,,,,,,,,,,,10/Apr/17 2:25 PM;mrshah-ibm;[~dbshah] reported the same!,12/Apr/17 3:04 AM;denyeart;[~wlahti] Can you assess this one and provide your recommendation?,"12/Apr/17 11:55 AM;wlahti;I've started working on this in the context of https://jira.hyperledger.org/browse/FAB-3009. The recent flogging refactor changed the logic the peer used to read variables from core.yaml, resulting in all but msp using the default level except when CORE_LOGGING_LEVEL is provided. The plan is to clean up the logging section of core.yaml to have one primary 'peer' parameter with parameters for a number of subcomponents (e.g. gossip, ledger, msp).","12/Apr/17 4:47 PM;wlahti;The inclusion of the core.yaml logging section is a bit misleading in regards to what this bug is really reporting. I chatted with [~Nishi] and clarified that this JIRA really is intended to address using {code}peer logging setlevel{code} to dynamically set log levels for modules. I pointed out that the settings currently in core.yaml don't map to actual logger modules so I don't think setting the level for any of those would make a noticeable difference in the logs. I have requested that the command is tested using modules such as msp, gossip/discovery#<peer-address> that generate a lot of logging messages when set to debug. ",13/Apr/17 6:05 AM;muralisr;[~wlahti] [~2020Nishi] need a resolution on this. Looks like this can be closed ? ,"17/Apr/17 2:12 PM;dbshah;I was trying the wrong modules it seems. Tried the following and it worked.

```
root@fabric-peer-1a:/# peer logging getlevel gossip/discovery#fabric-peer-1a:5011
2017-04-17 14:07:23.485 UTC [logging] SetModuleLevel -> INFO 001 Module 'error' logger enabled for log level: WARNING
2017-04-17 14:07:23.487 UTC [loggingCmd] getLevel -> INFO 002 Current log level for peer module 'gossip/discovery#fabric-peer-1a:5011': INFO
2017-04-17 14:07:23.487 UTC [main] main -> INFO 003 Exiting.....
root@fabric-peer-1a:/# peer logging getlevel gossip/discovery#fabric-peer-1a:5011^C
root@fabric-peer-1a:/# peer logging setlevel gossip/discovery#fabric-peer-1a:5011 debug
2017-04-17 14:07:35.502 UTC [logging] SetModuleLevel -> INFO 001 Module 'error' logger enabled for log level: WARNING
2017-04-17 14:07:35.504 UTC [loggingCmd] setLevel -> INFO 002 Log level set for peer module 'gossip/discovery#fabric-peer-1a:5011': DEBUG
2017-04-17 14:07:35.504 UTC [main] main -> INFO 003 Exiting.....
```

In the peer logs can see the logging level change:
```
2017-04-17 14:07:35.503 UTC [logging] SetModuleLevel -> INFO 05d Module 'gossip/discovery#fabric-peer-1a:5011' logger enabled for log level: DEBUG
2017-04-17 14:07:38.815 UTC [gossip/discovery#fabric-peer-1a:5011] periodicalSendAlive -> DEBU 05e Sleeping 5s
2017-04-17 14:07:38.820 UTC [gossip/discovery#fabric-peer-1a:5011] handleMsgFromComm -> DEBU 05f Got message: GossipMessage: tag:EMPTY alive_msg:<membership:<pki_id:""*\247\016\""x\272\006q\377\341\362\270\000^\3343\345\330H\2115\250\010\327\016\336\373-7\203\033\211"" > timestamp:<inc_number:1492096245365249509 seq_num:239236 > > , Envelope: 56 bytes, Signature: 70 bytes Secret payload: 21 bytes, Secret Signature: 70 bytes
```

```
root@fabric-peer-1a:/# peer logging setlevel chaincode warning
2017-04-17 14:10:53.048 UTC [logging] SetModuleLevel -> INFO 001 Module 'error' logger enabled for log level: WARNING
2017-04-17 14:10:53.050 UTC [loggingCmd] setLevel -> INFO 002 Log level set for peer module 'chaincode': WARNING
2017-04-17 14:10:53.050 UTC [main] main -> INFO 003 Exiting.....
```

peer logs:
```
2017-04-17 14:10:53.049 UTC [logging] SetModuleLevel -> INFO 41a Module 'chaincode' logger enabled for log level: WARNING
```


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Add timeout option to peer channel cmd,FAB-2982,15562,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,nnao,daijianw,daijianw,04/Apr/17 3:09 AM,25/Jul/17 4:10 AM,26/Apr/18 6:50 AM,12/May/17 11:12 AM,v1.0.0-alpha1,,,v1.0.0-alpha2,,fabric-orderer,,,,,,0,kafka,,,,,,,"The channel creation failed while using kafka ordering type.  Steps to recreate the error are given below:
1. Download fabric 1.0.0-alpha images
2. Refer to https://github.com/hyperledger/fabric/blob/master/examples/e2e_cli/end-to-end.rst to setup up network, while changing configtx.yaml and docker-compose.yaml to use kafka ordering type. Please see attachment for configtx.yaml and docker-compose.yaml.
3. Run config generation tool via ""./generateCfgTrx.sh mychannel""
4. Start the network via ""CHANNEL_NAME=mychannel docker-compose up -d""
5. Login to the cli container via ""docker exec -it cli bash""
6. Create the channel via the command: 
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/orderer/localMspConfig CORE_PEER_LOCALMSPID=""OrdererMSP"" peer channel create -o orderer0:7050 -c mychannel -f crypto/orderer/channel.tx 
7. The error output in cli container:
root@48340102f2a9:/opt/gopath/src/github.com/hyperledger/fabric/peer# CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/orderer/localMspConfig CORE_PEER_LOCALMSPID=""OrdererMSP"" peer channel create -o orderer0:7050 -c mychannel -f crypto/orderer/channel.tx 
2017-03-29 19:23:45.487 UTC [logging] InitFromViper -> DEBU 001 Setting default logging level to DEBUG for command 'channel'
2017-03-29 19:23:45.487 UTC [msp] GetLocalMSP -> DEBU 002 Returning existing local MSP
2017-03-29 19:23:45.487 UTC [msp] GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity
2017-03-29 19:23:47.633 UTC [msp] GetLocalMSP -> DEBU 004 Returning existing local MSP
2017-03-29 19:23:47.633 UTC [msp] GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity
2017-03-29 19:23:47.635 UTC [msp] GetLocalMSP -> DEBU 006 Returning existing local MSP
2017-03-29 19:23:47.636 UTC [msp] GetDefaultSigningIdentity -> DEBU 007 Obtaining default signing identity
2017-03-29 19:23:47.637 UTC [msp] Sign -> DEBU 008 Sign: plaintext: 0AD6040A1508021A0608C393F0C60522...00120D1A0B08FFFFFFFFFFFFFFFFFF01 
2017-03-29 19:23:47.637 UTC [msp] Sign -> DEBU 009 Sign: digest: 84D9075E34EDC05A020171E1940F5C05ADE11D777E2243356C2AB144B58D8994 
Got status  &{NOT_FOUND}
Error receiving: EOF
Error: EOF


",,,,,,,,,,,,,,FAB-3040,FAB-3787,,,,,,,,,04/Apr/17 3:11 AM;daijianw;configtx.yaml;https://jira.hyperledger.org/secure/attachment/10645/configtx.yaml,04/Apr/17 3:11 AM;daijianw;docker-compose.yaml;https://jira.hyperledger.org/secure/attachment/10646/docker-compose.yaml,04/Apr/17 3:11 AM;daijianw;orderer0.log;https://jira.hyperledger.org/secure/attachment/10647/orderer0.log,,,,,FAB-3040,0|i00s80:,,,,,,,,baohua,binhn,ChristopherFerris,daijianw,gbolo,hanhzf,kchristidis,nnao,shanlusun,tonyyang132,troyronda,viewer,,,,,master,,,true,"05/Apr/17 6:17 PM;gbolo;I am also having issues with the kafka orderer type. I can confirm that the orderer successfully connects to the kafka brokers, but when a peer tries to join a channel I get this:

{{Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [orderer/common/broadcast] Handle -> WARN 2ba Rejecting CONFIG_UPDATE because: Error validating DeltaSet: Attempt to set key [Values] /Channel/Orderer/KafkaBrokers to version 0, but key is at version 0
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.239 EDT [orderer/common/deliver] Handle -> WARN 2bb Error reading from stream: stream error: code = 1 desc = ""context canceled""}}


the debug messages before this are:
{{Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.219 EDT [orderer/main] Deliver -> DEBU 292 Starting new Deliver handler
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.219 EDT [orderer/common/deliver] Handle -> DEBU 293 Starting new deliver loop
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.219 EDT [orderer/common/deliver] Handle -> DEBU 294 Attempting to read seek info message
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.225 EDT [orderer/main] Broadcast -> DEBU 295 Starting new Broadcast handler
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.226 EDT [orderer/common/broadcast] Handle -> DEBU 296 Preprocessing CONFIG_UPDATE
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.226 EDT [orderer/multichain] Process -> DEBU 297 Processing channel reconfiguration request for channel consortium
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.226 EDT [common/configtx] addToMap -> DEBU 298 Adding to config map: [Groups] /Channel
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.226 EDT [common/configtx] addToMap -> DEBU 299 Adding to config map: [Groups] /Channel/Orderer
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.226 EDT [common/configtx] addToMap -> DEBU 29a Adding to config map: [Groups] /Channel/Orderer/OrdererOrg
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.226 EDT [common/configtx] addToMap -> DEBU 29b Adding to config map: [Values] /Channel/Orderer/OrdererOrg/MSP
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.226 EDT [common/configtx] addToMap -> DEBU 29c Adding to config map: [Policy] /Channel/Orderer/OrdererOrg/Readers
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.226 EDT [common/configtx] addToMap -> DEBU 29d Adding to config map: [Policy] /Channel/Orderer/OrdererOrg/Writers
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.226 EDT [common/configtx] addToMap -> DEBU 29e Adding to config map: [Policy] /Channel/Orderer/OrdererOrg/Admins
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.226 EDT [common/configtx] addToMap -> DEBU 29f Adding to config map: [Values] /Channel/Orderer/CreationPolicy
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.226 EDT [common/configtx] addToMap -> DEBU 2a0 Adding to config map: [Values] /Channel/Orderer/ConsensusType
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.226 EDT [common/configtx] addToMap -> DEBU 2a1 Adding to config map: [Values] /Channel/Orderer/BatchSize
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.226 EDT [common/configtx] addToMap -> DEBU 2a2 Adding to config map: [Values] /Channel/Orderer/BatchTimeout
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.226 EDT [common/configtx] addToMap -> DEBU 2a3 Adding to config map: [Values] /Channel/Orderer/ChannelRestrictions
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.226 EDT [common/configtx] addToMap -> DEBU 2a4 Adding to config map: [Values] /Channel/Orderer/KafkaBrokers
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.226 EDT [common/configtx] addToMap -> DEBU 2a5 Adding to config map: [Policy] /Channel/Orderer/Admins
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2a6 Adding to config map: [Policy] /Channel/Orderer/BlockValidation
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2a7 Adding to config map: [Policy] /Channel/Orderer/Readers
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2a8 Adding to config map: [Policy] /Channel/Orderer/Writers
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2a9 Adding to config map: [Groups] /Channel/Application
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2aa Adding to config map: [Groups] /Channel/Application/Org1MSP
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2ab Adding to config map: [Values] /Channel/Application/Org1MSP/AnchorPeers
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2ac Adding to config map: [Values] /Channel/Application/Org1MSP/MSP
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2ad Adding to config map: [Policy] /Channel/Application/Org1MSP/Admins
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2ae Adding to config map: [Policy] /Channel/Application/Org1MSP/Readers
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2af Adding to config map: [Policy] /Channel/Application/Org1MSP/Writers
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2b0 Adding to config map: [Policy] /Channel/Application/Readers
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2b1 Adding to config map: [Policy] /Channel/Application/Writers
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2b2 Adding to config map: [Policy] /Channel/Application/Admins
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2b3 Adding to config map: [Values] /Channel/BlockDataHashingStructure
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2b4 Adding to config map: [Values] /Channel/OrdererAddresses
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2b5 Adding to config map: [Values] /Channel/HashingAlgorithm
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2b6 Adding to config map: [Policy] /Channel/Writers
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2b7 Adding to config map: [Policy] /Channel/Admins
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2b8 Adding to config map: [Policy] /Channel/AcceptAllPolicy
Apr 05 13:33:14 ymr-sbvme-ord1 orderer[17825]: 2017-04-05 13:33:14.229 EDT [common/configtx] addToMap -> DEBU 2b9 Adding to config map: [Policy] /Channel/Readers}}
","12/Apr/17 8:01 AM;viewer;*This is the output of cli:*
2017-04-12 07:38:47.563 UTC [msp] GetLocalMSP -> DEBU 001 Returning existing local MSP
2017-04-12 07:38:47.563 UTC [msp] GetDefaultSigningIdentity -> DEBU 002 Obtaining default signing identity
2017-04-12 07:38:49.609 UTC [msp] GetLocalMSP -> DEBU 003 Returning existing local MSP
2017-04-12 07:38:49.611 UTC [msp] GetDefaultSigningIdentity -> DEBU 004 Obtaining default signing identity
2017-04-12 07:38:49.614 UTC [msp] GetLocalMSP -> DEBU 005 Returning existing local MSP
2017-04-12 07:38:49.614 UTC [msp] GetDefaultSigningIdentity -> DEBU 006 Obtaining default signing identity
{color:red}2017-04-12 07:38:49.615 UTC [msp] Sign -> DEBU 007 Sign: plaintext: 0AD6040A1508021A060889B3B7C70522...00120D1A0B08FFFFFFFFFFFFFFFFFF01
2017-04-12 07:38:49.615 UTC [msp] Sign -> DEBU 008 Sign: digest: 2D38D5E7E8D537C6F7CF5986C029BE1E54E5D7B2DC25E4F5AAB57FDDB6BE43D5{color}
Got status  &{NOT_FOUND}
Error receiving: EOF
Error: EOF
Usage:
  peer channel create [flags]

*This is the log snippet of orderer0:*
2017-04-12 07:38:47.644 UTC [orderer/multichain] newChainSupport -> DEBU 49a [channel: mychannel] Retrieved metadata for tip of chain (block #0):
2017-04-12 07:38:47.644 UTC [orderer/kafka] newChain -> DEBU 49b [channel: mychannel] Starting chain with last persisted offset -3 and last recorded block 0
{color:red}2017-04-12 07:38:49.617 UTC [orderer/common/deliver] Handle -> DEBU 49c Client request for channel mychannel not found{color}
2017-04-12 07:38:50.645 UTC [orderer/kafka] newProducer -> DEBU 49d Connecting to Kafka cluster: [kafka0:9092]
2017-04-12 07:38:50.668 UTC [orderer/kafka] newProducer -> DEBU 49e Connected to the Kafka cluster
2017-04-12 07:38:50.669 UTC [orderer/multichain] newChain -> INFO 49f Created and starting new chain mychannel
2017-04-12 07:38:50.669 UTC [orderer/kafka] Start -> DEBU 4a0 [channel: mychannel] Posting the CONNECT message...
2017-04-12 07:38:51.083 UTC [orderer/kafka] Send -> DEBU 4a1 [channel mychannel] Posted blob to the Kafka cluster (offset number: 0)
2017-04-12 07:38:51.083 UTC [orderer/kafka] Start -> DEBU 4a2 [channel: mychannel] CONNECT message posted successfully
2017-04-12 07:38:51.106 UTC [orderer/kafka] newConsumer -> DEBU 4a3 [channel: mychannel] Created new consumer for session (beginning offset: -2)
2017-04-12 07:38:51.106 UTC [orderer/multichain] addBlockSignature -> DEBU 4a4 &{ledgerResources:0xc420161c20 chain:0xc420330120 cutter:0xc42031aa50 filters:0xc420161c80 signer:0x11cdd30 lastConfig:0 lastConfigSeq:0}
2017-04-12 07:38:51.106 UTC [orderer/multichain] addBlockSignature -> DEBU 4a5 &{}
2017-04-12 07:38:51.106 UTC [msp] GetLocalMSP -> DEBU 4a6 Returning existing local MSP
2017-04-12 07:38:51.106 UTC [msp] GetDefaultSigningIdentity -> DEBU 4a7 Obtaining default signing identity
2017-04-12 07:38:51.107 UTC [msp] GetLocalMSP -> DEBU 4a8 Returning existing local MSP
2017-04-12 07:38:51.107 UTC [msp] GetDefaultSigningIdentity -> DEBU 4a9 Obtaining default signing identity
2017-04-12 07:38:51.107 UTC [msp] Sign -> DEBU 4aa Sign: plaintext: 0A9F040A0A4F7264657265724D535012...24E1AD73348D8BF93C9C95C4860DF273
2017-04-12 07:38:51.107 UTC [msp] Sign -> DEBU 4ab Sign: digest: 2F3CD03D00EBF80A8C071E7CF939CFEAF9CAF79732F3CDD942762F4A1A461D4D
2017-04-12 07:38:51.107 UTC [msp] GetLocalMSP -> DEBU 4ac Returning existing local MSP
2017-04-12 07:38:51.107 UTC [msp] GetDefaultSigningIdentity -> DEBU 4ad Obtaining default signing identity
2017-04-12 07:38:51.107 UTC [msp] GetLocalMSP -> DEBU 4ae Returning existing local MSP
2017-04-12 07:38:51.107 UTC [msp] GetDefaultSigningIdentity -> DEBU 4af Obtaining default signing identity
2017-04-12 07:38:51.107 UTC [msp] Sign -> DEBU 4b0 Sign: plaintext: 0A9F040A0A4F7264657265724D535012...24E1AD73348D8BF93C9C95C4860DF273
2017-04-12 07:38:51.107 UTC [msp] Sign -> DEBU 4b1 Sign: digest: 1C85D0E74FD9CB7B5BEE1E20C985AC83A07302DC20CE61A55E460EAE1B9556E0
2017-04-12 07:38:51.108 UTC [orderer/ramledger] appendBlock -> DEBU 4b2 Sending signal that block 0 has a successor
2017-04-12 07:38:51.108 UTC [orderer/kafka] loop -> DEBU 4b3 [channel: testchainid] Batch filled, just cut block 1
2017-04-12 07:38:51.111 UTC [orderer/kafka] loop -> DEBU 4b4 [channel: mychannel] Successfully unmarshalled consumed message. Inspecting type...
2017-04-12 07:38:51.111 UTC [orderer/kafka] loop -> DEBU 4b5 [channel: mychannel] It's a connect message - ignoring

In peer/channel/create.go#executeCreate(), it will sleep 2s after the create transaction is sent, then try to get the block. But the channel has not finish starting. That's the problem.  I think the peer may polling to get the block instead of sleep for 2 seconds directly.","12/Apr/17 9:32 AM;viewer;I tried to fetch the block with the following script, then 
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/orderer/localMspConfig CORE_PEER_LOCALMSPID=""OrdererMSP"" peer channel fetch -o orderer0:7050 -c mychannel -f crypto/orderer/channel.tx --tls $CORE_PEER_TLS_ENABLED --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/orderer/localMspConfig/cacerts/ordererOrg0.pem

After this step, the following steps -- joining channel, chain code installation and so on all succeeded. So, just like the previous comment said, the channel is successfully created, but the peer didn't get block.","13/Apr/17 3:01 AM;daijianw;Hi Zong Ying,

Thanks for your investigation. I tried your workaround, it works. ","14/Apr/17 8:13 PM;nnao;Hi all,

In order to fix the bug, I plan to reduce the processing of getting the block in peer channel create and add the peer channel fetch command to the procedure of e2e. The fetch command does the same thing as getting the block of the create command.
The reason why I divided two-phase is because I'd like to want the user to judge how much time is needed to create the channel. it depends on the environment. Also, it is possible to reduce duplication of code.

Do you have any opinions?","15/Apr/17 3:21 AM;baohua;Would like to support the dividing, while we can add some option for the `peer channel create` cmd, e.g., --fetch, to allow the original auto-fetch block operation.

We can set the option disabled by default.

How do u think?","15/Apr/17 4:09 AM;nnao;I think the dividing is a simple solution but I concern about users should need to change original operation. the auto-fetch option is a good idea.
Does auto-fetch option solve this bug? or we need to off that option to solve?
","15/Apr/17 4:13 AM;kchristidis;[~nnao]: The status of this JIRA is set to ""In Review"" yet I can't seem to find a changeset in Gerrit for it. Can you please point me to it?

Also: I'm going through the comments here and I'm still not 100% sure on what the problem is, or the suggested fix. It seems like it probably has something to do with the E2E expecting the block way too fast for Kafka, but just to be clear, can you spell it out for me? Thanks.","15/Apr/17 4:56 AM;nnao;This is gerrit link (Sorry I need to change something to pass Jenkins test)
https://gerrit.hyperledger.org/r/#/c/8059/

As Zhang ZongYing said, The problem is that too fast to get the block by a peer for kafka. Currently, peer waits 2 sec for getting the block In peer/channel/create.go#executeCreate(). But orderer takes to 2 more sec time to start channel in kafka. Changing peer sleep time to 5 seconds will not cause the bug.

I'm not sure this solution is correct or not. But In fabric-sdk-node, joinChannel process gets genesis block. I think the dividing is a simple solution.","15/Apr/17 5:05 AM;kchristidis;Excellent, thank you for the update. And thank you for submitting a patch for this.","15/Apr/17 9:25 AM;daijianw;Thanks for patching this. I agree the dividing is a simple solution. One suggestion is, in script.sh, add a comment to explain why we need sleep a while(e.g. 5 seconds here) between channel creation and fetch. This will give the end user a hint that a sleep is necessary here when they automate the end to end operations. ","15/Apr/17 10:07 AM;baohua;By the way, why not we make the timeout variable configurable through cmd parameter or core.yaml?

That maybe more flexible to let users config as his own environment.

Thanks!","17/Apr/17 5:41 PM;nnao;Thank you for comment.
I will add timeout configuration for users.","08/May/17 11:55 AM;tonyyang132;[~nnao] First of all thank you for your change to this issue. So I've been trying to run a kafka based e2e test with your 15th patch set. My understanding is I need to modify script.sh so the channel creation command would be something like:

peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA -t 5

Would this be all? Or are there more changes I need to make to the script?",08/May/17 3:41 PM;binhn;CR  https://gerrit.hyperledger.org/r/#/c/8059/,"08/May/17 4:54 PM;nnao;Tony Yang This patches(as mentioned link Binh) does not affect existing tests. This patches has default timeout values(5 sec), it works without -t option. If you want to change the timeout time, use the -t option.  Thanks.","08/May/17 6:21 PM;tonyyang132;[~nnao] Thank you for the reply.

I ran into some errors today. This was with your 15th patch set from [https://gerrit.hyperledger.org/r/8059] cherry-picked onto master (c346b06). Orderer type was solo (planning on kafka but haven't got that far yet). After {code}make docker{code} followed by {code}./network_setup.sh up{code} I got the following error:

{code}
 ____    _____      _      ____    _____           _____   ____    _____
/ ___|  |_   _|    / \    |  _ \  |_   _|         | ____| |___ \  | ____|
\___ \    | |     / _ \   | |_) |   | |    _____  |  _|     __) | |  _|
 ___) |   | |    / ___ \  |  _ <    | |   |_____| | |___   / __/  | |___
|____/    |_|   /_/   \_\ |_| \_\   |_|           |_____| |_____| |_____|

Channel name : mychannel
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt
CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.key
CORE_PEER_LOCALMSPID=Org1MSP
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/server.crt
CORE_PEER_TLS_ENABLED=true
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
CORE_PEER_ID=cli
CORE_LOGGING_LEVEL=DEBUG
CORE_PEER_ADDRESS=peer0.org1.example.com:7051
2017-05-08 17:33:46.550 UTC [msp] getMspConfig -> INFO 001 intermediate certs folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/intermediatecerts]. Skipping.: [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/intermediatecerts: no such file or directory]
2017-05-08 17:33:46.550 UTC [msp] getMspConfig -> INFO 002 crls folder not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/intermediatecerts]. Skipping.: [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/crls: no such file or directory]
2017-05-08 17:33:46.550 UTC [msp] getMspConfig -> INFO 003 MSP configuration file not found at [/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/config.yaml]: [stat /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/config.yaml: no such file or directory]
2017-05-08 17:33:46.586 UTC [msp] GetLocalMSP -> DEBU 004 Returning existing local MSP
2017-05-08 17:33:46.586 UTC [msp] GetDefaultSigningIdentity -> DEBU 005 Obtaining default signing identity
2017-05-08 17:33:46.592 UTC [msp] GetLocalMSP -> DEBU 006 Returning existing local MSP
2017-05-08 17:33:46.592 UTC [msp] GetDefaultSigningIdentity -> DEBU 007 Obtaining default signing identity
2017-05-08 17:33:46.592 UTC [msp] GetLocalMSP -> DEBU 008 Returning existing local MSP
2017-05-08 17:33:46.592 UTC [msp] GetDefaultSigningIdentity -> DEBU 009 Obtaining default signing identity
2017-05-08 17:33:46.593 UTC [msp] Sign -> DEBU 00a Sign: plaintext: 0AA4060A074F7267314D53501298062D...53616D706C65436F6E736F727469756D
2017-05-08 17:33:46.593 UTC [msp] Sign -> DEBU 00b Sign: digest: 9BFD3BDC49C51B355066AC43601CCF2305D3A19A42124A7F95022EF871CF68B1
2017-05-08 17:33:46.593 UTC [msp] GetLocalMSP -> DEBU 00c Returning existing local MSP
2017-05-08 17:33:46.593 UTC [msp] GetDefaultSigningIdentity -> DEBU 00d Obtaining default signing identity
2017-05-08 17:33:46.593 UTC [msp] GetLocalMSP -> DEBU 00e Returning existing local MSP
2017-05-08 17:33:46.593 UTC [msp] GetDefaultSigningIdentity -> DEBU 00f Obtaining default signing identity
2017-05-08 17:33:46.593 UTC [msp] Sign -> DEBU 010 Sign: plaintext: 0ADB060A1508021A0608FAD7C2C80522...335EDBAEBDC76A4ACE45C8ACB90D91C4
2017-05-08 17:33:46.593 UTC [msp] Sign -> DEBU 011 Sign: digest: 902CEA097532C3D7E420891B92D03ECC8605A695CE3B79783E315AC2B91E840E
2017-05-08 17:33:46.660 UTC [msp] GetLocalMSP -> DEBU 012 Returning existing local MSP
2017-05-08 17:33:46.660 UTC [msp] GetDefaultSigningIdentity -> DEBU 013 Obtaining default signing identity
2017-05-08 17:33:46.660 UTC [msp] GetLocalMSP -> DEBU 014 Returning existing local MSP
2017-05-08 17:33:46.660 UTC [msp] GetDefaultSigningIdentity -> DEBU 015 Obtaining default signing identity
2017-05-08 17:33:46.660 UTC [msp] Sign -> DEBU 016 Sign: plaintext: 0ADB060A1508021A0608FAD7C2C80522...00120D1A0B08FFFFFFFFFFFFFFFFFF01
2017-05-08 17:33:46.660 UTC [msp] Sign -> DEBU 017 Sign: digest: CDC58CA348C6A8B97255377261001CB312311428E5C20FA27D09E2140DD274DC
Got status  &{NOT_FOUND}
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x0 pc=0x6e1077]

goroutine 1 [running]:
panic(0xc6c140, 0xc420012080)
	/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*ClientConn).Close(0x0, 0xc420177a00, 0xc420170000)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/clientconn.go:454 +0x37
github.com/hyperledger/fabric/peer/channel.(*deliverClient).Close(0xc420132fc0, 0x0, 0x13631a0)
	/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/deliverclient.go:103 +0x2e
github.com/hyperledger/fabric/peer/channel.getGenesisBlock(0xc4202716d0, 0x0, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/deliverclient.go:117 +0x100
github.com/hyperledger/fabric/peer/channel.executeCreate(0xc4202716d0, 0xc4202716d0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:177 +0x50
github.com/hyperledger/fabric/peer/channel.create(0xc42023bd40, 0xc42023f900, 0x1, 0xa, 0xc4202716d0, 0xd5010c, 0x5)
	/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:207 +0x45
github.com/hyperledger/fabric/peer/channel.createCmd.func1(0xc42023bd40, 0xc42023f900, 0x1, 0xa, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/peer/channel/create.go:59 +0x52
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute(0xc42023bd40, 0xc42023f400, 0xa, 0xa, 0xc42023bd40, 0xc42023f400)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 +0x234
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x135a9c0, 0xf, 0xc420010035, 0x7)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 +0x367
github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute(0x135a9c0, 0x7d, 0xc420010035)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 +0x2b
main.main()
	/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:118 +0x54e
!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!
================== ERROR !!! FAILED to execute End-2-End Scenario ==================
{code}

I guess I must have missed something here. Can you maybe shed some light? Thank you.","08/May/17 9:10 PM;nnao;Oh, it's my fault. I had closed grpc connection second times.
So I will fix that bug and will push the code after making test cases.
Thanks.",09/May/17 5:00 PM;tonyyang132;[~nnao] Glad that what's been haunting me will be taken care of. Thank you :),"10/May/17 7:15 PM;ChristopherFerris;hi [~nnao], thanks for taking this one on! It is important to get this one merged for the alpha2 release. I realize there's been back and forth in comments. Any chance you could give it some focus, please?

 

Thanks!","10/May/17 11:16 PM;nnao;Hi ChristopherFerris,
Yes. The patches of adding timeout option were completed, but now I write a unit test of timeout option.","18/Jul/17 4:23 AM;hanhzf;[~nnao] [~ChristopherFerris] seem that we have met the same problem with fabric1.0 release version, when using kafka as the backend for orderer. Error as below:

{color:#d04437}2017-07-17 08:52:11.956 UTC [orderer/kafka] Enqueue -&gt; WARN 4c2 [channel: testchainid] Will not enqueue, consenter for this channel hasn&#39;t started yet{color}
{color:#d04437}2017-07-17 08:52:11.958 UTC [orderer/common/deliver] Handle -> WARN 4c3 Error reading from stream: rpc error: code = Canceled desc = context canceled{color}

{color:#d04437}2017-07-16 07:45:33.086 UTC [channelCmd] InitCmdFactory -&gt; INFO 109 Endorser and orderer connections initialized
Error: timeout waiting for channel creation{color}

{color:#333333}FYI, we will continue investigate on this issue.{color}

 

 ","18/Jul/17 6:01 PM;nnao;[~hanhzf] What if you set a timeout option longer? (e.g. -t 10) Does orderer log shows that channel creation succeed?.
This patch just waits for channel creation. If channel creation was failed, peer can't know that.","25/Jul/17 4:10 AM;shanlusun;Got the same error as [~hanhzf] with Fabric 1.0, as a workaround I added one more argument: '{color:#d04437}-t 10{color:#333333}'{color}{color} for 'create channel', then kafka works well.
{code:java}
// code placeholder
peer channel create -o orderer.chain.ad.xiaomi.com:7050 -c $CHANNEL_NAME -t 10 -f ./channel-artifacts/channel.tx --tls $CORE_PEER_TLS_ENABLED --cafile $ORDERER_CA >&log.txt{code}",,,,,,,,,,,,,,,,,,
Convert fabric v0.6 documentation (.md to .rst) ,FAB-2977,15557,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rameshthoomu,rameshthoomu,rameshthoomu,03/Apr/17 4:34 PM,08/Apr/17 4:29 PM,26/Apr/18 6:50 AM,08/Apr/17 4:29 PM,v0.6,,,v0.6,,fabric-docs,,,,,,0,Documentation,,,,,,,with the recent change from mkdocs to sphinx theme broken v0.6 documentation build. Convert v0.6 .md documentation to .rst and configure index.rst and conf.py to build v0.6 documentation in readthedocs. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00u9l:,,,,,,,,rameshthoomu,,,,,,,,,,,,,,,,v0.6,,,true,08/Apr/17 4:29 PM;rameshthoomu;Patch has been submitted and merged.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
back to register enroll unroll seem to fail - timing related.,FAB-2955,15535,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,aambati,rickr,rickr,31/Mar/17 3:51 PM,12/May/17 4:55 PM,26/Apr/18 6:50 AM,27/Apr/17 11:35 AM,,,,v1.0.0,,fabric-ca,,,,,,0,,,,,,,,"The Java SDK makes some Fabric ca calls register enroll reenroll and revoke during it integration tests.  Most of the time these don't fail.  But every 10th run or so a failure 500 returns.  Putting in sleeps seems to have solved this.

There is no specific scenario by which I can say makes this happens. Best advise is to do stress testing of the api to try and reproduce.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00u5l:,,,,,,,,aambati,rennman,rickr,smithbk,,,,,,,,,,,,,master,,,true,"31/Mar/17 4:34 PM;smithbk;Anil, hopefully you'll be able to reproduce this with your stress testing","31/Mar/17 5:37 PM;rennman;
[~aambati] Given the fact that a sleep provides a work-around for this, it may be a different issue.  However, I did want to make you aware of another intermittent fail situation regarding auth errors as described by Fab-2842. With this awareness, at a minimum you can filter out any auth failures due to certificate verification if it's not related to this defect (FAB-2955.)",18/Apr/17 7:14 PM;aambati;https://gerrit.hyperledger.org/r/7955,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Instantiate Chaincode Fails (GRPC: Timed OUT),FAB-2951,15531,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,vanderheijden86,vanderheijden86,31/Mar/17 9:05 AM,24/May/17 9:30 AM,26/Apr/18 6:50 AM,08/May/17 5:09 PM,,,,v1.0.0,,fabric-peer,,,,,,0,deploy,,,,,,,"Instantiating chaincode locally on a peer does not work and gives a grpc:timed out error. 
The host is listening on the correct ports, I checked this in netstat. 

This is the message in the docker container:

CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                     PORTS               NAMES
ea99f0649b34        dev-jdoe-mycc-1     ""chaincode -peer.a...""   9 seconds ago       Exited (0) 4 seconds ago                       dev-jdoe-mycc-1
[~/.go/src/github.com/hyperledger/fabric (master *)] $ docker logs dev-jdoe-mycc-1
2017/03/31 08:56:20 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 0.0.0.0:7051: getsockopt: connection refused""; Reconnecting to {""0.0.0.0:7051"" <nil>}
2017/03/31 08:56:22 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 0.0.0.0:7051: getsockopt: connection refused""; Reconnecting to {""0.0.0.0:7051"" <nil>}
2017/03/31 08:56:22 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 0.0.0.0:7051: getsockopt: connection refused""; Reconnecting to {""0.0.0.0:7051"" <nil>}
2017-03-31 08:56:22.485 UTC [shim] Start -> ERRO 001 Error trying to connect to local peer: grpc: timed out when dialing
[~/.go/src/github.com/hyperledger/fabric (master *)] $

More people experience this bug: https://chat.hyperledger.org/channel/fabric?msg=zJb8ahpo9Kud3fM9L
","- Mac OS X Sierra 10.12.1 (16B2657)
- Issue replicated on Ubuntu 16.04",,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,0|i00u4p:,,,,,,,,binhn,muralisr,vanderheijden86,xixuejia,,,,,,,,,,,,,,,,,13/Apr/17 6:14 AM;muralisr;[~vanderheijden86] peer in docker container is not accessible (at least by default) over 0.0.0.0:7051.  Most connectivity issues have been environment/user errors and not a bug. Can we pick this up again in Rocket chat if you still have this problem ? ,08/May/17 5:09 PM;binhn;Closed due to lack of response,24/May/17 9:30 AM;xixuejia;I met the same issue. I found there were docker images with name like 'dev-peer0.org1.example.com-mycc-1.0:latest' before I start the e2e test. Remove all these kinds of chaincode images and then rerun e2e test will work.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enabling TLS causes problems for peer who isn't a gossip leader,FAB-2942,15521,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,davidkel,davidkel,30/Mar/17 11:03 AM,15/May/17 9:46 AM,26/Apr/18 6:50 AM,15/May/17 9:46 AM,v1.0.0,,,v1.0.0,,fabric-peer,,,,,,0,v1.0,,,,,,,"I've been happily working with 2 peers in my channel (for Fabric Composer) when TLS has not been enabled. Both peers responding to proposals and doing commits as required. However as soon as I enable TLS support across the peers and orderer. The peer that isn't the gossip leader stops interacting and I am unable to continue working with a 2 peer system. I have got around this for now by setting the failing peer to also be a gossip leader.
This problem shows up when I try to instantiate chaincode on both peers.
My Docker yaml file is based on the node sdk e2e tests (which I note only uses a single peer from each 2 peer organisation to instantiate chaincode) and is as follows: 
```
version: '2'

services:
  ca0:
    image: hyperledger/fabric-ca:x86_64-1.0.0-alpha
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
    ports:
      - ""7054:7054""
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/peerOrg1-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/d8a5b3cac1b821f6e4b487ceaf1fd239cdcfc310894150908b90f05e9179556a_sk -b admin:adminpw' -d
    volumes:
      - ./crypto-config/peerOrganizations/peerOrg1/ca/:/etc/hyperledger/fabric-ca-server-config
      - ./tls/ca:/etc/hyperledger/fabric-ca-server
    container_name: ca_peerOrg1

  orderer0:
    container_name: orderer0
    image: hyperledger/fabric-orderer:x86_64-1.0.0-alpha
    environment:
#      - GRPC_TRACE=all
#      - GRPC_VERBOSITY=debug
#      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/twoorgs.orderer.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/tls/orderer/key.pem
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/tls/orderer/cert.pem
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/tls/orderer/ca-cert.pem, /etc/hyperledger/tls/peers/peer0/ca-cert.pem, /etc/hyperledger/tls/peers/peer1/ca-cert.pem]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
        - ./:/etc/hyperledger/configtx
        - ./crypto-config/ordererOrganizations/ordererOrg1/orderers/ordererOrg1orderer1/:/etc/hyperledger/msp/orderer
        - ./tls/orderer:/etc/hyperledger/tls/orderer
        - ./tls/peers:/etc/hyperledger/tls/peers

  peer0:
    container_name: peer0
    image: hyperledger/fabric-peer:x86_64-1.0.0-alpha
    environment:
      - CORE_CHAINCODE_EXECUTETIMEOUT=90000
#      - CORE_CHAINCODE_LOGLEVEL=DEBUG
#      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_NEXT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_GOSSIP_ORGLEADER=true
      - CORE_PEER_ADDRESS=peer0:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0:7051
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/tls/key.pem
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/tls/cert.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/tls/ca-cert.pem
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=systestv1_default
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-defaultchain=false
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/peerOrg1/peers/peerOrg1Peer1/:/etc/hyperledger/msp/peer
        - ./tls/peers/peer0:/etc/hyperledger/tls
    depends_on:
      - orderer0

  peer1:
    container_name: peer1
    image: hyperledger/fabric-peer:x86_64-1.0.0-alpha
    environment:
      - CORE_CHAINCODE_EXECUTETIMEOUT=90000
#      - CORE_CHAINCODE_LOGLEVEL=DEBUG
#      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_NEXT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_GOSSIP_ORGLEADER=true
      - CORE_PEER_ADDRESS=peer1:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1:7051
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/tls/key.pem
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/tls/cert.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/tls/ca-cert.pem
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=systestv1_default
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start --peer-defaultchain=false
    ports:
      - 7056:7051
      - 7058:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/peerOrg1/peers/peerOrg1Peer2/:/etc/hyperledger/msp/peer
        - ./tls/peers/peer1:/etc/hyperledger/tls
    depends_on:
      - orderer0
      - peer0
``
I of course could have setup TLS incorrectly. I have used the certificates made available in the node sdk e2e tests so these could be incorrect so any advice on what to look for there would be great.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00u2h:,,,,,,,,bmkor,davidkel,mastersingh24,,,,,,,,,,,,,,,,,,"02/Apr/17 11:46 AM;mastersingh24;[~davidkel] - my best guess is that the CN in the TLS certificate(s) you are using for the peers don't match the hostname(s) of the peers  (which would be peer0 and peer1).

Can you check to see what the CN is in the CORE_PEER_TLS_CERT_FILE for each of your peers? ",02/Apr/17 1:28 PM;mastersingh24;[~davidkel] - My best guess is that the CN's in the CORE_PEER_TLS_CERT_FILE used for each peer do not contain the correct hostname's (peer0 and peer1).  Can you check the cert for each peer?,"05/Apr/17 8:29 AM;davidkel;Many thanks for the reply. I will check when I am back in the office to confirm. If that is the case is there a way to override the host name for testing purposes ? if not then I will look at creating my own certificates with the correct CN.
","11/Apr/17 12:32 PM;davidkel;I've checked the CN for the CORE_PEER_TLS_CERT_FILE for each of the peers and they are different. The first has a CN of peer0 and the second has a CN of peer1. I noticed that the hostnames for the peer docker containers were random so I tried again by setting their hostnames respectively to peer0 and peer1 but the problem still occurs.
I see the following in the peer logs
{code}
2017-04-11 12:06:59.578 UTC [qscc] Init -> INFO 032 Init QSCC
2017-04-11 12:06:59.578 UTC [sysccapi] deploySysCC -> INFO 033 system chaincode qscc/mychannel(github.com/hyperledger/fabric/core/chaincode/qscc) deployed
2017-04-11 12:06:59.588 UTC [gossip/comm#-1] authenticateRemotePeer -> WARN 034 Remote peer 172.19.0.4:7051 didn't send TLS certificate
2017-04-11 12:06:59.588 UTC [gossip/gossip#peer1:7051] func1 -> WARN 035 Deep probe of peer0:7051 failed: Remote peer 172.19.0.4:7051 didn't send TLS certificate
2017-04-11 12:06:59.592 UTC [gossip/comm#-1] authenticateRemotePeer -> WARN 036 Remote peer 172.19.0.4:7051 didn't send TLS certificate
2017-04-11 12:06:59.592 UTC [gossip/comm#-1] sendToEndpoint -> WARN 037 Failed obtaining connection for peer0:7051, PKIid:[] reason: Remote peer 172.19.0.4:7051 didn't send TLS certificate
2017-04-11 12:21:31.281 UTC [chaincode] Launch -> ERRO 038 launchAndWaitForRegister failed Timeout expired while starting chaincode digitalproperty-network:0.5.10(networkid:dev,peerid:peer1,tx:546df531c6bab54bfbf26ffdbca9eb83a3edd9c208245c7fea9b42ebd40d216d)
2017-04-11 12:21:31.344 UTC [eventhub_producer] Chat -> ERRO 039 Error during Chat, stopping handler: stream error: code = 1 desc = ""context canceled""
{code}
setting GOSSIP_ORGLEADER=true on both peers solves the problem",30/Apr/17 5:32 PM;mastersingh24;[~davidkel] - Is this still an issue?  I've been using the examples/e2e_cli setup which uses TLS by default and don't seem to have this problem,30/Apr/17 5:33 PM;mastersingh24;I don't see this error so perhaps it was a point in time thing,15/May/17 9:46 AM;mastersingh24;This was resolved with FAB-3105,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode Docker repository tags not sanitised,FAB-2929,15508,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,passkit,passkit,29/Mar/17 7:23 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,09/Apr/17 11:10 AM,,,,,,fabric-peer,,,,,,0,,,,,,,,"Chaincode cannot be instantiated (invoked, or queried) if network ID, peer ID or chain code name invalidate Docker's tagging rules. 

{code}
2017-03-29 18:55:59.349 UTC [dockercontroller] Start -> ERRO ee8 start-could not recreate container API error (500): {""message"":""Error parsing reference: \""passkit-Peer/AWS/us-east-2b-pkcc-1\"" is not a valid repository/tag: repository name must be lowercase""}
2017-03-29 18:55:59.349 UTC [container] unlockContainer -> DEBU ee9 container lock deleted(passkit-Peer/AWS/us-east-2b-pkcc-1)
2017-03-29 18:55:59.349 UTC [chaincode] Launch -> ERRO eea launchAndWaitForRegister failed Error starting container: API error (500): {""message"":""Error parsing reference: \""passkit-Peer/AWS/us-east-2b-pkcc-1\"" is not a valid repository/tag: repository name must be lowercase""}
{code}

User supplied network, peer names and chaincode names should be sanitised according to Dockers naming rules {{^[a-z0-9]+(([._-][a-z0-9]+)+)?$}} (https://forums.docker.com/t/docker-registry-v2-spec-and-repository-naming-rule/5466) or could hashed into a UUID (though not sure how much this would hinder debugging cc containers).
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00tzt:,,,,,,,,passkit,,,,,,,,,,,,,,,,master,,,true,30/Mar/17 9:53 AM;passkit;http://gerrit.hyperledger.org/r/7571,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
How To CallAChaincodeFromChaincode: Suggestions to improve Chaincode_Example05 for better understanding this,FAB-2924,15503,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,muralisr,Nishi,Nishi,29/Mar/17 6:33 PM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,21/Apr/17 8:29 PM,v1.0.0,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,,"While testing ""chaincode calling another chaincode"" feature I was using chaincode_example05 calling chaincode_example02.

Following are few improvements we can make to serve our community to use this sample better:
{panel}
1. To replace variable 'chaincodeURL' with 'chaincodeName'.
2. We can pass in channelName 
         a) as third argument to invoke - now args passed to chaincode are - 
              _emphasis_  [""invoke"",""mycc02"", ""sum"", ""myc1""] _emphasis_
         b) append channelName to as chaincodeName/ channelName in the first arg.  - 
              _emphasis_  [""invoke"",""mycc02/myc1"", ""sum""]  _emphasis_

    Both these options were tested using CLI and Bashscripting in e2e flow.

3. We decide which one of these we would like to use in chaincode_example05 and update chaincode_example05 with right comments and may be document alternative usage as w ell in comments.

4. To maintain consistent docs. Go do on chaincode.go sometimes gives a third argument for chanelName and some times it displays only two arguments to InvokeChaincode as follows.

{code}
func (stub *ChaincodeStub) InvokeChaincode(chaincodeName string, args [][]byte) ([]byte, error)
    InvokeChaincode locally calls the specified chaincode `Invoke` using the
    same transaction context; that is, chaincode calling chaincode doesn't
    create a new transaction message.
{code}
{panel}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00typ:,,,,,,,,muralisr,Nishi,,,,,,,,,,,,,,,master,,,true,13/Apr/17 7:36 AM;muralisr;[~2020Nishi] Didn't you end up fixing this yourself ? I believe there's a CR ? If so can you assign to yourself please ,"17/Apr/17 2:09 PM;Nishi;Can the related patchet https://gerrit.hyperledger.org/r/#/c/7595/ be merged?
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Using custom state store not working and to complicated,FAB-2923,15502,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,cdaughtr,kraemer,kraemer,29/Mar/17 6:22 PM,10/May/17 5:01 AM,26/Apr/18 6:50 AM,10/May/17 5:01 AM,v1.0.0,,,v1.0.0-alpha2,,fabric-sdk-node,,,,,,0,alpha2,node-SDK,,,,,,"Hi,

I'm trying to use our custom implementation of a key value store. The FileKeyValueStore is only for development and should not be used in production so we want to store the credentials in a secure store.
Unfortunately, at the moment (version 1.0.0-snapshot.6) this is not straightforward and also not working the way it is implemented at the moment.

*Issue 1:*

First I need to set the implementation at multiple places.
# {{client.setStateStore(storeInstance)}} on the Client instance
# {{new CAClient(url, null, null, StateStore, opts}} when I instantiate the CA client. Here the class and the opts are passed in
# {{user.setEnrollment(key, certificate, msp, {obj}}} here an object with the properties {{KVSImplClass}} and {{kvsOpts}} is passed in

This is very inconsistent, there should be an aligned way to pass a store to the different classes. Also for users of the API it is not very convenient to pass in the store so often.

*Issue 2:*

This is actually the bigger issue:
When a user is stored in the state store (called by Client.js saveUserToStateStore)  {{setValue}} is called with a string version of the user object. Within the {{toString}} {{JSON.stringify}} is executed on all properties +including+ the {{this._kvsCryptoOpts}} object. This leads to the {{KVSImplClass}} not being stored in the string (a function cannot be stringified).
When I restart my application I try to receive the user from the state store. The JSON object returned does not include the value {{KVSImplClass}} because it was not stored.
This results in an error, because the user information cannot be read. Because of the missing {{KVSImplClass}} a new FileKeyValueStore is instantiated from which nothing can be read. This is because of the fallback if no {{KVSImplClass}} is set.",,,,,,,,,,,,,,FAB-3040,,,,,,,,,,,,,,,,,,0|hzzz6a:rfm,,,,,,,,cdaughtr,dshuffma,kraemer,,,,,,,,,,,,,,master,,,true,03/May/17 4:55 PM;cdaughtr;http://gerrit.hyperledger.org/r/8905,"04/May/17 4:20 PM;jimthematrix;thanks for taking the time to write this up [~kraemer]. Definitely agree with you this area needs to be fixed. so the problem with FabricCAClientImpl constructor and User.setEnrollment() both requiring that weird KVSImplClass and the corresponding opts parameters, is to construct a CryptoSuite instance needed to handle certs and keys. after thinking this over, I've concluded that the design should really be that we give the application more control on constructing the CryptoSuite instance and setting it to the objects that need it (ca client and user). in addition, we shouldn't try to serialize the settings related to the crypto suite as part of the user enrollment persistence, but instead leave that knowledge (what's the right key algo, security level, hashing algo etc.) to the application to manage.

Doing the above would eliminate the weird parameters from the APIs and make it easier for applications to keep track of where CryptoSuite instances are constructed and used.

Please let us know if you have more input on this latest thinking. thanks again for your contribution to making the SDKs better. And feel free to review 8905 that [~cdaughtr] just uploaded",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode names and version with periods fail query.,FAB-2922,15501,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,wlahti,rickr,rickr,29/Mar/17 6:17 PM,06/Apr/17 12:13 AM,26/Apr/18 6:50 AM,06/Apr/17 12:13 AM,v1.0.0,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,,Install chaincode with a chaincode name or version with a period works ok and can be invoked but fails to be found with getinstalledchaincodes lcc query.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00ty9:,,,,,,,,rickr,wlahti,,,,,,,,,,,,,,,master,,,true,03/Apr/17 7:09 PM;wlahti;The fix has been merged into master. It more thoroughly validates the chaincode name for illegal characters and adds in validation of the version. It also ensures the query to get all installed chaincodes on a peer returns the expected results when a chaincode version contains a period. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-ca-server panic when statically linking against pthread lib,FAB-2919,15496,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,smithbk,rennman,rennman,29/Mar/17 2:12 PM,25/Oct/17 8:39 PM,26/Apr/18 6:50 AM,25/Oct/17 8:39 PM,v1.0.0-alpha2,,,v1.0.0-alpha2,,fabric-ca,,,,,,0,,,,,,,,"While attempting TLS-protected connections to a postgres DB, it was discovered that the fabric-ca-server is subject to panic as a consequence of a C system call to get the current DB user, user.Current() from the golang os package -- more specifically exploiting embedded c code in the user package via getpwuid_r().

An analysis shows that the code is victim to a bug in glibc, and is exposed when the app is statically linked against the pthread lib. An in-depth discussion can be found here:
https://tschottdorf.github.io/golang-static-linking-bug

The simplest solution is just to build the docker execs without the -static flag. In docker-env.mk:
#DOCKER_GO_LDFLAGS += -linkmode external -extldflags '-static -lpthread'
DOCKER_GO_LDFLAGS += -linkmode external -extldflags '-lpthread'

I have verified this solution in my environment. By making this change and re-building both the exec and docker images, the problem is resolved. However, I don't have enough information to understand the genesis of this flag, and although I'm sure it merely propagated from the original fabric source tree, it warrants feedback from someone who understands the ramifications of such a base change, and whether it should be generally applied in other projects.
",,,,,,,,,,,,,,,,,,,,,,,,29/Mar/17 2:15 PM;rennman;debug.txt;https://jira.hyperledger.org/secure/attachment/10632/debug.txt,29/Mar/17 2:15 PM;rennman;pg_hba.conf;https://jira.hyperledger.org/secure/attachment/10631/pg_hba.conf,29/Mar/17 2:15 PM;rennman;postgresql.conf;https://jira.hyperledger.org/secure/attachment/10629/postgresql.conf,29/Mar/17 2:15 PM;rennman;runFabricCaFvt.yaml;https://jira.hyperledger.org/secure/attachment/10630/runFabricCaFvt.yaml,,,,,0|i00syg:r,,,,,,,,greg.haskins,JonathanLevi,mastersingh24,rennman,smithbk,,,,,,,,,,,,master,,,true,"29/Mar/17 2:18 PM;rennman;Note that I acknowledge that there may be other solutions; I'm not lobbying for any fix in particular, just registering my observations about the most expedient.","03/May/17 11:59 AM;smithbk;From reading https://tschottdorf.github.io/golang-static-linking-bug, I didn't see any other solution.  Did I miss it?  In particular, they said the underlying problem in glibc was unlikely to ever be fixed and should not use static linking.","03/May/17 2:46 PM;rennman;I don't know if there are any *existing* solutions, I'm just guessing there may be other *potential* solutions.  I had a brief chat with Jonathan around the time I opened this, and he did not agree with using dynamic linking, so ... ? I'm not sure where that leaves us.","04/May/17 3:17 PM;smithbk;From reading https://tschottdorf.github.io/golang-static-linking-bug, I only see two solutions:
1) musl libc which would be risky given that it is at version 1.0.0.   See http://www.musl-libc.org/manual.html
2) dynamic linking

See this section in particular at the end of the article

{code}
Summing up a comment by Carlos O’Donell, the bug is likely to live forever and hard to fix; while you can link statically against glibc, it’s really nothing you should ever find yourself doing. At least not if you’re using threads.
Conclusion

Linking statically against glibc has proven to be an insane idea, but it’s surprising that this was apparently news for everyone up to (but not including) the glibc bug tracker.

We figured out that we can get a less obviously ludicrous static build by substituting glibc for musl-libc, but that needs careful benchmarking and testing (in particular, we instantly had issues with the DNS resolver).

At the end of the day, we decided that there were only diminishing returns to be had by linking a completely static binary. What really matters to us is not having non-standard dependencies - having glibc available is a bit of a drag when deploying on minimal systems (think containers) but is otherwise standard. So, at least for the time being, we’ll distributed an image that only links against glibc dynamically.

In a recent post about the cost and complexity of cgo we warned that cgo comes with a more intricate build process and the occasional need to take debugging beyond the realms Go. This bug sure goes out of its way to prove these points.
{code}","06/May/17 10:46 AM;mastersingh24;Does this only happen with Postgres? The static binaries are also a problem when doing PKCS11 according to some work [~vpaprots@ca.ibm.com] has done as well.

[~greg.haskins] preference has been to continue publishing static binaries as the default and then require people to build dynamically linked binaries / images themselves for a variety of reasons but mainly to ensure we can decouple the binaries from the underlying baseos used in our images.  I tend to agree that the default should continue to build with the -static flag (minimally to stay consistent with the core fabric images).

The in between solution would be to add support for an environment variable in the Makefile to allow building non-static binaries but may want to hold off on that for now and just document what is needed for Postgres TLS support

","07/May/17 2:31 AM;greg.haskins;A few points of clarity on my position.  

1) -static is currently a critical component of our two-phased docker build because we build the binary in one container and inject the result into another (minimal) container.  Doing this with -dynamic _may_ work today because of a design decision we made, but it's not always guaranteed to work because doing so makes assumptions about the minimal runtime environment that may or may not be true in the future.  For instance, if someone were to re-add rocksdb, only -static would include rocksdb in the ELF without carefully coordinating the runtime container.  If we are facing an insurmountable issue because of -static, we will need to revisit this design, but we will need to do so in the context of the full stack impact w.r.t. two-phasing the build.

2) It's not that I think people should build -dynamic binaries themselves.  Merely, I think docker containers are a poor fit for the PKCS11/HSM conversation.  Since I think they are a poor fit, I didn't want to see -static turned off for that reason alone (due to point (1)).  What I was suggesting is that a better fit for HSM is native packaging (RPM/DEB/BREW), which incidentally is also a better fit for -dynamic.  In that model, I can, for example, foresee an RPM spec file that pulls in libtool, turns on pkcs11 support, and links dynamically in a manner that is not just compatible with PKCS11, it's how it was precisely designed to work. ","07/May/17 2:42 AM;greg.haskins;I should also add, my preference here would be to run the entire container chain on ""FROM alpine"", which would imply musl and thus not glibc, thereby eliminating the problems noted.  However, the challenge there is that we also need to support the ppc64le/s390x architectures.  Therefore, the current implementation uses ubuntu/deb and the default glibc, apparent warts and all.  Alternatives to finding a multi-arch Alpine could include linking against the musl-dev packages available on those platforms, dropping two-phased build, or just coordinating the baseos with all needs going forward (note that it's consumed in multiple projects at this point, so it needs to be a super-set or made more granular).","08/May/17 3:40 PM;smithbk;Greg, do you know that musl is stable?  I see that it is only at version 1.0.0.
Is there no way to dynamically link only libc with go, but continue to statically link everything else?
I see the -static-libgo option to statically link the go packages.  Assuming this is the only granularity of control over linking that we get with go, then what about using -static-libgo and then your last option for non-go dependencies (""coordinating the baseos will all needs going forward)?  Or as Gari said, just add a build option.","25/May/17 1:02 PM;smithbk;Unless I hear otherwise, for v1 I'm going to pursue the Makefile option which Gari suggested, and then document how to build for Postgres with TLS support.   Pls speak up if you disagree.","25/May/17 1:05 PM;greg.haskins;Hi Keith, That's probably fine. I can review the CR once it is complete.",25/May/17 4:04 PM;smithbk;See http://gerrit.hyperledger.org/r/9805,"01/Sep/17 6:21 PM;rennman;Firstly, the recommended fix to ""set the FABRIC_CA_DYNAMIC_LINK environment variable"" isn't working. This is because the hyperledger/fabric-baseos image is missing some libraries.

Secondly, although this is definitely related to the postgres driver, it is not exclusively a problem with TLS, in which case the doc _could_ be updated to reflect this. The affected code comes from the pq driver in 
 ./vendor/github.com/lib/pq/conn.go, which calls user.Current(), which ultimately calls

lookupUnixUid(syscall.Getuid()) -->

  return syscall.Errno(C.mygetpwuid_r(C.int(uid), &pwd, (*C.char)(buf.ptr), C.size_t(buf.size), &result))

which is the call that precedes the panic.

There are two places where user.Current() is called in ./vendor/github.com/lib/pq/conn.go:
 1) attempting to set the auth credentials for the postgress db in handlePgpass()

2) setting up TLS in setupSSLClientCertificates()

 

To recreate the problem:

1) unset FABRIC_CA_DYNAMIC_LINK

2) make docker-clean

3) make docker

4) Delete the database:
{code:java}
    /usr/bin/dropdb ""fabric_ca"" -U postgres -h localhost -w{code}
5) Start the server:
{code:java}
docker run -e PGUSER=postgres \
   -ti hyperledger/fabric-ca:x86_64-1.0.1-snapshot-5a5b061 \
  /usr/local/bin/fabric-ca-server start b admin:adminpw -d \
  --db.datasource ""dbname=fabric_ca host=172.17.0.1 port=5432"" \
  --db.type postgres
...
fatal error: unexpected signal during runtime execution
[signal SIGSEGV: segmentation violation code=0x1 addr=0xe5 pc=0x7f2b54b883f8]

runtime stack:
runtime.throw(0xbd3feb, 0x2a)
/opt/go/src/runtime/panic.go:566 +0x95
runtime.sigpanic()
/opt/go/src/runtime/sigpanic_unix.go:12 +0x2cc

goroutine 1 [syscall, locked to thread]:
runtime.cgocall(0x9c5920, 0xc4203b89c0, 0x0)
/opt/go/src/runtime/cgocall.go:131 +0x110 fp=0xc4203b8970 sp=0xc4203b8930
os/user._Cfunc_mygetpwuid_r(0x0, 0xc42039b020, 0x7f2b480008c0, 0x400, 0xc42018e350, 0x0)
??:0 +0x4d fp=0xc4203b89c0 sp=0xc4203b8970
os/user.lookupUnixUid.func1(0x42eb52)
/opt/go/src/os/user/lookup_unix.go:103 +0x1f7 fp=0xc4203b8a50 sp=0xc4203b89c0

{code}
 

After implementing the solution:

export FABRIC_CA_DYNAMIC_LINK=true

make docker
{code:java}
docker run -e PGUSER=postgres -ti hyperledger/fabric-ca:x86_64-1.0.1-snapshot-5a5b061 /usr/local/bin/fabric-ca-server start --db.datasource ""dbname=fabric_ca host=172.17.0.1 port=5432"" --db.type postgres -b admin:adminpw -d
/usr/local/bin/fabric-ca-server: error while loading shared libraries: libltdl.so.7: cannot open shared object file: No such file or directory{code}
 ","01/Sep/17 7:39 PM;rennman;In the meantime, after looking at the conn.co code, it appears that there may be a much simpler work-around for now:

#1 do not rely on the ~/.pgpass mechanism. Either 
    a )always set the user:password in the connection string, or
    b )set *both* the PGUSER and PGPASSWORD environment variables
 #2) alway set the PGSSLCERT and PGSSLKEY environment variables, even if they are not used, e.g.
{code:java}
    PGSSLCERT=dummy
     PGSSLKEY=dummy{code}
will work, as long are they are *not null*. The code in setupSSLClientCertificates() in ./vendor/github.com/lib/pq/conn.go does not call user.Current() if these are set.
Of course if TLS is _actually_ being used, then the files pointed to by PGSSLCERT and PGSSLKEY *must* exist. 

 

This solution does not require the exec to be re-built.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Set proper 'last cut block' number upon chain restart,FAB-2915,15491,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,kchristidis,kchristidis,kchristidis,29/Mar/17 5:15 AM,31/May/17 1:58 PM,26/Apr/18 6:50 AM,29/Mar/17 5:58 PM,v1.0.0-alpha1,,,v1.0.0-alpha2,,fabric-orderer,,,,,,0,kafka,,,,,,,"Both the ""last persisted offset"" and the ""last cut block"" fields need to be set to their proper values before a restarted chain can resume operation. We were taking of the former, but not the latter. This changeset fixes that.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-3040,0|i00tw1:,,,,,,,,kchristidis,,,,,,,,,,,,,,,,master,,,true,29/Mar/17 5:17 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/7525/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Negative test cases failing on vagrant,FAB-2909,15485,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rennman,smithbk,smithbk,28/Mar/17 6:18 PM,12/May/17 4:55 PM,26/Apr/18 6:50 AM,23/Apr/17 10:56 AM,v1.0.0,,,v1.0.0,,fabric-ca,,,,,,0,,,,,,,,"The negative test cases which check for specific error messages fail on vagrant.
The reason appears to be that vagrant translates error messages from host OS.
For example, instead of ""filename too long"", there is a ""protocol error"" message.
The attachment test.out shows the failures.",,,,,,,,,,,,,,,,,,,,,,,,28/Mar/17 6:17 PM;smithbk;test.out;https://jira.hyperledger.org/secure/attachment/10628/test.out,,,,,,,,0|hzzz6i:zzb,,Sprint 15 - Membership Service,Sprint 16 - Membership Service,,,,,rennman,smithbk,,,,,,,,,,,,,,,master,,,true,"28/Mar/17 7:40 PM;rennman;Apparently, this is a one-off.  Filesystem errors generated by attempted operations on synced directories are presumed to be OS-specific, hence the generic 'Protocol error'. Only one test case falls into this category -- the server's attempt to write a file with a name that is too long (which is in fact, OS-specific). 

The solution is to change the config file name in the test to be absolute, and to select a directory which is internal to the vagrant machine, not shared with the host OS.",18/Apr/17 4:57 PM;rennman;[https://gerrit.hyperledger.org/r/#/c/8015/],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
linter now doesn't cover all code,FAB-2902,15478,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,baohua,baohua,baohua,28/Mar/17 10:42 AM,29/Mar/17 7:49 PM,26/Apr/18 6:50 AM,29/Mar/17 7:49 PM,,,,v1.0.0,,,,,,,,0,,,,,,,,"It only checks the following code dir:

""./core"" ""./events"" ""./examples"" ""./peer"" ""./protos"" ""./orderer"" ""./msp"" ""./gossip"" ""./bccsp""

Should include all the go codes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00tt5:,,Sprint 14 - Quality,,,,,,baohua,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node-SDK fails in Cloud Foundry and Windows 10 due to hashtable dependency,FAB-2864,15437,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,isramos,isramos,23/Mar/17 3:21 PM,23/May/17 6:52 PM,26/Apr/18 6:50 AM,23/May/17 6:52 PM,v1.0.0,v1.0.0-alpha1,v1.1,v1.0.0,,fabric-sdk-node,,,,,,0,,,,,,,,"As is Node-SDK does not work in Cloud Foundry (CF) runtimes because it cannot install the node package called ""hashtable"". 
That package requires GCC. However CF don't let you run “apt-get install build-essentials” so it fails to “npm install hashtable”. 

A solution is to replace hashtable with hashtable-js, described as ""a pure Javascript replacement for node-hashtable"", I implemented the code and it seem to work. Now I need someone's help to make the official contribution. Here's the next steps:

(1) make the changes shown in the attached photo
(2) run the E2E test
(3) push the code",,,,,,,,,,,,,,,,,FAB-1466,FAB-3977,,,,,,23/Mar/17 3:20 PM;isramos;Screen Shot 2017-03-23 at 10.20.27 AM.png;https://jira.hyperledger.org/secure/attachment/10602/Screen+Shot+2017-03-23+at+10.20.27+AM.png,,,,,,,,0|hzzz6a:rh7,,Sprint 15 - SDK node,,,,,,isramos,mastersingh24,,,,,,,,,,,,,,,master,,,true,29/Mar/17 7:52 PM;mastersingh24;this seems odd to me - we use other packages which require native code and compilation - e.g. the grpc package,23/May/17 3:04 AM;jimthematrix;http://gerrit.hyperledger.org/r/9681,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric e2e tls certs are invalid type,FAB-2855,15428,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,bmos299,rickr,rickr,22/Mar/17 8:16 PM,08/May/17 7:56 PM,26/Apr/18 6:50 AM,08/May/17 7:56 PM,,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,,"cryptogen  certificates produced are not valid. 
They fail with both grpc trust store and bouncy castle 

Bouncy castle returns 

java.security.cert.CertificateParsingException: Extensions not allowed in v2 certificate.

All SDKs should be able to use these certificates if the are being generated.

https://en.wikipedia.org/wiki/X.509
There is no mention either of a version 4 


Certificate:
    Data:
        Version: 4 (0x3)
        Serial Number: 1000 (0x3e8)
    Signature Algorithm: ecdsa-with-SHA256
        Issuer: CN=ordererOrg0
        Validity
            Not Before: Feb 20 19:06:10 2017 GMT
            Not After : Feb 20 19:06:10 2018 GMT
        Subject: CN=ordererOrg0
        Subject Public Key Info:
            Public Key Algorithm: id-ecPublicKey
                Public-Key: (256 bit)
                pub: 
                    04:af:12:bf:41:00:f6:1d:3a:7e:60:64:50:23:be:
                    0f:f6:ff:d8:83:59:da:1b:b2:f9:6f:c7:0b:14:85:
                    db:67:3b:58:6a:09:6d:1c:d0:71:6b:50:99:6d:4a:
                    a9:9a:30:52:4f:3a:45:cc:55:7c:5a:af:8c:43:05:
                    55:7c:d5:df:c4
                ASN1 OID: prime256v1
                NIST CURVE: P-256
        X509v3 extensions:
            X509v3 Basic Constraints: critical
                CA:TRUE, pathlen:0
            X509v3 Subject Key Identifier: 
                25:5A:92:EB:EA:C4:47:0A:F2:96:0C:7F:F1:F0:F2:1B:1E:C5:13:13
            X509v3 Authority Key Identifier: 
                keyid:25:5A:92:EB:EA:C4:47:0A:F2:96:0C:7F:F1:F0:F2:1B:1E:C5:13:13

    Signature Algorithm: ecdsa-with-SHA256
         30:45:02:21:00:a6:5e:00:d2:45:3c:b1:a5:29:3e:3d:78:34:
         14:d9:58:67:88:a3:4d:5c:0a:80:b9:18:56:1a:1d:cd:93:df:
         9e:02:20:3b:8c:b4:a7:71:6c:fe:03:6c:25:8a:eb:a0:a6:9a:
         54:37:bd:e7:92:ab:3e:9f:ce:e7:98:d8:0c:a0:03:fe:86

[~Clayton Sims] [~ashku] [~bmos299]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00tj5:,,,,,,,,ashutosh_kumar,bmos299,ChristopherFerris,denyeart,mastersingh24,rickr,suganuma,,,,,,,,,,master,,,true,"22/Mar/17 8:52 PM;ashutosh_kumar;[~mastersingh24] , I can take a crack on this , if you are too busy. Please let me know.",25/Mar/17 1:33 PM;mastersingh24;[~rickr] where did you actually get this certificate from?  would you mind attaching to the JIRA?,"27/Mar/17 12:11 PM;rickr;We got them from the Node SDK ->
https://github.com/hyperledger/fabric-sdk-node/tree/master/test/fixtures/tls",28/Mar/17 9:57 AM;rickr;FYI Talking to Jim they were gotten from the cli e2e ,"29/Mar/17 7:42 PM;mastersingh24;hmm - I don't see this issue with any of the certs I just generated, so I'm going to close this for now",29/Mar/17 7:57 PM;rickr;Can you send me the certs and if it work with java I'll close this,"30/Mar/17 10:01 AM;rickr;[~bmos299]  Can your test team independently confirm this ?
thanks
[~Clayton Sims] 
","05/Apr/17 11:54 PM;rickr;Gari and I looked at this and it may not be his tool that's producing this or maybe it did and is now fixed.
At any rate the cli e2e does have these bad certs and really should be fixed up..
[~mastersingh24]  I'll leave it up to Gari to reassign to get that cleaned up. I'll downgrade it a notch given this info.",12/Apr/17 2:56 AM;denyeart;[~mastersingh24] Who would you recommend to look at Rick's last comment?,14/Apr/17 9:01 PM;mastersingh24;I think that [~greg.haskins] is actually doing some work to cleanup the e2e which might be applicable here,14/Apr/17 9:02 PM;mastersingh24;We can either close this item and open a new one (fix / replace e2e certs) or we can rename this one since there actually is not a bug in cryptogen itself (at least not in the current version),23/Apr/17 1:22 PM;ChristopherFerris;[~mastersingh24] what say ye?,23/Apr/17 3:00 PM;rickr;I'm ok with renaming the key is we should make sure the e2e certs are valid.  The ones there were reporting type 4 is is not a valid type.,23/Apr/17 3:02 PM;rickr;I've assigned to you [~bmos299]  to determine the right owner action and validating,"08/May/17 7:56 PM;bmos299;I just ran the cryptogen on commit  268d01a92cdcd6307d5e85b746f09c723e3e66b9

I received back Version 3.  I will close this bug out and re-open if we start seeing the version 4 again.

 

ubuntu@hyperledger-devenv:3870bcf:/opt/gopath/src/github.com/hyperledger/fabric/common/tools/cryptogen/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp/cacerts$ openssl x509 -in ca.org2.example.com-cert.pem -text
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            32:f4:07:c9:4c:50:d2:8e:10:fb:63:e1:0a:cf:e5:0c
    Signature Algorithm: ecdsa-with-SHA256
        Issuer: C=US, ST=California, L=San Francisco, O=org2.example.com, CN=ca.org2.example.com
        Validity
            Not Before: May  8 19:48:49 2017 GMT
            Not After : May  6 19:48:49 2027 GMT
        Subject: C=US, ST=California, L=San Francisco, O=org2.example.com, CN=ca.org2.example.com
        Subject Public Key Info:
            Public Key Algorithm: id-ecPublicKey
                Public-Key: (256 bit)
                pub:",,,,,,,,,,,,,,,,,,,,,,,,,,,
DB TLS CertFiles parameter ignored in server config ,FAB-2845,15418,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,skarim,passkit,passkit,21/Mar/17 11:43 AM,04/Jul/17 4:48 AM,26/Apr/18 6:50 AM,23/Apr/17 10:38 AM,v1.0.0,,,WON'T FIX,,fabric-ca,,,,,,0,,,,,,,,"`processCertFiles()` is not called in the server `configInit()` or at any time before connection is initiated. 

The config below will fail when connecting to a database with a self signed certificate.

{code}
db:
  type: postgres
  datasource: host=example.com port=5432 user=postgres dbname=fabric_ca sslmode=verify-full
  tls:
      enabled: true
      certfiles: ca.cert.pem	  # Comma Separated (e.g. root.pem, root2.pem)
      client:
        certfile: client.cert.pem
        keyfile: client.key.pem
{code}

{code}
2017/03/21 18:59:00 [DEBUG] Initializing 'postgres' data base at 'host=example.com port=5432 user=postgres dbname=fabric_ca sslmode=verify-full'
2017/03/21 18:59:00 [DEBUG] Using postgres database, connecting to database...
2017/03/21 18:59:00 [DEBUG] Database Name: fabric_ca
2017/03/21 18:59:00 [DEBUG] Connection String: host=example.com port=5432 user=postgres dbname=fabric_ca sslmode=verify-full sslcert=client.cert.pem sslkey=client.key.pem
2017/03/21 18:59:00 [ERROR] Failed to connect to Postgres database [error: x509: certificate signed by unknown authority]
Error: x509: certificate signed by unknown authority
{code}

If specified as an array then it connects as expected:

{code}
db:
  type: postgres
  datasource: host=example.com port=5432 user=postgres dbname=fabric_ca sslmode=verify-full
  tls:
      enabled: true
      certfileslist: 
        - ca.cert.pem			
      client:
        certfile: client.cert.pem
        keyfile: client.key.pem
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00los:,,Sprint 14 - Membership Service,Sprint 15 - Membership Service,Sprint 16 - Membership Service,,,,ChristopherFerris,mastersingh24,passkit,skarim,smithbk,,,,,,,,,,,,,,,,"27/Mar/17 12:31 PM;mastersingh24;what's the use case which requires us to support an array of root certificates?
and if we need to support an array, then we should use an array and not a comma-separated list",27/Mar/17 1:16 PM;passkit;I don't think there is one.  Postgres only requires a single root _or_ intermediate.  Problem is that currently the `certfiles` value is not being processed at all.  I guess we have an array because because that's what the tls package wants.,"27/Mar/17 2:06 PM;smithbk;Yes, the reason we allow multiple is because the package allows multiple certs.  I don't know for certain why it allows multiple, but one use case I could image is to handle a server side key rotation.  The server would generate a new key/cert, distribute the new cert so for a period of time all clients would need to trust both, until the server did the actual switch over to the new cert.

The reason we chose to make it a comma-separated list rather than a real list is because we can't handle specifying lists through an env variable or command line option currently ... well, that and also the fact that most times it is going to be a single element anyway.","27/Mar/17 2:17 PM;skarim;[~mastersingh24] I have not seen a specific use case but the TLS package uses a cert pool for root CA certs which allow you to specify more than one certificate. This was one of the reasons to use an array. The fabric-ca client could have multiple roots that it trust for a TLS connection. The TLS client side struct that is used from fabric-ca client is also used for the database TLS connection as well. We could create a separate struct for TLS client on the DB side if we want to only support specifying one root cert. 

The reason not to support an array directly through the config file is due to the command line behavior. Viper/Cobra currently would not allow us to provide array input from the command line. Thus, we decided to use comma separate string to provide more than one value for a flag through the command line. Wanting to have consistent behavior, the same comma separated string in the config file was also used. ","27/Mar/17 2:18 PM;passkit;In the case of an certificate signed by an intermediate ca, multiple ca certs are normally required.  But for Postgres, it doesn't validate down the chain if you supply an intermediate ca cert.  This behaviour is more an exception than the general rule of validating the chain to the root ca.  ","27/Mar/17 8:00 PM;mastersingh24;[~skarim] - we don't use comma separated lists in any of the other config files.  I don't like putting a comma-separated list as a YAML entry when we can use arrays.  I understand that maybe the command line might be different from the config file or from env variables.  BTW - for environment variables I believe that you can use the ""[cert1.pem,cert2.pem,cert3.pem]"" array format (this is valid in YAML as well) and things should still work","28/Mar/17 5:57 AM;passkit;Can confirm that you can set arrays in environment variables. 

{code}
ORDERER_GENERAL_TLS_ROOTCAS=[""${ORDERER_CFG_PATH}/ssl/ca.cert.pem"",""${ORDERER_CFG_PATH}/ssl/intermediate.cert.pem""]
ORDERER_GENERAL_TLS_CLIENTROOTCAS=[""${ORDERER_CFG_PATH}/ssl/ca.cert.pem"",""${ORDERER_CFG_PATH}/ssl/intermediate.cert.pem"",""${ORDERER_CFG_PATH}/ssl/bc-intermediate.cert.pem"",""${ORDERER_CFG_PATH}/ssl/ll-intermediate.cert.pem""]
{code}

This is my current orderer config.","29/Mar/17 3:05 PM;skarim;[~passkit] Hi Nick, I wanted to see if you tried using an array with Fabric-ca environment variables and got it to work? I am doing some testing and can't seem to specify an array as an environment variable without viper complaining about it. For example, with the code you have right now you can could test it with the env var FABRIC_CA_CLIENT_TLS_CERTFILESLIST",21/Apr/17 6:56 PM;ChristopherFerris;[~skarim] [~smithbk] [~mastersingh24] this says in review yet I cannot for the life of me find the CR. Is it still in review? Done?,"22/Apr/17 11:09 PM;skarim;[~ChristopherFerris] This is no longer relevant, the underlying issue as to why we needed this was resolved via https://jira.hyperledger.org/browse/FAB-2993. So the change set got abandoned. I don't see an option to cancel the work item, should it be marked done?
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failure to get last config block,FAB-2812,15385,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rickr,rickr,rickr,17/Mar/17 2:20 PM,17/Mar/17 7:42 PM,26/Apr/18 6:50 AM,17/Mar/17 7:42 PM,,,,v1.0.0,,fabric-sdk-java,,,,,,0,java-SDK,v1.0,,,,,,Failure to get last config block,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00tah:,,,,,,,,rickr,,,,,,,,,,,,,,,,master,,,true,17/Mar/17 3:11 PM;rickr;Should be fixed with https://gerrit.hyperledger.org/r/#/c/7311/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
node e2e (with TLS) tests are failing in s390x and power nodes,FAB-2790,15362,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,rameshthoomu,rameshthoomu,15/Mar/17 3:05 PM,17/Apr/17 4:47 AM,26/Apr/18 6:50 AM,17/Apr/17 4:47 AM,,,,v1.0.0,,fabric-sdk-node,,,,,,0,,,,,,,,"Observed e2e (node with TLS) tests are failing in *s390x and power* nodes on below commit levels in CI  (Jenkins)

{code:java}
FABRIC # b096016   
FABRIC-CA# 8a9a227
FABRIC_SDK_NODE# 6f77cdf
{code}

*Error Log:*

{code:java}
21:49:29 ***** End-to-end flow: create channel *****
21:49:29 
21:49:29 [31merror[39m: [Client.js]: Failed to load user ""admin"" from local key value store. Error: Error: Failed to find ""mspid"" in the deserialized state object for the user. Likely due to an outdated state store.
21:49:29     at User.fromString (/data/w/workspace/fabric-sdk-node-verify-s390x/gopath/src/github.com/fabric-sdk-node/node_modules/fabric-client/lib/User.js:9:6763)
{code}
*Failed build log:* https://jenkins.hyperledger.org/sandbox/job/e2e_FIT_s390x/12/consoleText

didn't observe this error in x86_64 Jenkins CI nodes. Below is the build reference https://jenkins.hyperledger.org/sandbox/job/e2e_FIT_x86_64/15/console",Jenkins CI environment. S390x and power machines,,,,,,,,,,,,,,,,FAB-2791,,,,,,,,,,,,,,,0|i00t5t:,,,,,,,,dongming,ptippett,rameshthoomu,,,,,,,,,,,,,,,,,,"15/Mar/17 4:12 PM;dongming;I have seen the same error message on solftlayer non-vagrant environment with the latest fabric-sdk-node.

root@qa-peer05:~/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e# node create-channel.js
info: Returning a new winston logger with default configurations
TAP version 13
#

***** End-to-end flow: create channel *****


error: [Client.js]: Failed to load user ""admin"" from local key value store. Error: Error: Failed to find ""mspid"" in the deserialized state object for the user. Likely due to an outdated state store.
    at User.fromString (/root/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/User.js:225:10)
    at /root/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/Client.js:299:22
error: [Client.js]: Failed to load an instance of requested user ""admin"" from the state store on this Client instance. Error: Error: Failed to find ""mspid"" in the deserialized state object for the user. Likely due to an outdated state store.
    at User.fromString (/root/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/User.js:225:10)
    at /root/gopath/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/Client.js:299:22
not ok 1 Failed to enroll user 'admin'. Error: Failed to find ""mspid"" in the deserialized state object for the user. Likely due to an outdated state store.
  ---
    operator: fail
    at: hfc.newDefaultKeyValueStore.then.then (/root/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/create-channel.js:82:5)
  ...
not ok 2 Failed to create the channel.
  ---
    operator: fail
    at: hfc.newDefaultKeyValueStore.then.then.then (/root/gopath/src/github.com/hyperledger/fabric-sdk-node/test/integration/e2e/create-channel.js:92:6)
  ...
ok 3 Successfully waited to make sure new channel was created.

1..3
# tests 3
# pass  1
# fail  2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fixed timeout of 30 seconds for chaincode init to complete,FAB-2767,15335,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,muralisr,davidkel,davidkel,13/Mar/17 6:48 PM,17/Mar/17 5:29 PM,26/Apr/18 6:50 AM,17/Mar/17 5:29 PM,v1.0.0,,,v1.0.0,,fabric-peer,,,,,,0,chaincode,,,,,,,"We have chaincode that can take 2 minutes for the INIT to run and it fails with some strange errors
{quote}
Error: [80914958]No ledger context for GetState. Sending ERROR
{quote}
from Rocketchat: 
{quote}
theres a timeout of 30 secs. I think you are running into the situation where the requester cleaned up the context and returned error back. When the chaincode called GetState, the context was no longer there (and you get the above error). We need to remove the hardcoded timeout and allow timeout to be specified via a property.
{quote}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00t0h:,,,,,,,,davidkel,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
e2e_cli sample doesn't work when TLS is disabled.,FAB-2762,15330,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,Ratnakar,Ratnakar,Ratnakar,13/Mar/17 3:02 PM,13/Mar/17 10:24 PM,26/Apr/18 6:50 AM,13/Mar/17 10:24 PM,,,,v1.0.0,,fabric-endorser,,,,,,0,endorser,,,,,,,"Objective of the Test:
Verify End-to-End test when TLS is disabled.
Tested on commit Level : *96b1b901ce2f2f3800a554e4a56c9568954633d5*

Command used to verify :
{panel}
 ./generateCfgTrx.sh && docker-compose -f docker-compose-no-tls.yaml up -d && docker logs -f cli
{panel}

Error Message:
{code}
WARNING: The CHANNEL_NAME variable is not set. Defaulting to a blank string.
Creating network ""e2ecli_default"" with the default driver
Creating orderer0
Creating peer0
Creating peer1
Creating peer2
Creating peer3
Creating cli
-----------------------------------------
Orderer IP 172.18.0.2
PEER0 IP 172.18.0.3
PEER1 IP 172.18.0.4
PEER2 IP 172.18.0.5
PEER3 IP 172.18.0.5
-----------------------------------------
Channel name : mychannel
2017-03-13 14:34:18.461 UTC [logging] InitFromViper -> DEBU 001 Setting default logging level to DEBUG for command 'channel'
2017-03-13 14:34:18.461 UTC [msp] GetLocalMSP -> DEBU 002 Returning existing local MSP
2017-03-13 14:34:18.461 UTC [msp] GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity
Error connecting: rpc error: code = 14 desc = grpc: RPC failed fast due to transport failure
Error: rpc error: code = 14 desc = grpc: RPC failed fast due to transport failure
Usage:
  peer channel create [flags]

Global Flags:
  -b, --blockpath string           Path to file containing genesis block
      --cafile string              Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
  -c, --chain string               In case of a newChain command, the chain ID to create.
  -f, --file string                Configuration transaction file generated by a tool such as configtxgen for submitting to orderer
      --logging-level string       Default logging level and overrides, see core.yaml for full syntax
  -o, --orderer string             Ordering service endpoint
      --test.coverprofile string   Done (default ""coverage.cov"")
      --tls                        Use TLS when communicating with the orderer endpoint
  -v, --version                    Display current version of fabric peer server

!!!!!!!!!!!!!!! Channel creation failed !!!!!!!!!!!!!!!!
================== ERROR !!! FAILED to execute End-2-End Scenario ==================

{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00szd:,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,master,,,true,13/Mar/17 3:22 PM;Ratnakar;Change set https://gerrit.hyperledger.org/r/#/c/7141 will not work with non-tls end-to-end test,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
E2E_CLI example should use orderer docker container name instead of Orderer IP,FAB-2746,15314,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,rhegde,rhegde,12/Mar/17 1:12 AM,05/Apr/17 1:08 AM,26/Apr/18 6:50 AM,05/Apr/17 1:08 AM,,,,,,,,,,,,0,,,,,,,,"E2E CLI example that's used for verifying the Fabric Images uses the Orderer IP https://github.com/hyperledger/fabric/blob/master/examples/e2e_cli/scripts/script.sh#L4 instead of best practice of using docker container name i.e. orderer. 

Use of IP increases maintenance and must be discouraged. However changing the E2E CLI script to use docker container name i.e. orderer result in failing the test case and this needs to be investigated.

Note: Peer usage is addressed using the peer's container name. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00svt:,,,,,,,,rhegde,,,,,,,,,,,,,,,,,,,,24/Mar/17 3:40 PM;rhegde;This is now not reproducible and can be closed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot start peer: CRIT 001 Could not find genesis.yaml,FAB-2739,15307,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,hycind,hycind,10/Mar/17 8:24 PM,10/Apr/17 11:35 AM,26/Apr/18 6:50 AM,10/Apr/17 11:34 AM,v0.6,,,WON'T FIX,,fabric-peer,,,,,,0,,,,,,,,"Attempted to download and build fabric on a CentOS guest (64 bit) running on Virtual Box on a Windows 7 64 bit machine.
Code was downloaded from gerrit.hyperledger.org.
Go version 1.8
Docker Version: 17.03.0-ce

Error details:
{noformat}
2017-03-10 09:03:54.437 EST [common/configtx/test] 1 -> CRIT 001 Could not find genesis.yaml, try setting PEER_CFG_PATH, ORDERER_CFG_PATH, or GOPATH correctly
panic: Could not find genesis.yaml, try setting PEER_CFG_PATH, ORDERER_CFG_PATH, or GOPATH correctly

goroutine 1 [running]:
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc4201987e0, 0xccd7fa, 0x5d, 0x0, 0x0, 0x0)
        /root/go-dev/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x11e
github.com/hyperledger/fabric/common/configtx/test.init.1()
        /root/go-dev/src/github.com/hyperledger/fabric/common/configtx/test/helper.go:72 +0x3c7
github.com/hyperledger/fabric/common/configtx/test.init()
        /root/go-dev/src/github.com/hyperledger/fabric/common/configtx/test/helper.go:113 +0xb1
github.com/hyperledger/fabric/peer/channel.init()
        /root/go-dev/src/github.com/hyperledger/fabric/peer/channel/join.go:140 +0x91
main.init()
        /root/go-dev/src/github.com/hyperledger/fabric/peer/main.go:148 +0x82
{noformat}

Was able to recreate the error in another CentOS guest, that was built from scratch and not cloned. The entire putty session right from login, installation of packages and the error is captured in a text file and uploaded in the files section.

The procedure used to create the virtual machine guest is uploaded as a PDF document.
","Windows 7 64 bit host machine
CentOS 64 bit running as a guest on Virtual Box",,,,,,,,,,,,,,,,,,,,,,,10/Mar/17 8:24 PM;hycind;Procedure- VBox.pdf;https://jira.hyperledger.org/secure/attachment/10575/Procedure-+VBox.pdf,10/Mar/17 8:24 PM;hycind;PuTTY Session output.txt;https://jira.hyperledger.org/secure/attachment/10576/PuTTY+Session+output.txt,,,,,,,0|i00su9:,,,,,,,,ChristopherFerris,Clayton Sims,hycind,,,,,,,,,,,,,,,,,,10/Mar/17 8:36 PM;Clayton Sims;What version?  I noticed you put affected version 0.6?,"10/Mar/17 9:02 PM;hycind;The Makefile in the fabric folder has this..

{noformat}
PROJECT_NAME   = hyperledger/fabric
BASE_VERSION   = 0.6.2-preview
IS_RELEASE     = false
{noformat}
... and I did a {{git checkout v0.6}}",10/Apr/17 11:35 AM;ChristopherFerris;We have no plans to address bugs in v0.6 as it has been deprecated with the release of v1.0-alpha,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Identity password is being logged in clear text,FAB-2717,15285,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,aambati,aambati,aambati,09/Mar/17 7:50 PM,14/Mar/17 1:34 PM,26/Apr/18 6:50 AM,14/Mar/17 1:34 PM,,,,,,fabric-ca,,,,,,0,Security,,,,,,,"_Pass_ attribute of *_ServerConfigIdentity_* that has password of an identity is logged in clear text, it must be masked",,,,,,288000,288000,,0%,288000,288000,,,,,,,,,,,,,,,,,,,,,0|i00spt:,,,,,,,,aambati,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ChainCode is packaged with Win-style path and not recognized by Peer side,FAB-2711,15279,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,YingShi,YingShi,09/Mar/17 2:38 AM,22/May/17 4:21 PM,26/Apr/18 6:50 AM,22/May/17 4:21 PM,v1.0.0,,,v1.0.0,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"[Test setting]
fabric version: latest @ March 6th
fabric yaml: \fabric-sdk-node\test\fixtures\docker-compose.yml
node sdk version: latest @ March 6th
OS: sdk running in win7, peers in linux container


[Debug info]
Run fabric-sdk-node\test\integration\e2e\invoke-transaction.js, then get:
[34mdebug[39m: [Peer.js]: Peer.sendProposal - Start
[34mdebug[39m: [Peer.js]: Peer.sendProposal - Start
[31merror[39m: [Peer.js]: GRPC client got an error response from the peer ""grpc://localhost:7051"". Error: Illegal file detected in payload: ""src\github.com\example_cc\example_cc.go""
    at D:\eclipse-workspace\fabric-sdk-node\node_modules\grpc\src\node\src\client.js:434:17

Add trace to packager/Golang.js and get:
info[39m: [packager/Golang.js]: packaging GOLANG from github.com/example_cc
[34mdebug[39m: [packager/Golang.js]: goPath: /eclipse-workspace/fabric-sdk-node/test/fixtures, chaincodePath: github.com/example_cc
[34mdebug[39m: [packager/Golang.js]: Compose the path to the chaincode project directory: \eclipse-workspace\fabric-sdk-node\test\fixtures\src\github.com\example_cc
[34mdebug[39m: [packager/Golang.js]: goPath: /eclipse-workspace/fabric-sdk-node/test/fixtures, filePath: \eclipse-workspace\fabric-sdk-node\test\fixtures\src\github.com\example_cc
[34mdebug[39m: [packager/Golang.js]: adding entry name=src\github.com\example_cc\example_cc.go, fqp=D:\eclipse-workspace\fabric-sdk-node\test\fixtures\src\github.com\example_cc\example_cc.go
[34m

No matter the input path style, in Windows the packager converts name and fqp into Win-style by path.join/ relative, which is not recognized in Peers.


[To fix temporarily]
Modify fabric-client/lib/packager/Golang.js:function findSource(goPath, filePath) line 100-101 as:
//- name: path.relative(goPath, entry.path),
//- fqp: entry.path
name: path.relative(goPath, entry.path).replace(/\\/g,""\/""),
fqp: entry.path.replace(/\\/g,""\/"")","fabric version: latest @ March 6th
fabric yaml: \fabric-sdk-node\test\fixtures\docker-compose.yml
node sdk version: latest @ March 6th
OS: sdk running in win7, peers in linux container",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz6a:rh4,,Sprint 15 - SDK node,,,,,,YingShi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix CouchDB retry logic,FAB-2709,15277,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,chris.elder,denyeart,denyeart,09/Mar/17 12:22 AM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,18/Apr/17 5:41 PM,,,,v1.0.0,,fabric-ledger,,,,,,0,,,,,,,,"FAB-2437 and FAB-2600 added retry logic for CouchDB interactions.
To account for cases when peer and couchdb start at same time, 2 minutes of retries are done.  This does not work well for chaincode execution though.  Need to fix it such that peer startup verification retries more times than endorsement/commit interactions with CouchDB, ideally configurable.

Note that invalid index specified in _find API returns 500 error:
{""error"":""unknown_error"",""reason"":""Unknown Error: mango_idx :: {no_usable_index,no_index_matching_name}""} .

500 errors like this should ideally not be retried more than once, but most 500 errors are for unexpected errors that deserve a retry. There is not a good way to differentiate between the 500 errors that deserve a retry and those that don't, so I think we need to be conservative and retry for any 500 error.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-60,0|hzzz76:zzzo,,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,Sprint 16  - Ledger,,,denyeart,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
stub.GetTxTimestamp() returns nil,FAB-2701,15269,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,wlahti,kletkeman,kletkeman,08/Mar/17 6:43 PM,30/Mar/17 3:58 PM,26/Apr/18 6:50 AM,30/Mar/17 3:58 PM,,,,v1.0.0,,fabric-peer,,,,,,0,chaincode,contract,iot,shim,smart,stub,timestamp,"A fix was made to the v0.5 Fabric many months ago so that IoT contracts would be able to get access to the stable and accurate transaction timestamp. This is critical to the functioning of IoT contracts as we need to be able to securely tie an asset's world state to the blockchain entry that created it.

In v1, this function inexplicably returns nil, nil -- losing a key function for IoT smart contracts.

There is a lot of work going into broadcast networks for timestamping of keys (although it is not obvious to the uninitiated that this will create identical timestamps on every peer as would the use of the original transaction timestamp being set once).

What we need is a stable and accurate timestamp that is available at endorsement time so that the entire read/write set is timestamped with this value and so that we can store the time in our asset states.

We are hamstrung until we have this facility.

Clarification: We would like:
1: chaincode can get timestamp and store it in world state for future use (since r/w set created by endorser, timestamp would need to be assigned prior to or during endorsement by whichever agent was responsible for defining the tx timestamp)

2: corollary is that timestamp matches transaction timestamp as stored in block

Discussions: We've had discussion on the rocketchat chaincode-dev and fabric-sdk-node groups and a possible stopgap was discussed where the SDK could set a timestamp and that could be propagated for now as the TX timestamp. This works well even if / when we go to sending parallel endorsements without an anchor. However, the flaw is that clients cannot be counted on to have decent accuracy and synchronization. 

The ideal solution is to have a time service set the timestamp for any TXID, thus allowing each peer to ask for it by TXID and getting the same value. This requires access to a time server, but does not require any level of time synchronization between peers (unless logs are to be synchronized).",,,,,,,,,,,,,,,,,,,,,,,,08/Mar/17 6:38 PM;kletkeman;image-2017-03-08-13-38-04-699.png;https://jira.hyperledger.org/secure/attachment/10570/image-2017-03-08-13-38-04-699.png,,,,,,,,0|i00smh:,,,,,,,,denyeart,kletkeman,muralisr,wlahti,,,,,,,,,,,,,master,,,true,08/Mar/17 7:23 PM;denyeart;[~muralisr] Would it be possible for chaincode shim GetTxTimestamp() to pull the timestamp from the proposal header (which SDK also uses for the ultimate tran proposal header),"12/Mar/17 4:58 PM;muralisr;[~kim@letkeman.net] [~denyeart] yes, we should expose the timestamp to the chaincode. The {{Tx}} in the {{GetTxTimestamp}} makes it clear we are referring to the Proposal timestamp (Proposal.Header.ChannelHeader.Timestamp field).

If/when we expose a timestamp exposed by the system, we could create a new {{GetSystemTimestamp}} API.","12/Mar/17 9:18 PM;kletkeman;Yes, the tx timestamp has been used by our chaincode ever since Binh put the function into the stub. But in v1, the changes in protocol caused someone to toss that code, although the stub interface stayed. The proposal timestamp is presumably going to be used for all copies of the transaction in the chain, so it is perfect for this use case.",16/Mar/17 12:10 PM;wlahti;Pushed a CR to gerrit: https://gerrit.hyperledger.org/r/#/c/7235/ It is currently awaiting code review.,30/Mar/17 3:21 PM;wlahti;The CR has been merged into master. ,"30/Mar/17 3:47 PM;kletkeman;I just saw that as I have decided to reset my entire environment to the latest and start again from scratch with the e2e tests ... thanks so much for that fix, it is critical for us and I really appreciate the timely update ...
",30/Mar/17 3:58 PM;muralisr;[~kim@letkeman.net] thanks to you too for reporting and [~wlahti] for the fix.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fatal error: ltdl.h: no such file or directory,FAB-2684,15251,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rennman,jjjjibm,jjjjibm,08/Mar/17 2:25 AM,21/Mar/17 2:44 PM,26/Apr/18 6:50 AM,21/Mar/17 2:44 PM,,,,v1.0.0,,fabric-ca,,,,,,0,,,,,,,,"Error occurs building fabric-ca:
Command is:  make ca 
make ca

Building fabric-ca in bin directory ...
# github.com/hyperledger/fabric-ca/vendor/github.com/miekg/pkcs11
vendor/github.com/miekg/pkcs11/pkcs11.go:29:18: fatal error: ltdl.h: No such file or directory
 #include <ltdl.h>
                  ^
compilation terminated.

How to recreate:
1.Clone or git checkout to build fabric-ca
2.cd fabric-ca
3.make docker
4.make ca

Another method:
1.Clone or git pull to build fabric-ca
2.cd fabric-ca
3.make: ","fabric-ca: commit cd8802b89a5e471e8b7fa08616621791c213d747
fabric: commit 24dc7d9eb037e337993c726a273a6970c6c6d06d

go version go1.8 linux/amd64
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00sip:,,,,,,,,jjjjibm,mastersingh24,rennman,smithbk,vpaprots,,,,,,,,,,,,master,,,true,"08/Mar/17 5:32 PM;smithbk;This is an issue in bccsp in fabric due to Vlad's change.

I suggest we handle as initially handled by cfssl as described at https://github.com/cloudflare/cfssl/pull/281/commits/df0f4fb436edacc03bde50ba5e9c8d53d111398d
That is, we document the libtool dependency by default and add support for ""-tags nopkcs11"" for the go build.
Either that or reverse it and build w/o pcks11 support by default and add support for ""-tags pkcs11"" support, noting the libtool dependency.","08/Mar/17 6:18 PM;mastersingh24;I agree with using tags as well as documenting the dependency.
I'd say that for the fabric-ca-server the default should be PKCS11 and for fabric-ca-client the default should be NOPKCS11 but if we want to have a single default, then I'd go with PKCS11","09/Mar/17 7:18 AM;vpaprots;fabric-ca-client I believe is to be used with -M option? need pkcs11 there as well.. I much rather have the 'document' approach. I don't think this is bias speaking, but let me explain..

Interesting about tags.. I would had thought that -tags option would download a specific git tag, but its actually documented as ""a list of build tags to consider satisfied during the build"". That was exactly what I was reaching for.

I was originally looking at things like here: http://blog.ralch.com/tutorial/golang-conditional-compilation/ (and I wouldnt want anything at ALL like that in our code! C preprocessor macros!? just no!)

That said.. conditional builds are evil. executable with pkcs11.. executable without pkcs11.. just doubled what dockers we need to push out!? test cases to run?

(Another 'too clever alternative' is to see if we can just copy the contents of the header into fabric.. whats in there? a C specification for dlopen() and other dll support functions? will look)","09/Mar/17 12:25 PM;smithbk;Copying the C header may cause the compile to succeed but would then fail to link I believe. Also, when it is compiled with the ""-tags nopkcs11"" option, we would need it to build in a mock version of miekg/pkcs11 which returns a nice error saying something like ""PKCS11 is not supported in this build.  You must reinstall without the '-tags nopkcs11' flag to add PKCS11 support.""

With regard to doubling test coverage, I'm thinking that we could create a main wrapper around the pkcs11 tests only and automate the testing both with and without the ""-tags nopkcs11"" within a single test run.  I don't think we need to run every test twice.  But that's a thought.



","10/Mar/17 8:14 AM;smithbk;See https://github.com/miekg/pkcs11/pull/47
If this pull request is accepted quickly, then revendoring will work.
If this pull request takes a while, the nopkcs11.go in the pull request could be used in bccsp as the basis for a solution.","10/Mar/17 3:34 PM;vpaprots;[~mastersingh24], I think I misinterpreted ""I agree with using tags as well as documenting the dependency.""
You want us to:
1. ""use tags AND documenting the dependency.""
2. ""use tags OR documenting the dependency.""

I interpreted that we just needed to 'document the dependency', no code involved. 

Is the priority set to highest correct? Libtool header files are missing, we already installed them on the build machines. Things appear working.

NOTE: This dependency does also exist for fabric, so documentation needs an update there too
NOTE2: If tags is to be the solution, I would rather see this done via BCCSP. PKCS11 Bindings are too low level for this.. Though I do wonder how we would do it for fabric build.. havent yet found tags option for `go build`","10/Mar/17 4:42 PM;smithbk;I'm dividing this into 2 jira items: one high priority and one normal.

1) High priority is to update docs to note this as a prereq with instructions of how to install.  Using this jira item for this one and I've assigned this to Allen since he has some experience with installing on various platforms. 
The fabric-ca readthe docs that needs to be updated is in the prereqs section at the beginning of fabric/docs/source/Setup/ca-setup.rst.   I'm not sure where to update for fabric, but suggest grepping for ""prereq"" in docs.

2) Lower priority is to add build tag support to allow someone to build without PKCS11.   This is split off to jira item https://jira.hyperledger.org/browse/FAB-2731",21/Mar/17 2:42 PM;rennman;Addressed in Change 7167 with documentation updates.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
During E2E test peer2 in my docker-network panics with SIGSEV failure,FAB-2664,15231,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,Nishi,Nishi,06/Mar/17 5:20 PM,12/Apr/17 12:53 PM,26/Apr/18 6:50 AM,12/Apr/17 12:53 PM,,,,v1.0.0,,fabric-gossip,,,,,,0,,,,,,,,"During my E2E test sceanrio:

1 Orderer : solo, 4 peers, 1channel, 1 chaincode
peer2 exited during installation of chaincode. 

Errors:
{code}
docker logs -f cli
2017-03-06 17:08:42.380 UTC [logging] InitFromViper -> DEBU 001 Setting default logging level to DEBUG for command 'chaincode'
2017-03-06 17:08:45.383 UTC [logging] GetModuleLevel -> DEBU 002 Module 'error' logger enabled for log level: DEBUG
Error: Error getting endorser client chaincode: PEER_CONNECTIONERROR - Error trying to connect to local peer: grpc: timed out when dialing
/opt/gopath/src/github.com/hyperledger/fabric/peer/common/common.go:84 github.com/hyperledger/fabric/peer/common.GetEndorserClient
/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/common.go:222 github.com/hyperledger/fabric/peer/chaincode.InitCmdFactory
/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/install.go:91 github.com/hyperledger/fabric/peer/chaincode.chaincodeInstall
/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode/install.go:46 github.com/hyperledger/fabric/peer/chaincode.installCmd.func1
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:599 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).execute
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:689 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).ExecuteC
/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/spf13/cobra/command.go:648 github.com/hyperledger/fabric/vendor/github.com/spf13/cobra.(*Command).Execute
/opt/gopath/src/github.com/hyperledger/fabric/peer/main.go:111 main.main
/opt/go/src/runtime/proc.go:192 runtime.main
/opt/go/src/runtime/asm_amd64.s:2087 runtime.goexit

Usage:
  peer chaincode install [flags]

Global Flags:
  -C, --chainID string             The chain on which this command should be executed (default ""testchainid"")
  -c, --ctor string                Constructor message for the chaincode in JSON format (default ""{}"")
  -E, --escc string                The name of the endorsement system chaincode to be used for this chaincode
  -l, --lang string                Language the chaincode is written in (default ""golang"")
      --logging-level string       Default logging level and overrides, see core.yaml for full syntax
  -n, --name string                Name of the chaincode
  -o, --orderer string             Ordering service endpoint
  -p, --path string                Path to chaincode
  -P, --policy string              The endorsement policy associated to this chaincode
      --test.coverprofile string   Done (default ""coverage.cov"")
  -t, --tid string                 Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64
  -u, --username string            Username for chaincode operations when security is enabled
  -v, --version string             Version of the chaincode specified in install/instantiate/upgrade commands
  -V, --vscc string                The name of the verification system chaincode to be used for this chaincode

!!!!!!!!!!!!!!! Chaincode installation on remote peer PEER2 has Failed !!!!!!!!!!!!!!!!
{code}
{code}
docker logs -f peer2
2017-03-06 17:07:33.828 UTC [gossip/comm#-1] GossipStream -> ERRO 001 Authentication failed
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0x758c05]

goroutine 50 [running]:
panic(0xc19280, 0xc420014050)
	/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/peer/gossip/mcs.(*mspMessageCryptoService).VerifyByChannel(0xc420196900, 0xc420141488, 0x4, 0x8, 0xc42138b880, 0x338, 0x338, 0xc4213e4690, 0x46, 0x46, ...)
	/opt/gopath/src/github.com/hyperledger/fabric/peer/gossip/mcs/mcs.go:234 +0x225
github.com/hyperledger/fabric/peer/gossip/mcs.(*mspMessageCryptoService).Verify(0xc420196900, 0xc42138b880, 0x338, 0x338, 0xc4213e4690, 0x46, 0x46, 0xc4216aeec0, 0x36, 0x36, ...)
	/opt/gopath/src/github.com/hyperledger/fabric/peer/gossip/mcs/mcs.go:216 +0x1c0
github.com/hyperledger/fabric/gossip/gossip.(*discoverySecurityAdapter).validateAliveMsgSignature.func1(0xc42138b880, 0x338, 0x338, 0xc4213e4690, 0x46, 0x46, 0xc4216aeec0, 0x36, 0x36, 0x5, ...)
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:827 +0xa6
github.com/hyperledger/fabric/protos/gossip.(*SignedGossipMessage).Verify(0xc420140900, 0xc42138b880, 0x338, 0x338, 0xc420140960, 0x411c05, 0xc420140950)
	/opt/gopath/src/github.com/hyperledger/fabric/protos/gossip/extensions.go:410 +0xcb
github.com/hyperledger/fabric/gossip/gossip.(*discoverySecurityAdapter).validateAliveMsgSignature(0xc4206e5080, 0xc420140900, 0xc42138b880, 0x338, 0x338, 0x338)
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:831 +0xf2
github.com/hyperledger/fabric/gossip/gossip.(*discoverySecurityAdapter).ValidateAliveMsg(0xc4206e5080, 0xc420140900, 0xc4202917a0)
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/gossip/gossip_impl.go:797 +0x243
github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).handleAliveMessage(0xc42008c870, 0xc420140900)
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:423 +0x208
github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).handleMsgFromComm(0xc42008c870, 0xc420140770)
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:301 +0xe6a
github.com/hyperledger/fabric/gossip/discovery.(*gossipDiscoveryImpl).handleMessages(0xc42008c870)
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:276 +0x200
created by github.com/hyperledger/fabric/gossip/discovery.NewDiscoveryService
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/discovery/discovery_impl.go:115 +0x50e
vagrant@hyperledger-devenv:v0.3.0-9a09ac0:/opt/gopath/src/github.com/hyperledger/fabric/e2e$ 

{code}


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00seh:,,,,,,,,bmos299,denyeart,Nishi,yacovm,,,,,,,,,,,,,,,,,"08/Mar/17 1:48 PM;bmos299;Nishi is experiencing a seg fault when a peer that is *NOT* the leader is installing the chaincode.  This does not occur when all the peers in the org are designated as leaders.

Note the error on the Peer from the logs:
2017-03-06 17:07:33.828 UTC [gossip/comm#-1] GossipStream -> ERRO 001 Authentication failed
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x28 pc=0x758c05]

Ratnakar also hit this issue. We will continue to work this issue.  Changing to highest. ","09/Apr/17 11:17 AM;yacovm;I think this is a bug that has been fixed: https://gerrit.hyperledger.org/r/#/c/6887/
Can you reproduce?


","12/Apr/17 2:27 AM;denyeart;[~yacovm]
I've re-assigned to fabric-gossip.  If you have high confidence that this has been fixed please mark as Done.  Tester can always re-open if they still see the issue.","12/Apr/17 7:05 AM;yacovm;Nishi opened it. 
I think that this bug has been fixed, but the one that should close it/mark it as done is not me... ","12/Apr/17 10:51 AM;denyeart;[~2020Nishi]
Do you still see the issue?  Please close if not.",12/Apr/17 12:52 PM;Nishi;Problem has not been reproducible in the past test runs.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Default chaincode endorsement policy,FAB-2632,15199,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,binhn,binhn,03/Mar/17 11:37 PM,11/Apr/17 8:30 PM,26/Apr/18 6:50 AM,11/Apr/17 8:30 PM,,,,v1.0.0,,fabric-endorser,,,,,,0,,,,,,,,"When a chaincode is instantiated on a channel, we do something like

peer chaincode instantiate -C mych -n mycc -v 1.0 -p example02 -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}' -P ""OR ('Org0MSP.member','Org1MSP.member')""

-P is optional, and so in the LCCC, we do (line 518)

		if len(args) > 3 && args[3] != nil {
			policy = args[3]
		} else {
			// FIXME: temporary workaround until all SDKs provide a policy
			policy = utils.MarshalOrPanic(cauthdsl.SignedByMspMember(""DEFAULT""))
		}
I think that FIXME really needs to be fixed because cauthdsl.SignedByMspMember(""DEFAULT"") is not correct. There is no orgs with ID = DEFAULT.  What we wanted to say was ""signed by any valid members of the channel"".

[~ellaki] suggested that we should use the peer MSPs writers.

Note that this is not safe for production, and we should log a warning when chaincode has no endorsement policy specified. It is to make it easier for development.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzhy:zz9xm8,,,,,,,,ales,binhn,denyeart,,,,,,,,,,,,,,master,,,true,"06/Mar/17 8:41 PM;ales;There's a problem with defaulting to the ChannelApplicationWriters policy. The problem is that due to the chaincode-nature of lccc, policies need to be specified as bytes. The code currently serializes a *cb.SignaturePolicyEnvelope object into bytes which is how policies are set at deploy time and stored by lccc. Later at validation time, vscc queries lccc and extracts bytes which it deserializes back to a *cb.SignaturePolicyEnvelope. So we always need policies as serialized *cb.SignaturePolicyEnvelope objects. However, ChannelApplicationWriters is a different struct and can't be serialized into a *cb.SignaturePolicyEnvelope.

The alternative solution that we propose is to default to the following policy: a signature from a member of any of the MSPs specified for the application of the channel.",06/Mar/17 9:06 PM;binhn;I am fine with that as it is a default and we log a warning on that decision. We can revisit later.,"11/Apr/17 8:01 PM;denyeart;[~muralisr][~adc][~ales][~ellaki]
Is this still needed or has it already been covered and therefore can be closed? If still valid, is it a story or a bug? Is it required for 1.0.0?","11/Apr/17 8:30 PM;denyeart;Looks like this has been merged, marking as Done.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Gossip Anchor peer connect bug fix,FAB-2624,15191,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,yacovm,yacovm,yacovm,03/Mar/17 7:01 PM,13/Mar/17 2:48 PM,26/Apr/18 6:50 AM,13/Mar/17 2:48 PM,,,,,,,,,,,,0,,,,,,,,"When the PEM was removed from the anchor peers, the Connect() method of the discovery layer wasn't updated accordingly. 
As a result, all anchor peers were mapped to the same (empty string) key in the discovery layer. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-290,0|i00s61:,,Sprint 13 - Gossip,,,,,,yacovm,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
NullPointerException after zoo-keeper-kafka socket error,FAB-2622,15189,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,Nishi,Nishi,03/Mar/17 2:40 PM,31/May/17 1:58 PM,26/Apr/18 6:50 AM,17/Apr/17 1:04 PM,v1.0.0,,,v1.0.0,,fabric-orderer,,,,,,0,qa,,,,,,,"Tested on commit level: *9ab37a56b9d7e6c98c10cce7256c1ca696dc6ce5*

1. Orderer 1; Kafka Brokers 2; num of peers: 4,  num of channels: 100, num chaincodes: 10, chaincode used: chaincode_example02
2. Create 100 channels
3. Join all 4 peers on all channels
4. Install 10 chaincodes on all peers
5. Instantiate all chaincodes on peer0 on all channels with endorsement policy - OR('Org0MSP.member','Org1MSP.member')
6. Next 
{code}
    for each channel {
       for each chaincode {
         for each peer {
              query value of a 
              Invoke 
              query for updated value of a
         }
      }
    }
              
{code}

Test failed on channel-8, chanicode-4, peer0 with below snippets from docker logs.

{code}

kafka1       | [2017-03-03 07:46:55,683] INFO [Group Metadata Manager on Broker 1]: Removed 0 expired offsets in 112 milliseconds. (kafka.coordinator.GroupMetadataManager)
kafka1       | [2017-03-03 07:54:06,678] INFO Client session timed out, have not heard from server in 4158ms for sessionid 0x15a91c6da880000, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
zookeeper    | 2017-03-03 07:54:18,355 [myid:] - INFO  [SessionTracker:ZooKeeperServer@358] - Expiring session 0x15a91c6da880000, timeout of 6000ms exceeded
zookeeper    | 2017-03-03 07:56:02,407 [myid:] - INFO  [ProcessThread(sid:0 cport:2181)::PrepRequestProcessor@649] - Got user-level KeeperException when processing sessionid:0x15a91c6da880000 type:ping cxid:0xfffffffffffffffe zxid:0xfffffffffffffffe txntype:unknown reqpath:n/a Error Path:null Error:KeeperErrorCode = Session expired
zookeeper    | 2017-03-03 07:56:39,432 [myid:] - INFO  [ProcessThread(sid:0 cport:2181)::PrepRequestProcessor@487] - Processed session termination for sessionid: 0x15a91c6da880000
kafka1       | [2017-03-03 07:55:03,040] INFO zookeeper state changed (Disconnected) (org.I0Itec.zkclient.ZkClient)
kafka1       | [2017-03-03 07:56:54,806] INFO Opening socket connection to server zookeeper.e2e_default/172.18.0.2:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
......
......
kafka1       | [2017-03-03 07:57:04,989] INFO Opening socket connection to server zookeeper.e2e_default/172.18.0.2:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
kafka1       | [2017-03-03 07:57:05,004] INFO Socket connection established to zookeeper.e2e_default/172.18.0.2:2181, initiating session (org.apache.zookeeper.ClientCnxn)
zookeeper    | 2017-03-03 07:57:05,648 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@192] - Accepted socket connection from /172.18.0.3:50578
zookeeper    | 2017-03-03 07:57:06,311 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:ZooKeeperServer@921] - Client attempting to renew session 0x15a91c6da880000 at /172.18.0.3:50578
zookeeper    | 2017-03-03 07:57:06,343 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:ZooKeeperServer@666] - Invalid session 0x15a91c6da880000 for client /172.18.0.3:50578, probably expired
zookeeper    | 2017-03-03 07:57:06,365 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@192] - Accepted socket connection from /172.18.0.3:50598
zookeeper    | 2017-03-03 07:57:06,762 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:ZooKeeperServer@921] - Client attempting to renew session 0x15a91c6da880000 at /172.18.0.3:50598
zookeeper    | 2017-03-03 07:57:07,065 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1008] - Closed socket connection for client /172.18.0.3:50578 which had sessionid 0x15a91c6da880000
zookeeper    | 2017-03-03 07:57:07,066 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:ZooKeeperServer@666] - Invalid session 0x15a91c6da880000 for client /172.18.0.3:50598, probably expired
kafka1       | [2017-03-03 07:57:07,197] INFO Unable to reconnect to ZooKeeper service, session 0x15a91c6da880000 has expired, closing socket connection (org.apache.zookeeper.ClientCnxn)
zookeeper    | 2017-03-03 07:57:07,125 [myid:] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@213] - Ignoring unexpected runtime exception
zookeeper    | java.nio.channels.CancelledKeyException
zookeeper    | 	at sun.nio.ch.SelectionKeyImpl.ensureValid(SelectionKeyImpl.java:73)
zookeeper    | 	at sun.nio.ch.SelectionKeyImpl.readyOps(SelectionKeyImpl.java:87)
zookeeper    | 	at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:182)
zookeeper    | 	at java.lang.Thread.run(Thread.java:745)
kafka1       | [2017-03-03 07:57:07,243] INFO zookeeper state changed (Expired) (org.I0Itec.zkclient.ZkClient)
kafka1       | [2017-03-03 07:57:07,424] INFO Initiating client connection, connectString=zookeeper:2181 sessionTimeout=6000 watcher=org.I0Itec.zkclient.ZkClient@61230f6a (org.apache.zookeeper.ZooKeeper)
zookeeper    | 2017-03-03 07:57:07,633 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1008] - Closed socket connection for client /172.18.0.3:50598 which had sessionid 0x15a91c6da880000
kafka1       | [2017-03-03 07:57:09,624] INFO Opening socket connection to server zookeeper.e2e_default/172.18.0.2:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
zookeeper    | 2017-03-03 07:57:09,625 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@192] - Accepted socket connection from /172.18.0.3:50600
kafka1       | [2017-03-03 07:57:09,705] INFO Socket connection established to zookeeper.e2e_default/172.18.0.2:2181, initiating session (org.apache.zookeeper.ClientCnxn)
zookeeper    | 2017-03-03 07:57:10,019 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:ZooKeeperServer@928] - Client attempting to establish new session at /172.18.0.3:50600
kafka1       | [2017-03-03 07:57:10,196] INFO EventThread shut down (org.apache.zookeeper.ClientCnxn)
kafka1       | [2017-03-03 07:57:10,762] INFO Session establishment complete on server zookeeper.e2e_default/172.18.0.2:2181, sessionid = 0x15a91c6da880001, negotiated timeout = 6000 (org.apache.zookeeper.ClientCnxn)
zookeeper    | 2017-03-03 07:57:10,762 [myid:] - INFO  [SyncThread:0:ZooKeeperServer@673] - Established session 0x15a91c6da880001 with negotiated timeout 6000 for client /172.18.0.3:50600
kafka1       | [2017-03-03 07:57:10,836] INFO zookeeper state changed (SyncConnected) (org.I0Itec.zkclient.ZkClient)
kafka1       | [2017-03-03 07:57:17,271] INFO Creating /controller (is it secure? false) (kafka.utils.ZKCheckedEphemeral)
kafka1       | [2017-03-03 07:57:17,488] INFO Result of znode creation is: OK (kafka.utils.ZKCheckedEphemeral)
kafka1       | [2017-03-03 07:57:17,489] INFO 1 successfully elected as leader (kafka.server.ZookeeperLeaderElector)
zookeeper    | 2017-03-03 07:57:19,878 [myid:] - INFO  [ProcessThread(sid:0 cport:2181)::PrepRequestProcessor@649] - Got user-level KeeperException when processing sessionid:0x15a91c6da880001 type:delete cxid:0x13 zxid:0x1c txntype:-1 reqpath:n/a Error Path:/admin/preferred_replica_election Error:KeeperErrorCode = NoNode for /admin/preferred_replica_election
kafka1       | [2017-03-03 07:57:20,222] INFO re-registering broker info in ZK for broker 1 (kafka.server.KafkaHealthcheck)
kafka1       | [2017-03-03 07:57:20,816] INFO Creating /brokers/ids/1 (is it secure? false) (kafka.utils.ZKCheckedEphemeral)
zookeeper    | 2017-03-03 07:57:20,841 [myid:] - INFO  [ProcessThread(sid:0 cport:2181)::PrepRequestProcessor@649] - Got user-level KeeperException when processing sessionid:0x15a91c6da880001 type:create cxid:0x14 zxid:0x1d txntype:-1 reqpath:n/a Error Path:/brokers Error:KeeperErrorCode = NodeExists for /brokers
zookeeper    | 2017-03-03 07:57:20,844 [myid:] - INFO  [ProcessThread(sid:0 cport:2181)::PrepRequestProcessor@649] - Got user-level KeeperException when processing sessionid:0x15a91c6da880001 type:create cxid:0x15 zxid:0x1e txntype:-1 reqpath:n/a Error Path:/brokers/ids Error:KeeperErrorCode = NodeExists for /brokers/ids
kafka1       | [2017-03-03 07:57:21,052] INFO Result of znode creation is: OK (kafka.utils.ZKCheckedEphemeral)
kafka1       | [2017-03-03 07:57:21,053] INFO Registered broker 1 at path /brokers/ids/1 with addresses: PLAINTEXT -> EndPoint(cacb2350345a,9092,PLAINTEXT) (kafka.utils.ZkUtils)
kafka1       | [2017-03-03 07:57:21,099] INFO done re-registering broker (kafka.server.KafkaHealthcheck)
kafka1       | [2017-03-03 07:57:21,139] INFO Subscribing to /brokers/topics path to watch for new topics (kafka.server.KafkaHealthcheck)
kafka1       | [2017-03-03 07:57:34,054] INFO Client session timed out, have not heard from server in 5322ms for sessionid 0x15a91c6da880001, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
kafka1       | [2017-03-03 07:57:35,103] INFO zookeeper state changed (Disconnected) (org.I0Itec.zkclient.ZkClient)
zookeeper    | 2017-03-03 07:57:34,004 [myid:] - INFO  [SessionTracker:ZooKeeperServer@358] - Expiring session 0x15a91c6da880001, timeout of 6000ms exceeded
zookeeper    | 2017-03-03 07:57:34,306 [myid:] - INFO  [ProcessThread(sid:0 cport:2181)::PrepRequestProcessor@487] - Processed session termination for sessionid: 0x15a91c6da880001
zookeeper    | 2017-03-03 07:57:35,012 [myid:] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@357] - caught end of stream exception
zookeeper    | EndOfStreamException: Unable to read additional data from client sessionid 0x15a91c6da880001, likely client has closed socket
zookeeper    | 	at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:228)
zookeeper    | 	at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:203)
zookeeper    | 	at java.lang.Thread.run(Thread.java:745)
zookeeper    | 2017-03-03 07:57:35,133 [myid:] - INFO  [SyncThread:0:NIOServerCnxn@1008] - Closed socket connection for client /172.18.0.3:50600 which had sessionid 0x15a91c6da880001
zookeeper    | 2017-03-03 07:57:36,961 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@192] - Accepted socket connection from /172.18.0.3:50628
kafka1       | [2017-03-03 07:57:36,848] INFO Opening socket connection to server zookeeper.e2e_default/172.18.0.2:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
zookeeper    | 2017-03-03 07:57:37,191 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:ZooKeeperServer@921] - Client attempting to renew session 0x15a91c6da880001 at /172.18.0.3:50628
zookeeper    | 2017-03-03 07:57:37,243 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:ZooKeeperServer@666] - Invalid session 0x15a91c6da880001 for client /172.18.0.3:50628, probably expired
kafka1       | [2017-03-03 07:57:37,102] INFO Socket connection established to zookeeper.e2e_default/172.18.0.2:2181, initiating session (org.apache.zookeeper.ClientCnxn)
kafka1       | [2017-03-03 07:57:37,243] INFO zookeeper state changed (Expired) (org.I0Itec.zkclient.ZkClient)
zookeeper    | 2017-03-03 07:57:37,643 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1008] - Closed socket connection for client /172.18.0.3:50628 which had sessionid 0x15a91c6da880001
kafka1       | [2017-03-03 07:57:37,244] INFO Initiating client connection, connectString=zookeeper:2181 sessionTimeout=6000 watcher=org.I0Itec.zkclient.ZkClient@61230f6a (org.apache.zookeeper.ZooKeeper)
kafka1       | [2017-03-03 07:57:37,629] INFO Unable to reconnect to ZooKeeper service, session 0x15a91c6da880001 has expired, closing socket connection (org.apache.zookeeper.ClientCnxn)
kafka1       | [2017-03-03 07:57:38,673] INFO EventThread shut down (org.apache.zookeeper.ClientCnxn)
kafka1       | [2017-03-03 07:57:38,739] INFO Waiting for keeper state SyncConnected (org.I0Itec.zkclient.ZkClient)
zookeeper    | 2017-03-03 07:57:45,775 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@192] - Accepted socket connection from /172.18.0.3:50630
kafka1       | [2017-03-03 07:57:45,403] INFO Opening socket connection to server zookeeper.e2e_default/172.18.0.2:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
kafka1       | [2017-03-03 07:57:45,775] INFO Socket connection established to zookeeper.e2e_default/172.18.0.2:2181, initiating session (org.apache.zookeeper.ClientCnxn)
zookeeper    | 2017-03-03 07:57:45,887 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:ZooKeeperServer@928] - Client attempting to establish new session at /172.18.0.3:50630
zookeeper    | 2017-03-03 07:57:48,616 [myid:] - INFO  [SyncThread:0:ZooKeeperServer@673] - Established session 0x15a91c6da880002 with negotiated timeout 6000 for client /172.18.0.3:50630
kafka1       | [2017-03-03 07:57:48,619] INFO Session establishment complete on server zookeeper.e2e_default/172.18.0.2:2181, sessionid = 0x15a91c6da880002, negotiated timeout = 6000 (org.apache.zookeeper.ClientCnxn)
kafka1       | [2017-03-03 07:57:49,513] INFO zookeeper state changed (SyncConnected) (org.I0Itec.zkclient.ZkClient)
zookeeper    | 2017-03-03 07:58:21,186 [myid:] - WARN  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@357] - caught end of stream exception
zookeeper    | EndOfStreamException: Unable to read additional data from client sessionid 0x15a91c6da880002, likely client has closed socket
zookeeper    | 	at org.apache.zookeeper.server.NIOServerCnxn.doIO(NIOServerCnxn.java:228)
zookeeper    | 	at org.apache.zookeeper.server.NIOServerCnxnFactory.run(NIOServerCnxnFactory.java:203)
zookeeper    | 	at java.lang.Thread.run(Thread.java:745)
kafka1       | [2017-03-03 07:58:19,921] INFO Client session timed out, have not heard from server in 4370ms for sessionid 0x15a91c6da880002, closing socket connection and attempting reconnect (org.apache.zookeeper.ClientCnxn)
kafka1       | [2017-03-03 07:58:20,208] INFO zookeeper state changed (Disconnected) (org.I0Itec.zkclient.ZkClient)
zookeeper    | 2017-03-03 07:58:25,415 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1008] - Closed socket connection for client /172.18.0.3:50630 which had sessionid 0x15a91c6da880002
kafka1       | [2017-03-03 07:58:23,239] INFO Opening socket connection to server zookeeper.e2e_default/172.18.0.2:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
zookeeper    | 2017-03-03 07:58:25,793 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxnFactory@192] - Accepted socket connection from /172.18.0.3:50638
zookeeper    | 2017-03-03 07:58:26,072 [myid:] - INFO  [SessionTracker:ZooKeeperServer@358] - Expiring session 0x15a91c6da880002, timeout of 6000ms exceeded
zookeeper    | 2017-03-03 07:58:26,620 [myid:] - INFO  [ProcessThread(sid:0 cport:2181)::PrepRequestProcessor@487] - Processed session termination for sessionid: 0x15a91c6da880002
zookeeper    | 2017-03-03 07:58:26,879 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:ZooKeeperServer@921] - Client attempting to renew session 0x15a91c6da880002 at /172.18.0.3:50638
zookeeper    | 2017-03-03 07:58:28,439 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:ZooKeeperServer@666] - Invalid session 0x15a91c6da880002 for client /172.18.0.3:50638, probably expired
zookeeper    | 2017-03-03 07:58:29,156 [myid:] - INFO  [NIOServerCxn.Factory:0.0.0.0/0.0.0.0:2181:NIOServerCnxn@1008] - Closed socket connection for client /172.18.0.3:50638 which had sessionid 0x15a91c6da880002
kafka1       | [2017-03-03 07:58:25,793] INFO Socket connection established to zookeeper.e2e_default/172.18.0.2:2181, initiating session (org.apache.zookeeper.ClientCnxn)
kafka1       | [2017-03-03 07:58:29,002] INFO zookeeper state changed (Expired) (org.I0Itec.zkclient.ZkClient)
kafka1       | [2017-03-03 07:58:29,020] INFO Initiating client connection, connectString=zookeeper:2181 sessionTimeout=6000 watcher=org.I0Itec.zkclient.ZkClient@61230f6a (org.apache.zookeeper.ZooKeeper)
kafka1       | [2017-03-03 07:58:29,423] INFO Unable to reconnect to ZooKeeper service, session 0x15a91c6da880002 has expired, closing socket connection (org.apache.zookeeper.ClientCnxn)
kafka1       | [2017-03-03 07:59:25,131] INFO Unable to re-establish connection. Notifying consumer of the following exception:  (org.I0Itec.zkclient.ZkClient)
kafka1       | org.I0Itec.zkclient.exception.ZkException: Unable to connect to zookeeper:2181
kafka1       | 	at org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:71)
kafka1       | 	at org.I0Itec.zkclient.ZkClient.reconnect(ZkClient.java:1279)
kafka1       | 	at org.I0Itec.zkclient.ZkClient.processStateChanged(ZkClient.java:719)
kafka1       | 	at org.I0Itec.zkclient.ZkClient.process(ZkClient.java:630)
kafka1       | 	at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:522)
kafka1       | 	at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:498)
kafka1       | Caused by: java.net.UnknownHostException: zookeeper: Temporary failure in name resolution
kafka1       | 	at java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
kafka1       | 	at java.net.InetAddress$2.lookupAllHostAddr(InetAddress.java:928)
kafka1       | 	at java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1323)
kafka1       | 	at java.net.InetAddress.getAllByName0(InetAddress.java:1276)
kafka1       | 	at java.net.InetAddress.getAllByName(InetAddress.java:1192)
kafka1       | 	at java.net.InetAddress.getAllByName(InetAddress.java:1126)
kafka1       | 	at org.apache.zookeeper.client.StaticHostProvider.<init>(StaticHostProvider.java:61)
kafka1       | 	at org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:445)
kafka1       | 	at org.apache.zookeeper.ZooKeeper.<init>(ZooKeeper.java:380)
kafka1       | 	at org.I0Itec.zkclient.ZkConnection.connect(ZkConnection.java:69)
kafka1       | 	... 5 more
kafka1       | [2017-03-03 07:59:25,854] ERROR Error handling event ZkEvent[Data of /controller changed sent to kafka.server.ZookeeperLeaderElector$LeaderChangeListener@7eb338d1] (org.I0Itec.zkclient.ZkEventThread)
kafka1       | java.lang.NullPointerException
kafka1       | 	at org.I0Itec.zkclient.ZkConnection.exists(ZkConnection.java:109)
kafka1       | 	at org.I0Itec.zkclient.ZkClient$5.call(ZkClient.java:701)
kafka1       | 	at org.I0Itec.zkclient.ZkClient$5.call(ZkClient.java:698)
kafka1       | 	at org.I0Itec.zkclient.ZkClient.retryUntilConnected(ZkClient.java:985)
kafka1       | 	at org.I0Itec.zkclient.ZkClient.exists(ZkClient.java:698)
kafka1       | 	at org.I0Itec.zkclient.ZkClient$9.run(ZkClient.java:818)
kafka1       | 	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
kafka1       | [2017-03-03 07:59:28,343] ERROR Error handling event ZkEvent[Data of /admin/preferred_replica_election changed sent to kafka.controller.PreferredReplicaElectionListener@2a61781] (org.I0Itec.zkclient.ZkEventThread)
kafka1       | java.lang.NullPointerException
kafka1       | 	at org.I0Itec.zkclient.ZkConnection.exists(ZkConnection.java:109)
kafka1       | 	at org.I0Itec.zkclient.ZkClient$5.call(ZkClient.java:701)
kafka1       | 	at org.I0Itec.zkclient.ZkClient$5.call(ZkClient.java:698)
kafka1       | 	at org.I0Itec.zkclient.ZkClient.retryUntilConnected(ZkClient.java:985)
kafka1       | 	at org.I0Itec.zkclient.ZkClient.exists(ZkClient.java:698)
kafka1       | 	at org.I0Itec.zkclient.ZkClient$9.run(ZkClient.java:818)
kafka1       | 	at org.I0Itec.zkclient.ZkEventThread.run(ZkEventThread.java:71)
kafka1       | [2017-03-03 07:59:28,255] INFO EventThread shut down (org.apache.zookeeper.ClientCnxn)
kafka1       | [2017-03-03 07:59:28,356] ERROR Error handling event ZkEvent[Data of /admin/reassign_partitions changed sent to kafka.controller.PartitionsReassignedListener@4b92387] (org.I0Itec.zkclient.ZkEventThread)
{code}",,,,,,,,,,,,,,,,,,,,,,,,03/Mar/17 2:28 PM;Nishi;Multichannel-Multichaincode-ZK-Kafka-Socket-Error .txt;https://jira.hyperledger.org/secure/attachment/10559/Multichannel-Multichaincode-ZK-Kafka-Socket-Error+.txt,03/Mar/17 2:38 PM;Nishi;docker-compose.yaml;https://jira.hyperledger.org/secure/attachment/10558/docker-compose.yaml,,,,,,,0|i00s5l:,,,,,,,,bmos299,kchristidis,Nishi,,,,,,,,,,,,,,,,,,"03/Mar/17 6:18 PM;bmos299;Changing to HIGH from HIGHEST.  Nishi thinks it could have been caused by a config error which she will post.  However, it is still a bug (NULL EXCEPTION).  If she hits again for the config change she will move back to highest. ",28/Mar/17 7:25 PM;kchristidis;ZK logs seems normal BTW.,11/Apr/17 7:13 PM;kchristidis;[~bmos299] [~Nishi] Can we update this and mark as done by EOD if not relevant? Thanks!,17/Apr/17 1:04 PM;Nishi;This is not reproducible with our current e2e configuration that has 2 kafka servers and an orderer. Closing this issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
nil pointer exception during phantom key validation,FAB-2618,15185,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,manish-sethi,manish-sethi,manish-sethi,03/Mar/17 8:40 AM,03/Mar/17 1:18 PM,26/Apr/18 6:50 AM,03/Mar/17 1:18 PM,,,,,,fabric-ledger,,,,,,0,Ledger,,,,,,,"A transaction tx_1, during simulation, performs a range scan for key_1 - key_n. Now, if the last key (key_n) get deleted by another transaction that gets committed before tx_1, a nil check is required in the validation code.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzdw:r,,Sprint 13 - Ledger,,,,,,manish-sethi,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
e2e test with multi channel multi chaincode scenario fails at invoke,FAB-2614,15181,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,Nishi,Nishi,02/Mar/17 11:01 PM,30/Aug/17 10:08 AM,26/Apr/18 6:50 AM,03/Mar/17 6:12 PM,,,,v1.0.0,,fabric-endorser,fabric-peer,,,,,0,,,,,,,,"Tested on commit level: *9ab37a56b9d7e6c98c10cce7256c1ca696dc6ce5*

1. Orderer 1; Kafka Brokers 2; num of peers: 4,  num of channels: 2, num chaincodes: 4, chaincode used: chaincode_example02
2. Create 2 channels
3. Join all 4 peers on all channels
4. Install 4 chaincodes on all peers
5. Instantiate first 2 chaincodes on peer0 on both channels with endorsement policy - OR('Org0MSP.member','Org1MSP.member')
6. Instantiate next 2 chaincodes on peer2 on both channels with endorsement policy - AND('Org0MSP.member','Org1MSP.member')
7. Next 
{code}
    for each channel {
       for each chaincode {
         for each peer {
              query value of a 
              Invoke 
              query for updated value of a
         }
      }
    }
              
{code}
Test failed on channel-1, chanicode 3, peer0 with below error on all peers
{code}

peer2        | 2017-03-02 21:50:57.835 UTC [txvalidator] VSCCValidateTx -> ERRO 001 VSCC check failed for transaction txid=de8c2db2f9bce9be2ab2864339a08862ab9de8280c2c0b919930eb22fbaecf94, error VSCC error: policy evaluation failed, err Failed to authenticate policy
peer2        | 2017-03-02 21:50:57.839 UTC [txvalidator] Validate -> ERRO 002 VSCCValidateTx for transaction txId = de8c2db2f9bce9be2ab2864339a08862ab9de8280c2c0b919930eb22fbaecf94 returned error VSCC error: policy evaluation failed, err Failed to authenticate policy
peer1        | 2017-03-02 21:50:57.839 UTC [txvalidator] VSCCValidateTx -> ERRO 001 VSCC check failed for transaction txid=de8c2db2f9bce9be2ab2864339a08862ab9de8280c2c0b919930eb22fbaecf94, error VSCC error: policy evaluation failed, err Failed to authenticate policy
peer1        | 2017-03-02 21:50:57.839 UTC [txvalidator] Validate -> ERRO 002 VSCCValidateTx for transaction txId = de8c2db2f9bce9be2ab2864339a08862ab9de8280c2c0b919930eb22fbaecf94 returned error VSCC error: policy evaluation failed, err Failed to authenticate policy
peer0        | 2017-03-02 21:50:57.844 UTC [txvalidator] VSCCValidateTx -> ERRO 003 VSCC check failed for transaction txid=de8c2db2f9bce9be2ab2864339a08862ab9de8280c2c0b919930eb22fbaecf94, error VSCC error: policy evaluation failed, err Failed to authenticate policy
peer0        | 2017-03-02 21:50:57.844 UTC [txvalidator] Validate -> ERRO 004 VSCCValidateTx for transaction txId = de8c2db2f9bce9be2ab2864339a08862ab9de8280c2c0b919930eb22fbaecf94 returned error VSCC error: policy evaluation failed, err Failed to authenticate policy
peer3        | 2017-03-02 21:50:57.853 UTC [txvalidator] VSCCValidateTx -> ERRO 001 VSCC check failed for transaction txid=de8c2db2f9bce9be2ab2864339a08862ab9de8280c2c0b919930eb22fbaecf94, error VSCC error: policy evaluation failed, err Failed to authenticate policy
peer3        | 2017-03-02 21:50:57.853 UTC [txvalidator] Validate -> ERRO 002 VSCCValidateTx for transaction txId = de8c2db2f9bce9be2ab2864339a08862ab9de8280c2c0b919930eb22fbaecf94 returned error VSCC error: policy evaluation failed, err Failed to authenticate policy

{code}

Please find attached : docker-compose.yaml, multi_channel,sh(has cli commands used in test), Multichannel-Multichaincode-VSCC Error Logs.txt",,,,,,,,,,,,,,,,,,,,,,,,02/Mar/17 10:48 PM;Nishi;Multichannel-Multichaincode-VSCC Error Logs.txt;https://jira.hyperledger.org/secure/attachment/10555/Multichannel-Multichaincode-VSCC+Error+Logs.txt,02/Mar/17 10:48 PM;Nishi;docker-compose.yaml;https://jira.hyperledger.org/secure/attachment/10557/docker-compose.yaml,02/Mar/17 10:48 PM;Nishi;multichannel.sh;https://jira.hyperledger.org/secure/attachment/10556/multichannel.sh,,,,,,0|i00s49:,,,,,,,,bmos299,Nishi,peoplehlj,,,,,,,,,,,,,,,,,,"02/Mar/17 11:25 PM;Nishi;Test ran successfully, when the above test scenario was modified as follows:

Instantiating all 4 chaincodes on single peer i.e. peer0 on both channels with one endorsement policy - OR('Org0MSP.member','Org1MSP.member')

instead of steps 5 and 6 as described above.



","03/Mar/17 10:59 AM;bmos299;Let's look at this one.  Could the vscc be failing because the transaction is only endorsed by one peer?  If this is the case this is not a highest bug, but if the message in the was not clear, we need to make sure it identifies what failed in the vscc check.",03/Mar/17 6:13 PM;bmos299;The cli does not support AND for endorsement policy as it goes to a single peer.  Marking as DONE. ,"30/Aug/17 10:08 AM;peoplehlj;Hi all,

Do you have any code sample that SDK could invoke chaincode by AND endorsement policy, thanks so much!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition between peer startup and CouchDB startup,FAB-2600,15167,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,AdnanChoudhury,denyeart,denyeart,02/Mar/17 3:10 PM,03/Mar/17 2:22 PM,26/Apr/18 6:50 AM,03/Mar/17 2:14 PM,,,,,,fabric-ledger,,,,,,0,,,,,,,,"In docker environment, peer and CouchDB start up at same time.
If CouchDB has not initialized by the time peer needs it, peer startup will panic.
Need to extend retries to handle these race conditions.

This change will update retry timeouts (using a back off approach) and number of retries.
Post-beta, there will be a more comprehensive retry strategy, to give clients the ability to specify retry logic (e.g. initial Verification vs Commit vs Endorsement will each want different retry logic). ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzdw:v,,Sprint 13 - Ledger,,,,,,AdnanChoudhury,denyeart,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
node sdk doesn't load CryptoSuite_ECDSA_AES.js from the client/lib/impl directory,FAB-2592,15159,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,davidkel,davidkel,02/Mar/17 9:39 AM,07/Mar/17 3:14 PM,26/Apr/18 6:50 AM,07/Mar/17 3:14 PM,,,,v1.0.0,,fabric-sdk-node,,,,,,0,,,,,,,,"I download the latest node sdk from git as the published npm modules are too old. I link fabric-client and fabric-ca-client in my node_modules directory to the fabric-client and fabric-ca-client in the downloaded sdk.

I found that the node-sdk doesn't load CryptoSuite_ECDSA_AES.js from the lib/impl directory in fabric-client and failed. I can get it to load but if actually finds it in the node_modules directory of the node sdk itself where a copy of fabric-client and fabric-ca-client are placed. 

This doesn't seem right to me as it is looking for dependencies outside of the fabric-client module and should actually find the dependencies inside the fabric-client code as it is there.

The problem appears to be in the config definition of the node-sdk.
{code}
	""crypto-suite-software"": {
		""EC"": ""fabric-client/lib/impl/CryptoSuite_ECDSA_AES.js""
	},
	""crypto-suite-hsm"": {
		""EC"": ""fabric-client/lib/impl/bccsp_pkcs11.js""
	},
	""key-value-store"": ""fabric-client/lib/impl/FileKeyValueStore.js"",
{code}
The code in fabric-client will invoke a nodejs require on these paths to the files but because the code itself is in the fabric-client/lib directory it won't be able to find the modules in the impl directory so the require then goes to the parent directory (which is the root of the node sdk itself) node_modules directory where it will find the files because copies of the whole fabric-client and fabric-ca-client modules exist.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00rzt:,,,,,,,,davidkel,,,,,,,,,,,,,,,,,,,,07/Mar/17 3:14 PM;davidkel;The recently published node npm modules don't exhibit this problem. Closing issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Illegal file mode detected while deploy chaincode spec,FAB-2569,15136,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,greg.haskins,rameshthoomu,rameshthoomu,01/Mar/17 4:45 PM,15/Apr/17 12:55 PM,26/Apr/18 6:50 AM,15/Apr/17 12:55 PM,v1.0.0-alpha1,,,v1.0.0,,fabric-endorser,,,,,,0,,,,,,,,"Illegal file mode detected  while deploying chaincode spec. I see this error in Vagrant environment and it is reproducible. 

{noformat}

unit-tests_1  | 2017-03-01 15:29:06.038 UTC [peer] func1 -> INFO 002 Auto detected peer address: 172.17.0.4:21212
unit-tests_1  | getting deployment spec for chaincode spec: type:GOLANG chaincode_id:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example01"" name:""example01"" version:""0"" > input:<args:""init"" args:""a"" args:""100"" args:""b"" args:""200"" >
unit-tests_1  | 2017-03-01 15:29:30.345 UTC [inproccontroller] func2 -> ERRO 003 chaincode ended with err: Received nil message, ending chaincode support stream
unit-tests_1  | 2017-03-01 15:29:30.345 UTC [inproccontroller] func2 -> ERRO 004 chaincode ended with err: Received nil message, ending chaincode support stream
unit-tests_1  | 2017-03-01 15:29:30.345 UTC [inproccontroller] func2 -> ERRO 005 chaincode ended with err: Received nil message, ending chaincode support stream
unit-tests_1  | 2017-03-01 15:29:30.345 UTC [inproccontroller] func2 -> ERRO 006 chaincode ended with err: Received nil message, ending chaincode support stream
unit-tests_1  | 2017-03-01 15:29:30.345 UTC [inproccontroller] func1 -> ERRO 007 chaincode-support ended with err: Received nil message, ending chaincode stream
unit-tests_1  | 2017-03-01 15:29:30.345 UTC [inproccontroller] func1 -> ERRO 008 chaincode-support ended with err: Received nil message, ending chaincode stream
unit-tests_1  | 2017-03-01 15:29:30.345 UTC [inproccontroller] func1 -> ERRO 009 chaincode-support ended with err: Received nil message, ending chaincode stream
unit-tests_1  | 2017-03-01 15:29:30.345 UTC [inproccontroller] func1 -> ERRO 00a chaincode-support ended with err: Received nil message, ending chaincode stream
unit-tests_1  | removing dir = /tmp/hyperledger/test/tmpdb/ledgersData
unit-tests_1  | --- FAIL: TestExecuteDeployTransaction (26.33s)
unit-tests_1  |         exectransaction_test.go:363: Error deploying <example01>: Error deploying chaincode: Illegal file mode detected for file src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example01/chaincode_example01.go: 100777

{noformat}

*file permission on chaincode_example01.go file:*

{code:java}
vagrant@hyperledger-devenv:v0.3.0-398e366:/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example01$ ls -ltr
total 3
-rwxrwxrwx 1 vagrant vagrant 3014 Mar  1 14:50 chaincode_example01.go

{code}
",Vagrant Environment,,,,,,,,,,,,,FAB-2485,,,,,,,,,,,,,,,,,,0|hzzzhy:zz9xm4,,,,,,,,denyeart,greg.haskins,JonathanLevi,mastersingh24,rameshthoomu,silliman,zhangchao,,,,,,,,,,,,,,"01/Mar/17 4:47 PM;rameshthoomu;Git commit level# *d9a3e02 *Merge ""[FAB-2529] Gossip Conn store - thread safety bug""",01/Mar/17 7:11 PM;denyeart; https://jira.hyperledger.org/browse/FAB-2482 was not related to this problem.,"29/Mar/17 1:29 AM;zhangchao;The vagrant mount the local fabric folder in windows onto guest linux with permission 777, all files have 0777 mode. This is because 777 is max permission in order that all files can be read/write/execute. I change the mount option to 0666, but failed to execute binary files. 
Here is the vagrant mount issue: http://serverfault.com/questions/398414/vagrant-set-default-share-permissions ",05/Apr/17 12:58 AM;JonathanLevi;I'm on it.,"15/Apr/17 11:56 AM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/7679/  should have resolved this issue.
[~greg.haskins] - can you verify and close if my assertion is correct?",15/Apr/17 12:51 PM;greg.haskins;That is correct.  Will close.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetQueryResult() query re-write is not correct,FAB-2560,15127,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,chris.elder,denyeart,denyeart,01/Mar/17 6:55 AM,01/Mar/17 7:08 PM,26/Apr/18 6:50 AM,01/Mar/17 7:08 PM,,,,v1.0.0,,fabric-ledger,,,,,,0,,,,,,,,"From fabric-ledger channel:

Query is getting re-written in fabric with duplicate ""data"" wrappers.

Query in chaincode:

{""selector"":{""docTypeId"":3,""oriRe"":""SMP"",""ctB"":""CTB"",""valDt"":""1990-12-24"",""orB"":""YYY"",""tD"":""TD"",""cuVoB"":52,""cuIoBu"":""AA"",""cuSt"":""NA""}}

Result:

2017-03-01 06:48:14.782 UTC [statecouchdb] ApplyQueryWrapper -> DEBU 441 Rewritten query with data wrapper: {""selector"":{""$and"":[{""chaincodeid"":""marbles""},{""data.cuIoBu"":""AA"",""data.cuVoB"":52,""data.data.ctB"":""CTB"",""data.data.cuSt"":""NA"",""data.docTypeId"":3,""data.orB"":""YYY"",""data.oriRe"":""SMP"",""data.tD"":""TD"",""data.valDt"":""1990-12-24""}]}}

See the problem in red:
{
   ""selector"":{
      ""$and"":[
         {
            ""chaincodeid"":""marbles""
         },
         {
            ""data.cuIoBu"":""AA"",
            ""data.cuVoB"":52,
{color:red}            ""data.data.ctB"":""CTB"",
            ""data.data.cuSt"":""NA"",{color}
            ""data.docTypeId"":3,
            ""data.orB"":""YYY"",
            ""data.oriRe"":""SMP"",
            ""data.tD"":""TD"",
            ""data.valDt"":""1990-12-24""
         }
      ]
   }
}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzdw:,,Sprint 13 - Ledger,,,,,,denyeart,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Range queries fail after iterating beyond 100 items,FAB-2531,15098,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,chris.elder,denyeart,denyeart,28/Feb/17 2:50 PM,17/Mar/17 6:33 AM,26/Apr/18 6:50 AM,08/Mar/17 2:04 PM,,,,v1.0.0,,fabric-ledger,,,,,,0,,,,,,,,"Peer sends 100 results to shim.
When shim asks for 101st item, the request for the next 100 goes back to peer and it fails with:

2017-02-28 12:01:34.649 UTC [chaincode] processStream -> DEBU 6559 [f7c0a169]Received message QUERY_STATE_NEXT from shim
2017-02-28 12:01:34.649 UTC [chaincode] HandleMessage -> DEBU 655a [f7c0a169]Fabric side Handling ChaincodeMessage of type: QUERY_STATE_NEXT in state ready
2017-02-28 12:01:34.649 UTC [chaincode] afterQueryStateNext -> DEBU 655b Received GET_STATE_BY_RANGE, invoking get state from ledger
2017-02-28 12:01:34.649 UTC [chaincode] afterQueryStateNext -> DEBU 655c Exiting QUERY_STATE_NEXT
2017-02-28 12:01:34.649 UTC [chaincode] filterError -> DEBU 655d Ignoring NoTransitionError: no transition
*2017-02-28 12:01:34.651 UTC [chaincode] func1 -> ERRO 655e query iterator not found. Sending ERROR*",,,,,,,,,,,,,,,,,,,FAB-2462,,,,,,,,,,,,,0|hzzzdx:,,Sprint 12 - Ledger,Sprint 13 - Ledger,,,,,denyeart,lignyxg,,,,,,,,,,,,,,,master,,,true,"28/Feb/17 2:55 PM;denyeart;Provide a short term fix for v1 beta.
Long term fix will be done in FAB-2462.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
devmode support broken,FAB-2530,15097,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,muralisr,greg.haskins,greg.haskins,28/Feb/17 2:41 PM,12/Apr/17 2:06 AM,26/Apr/18 6:50 AM,12/Apr/17 2:06 AM,,,,,,fabric-peer,,,,,,0,,,,,,,,Support for devmode has been broken since the CR5555/channels work.  This is a critical function for debugging chaincode ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00rmh:,,,,,,,,denyeart,greg.haskins,,,,,,,,,,,,,,,,,,,"12/Apr/17 2:06 AM;denyeart;I did devmode recently, I think this is working now.  Please re-open if there is still an issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode launchAndWaitForRegister failed,FAB-2527,15094,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,satheeshk,zerppen,zerppen,28/Feb/17 8:13 AM,27/Mar/17 3:31 AM,26/Apr/18 6:50 AM,27/Mar/17 3:02 AM,v0.6,,,v0.6,,fabric-peer,,,,,,0,chaincode,,,,,,,"Merging methods into fabric v0.6 JAVAChaincode from fabric-sdk-java v0.6 ,such as getRows/setEvent/,adding dependencies of build.gradle .And changing  Markfile  line 220 to ""echo core/chaincode/shim/java | tar -jcT - > $(@D)/javashimsrc.tar.bz2"" .Then I excuted make clean/make peer successfully.So,I excuted peer node start .In this step,i cannot see the information   ""[genesis] funcl -> INFO 00f Creating genesis bock"" after repeating several times.The result was that I always got the message ""[chaincode] Launch -> ERRO 01a launchAndWaitForRegister failed Timeout expired while starting chaincode"" when I excute peer chaincode deploy repeating several times though raising startuptimeout and deploytimeout 3 times.

After deleting the directory /var/hyperledger/production/* and recovering all fabric I  changed except raising startuptimeout and deploytimeout 3 times and the debug module of core.yaml ,then excuting ""make clean""/""make peer""/""peer node start""/""peer chaincode deploy"" ,the debug information is in Attachment.",ubuntu 16.4,,,,,,,,,,,,,,,,,,,,,,,01/Mar/17 3:34 AM;zerppen;Screen Shot 2017-03-01 at 10.01.08.png;https://jira.hyperledger.org/secure/attachment/10546/Screen+Shot+2017-03-01+at+10.01.08.png,01/Mar/17 3:34 AM;zerppen;Screen Shot 2017-03-01 at 11.31.18.png;https://jira.hyperledger.org/secure/attachment/10545/Screen+Shot+2017-03-01+at+11.31.18.png,01/Mar/17 3:34 AM;zerppen;Screen Shot 2017-03-01 at 11.31.36.png;https://jira.hyperledger.org/secure/attachment/10544/Screen+Shot+2017-03-01+at+11.31.36.png,01/Mar/17 3:34 AM;zerppen;Screen Shot 2017-03-01 at 11.31.51.png;https://jira.hyperledger.org/secure/attachment/10543/Screen+Shot+2017-03-01+at+11.31.51.png,01/Mar/17 3:34 AM;zerppen;Screen Shot 2017-03-01 at 11.32.18.png;https://jira.hyperledger.org/secure/attachment/10542/Screen+Shot+2017-03-01+at+11.32.18.png,01/Mar/17 3:34 AM;zerppen;Screen Shot 2017-03-01 at 11.32.29.png;https://jira.hyperledger.org/secure/attachment/10541/Screen+Shot+2017-03-01+at+11.32.29.png,,,0|i00rlt:,,,,,,,,zerppen,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK]  https://github.com/hyperledger/fabric-sdk-node  fabric documentation link points to nonexistent page,FAB-2505,15072,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,jjjjibm,jjjjibm,27/Feb/17 6:33 PM,09/Mar/17 6:23 PM,26/Apr/18 6:50 AM,09/Mar/17 6:22 PM,,,,v1.0.0,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"https://github.com/hyperledger/fabric-sdk-node

The first readme page *{color:#205081}Hyperledger Fabric Client SDK for Node.js
{color}* contains a dead link.

In this sentence
As an application developer, to learn about how to install and use the Node.js SDK, please visit the {color:#59afe1} fabric documentation{color}. 

the words {color:#59afe1}fabric documentation {color}are a hyperlink to
 {color:#59afe1}http://hyperledger-fabric.readthedocs.io/en/latest/Setup/NodeSDK-setup 
{color}.  However, when you click the link, this is displayed;


        \          SORRY            /
         \                         /
          \    This page does     /
           ]   not exist yet.    [    ,'|
           ]                     [   /  |
           ]___               ___[ ,'   |
           ]  ]\             /[  [ |:   |
           ]  ] \           / [  [ |:   |
           ]  ]  ]         [  [  [ |:   |
           ]  ]  ]__     __[  [  [ |:   |
           ]  ]  ] ]\ _ /[ [  [  [ |:   |
           ]  ]  ] ] (#) [ [  [  [ :===='
           ]  ]  ]_].nHn.[_[  [  [
           ]  ]  ]  HHHHH. [  [  [
           ]  ] /   `HH(""N  \ [  [
           ]__]/     HHH  ""  \[__[
           ]         NNN         [
           ]         N/""         [
           ]         N H         [
          /          N            \
         /           q,            \
        /                           \




How to recreate:
1.Clone fabric-sdk-node
2.gulp doc to generate doc
3.python -m SimpleHTTPServer &
4.In Firefox, <your IP address>:8000
5.Click docks->gen

OR visit url in issue title
Readme appears ","fabric-sdk-node : commit bc36ef5e6a70bf31adb852951f1b5a217f24a099
fabric commit 29d7fc035df697a68d271d628e693c556354486f
fabric-ca commit c3d00c32499232c484df57b68b6f2314f784179e

Ubuntu is running on a vlaunch VM ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00pfr:i,,,,,,,,jjjjibm,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Start notification is lost when installing Java chaincode,FAB-2501,15068,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,sanchezl,sanchezl,sanchezl,27/Feb/17 3:41 PM,01/Mar/17 2:44 PM,26/Apr/18 6:50 AM,01/Mar/17 2:43 PM,,,,,,fabric-peer,,,,,,0,quality,,,,,,,"Timeout occurs when installing Java chain code. 

peer logs display, before eventually timing out:
{{[chaincode] notifyDuringStartup -> DEBU 2f2 nothing to notify (dev mode ?)}}
",,,,,,,,,,,,,,,,,FAB-2365,,,,,,,27/Feb/17 3:44 PM;sanchezl;behave.log;https://jira.hyperledger.org/secure/attachment/10533/behave.log,27/Feb/17 3:44 PM;sanchezl;install_instantiate_a_first_version_chaincode_via_cli_1_2__orderer.log;https://jira.hyperledger.org/secure/attachment/10534/install_instantiate_a_first_version_chaincode_via_cli_1_2__orderer.log,27/Feb/17 3:44 PM;sanchezl;install_instantiate_a_first_version_chaincode_via_cli_1_2__peer.log;https://jira.hyperledger.org/secure/attachment/10535/install_instantiate_a_first_version_chaincode_via_cli_1_2__peer.log,,,,,,0|i00rg1:,,,,,,,,sanchezl,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Handle CouchDB name collisions due to similar named channels,FAB-2487,15054,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,manish-sethi,denyeart,denyeart,26/Feb/17 1:49 PM,19/Jun/17 1:33 PM,26/Apr/18 6:50 AM,14/Jun/17 1:30 AM,,,,v1.0.0,,fabric-ledger,,,,,,5,,,,,,,,"Channel name becomes the CouchDB database name.  There is some name mapping logic introduced in: [https://gerrit.hyperledger.org/r/#/c/6051/].

The existing name mapping logic can cause collisions in CouchDB database name, for example channel my_channel and my.channel would both result in my_channel couchdb database. Need to protect from collisions.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-60,0|hzzz76:zzzssyt,,Sprint 12 - Ledger,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,Sprint 16  - Ledger,,binhn,ChristopherFerris,denyeart,jyellick,kchristidis,manish-sethi,,,,,,,,,,,master,,,true,"09/Jun/17 5:37 PM;Clayton Sims;this one is medium.  is that because it is a low likelihood of collisions? or some other reason?

 ","10/Jun/17 1:22 PM;denyeart;[~Clayton Sims] Yes, this is Medium because the likelihood of encountering this in a real world deployment is low.

That being said, it will be easier to deal with pre-1.0 release than post-1.0 release, therefore I still think the fix should be targeted for 1.0.","12/Jun/17 11:34 PM;ChristopherFerris;What makes us believe that the collision likelihood will be low? There isn't necessarily going to be a central authority for channel names. It could be completely decentralized. This also creates a security vulnerability because the collision would not necessarily be spotted before someone exploited by snarfing someone else's data.

I think it should be targeted for 1.0 as well, and to track suggest we mark this as High.",13/Jun/17 1:49 AM;manish-sethi;Submitted a CR for fixing this - https://gerrit.hyperledger.org/r/#/c/10501,"13/Jun/17 1:58 PM;jyellick;The orderer also enforces channel names to comply with Kafka topic semantics.  The following is from {{fabric/common/configtx/manager.go}}

{noformat}
// validateChainID makes sure that proposed chain IDs (i.e. channel names)
// comply with the following restrictions:
//      1. Contain only ASCII alphanumerics, dots '.', dashes '-'
//      2. Are shorter than 250 characters.
//      3. Are not the strings ""."" or "".."".
//
// Our hand here is forced by:
// https://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/common/Topic.scala#L29
{noformat}

So, the example given with underscores is not an allowable name.  It seems like the question is the conversion between {{.}} and {{-}}?","13/Jun/17 2:41 PM;manish-sethi;[~jyellick] - Couch puts more limitations on this. For instance, it allows only small caps [a-z] within alphanumerics. Also, the first char cannot be a number. In the current impl, everything always changed to lower-case.

Are kafka channel names case sensitive?","13/Jun/17 2:42 PM;binhn;Given the info from [~jyellick] above, and if the orderer could also eliminate period ""."" and uppercase from the channel name then we would be able to use channel name the same as db name without any needs from transformation.

However, discussed with [~jyellick] about eliminating uppercase from orderer seems more pervasive, and not what we want to take on at this point, so I am voting for doing db name transformation.","13/Jun/17 2:46 PM;jyellick;Yes, the Kafka topic names are case sensitive.  The link from above appears to have broken, but here is one that works. 

https://github.com/apache/kafka/blob/ad3dfc6ab25c3f80d2425e24e72ae732b850dc60/core/src/main/scala/kafka/common/Topic.scala

I would suggest updating the {{validateChainID}} method referenced above, but there are other consumers of this method which rely on the case sensitivity, so I'm not sure it's a great idea for v1.

Seems like we need this to go in on the ledger side.","13/Jun/17 2:51 PM;manish-sethi;For simplicity, I would be in the favor of  modifying `validateChainID` such that it imposes the naming limitations from the ledger as well. In other words, allow chain names only from the intersection of kafka and couch valid names sets.

Otherwise, there could always be a situation where the channel get created but the db could not got created (e.g., transformed named got longer than allowed by couch etc.). The channel could finally lead to an unusable state.",13/Jun/17 2:57 PM;ChristopherFerris;This has reached the threshold of five votes and may be merged following review.,"13/Jun/17 2:59 PM;kchristidis;I am fine with that. Please tag me as a reviewer when you submit this.

Q: What makes eliminating uppercase pervasive?","13/Jun/17 3:08 PM;jyellick;> For simplicity, I would be in the favor of  modifying `validateChainID` such that it imposes the naming limitations from the ledger as well. In other words, allow chain names only from the intersection of kafka and couch valid names sets.

Agreed this is simpler.

> Q: What makes eliminating uppercase pervasive?

We rely on mixed case names for our config keys, and validate them using this same function.  I thought this was used in more places, but it appears to be largely test code, so this is less invasive than I expected.

I can put together a CR if we agree this is the right approach.


",13/Jun/17 3:12 PM;manish-sethi;I am good with this (modifying `validateChainID`),13/Jun/17 3:31 PM;jyellick;Proposed fix in: https://gerrit.hyperledger.org/r/10535,"13/Jun/17 8:04 PM;manish-sethi;Pushed a dependent CR [https://gerrit.hyperledger.org/r/#/c/10541.] Though this clean up does not change the behavior in any manner as long as the names follow the restriction imposed by the change in the parent CR ([https://gerrit.hyperledger.org/r/10535]) and most of the code would behave a noop. Still, better to clean up to reflect the current reality.",,,,,,,,,,,,,,,,,,,,,,,,,,,
Cleanup outdated core.yaml entries for ledger,FAB-2486,15053,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,ChristopherFerris,denyeart,denyeart,26/Feb/17 6:23 AM,19/Aug/17 3:51 PM,26/Apr/18 6:50 AM,30/Apr/17 12:04 PM,,,,v1.0.0,,fabric-ledger,,,,,,0,,,,,,,,I believe the entire 'sync' section needs to be removed.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-758,0|hzzz76:zzzrli,,Sprint 12 - Ledger,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,Sprint 16  - Ledger,,ChristopherFerris,denyeart,,,,,,,,,,,,,,,master,,,true,29/Apr/17 1:16 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/#/c/8747/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Re-introduce paging for range queries and rich queries,FAB-2462,15025,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,balaji.viswanathan,denyeart,denyeart,24/Feb/17 11:45 AM,19/Aug/17 4:08 PM,26/Apr/18 6:50 AM,25/Apr/17 1:45 PM,,,,v1.0.0,,fabric-ledger,,,,,,0,,,,,,,,Need to re-introduce paging between shim and peer so that query results can be returned in batches of 100.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-757,0|hzzz73:k,,Sprint 12 - Ledger,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,Sprint 16  - Ledger,,balaji.viswanathan,ChristopherFerris,denyeart,,,,,,,,,,,,,,master,,,true,"06/Mar/17 9:30 AM;balaji.viswanathan;I was looking at this and there seems to be multiple issue with this.

1. Incorrect Null checks. Closes the iterator when more results exist
@@ -721,7 +724,7 @@ func (handler *Handler) handleGetStateByRange(msg *pb.ChaincodeMessage) {
                        keysAndValues = append(keysAndValues, &keyAndValue)
                }
 
-               if qresult != nil {
+               if qresult == nil {
                        rangeIter.Close()
                        handler.deleteQueryIterator(txContext, iterID)
                }
@@ -811,7 +814,7 @@ func (handler *Handler) handleQueryStateNext(msg *pb.ChaincodeMessage) {
                                chaincodeLogger.Errorf(""Failed to get query result from iterator. Sending %s"", pb.ChaincodeMessage_ERROR)
                                return
                        }
-                       if qresult != nil {
+                       if qresult == nil {
                                break
                        }
@@ -998,7 +1001,7 @@ func (handler *Handler) handleGetQueryResult(msg *pb.ChaincodeMessage) {
                        keysAndValues = append(keysAndValues, &keyAndValue)
                }
 
-               if qresult != nil {
+               if qresult == nil {
                        executeIter.Close()
                        handler.deleteQueryIterator(txContext, iterID)
                }
 

2. How we handle RangeQueries and Rich queries

in core/chaincode/handler.go:
handleQueryStateByRange expects QueryResult of type ledger.KV (line: 722)
handleGetQueryResult expects QueryResult of type ledger.QueryRecord (line: 999)

However, when used in iterator. The Next() call will land up with handleQueryStateNext()  which will then need to have knowledge of how the iterator was created. The QueryIterator just holds an UUID now and does not contain this information.  It currently handles this as KV (line 820). 

Why do we need namespace qualified QueryRecord from ledger when all calls to ledger are qualified with ns?",23/Apr/17 11:42 AM;ChristopherFerris;https://gerrit.hyperledger.org/r/#/c/7255/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot install Java chaincode via CLI,FAB-2461,15024,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,sanchezl,sanchezl,sanchezl,24/Feb/17 6:47 AM,01/Mar/17 2:42 PM,26/Apr/18 6:50 AM,01/Mar/17 2:42 PM,,,,,,fabric-peer,,,,,,0,quality,,,,,,,"When trying to install java chaincode:
{{Error: Error getting chaincode code chaincode: Error getting chaincode package bytes: Cannot collect chaincode files from empty input}}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00r6p:,,,,,,,,sanchezl,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Only validated transactions should be committed to History Database,FAB-2429,14992,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,denyeart,denyeart,22/Feb/17 3:43 PM,02/Mar/17 12:38 AM,26/Apr/18 6:50 AM,02/Mar/17 12:38 AM,,,,v1.0.0,,fabric-ledger,,,,,,0,,,,,,,,Need to check validation flag before committing transaction writes to History Database,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzdw:i,,Sprint 12 - Ledger,Sprint 13 - Ledger,,,,,denyeart,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK]  cloudant-fabricca-tests.js  not ok 1 AssertionError: url is not valid,FAB-2382,14945,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,jjjjibm,jjjjibm,20/Feb/17 6:35 PM,08/Mar/17 5:10 AM,26/Apr/18 6:50 AM,08/Mar/17 5:10 AM,,,,v1.0.0,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"Running fabric-sdk-node with the levels indicated in Environment, the test fails:

# Use FabricCAServices wih a Cloudant CouchDB KeyValueStore
{color:#59afe1}self = { getCloudantClient: [Function],
  destroy: [Function],
  _url:
   { config:
      { url: 'https://1421acc7-6faa-491a-8e10-951e2e190684-bluemix:7179ef7a72602189243deeabe207889bde1c2fada173ae1022b5592e5a79dacc@1421acc7-6faa-491a-8e10-951e2e190684-bluemix.cloudant.com',
        request: null,
        requestDefaults:
         { headers: { 'User-agent': 'nodejs-cloudant/1.7.1 (Node.js v6.3.1)' },
           gzip: true,
           agent:
            Agent {
              domain: null,
              _events: { free: [Function] },
              _eventsCount: 1,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: { keepAlive: true, path: null },
              requests: {},
              sockets: {},
              freeSockets: {},
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              maxCachedSessions: 100,
              _sessionCache: { map: {}, list: [] } } },
        cookie: undefined,
        log: { [Function: disabled] enabled: false, namespace: 'nano' } },
     db:
      { create: [Function: createDb],
        get: [Function: getDb],
        destroy: [Function: destroyDb],
        list: [Function: listDbs],
        use: [Function],
        scope: [Function: docModule],
        compact: [Function: compactDb],
        replicate: [Function: replicateDb],
        changes: [Function: changesDb],
        follow: [Function: followDb],
        followUpdates: [Function: followUpdates],
        updates: [Function: updates] },
     use: [Function],
     scope: [Function: docModule],
     request: [Function: relax],
     relax: [Function: relax],
     dinosaur: [Function: relax],
     auth: [Function: auth],
     session: [Function: session],
     updates: [Function: updates],
     followUpdates: [Function: followUpdates],
     uuids: [Function: uuids],
     _use: [Function: docModule],
     ping: [Function: ping],
     get_cors: [Function],
     set_cors: [Function],
     set_permissions: [Function],
     generate_api_key: [Function],
     get_virtual_hosts: [Function],
     add_virtual_host: [Function],
     delete_virtual_host: [Function] },
  _name: 'member_db' }
{color}not ok 1 AssertionError: url is not valid
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      { actual: false, expected: true, generatedMessage: false, message: 'url is not valid', name: 'AssertionError', operator: '==' }
    at: process.onetime (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/onetime/index.js:22:12)
    stack: |-
      AssertionError: url is not valid
          at dbScope (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/nano/lib/nano.js:35:10)
          at /home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/test/integration/couchdb-util.js:39:18
          at Object.module.exports.destroy (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/test/integration/couchdb-util.js:37:9)
          at /home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/test/integration/cloudant-fabricca-tests.js:52:14
          at Test.<anonymous> (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape-promise/index.es5.js:21:13)
          at Test.bound [as _cb] (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:66:32)
          at Test.run (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:85:10)
          at Test.bound [as run] (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/test.js:66:32)
          at Immediate.next (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/tape/lib/results.js:71:15)
          at runCallback (timers.js:570:20)
  ...

1..1
# tests 1
# pass  0
# fail  1
The text in {color:#59afe1}blue font {color}is a trace I added to echo 'self' on entry to the failing function.

The point of failure is in couchdb-util.js, method destroy().   See attachment Node inspector  point Of failure.png for a display of local variables when the assertion fails. 


","├─┬ cloudant@1.7.1
│ ├── cloudant-nano@6.4.1

fabric-sdk-node: commit 084d3b591532881d7cb3c4641f09a4d53609ce00
fabric commit e829d2ecfd9a2bfc378a08a9364215f241a0a09b
fabric-ca : commit 37b897b3cd723568b38026acdf85a1d168a4cbf1

Vlaunch VM is running Ubuntu

",,,,,,,,,,,,,,,,,,,,,,,20/Feb/17 6:36 PM;jjjjibm;FAB-2382 Node Inspector - point of failure.png;https://jira.hyperledger.org/secure/attachment/10522/FAB-2382+Node+Inspector+-+point+of+failure.png,,,,,,,,0|i00qrd:,,,,,,,,cdaughtr,jjjjibm,,,,,,,,,,,,,,,,,,,20/Feb/17 11:03 PM;cdaughtr;I can see that the code added to CouchDBKeyValueStore to support cloudant is no longer there and needs to be restored.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK] coucbdb-fabricca-tests.js  not ok 3 Error: Must provide the CouchDB database url to store membership data.,FAB-2369,14931,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,cdaughtr,jjjjibm,jjjjibm,20/Feb/17 9:52 AM,09/Mar/17 6:23 PM,26/Apr/18 6:50 AM,09/Mar/17 3:25 PM,,,,v1.0.0,,fabric-sdk-node,,,,,,0,,,,,,,,"New result from fabric-node-sdk/test/integration/coucb-fabricca-tests.js: 

not ok 3 Error: Must provide the CouchDB database url to store membership data.
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [Error: Must provide the CouchDB database url to store membership data.]
    at: process.onetime (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/onetime/index.js:22:12)
    stack: |-
      Error: Must provide the CouchDB database url to store membership data.
          at /home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/impl/CouchDBKeyValueStore.js:48:10
          at /home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/impl/CryptoKeyStore.js:35:10
          at /home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/impl/CryptoKeyStore.js:94:16
          at CryptoKeyStore (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/impl/CryptoKeyStore.js:95:9)
          at Promise (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/impl/CryptoSuite_ECDSA_AES.js:245:5)
          at _getKeyStore (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/impl/CryptoSuite_ECDSA_AES.js:241:10)
          at Promise (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/impl/CryptoSuite_ECDSA_AES.js:149:10)
          at generateKey (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/impl/CryptoSuite_ECDSA_AES.js:148:11)
          at /home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/FabricCAClientImpl.js:101:26
          at enroll (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-ca-client/lib/FabricCAClientImpl.js:86:10)

I added a log statement to CoucbDBKeyValueStore.js since Node Inspector shows both options and url are provided:

constructor, options: [object Object]
{ _url: 'http://localhost:5984',   <<=== aha!!
  _name: 'member_db',
  _database:
   { info: [Function],
     replicate: [Function],
     compact: [Function],
     changes: [Function],
     follow: [Function],
     auth: [Function: auth],
     session: [Function: session],
     insert: [Function: insertDoc],
     get: [Function: getDoc],
     head: [Function: headDoc],
     copy: [Function: copyDoc],
     destroy: [Function: destroyDoc],
     bulk: [Function: bulksDoc],
     list: [Function: listDoc],
     fetch: [Function: fetchDocs],
     fetchRevs: [Function: fetchRevs],
     config: { url: 'http://localhost:5984', db: 'member_db' },
     multipart:
      { insert: [Function: insertMultipart],
        get: [Function: getMultipart] },
     attachment:
      { insert: [Function: insertAtt],
        get: [Function: getAtt],
        destroy: [Function: destroyAtt] },
     show: [Function: showDoc],
     atomic: [Function: updateWithHandler],
     updateWithHandler: [Function: updateWithHandler],
     search: [Function: viewSearch],
     spatial: [Function: viewSpatial],
     view: { [Function: viewDocs] compact: [Function] },
     viewWithList: [Function: viewWithList] } }

It looked like a simple case of changing options.url to options._url.   I tried this, but got this new result:

ibmadmin@jcwNodeSDK:~/work/src/github.com/hyperledger/fabric-sdk-node$ node  test/integration/couchdb-fabricca-tests.js
info: Returning a new winston logger with default configurations
Key Value Store = fabric-client/lib/impl/CouchDBKeyValueStore.js
TAP version 13
# Use FabricCAServices with a CouchDB KeyValueStore
# Cleanup of existing member_db returned false
# Initilize the CouchDB KeyValueStore
constructor, options: [object Object]
{ name: 'member_db', url: 'http://localhost:5984' }
Error: Must provide the CouchDB database url to store membership data.
    at /home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/impl/CouchDBKeyValueStore.js:48:10
    at /home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/utils.js:99:18
    at Object.module.exports.newKeyValueStore (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/fabric-client/lib/utils.js:96:9)
    at /home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/test/integration/couchdb-fabricca-tests.js:60:9
    at process._tickCallback (internal/process/next_tick.js:103:7)
not ok 1 Error initializing CouchDB KeyValueStore. Exiting.
  ---
    operator: fail
    at: process._tickCallback (internal/process/next_tick.js:103:7)
  ...

So it seems sometimes the parameter 'options' has the field options.url and sometimes options._url .

I tried patching CoucbDBKeyValueStore like this:
myUrl = """"
if (options) {
   myUrl = options.url ? options.url : options._url;
}
and then referencing myUrl.  This gives this result:

ibmadmin@jcwNodeSDK:~/work/src/github.com/hyperledger/fabric-sdk-node$ node  test/integration/couchdb-fabricca-tests.js
info: Returning a new winston logger with default configurations
Key Value Store = fabric-client/lib/impl/CouchDBKeyValueStore.js
TAP version 13
# Use FabricCAServices with a CouchDB KeyValueStore
# Cleanup of existing member_db returned false
# Initilize the CouchDB KeyValueStore
{ name: 'member_db', url: 'http://localhost:5984' }
info: [CouchDBKeyValueStore.js]: No member_db found, creating member_db
info: [CouchDBKeyValueStore.js]: Created member_db database
# Setting client keyValueStore to: [object Object]
ok 1 Successfully set CouchDB KeyValueStore for client
# Initialize the CA server connection and KeyValueStore
info: [FabricCAClientImpl.js]: Successfully constructed Fabric CA service client: endpoint - {""protocol"":""http"",""hostname"":""localhost"",""port"":7054}
ADD: caService -  FabricCAServices : {hostname: localhost, port: 7054}
ok 2 Successfully initialized the Fabric CA service.
# Set cryptoSuite on client
# Begin caService.enroll
info: [crypto_ecdsa_aes]: This class requires a CryptoKeyStore to save keys, using the store: {""opts"":{""_url"":""http://localhost:5984"",""_name"":""member_db"",""_database"":{""config"":{""url"":""http://localhost:5984"",""db"":""member_db""},""multipart"":{},""attachment"":{}}}}
{ _url: 'http://localhost:5984',
  _name: 'member_db',
  _database:
   { info: [Function],
     replicate: [Function],
     compact: [Function],
     changes: [Function],
     follow: [Function],
     auth: [Function: auth],
     session: [Function: session],
     insert: [Function: insertDoc],
     get: [Function: getDoc],
     head: [Function: headDoc],
     copy: [Function: copyDoc],
     destroy: [Function: destroyDoc],
     bulk: [Function: bulksDoc],
     list: [Function: listDoc],
     fetch: [Function: fetchDocs],
     fetchRevs: [Function: fetchRevs],
     config: { url: 'http://localhost:5984', db: 'member_db' },
     multipart:
      { insert: [Function: insertMultipart],
        get: [Function: getMultipart] },
     attachment:
      { insert: [Function: insertAtt],
        get: [Function: getAtt],
        destroy: [Function: destroyAtt] },
     show: [Function: showDoc],
     atomic: [Function: updateWithHandler],
     updateWithHandler: [Function: updateWithHandler],
     search: [Function: viewSearch],
     spatial: [Function: viewSpatial],
     view: { [Function: viewDocs] compact: [Function] },
     viewWithList: [Function: viewWithList] } }
info: [CouchDBKeyValueStore.js]: member_db already exists
ok 3 Successfully enrolled admin2 with CA server
ok 4 Member isEnrolled successfully.
info: [Client.js]: Successfully loaded user ""admin2"" from local key value store
ok 5 Successfully loaded the user from key value store

1..5
# tests 5
# pass  5

# ok

Assigning to Caroline for evaluation. 

If you want that to be 'the fix'  you can assign it back to me with a comment.  You probably want a different solution. 




","fabric-node-sdk: commit 084d3b591532881d7cb3c4641f09a4d53609ce00
fabric-ca: commit 37b897b3cd723568b38026acdf85a1d168a4cbf1
fabric: commit e829d2ecfd9a2bfc378a08a9364215f241a0a09b

Running Ubuntu on vlaunch VM ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00pfp:,,,,,,,,cdaughtr,jjjjibm,,,,,,,,,,,,,,,,,,,"20/Feb/17 9:54 AM;jjjjibm;Hi Caroline,
I'm assigning this to you for evaluation.  You can assign it back to me if you like the patch I made.  I would think you probably want to look more deeply into it than I did.  ",08/Mar/17 5:09 AM;jimthematrix;this is part of what Caroline has been working on,09/Mar/17 3:25 PM;cdaughtr;This has been fixed and now runs successfully.  We've also added it to 'gulp test'.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Instantiate fails with Java chaincode,FAB-2365,14927,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,sanchezl,Ratnakar,Ratnakar,19/Feb/17 6:57 PM,01/Mar/17 2:47 PM,26/Apr/18 6:50 AM,01/Mar/17 2:47 PM,,,,v1.0.0,,fabric-endorser,fabric-peer,,,,,0,chaincode,,,,,,,"Verified on commit level *{panel}ef962ca41be5343c942d10741c44b06399017cd6{panel}*
Steps followed to reproduce the issue.

*+Vagrant Window 1:+*
Start the Orderere

{panel}
ORDERER_GENERAL_LOGLEVEL=debug orderer
{panel}

*+Vagrant Window 2:+*
Start the peer

{panel}
peer node start
{panel}

*+Vagrant Window 3:+*

_*Install chaincode*_
{code}
peer chaincode install -l java -n simplesample -v 1.0 -p /opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/java/SimpleSample -c '{""Args"": [""init"", ""a"",""100"", ""b"", ""200""]}'
{code}

This is successful and result is :
{panel}
Installed remotely response:<status:200 payload:""OK"" > 
{panel}

{code}
peer chaincode instantiate -l java -n simplesample -v 1.0 -p 
/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/java/SimpleSample -c '{""Args"": [""init"", ""a"",""100"", ""b"", ""200""]}'
{code}

While executing of the above command, one can see a container launched 

docker ps
{panel}
CONTAINER ID        IMAGE                       COMMAND                  CREATED             STATUS              PORTS               NAMES
7ec4eaab9cdb        dev-jdoe-simplesample-1.0   ""java -jar chainco...""   4 minutes ago       Up 4 minutes                            dev-jdoe-simplesample-1.0
{panel}

chiancode container below messages

{code}
docker logs -f dev-jdoe-simplesample-1.0 
Feb 19, 2017 6:16:49 PM org.hyperledger.java.shim.ChaincodeBase newPeerClientConnection
INFO: Inside newPeerCLientConnection
Feb 19, 2017 6:16:49 PM io.grpc.internal.TransportSet$1 call
INFO: Created transport io.grpc.netty.NettyClientTransport@2e949597(/0.0.0.0:7051) for /0.0.0.0:7051
Feb 19, 2017 6:16:49 PM io.grpc.internal.TransportSet$TransportListener transportReady
INFO: Transport io.grpc.netty.NettyClientTransport@2e949597(/0.0.0.0:7051) for /0.0.0.0:7051 is ready
{code}

also _*docker images*_ comes up
{panel}
REPOSITORY                     TAG                             IMAGE ID            CREATED             SIZE
dev-jdoe-simplesample-1.0      latest                          c4023eaa5463        3 minutes ago       1.46 GB
{panel}

However instantiate command fails with below error
{code}
Error: Error endorsing chaincode: rpc error: code = 2 desc = Timeout expired while starting chaincode simplesample:1.0(networkid:dev,peerid:jdoe,tx:l6esTPG8I5+xexAEvI9RV+T9B2fNB3I3mLNDWcl7pfI=)
{code}

And peer logs show below error message.
{code}
2017-02-19 18:45:11.796 UTC [ccprovider] NewCCContext -> INFO 047 NewCCCC (chain=,chaincode=lccc,version=0.7.0-snapshot-ef962ca,txid=HbAfqfC/rJtr6mATZmoJpMtXlp+YlZZ3gKT61FK3tj8=,syscc=true,proposal=0xc42151cd20,canname=lccc:0.7.0-snapshot-ef962ca
2017-02-19 18:45:31.856 UTC [gossip/comm#-1] func1 -> WARN 048 0.0.0.0:7051, PKIid:[] isn't responsive: EOF
2017-02-19 18:46:21.861 UTC [gossip/comm#-1] func1 -> WARN 049 0.0.0.0:7051, PKIid:[] isn't responsive: EOF
2017-02-19 18:46:47.160 UTC [protoutils] ValidateProposalMessage -> INFO 04a ValidateProposalMessage starts for signed proposal 0xc4213280c0
2017-02-19 18:46:47.160 UTC [protoutils] validateChannelHeader -> INFO 04b validateChannelHeader info: header type 3
2017-02-19 18:46:47.160 UTC [protoutils] checkSignatureFromCreator -> INFO 04c checkSignatureFromCreator starts
2017-02-19 18:46:47.160 UTC [protoutils] checkSignatureFromCreator -> INFO 04d checkSignatureFromCreator info: creator is &{DEFAULT DEFAULT}
2017-02-19 18:46:47.160 UTC [protoutils] checkSignatureFromCreator -> INFO 04e checkSignatureFromCreator info: creator is valid
2017-02-19 18:46:47.160 UTC [protoutils] checkSignatureFromCreator -> INFO 04f checkSignatureFromCreator exists successfully
2017-02-19 18:46:47.160 UTC [protoutils] validateChaincodeProposalMessage -> INFO 050 validateChaincodeProposalMessage starts for proposal 0xc4213b34f0, header 0xc420139ff0
2017-02-19 18:46:47.160 UTC [protoutils] validateChaincodeProposalMessage -> INFO 051 validateChaincodeProposalMessage info: header extension references chaincode name:""lccc"" 
2017-02-19 18:46:47.160 UTC [ccprovider] NewCCContext -> INFO 052 NewCCCC (chain=testchainid,chaincode=lccc,version=0.7.0-snapshot-ef962ca,txid=l6esTPG8I5+xexAEvI9RV+T9B2fNB3I3mLNDWcl7pfI=,syscc=true,proposal=0xc4213b34f0,canname=lccc:0.7.0-snapshot-ef962ca
2017-02-19 18:46:47.161 UTC [ccprovider] NewCCContext -> INFO 053 NewCCCC (chain=testchainid,chaincode=simplesample,version=1.0,txid=l6esTPG8I5+xexAEvI9RV+T9B2fNB3I3mLNDWcl7pfI=,syscc=false,proposal=0xc4213b34f0,canname=simplesample:1.0
2017-02-19 18:47:11.869 UTC [gossip/comm#-1] func1 -> WARN 054 0.0.0.0:7051, PKIid:[] isn't responsive: EOF
2017-02-19 18:48:01.871 UTC [gossip/comm#-1] func1 -> WARN 055 0.0.0.0:7051, PKIid:[31 187 223 182 199 174 91 202 182 195 76 101 193 68 82 145 75 51 75 246 120 133 185 26 237 208 150 137 159 72 218 133] isn't responsive: connection error: desc = ""transport is closing""
2017-02-19 18:49:16.882 UTC [gossip/comm#-1] func1 -> WARN 056 0.0.0.0:7051, PKIid:[] isn't responsive: EOF
2017-02-19 18:51:21.887 UTC [gossip/comm#-1] func1 -> WARN 057 0.0.0.0:7051, PKIid:[] isn't responsive: EOF
2017-02-19 18:51:56.973 UTC [chaincode] processStream -> ERRO 058 Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
2017-02-19 18:51:57.086 UTC [chaincode] Launch -> ERRO 059 launchAndWaitForRegister failed Timeout expired while starting chaincode simplesample:1.0(networkid:dev,peerid:jdoe,tx:l6esTPG8I5+xexAEvI9RV+T9B2fNB3I3mLNDWcl7pfI=)
{code}

_As a result of this Invoke/Query fails._",,,,,,,,,,,,,,,,,,,,,,,,19/Feb/17 6:57 PM;Ratnakar;orderer.txt;https://jira.hyperledger.org/secure/attachment/10519/orderer.txt,19/Feb/17 6:57 PM;Ratnakar;peer-logs.txt;https://jira.hyperledger.org/secure/attachment/10518/peer-logs.txt,,,,,,,0|i00qnd:,,,,,,,,Ratnakar,sanchezl,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"As per gettinstarted doc using hackfest images, deploy is not going though",FAB-2358,14920,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,Ratnakar,Ratnakar,Ratnakar,18/Feb/17 7:41 PM,18/Feb/17 9:34 PM,26/Apr/18 6:50 AM,18/Feb/17 9:34 PM,,,,v1.0.0-alpha1,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"As per the *gettingstarted* document from here http://hyperledger-fabric.readthedocs.io/en/latest/gettingstarted/
using hackgest images. 

Deploy chaincdoe through nodesdk fails.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00qm1:,,,,,,,,Ratnakar,,,,,,,,,,,,,,,,,,,,"18/Feb/17 7:44 PM;Ratnakar;Root cause of the issue:

the sfhackfest images uses the ports *805** , where as *config.json* from _*alpha-1.0 branch*_ uses ports *705**
Hence node program that trying to deploy on to that peer is unable to connect with those ports hence program fails to deploy chaincode.

No changes required for this patch https://gerrit.hyperledger.org/r/#/c/5847/ once fix is given",18/Feb/17 7:51 PM;Ratnakar;Gerrit link https://gerrit.hyperledger.org/r/#/c/6217/1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
orderer panics: cannot load MSP config for org SampleOrg; could not read directory msp/sampleconfig/cacerts,FAB-2356,14918,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jyellick,scottz,scottz,18/Feb/17 7:10 PM,31/May/17 1:58 PM,26/Apr/18 6:50 AM,19/Mar/17 3:21 PM,v1.0.0,,,v1.0.0,,fabric-orderer,,,,,,0,quality,,,,,,,"Using commit 9751802, Feb 18 2pm EST, cannot launch network. The orderer panics and restarts repeatedly. Orderer logs follow below.

jason, this follows your other fixes  a6eaf31 (6193) and b78e929 (6171), but now seeing a different (but similar type) error loading files. If this belongs in MSP or other team, of course feel free to reassign and change component field.

2017-02-18 18:48:40.962 UTC [configtx/tool/localconfig] Load -> INFO 004 Checking for configtx.yaml at: 
2017-02-18 18:48:40.969 UTC [viperutil] EnhancedExactUnmarshal -> INFO 005 map[application:map[Organizations:<nil>] profiles:map[SampleSingleMSPSolo:map[Application:map[Organizations:[map[Name:SampleOrg ID:DEFAULT MSPDir:msp/sampleconfig AnchorPeers:[map[Host:127.0.0.1 Port:7051]]]]] Orderer:map[Kafka:map[Brokers:[127.0.0.1:9092]] Organizations:[map[ID:DEFAULT MSPDir:msp/sampleconfig AnchorPeers:[map[Host:127.0.0.1 Port:7051]] Name:SampleOrg]] OrdererType:solo Addresses:[127.0.0.1:7050] BatchTimeout:10s BatchSize:map[MaxMessageCount:10 AbsoluteMaxBytes:99 MB PreferredMaxBytes:512 KB]]] SampleInsecureSolo:map[Orderer:map[OrdererType:solo Addresses:[127.0.0.1:7050] BatchTimeout:10s BatchSize:map[MaxMessageCount:10 AbsoluteMaxBytes:99 MB PreferredMaxBytes:512 KB] Kafka:map[Brokers:[127.0.0.1:9092]] Organizations:<nil>] Application:map[Organizations:<nil>]]] organizations:[map[Name:SampleOrg ID:DEFAULT MSPDir:msp/sampleconfig AnchorPeers:[map[Host:127.0.0.1 Port:7051]]]] orderer:map[OrdererType:solo Addresses:[0.0.0.0:5005] BatchTimeout:10s BatchSize:map[AbsoluteMaxBytes:99 MB PreferredMaxBytes:512 KB MaxMessageCount:10] Kafka:map[Brokers:[127.0.0.1:9092]] Organizations:<nil>]]
2017-02-18 18:48:40.969 UTC [common/configtx/tool/provisional] New -> CRIT 006 Error loading MSP configuration for org SampleOrg: Could not load a valid ca certificate from directory msp/sampleconfig/cacerts, err Could not read directory open msp/sampleconfig/cacerts: no such file or directory, err msp/sampleconfig/cacerts
panic: Error loading MSP configuration for org SampleOrg: Could not load a valid ca certificate from directory msp/sampleconfig/cacerts, err Could not read directory open msp/sampleconfig/cacerts: no such file or directory, err msp/sampleconfig/cacerts

goroutine 1 [running]:
panic(0xa23320, 0xc420351950)
	/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc42016dd70, 0xb30d52, 0x2e, 0xc42034b7c0, 0x2, 0x2)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x127
github.com/hyperledger/fabric/common/configtx/tool/provisional.New(0xc420339550, 0x13, 0xc420339550)
	/opt/gopath/src/github.com/hyperledger/fabric/common/configtx/tool/provisional/provisional.go:118 +0x1319
",linux x86 vagrant docker-compose,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00qll:,,,,,,,,bmos299,jyellick,scottz,,,,,,,,,,,,,,,,,,22/Feb/17 2:26 PM;bmos299;Ratanakar and Scott are evaluating the configuration.,22/Feb/17 2:52 PM;bmos299;...changing to high from highest.,"22/Feb/17 3:10 PM;jyellick;How is the orderer being started?

This is a symptom of starting the orderer in the ad-hoc dev environment (while not working in fabric.git) which attempts to generate a genesis block dynamically.

The recommended path for configuring the orderer is to:

1. Execute the {{configtxgen}} tool to generate a genesis block.
2. Copy this genesis block to the container/machine where the orderer is to be started.
3. Start the orderer specifying the {{ORDERER_GENERAL_GENESISMETHOD=file}} and {{ORDERER_GENERAL_GENESISFILe=/path/you/configured}}

Please see {{fabric/docs/configtxgen.md}} for more details on this process.

Note, the reason why you should absolutely not dynamically generate the genesis block outside of a dev environment, is that marshaling is not deterministic (and this is not just theoretical for configuration, this is actual) and so if you attempt to start for instance 2 Kafka orderers, each dynamically bootstrapped, there's a very high probability that each instance will have a different genesis hash, and the two blockchains will start (and stay) in a diverged state.

The error you are seeing is because in the default development mode, the orderer will attempt to invoke the {{configtxgen}} tool under the covers.  The default config in {{configtx.yaml}} references {{msp/sampleconfig}} which is present in the fabric.git root.

If you are still convinced that you would like to dynamically generate the genesis block, then I recommend that you pass {{ORDERER_GENERAL_GENESISPROFILE=SimpleInsecureSolo}} which will not attempt to include any MSP definitions, and will workaround this problem.","28/Feb/17 12:00 AM;scottz;OK, I believe I was correctly using the dev environment, but will write this off to tester error, having only partially understood and adapted to the the new  file method from the provisional method. I will be working more to understand this and use the new file method in coming days and will create new bugs if issues found.
In the meantime, is it appropriate to panic, when someone configures incorrectly, or should the orderer handle things more gracefully here?  I would think the latter, but am open to discussion. The orderer could be used for other orgs and networks and channels, etc, and we wouldn't want to take them down too, would we?","10/Mar/17 6:27 PM;jyellick;If this is resolved, can we close it?","11/Mar/17 9:59 PM;scottz;Although the test steps may be suspect, the error remains a panic. That should be addressed with this issue.",13/Mar/17 2:51 PM;jyellick;This panic is triggered by {{logger.Panicf}} purposefully when the configuration specified is incorrect and the orderer cannot start.  I'm not sure what there is to address?  We could change this to a {{logger.Fatalf}} but this simply provides less debug information and makes testing the failure cases in unit tests much more painful.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Direct crypto usage in some modules disables plug-ability of BCCSP,FAB-2345,14907,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,angelo.decaro,binhn,binhn,17/Feb/17 8:36 PM,18/Apr/17 8:44 AM,26/Apr/18 6:50 AM,18/Apr/17 8:44 AM,,,,v1.0.0,,fabric-crypto,,,,,,0,v1.0,,,,,,,"The following modules must be fixed:

/common/util/utils.go:	""crypto/rand""
./common/util/utils.go:	""crypto/sha256""
./gossip/state/payloads_buffer_test.go: ""crypto/rand""
./msp/identities.go:    ""crypto/rand""
./msp/identities.go:    ""crypto/x509""
./msp/mspimpl.go:       ""crypto/x509/*""
./orderer/kafka/util.go:        ""crypto/tls x509""
./orderer/mocks/util/util.go:   ""crypto/rand""
./orderer/mocks/util/util.go:   ""crypto/rsa""
./orderer/mocks/util/util.go:   ""crypto/x509""
./orderer/mocks/util/util.go:   ""crypto/x509 and others""
./orderer/sbft/backend/backend.go:      ""crypto/*""
./orderer/sbft/backend/backend_test.go: ""crypto/*""
./orderer/sbft/connection/connection.go:        ""crypto/sha256, tls,x509""
./orderer/sbft/connection/connection_test.go:   ""crypto/sha256""
./orderer/sbft/simplebft/crypto.go:     ""crypto/sha256""
./orderer/sbft/simplebft/testsys_test.go:       ""crypto/*""
./orderer/sbft/simplebft/testsys_test_test.go:  ""crypto""
./peer/common/anchors.go:       ""crypto/x509""

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00udk:v,,Sprint 16 - Crypto,,,,,,angelo.decaro,binhn,elli-androulaki,,,,,,,,,,,,,,,,,,"11/Apr/17 4:56 AM;angelo.decaro;So, here is the current status:
crypto/sha256: only used in tests and this is fine.
x509,tls, crypto/rand: BCCSP does not cover this anyway
rsa and ecdsa: are actually used by sbft. Shall we replace those calls by invocation to BCCSP?","14/Apr/17 11:41 AM;elli-androulaki;[~binhn], [~mastersingh24], what do you think?",14/Apr/17 2:13 PM;binhn;This is code hardening and we should address. I wouldn't worry about those in SBFT as it needs to be written post 1.0,"18/Apr/17 8:39 AM;elli-androulaki;Ok, so I mark this item as done for V1, and open a new one for post v1, for sbft-specific crypto calls.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The method ""sendDeploymentProposal"" of class Chain will throw NPE when in dev mode",FAB-2326,14888,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,Eagel,Eagel,17/Feb/17 9:14 AM,28/Mar/17 6:52 PM,26/Apr/18 6:50 AM,28/Mar/17 6:52 PM,v1.0.0,,,,,fabric-sdk-java,,,,,,0,,,,,,,,"when ""chain.setDevMode(true);""

It will throw following exception

Caused by: java.lang.NullPointerException
	at com.google.protobuf.ByteString.copyFrom(ByteString.java:310)
	at org.hyperledger.fabric.sdk.transaction.DeploymentProposalBuilder.createDeploymentSpec(DeploymentProposalBuilder.java:243)
	at org.hyperledger.fabric.sdk.transaction.DeploymentProposalBuilder.createDevModeTransaction(DeploymentProposalBuilder.java:194)
	at org.hyperledger.fabric.sdk.transaction.DeploymentProposalBuilder.constructDeploymentProposal(DeploymentProposalBuilder.java:92)
	... 8 more",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00qfl:,,,,,,,,Eagel,rickr,,,,,,,,,,,,,,,,,,,"28/Mar/17 6:51 PM;rickr;Dev mode is not supported.
at this point",28/Mar/17 6:52 PM;rickr;reopen once we support devmode and it still fails,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
General doc input,FAB-2314,14876,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,markparz,joshhus,joshhus,16/Feb/17 9:12 PM,25/Apr/17 3:36 PM,26/Apr/18 6:50 AM,25/Apr/17 3:36 PM,v1.0.0,,,v1.0.0,,fabric-docs,,,,,,0,Documentation,,,,,,,"Couple of points:

 1) More iterative updates

2) We need to have the major headings in a different color to pop out on the index board on left

3) The transaction model topic, security model, multichannel, smart contracts, consensus topics need a overall heading- it's too messy for the overview section otherwise.

4) The overview section needs to be more about ""why"" than just technology overview.  This is missing from a lot of the sections.  this is the feedback I got in Hyperledger hackfest in December So as an example- Yes, what is multichannel- great, but why do we need it?  

In some cases, they will only need one channel- everyone will be able to see, say images.  These images allow people to determine if the details they want. So it makes sense that any company can be on the blockchain to see the data.
Others have clearly stated they need Channels- they need 3 people on a channel to do bilateral communications.  They do not even trust encryption to keep the data private and fear that because these transactions may even occur over a 10 year period, that if encryption is broken, everyone being on blockchain is not enough. As a result, multichannel helps with data partitioning.. data only goes to those who need to know.

d) With my comments in above, we need to ensure we cover  the following beyond multichain (which can exist in current sections).
Many of these or competitive advantages that we have and are ahead of the curve on.
I've added a few words here to help

§Plug-ability to enable flexibility in development and deployment 
–Identity (MSP) – bring your own identity, support for multiple providers

–Consensus – no one size fits all algorithm 

–Data Store – support various data store models (KV, NoSQL, RDBMS; Complex query / transaction history on an asset)--- (Clearly the importance the level db implementation makes it very difficult to perform complex queries and transaction history)

§Native SDKs: SDK specification for developers implemented in any language (Node.js, Java initial support--- people need different support given the skills they have on board 

§Access control on who can query or submit transactions

§HSM (Hardware Security Module) support: Modified and unmodified PKCS11 for t-cert generation ->HSM allows for an added layer of security protection that is needed with solutions

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2277,0|hzzz8a:zzzr,,Sprint 12 - Documentation,Sprint 13 - Documentation,Sprint 14 - Documentation,Sprint 15 - Documenation,,,ChristopherFerris,joshhus,markparz,raccoonrat,,,,,,,,,,,,,,,,,12/Apr/17 6:36 PM;ChristopherFerris;[~ibm.hlfab.aha.jira] I have no idea what this is about.,"25/Apr/17 3:36 PM;markparz;This was opened from an email from someone.... I reviewed it, there were a couple of nuggets that have been resolved, or we're not at a spot that can be discussed as new features need to be implemented first. ... so closing this out. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Architecture topic - consolidate versions, make it right",FAB-2313,14875,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,joshhus,joshhus,joshhus,16/Feb/17 9:09 PM,20/Apr/17 9:32 PM,26/Apr/18 6:50 AM,20/Apr/17 9:32 PM,,,,v1.0.0,,fabric-docs,,,,,,0,,,,,,,,"https://gerrit.hyperledger.org/r/#/c/6113/

There are a few versions floating around, need to consolidate/finalize.

 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2317,0|hzzz8a:zzzi,,Sprint 12 - Documentation,Sprint 13 - Documentation,Sprint 14 - Documentation,Sprint 15 - Documenation,,,ChristopherFerris,joshhus,markparz,,,,,,,,,,,,,,,,,,"16/Feb/17 11:39 PM;joshhus;
Here are the specific docs that we have in the build currently for architecture. Will post to the Issues: http://fabric-rtd.readthedocs.io/en/latest/FAQ/architecture_FAQ/

[6:17]  
http://fabric-rtd.readthedocs.io/en/latest/architecture/

[6:18]  
http://fabric-rtd.readthedocs.io/en/latest/arch-deep-dive/

[6:18]  
I didn't write any of them. Why are they at the bottom of the TOC? don't know.

[6:20]  
What I did write on architecture is this; it's higher level than the others. https://gerrit.hyperledger.org/r/#/c/6113/1/docs/architecture.md

",17/Feb/17 2:48 PM;markparz;relates to bug Fab-1705,12/Apr/17 6:35 PM;ChristopherFerris;I have no idea what this means. Is it still relevant? [~ibm.hlfab.aha.jira],20/Apr/17 9:32 PM;markparz;this was completed as part of a greater move of items from .6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update Doc Glossary,FAB-2288,14850,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,joshhus,joshhus,joshhus,16/Feb/17 7:44 PM,28/Mar/17 3:54 PM,26/Apr/18 6:50 AM,28/Mar/17 3:54 PM,,,,,,fabric-docs,,,,,,0,Documentation,,,,,,,"Discussion occurred on email - pasting here.
File is glossary.md

Also need to add:

leading peer
anchor peer



 
Here is the glossary comments from me:
Updates or changes in red
(Keith see in pink below for where I need you to comment- please look for multiple places)
(Murali see in this color and comment - see multiple places)
  
Blockchain Network
A blockchain network consists of, at minimum, one peer (responsible for endorsing and committing transactions) leveraging an ordering service, and a membership services component (certificate authority) that distributes and revokes cryptographic certificates representative of user identities and permissions.  Take out what is in red-- I think this will just confuse the situation.

 

Permissioned Network
A blockchain network where any entity (node) is required to maintain a member identity on the network. End users must be authorized and authenticated in order to use the network.  This can be done with fabric-CA or can use a CA sepcified and plugged in. (try to phrase this better please)

  
Peer
Peer is a component that executes, and maintains a ledger of, transactions.  (remove this part)  There are two roles for a peer Add this: Peer has two roles  – endorser and committer.  The architecture has been designed such that a peer is always a committer, but not necessarily always an endorser.  There are policies that define the endorsers.  Peers play no role in the ordering of transactions.

 

 

Member- Keith needs to update this definition- does not seem quite right  
<ks>I agree that this is confusing.  I think we should just use the word ""Participant"" or ""Organization"" and not use ""Member"" for this</ks>
A Member is a participant (such as a company or organization) that operates components - Peers, Orderers, and applications - in the blockchain network.  A member is identified by its CA certificate (i.e. a unique enrollment).   A Member’s peer will be leveraged by end users in order to perform transaction operations on specific channels

  
Transaction
Refers to an operation in which an authorized end user performs read/write operations against the ledger. There are three unique types of transactions - deploy, invoke, and query.-   I would remove this last sentence, as there are now all sorts of things here beside transaction proposal, send to orderer,etc,.. at CLI level.  There is instantiation and install of chainocode,etc,.. I would point to the deeper documentation for commenting on types of transactions,etc,.. 

  
End User
An end user is someone who would interact with the blockchain through a set of published APIs (i.e. the hfc SDK).  You can have an admin user who will typically grant permissions to the Member’s components, and a client user, who, upon proper authentication through the admin user, will drive chaincode applications (deploy, invoke, query) on various channels.  In the case of self-executing transactions, the application itself can also be thought of as the end user.  Remove what is in red

 

Ordering Service
A centralized or decentralized (replace this with""Ordering""-- we don't want to go into centralized/decentalized specifically) service that orders transactions in a block.  You can select different implementations of the “ordering” function - e.g “solo” for simplicity and testing, Kafka for crash fault tolerance, or sBFT/PBFT for byzantine fault tolerance. You can also develop your own protocol to plug into the service.

 

 

Orderer
One of the network entities that form the ordering service. A collection of ordering service nodes (OSNs) will order transactions into blocks according to the network’s chosen ordering implementation. In the case of “solo”, only one OSN is required. Transactions are “broadcast” to orderers, and then “delivered” as blocks to the appropriate channel. (if you mention solo- then you should mention CFTimplementation.  I would just remove solo part)

 

 

Endorser
A specific peer role, where the Endorser peer is responsible for simulating transactions , and in turn preventing unstable or non-deterministic transactions from passing through the network. (remove what is in red- replace with) and signing the transaction based on the policy set.   A transaction is sent to an endorser in the form of a transaction proposal and send the information back to the application layer, which will in turn will send to the orderer  All endorsing peers are currently also committing peers (i.e. they write to the ledger).

 

This actually isn't quite true- you can actually send transactions that don't have a consistent result onto consensus- it will be validated at the comitting peer with VSCC Validated system chain code. We do recommend the application checks this, but I suspect some will go ahead and send to the orderer.

 

 

Committer
A specific peer role, where the Committing peer appends the validated transactions to the channel-specific ledger. If the read/write set is not the same across peers, the transaction will be rejected.  A peer can act as both an endorser and committer, but in more regulated circumstances might only serve as a committer
  
Bootstrap
The initial setup of a network.  There is the bootstrap of a peer network, during which policies, system chaincodes, and cryptographic materials (certs) are disseminated amongst participants, and the bootstrap of an ordering network.  The bootstrap of the ordering network must precede the bootstrap of the peer network, as a peer network is contingent upon the presence of an ordering service. A network need only be “bootstrapped” once.

 

Side notes: 

 

Bootstrapping the network requires creating the network, creating/viewing multiple channels, setting up policies of network, setting up policies for channels, inviting participants to the network and setting up access control on the participants. You do have to have a CA and in that case you need to enroll id, passwords and certificates for applications and peers.

May want to rephrase your bootstrap section as a result of this information-- 

  
 

Block
A batch of ordered transactions, potentially containing ones of an invalid nature, that is delivered to the peers for validation and committal.

I do not know why you think there are transactions that are invalid- I would remove this.

  
System chain  (have Murali verify this definition and the one immediate below)
Contains a configuration block defining the network at a system level.
The system chain lives within the ordering service, and similar to a channel, has an initial configuration containing information such as: root certificates for participating organizations and ordering service nodes, policies, listening address for OSN, and configuration details. Any change to the overall network (e.g. a new org joining or a new OSN being added) will result in a new configuration block being added to the system chain. 

The system chain can be thought of as the common binding for a channel or group of channels. For instance, a collection of financial institutions may form a consortium (represented through the system chain), and then proceed to create channels relative to their aligned and varying business agendas. 

System Chaincode
System Chaincode (SCC) is a chaincode built with the peer and run in the same process as the peer. SCC is responsible for broader configurations of fabric behavior, such as timing and naming services.

 

Channel
A Channel is formed as an offshoot of the system chain; and best thought of as a “topic” for peers to subscribe to, or rather, a subset of a broader blockchain network. A peer may subscribe on various channels and can only access the transactions on the subscribed channels.  Each channel will have a unique ledger, thus accommodating confidentiality and execution of multilateral contracts.

 

I like this better:


With a network created by peers, there are some use cases where some of the transactions may only go to specific peers.  Channels allows you to create a topic for a subset of peers.  As an example, Network has a, b,c, d participants.  A channel can be created that the transactions can only be seen by a,b,and c, whereby participant d does not see the transaction or the ledger.  

  
Dynamic membership
he fabric will allow for endorsers and committers to come and go based on membership, and the blockchain network will continue to operate. Dynamic membership is critical when businesses grow and members need to be added or removed for various reasons.

 

You are missing a T in The up in the beginning

 

Query/Non-Key Value Query
using couchDB 2.0 you now have the capability to leverage an API to perform more complex queries against combinations of variables, including time ranges, transaction types, users, etc.  This feature allows for auditors and regulators to aggregate and mine large chunks of data.

 

Capitlize ""u"" in Using. Remove ""2.0"" we can get into that later into the documentation.

Start with ""There are two ledgers that are currently implemented in fabric by default- level DB and CouchDB.  Users can also plug in their own ledger as a pluggable component. Using,...""""

  
Endorsement System Chaincode
Endorsement System Chaincode (ESCC) is a system chaincode that andles the endorsement policy for specific pieces of chaincode deployed on a network, and defines the necessary parameters (percentage or combination of signatures from endorsing peers) for a transaction proposal to receive a successful proposal response (i.e. endorsement).  Deployments and invocations of user chaincodes both require a corresponding ESCC, which is defined at the time of the deployment transaction proposal for the user chaincode.

 

andles- needs to change to handles

 

Endorsement policy
A blockchain network must establish rules that govern the endorsement (or not) of proposed, simulated transactions. This endorsement policy could require that a transaction be endorsed by a minimum number of endorsing peers, a minimum percentage of endorsing peers, or by all endorsing peers that are assigned to a specific chaincode application. Policies can be curated based on the application and the desired level of resilience against misbehavior (deliberate or not) by the endorsing peers. A distinct endorsement policy for deploy transactions, which install new chaincode, is also required.

 

Endorsements that are required to run a transaction for a chaincode will be validated by the orderer. (ie it will make sure all signatures were obtained before sending to committer)

 

Proposal
A transaction request sent from a client or admin user to one or more peers in a network; examples include deploy, invoke, query, or configuration request.  (you should take out deploy- we have install/instantiate chaincode now)

Deploy (this should be removed)
Refers to the function through which chaincode applications are deployed on chain. A deploy is first sent from the client SDK or CLI to a Lifecycle System Chaincode in the form of a proposal.

 

Membership Services (keith to validate the following two definitions)
Membership Services manages user identities on a permissioned blockchain network; this function is implemented through the fabric-ca component.  fabric-ca is comprised of a client and server, and handles the distribution and revocation of enrollment materials (certificates), which serve to identify and authenticate users on a network

The in-line MembershipSrvc code (MSP) runs on the peers themselves, and is used by the peer when authenticating transaction processing results, and by the client to verify/authenticate transactions. Membership Services provides a distinction of roles by combining elements of Public Key Infrastructure (PKI) and decentralization (consensus). By contrast, non-permissioned networks do not provide member-specific authority or a distinction of roles.

A permissioned blockchain requires entities to register for long-term identity credentials (Enrollment Certificates), which can be distinguished according to entity type. For users, an Enrollment Certificate authorizes the Transaction Certificate Authority (TCA) to issue pseudonymous credentials; these certificates authorize transactions submitted by the user. Transaction certificates persist on the blockchain, and enable authorized auditors to associate, and identify the transacting parties for otherwise un-linkable transactions.

<ks> I would write this section as follows ...
Membership Services authenticates, authorizes, and manages identities on a permissioned blockchain network.

The membership services code that runs in peers and orderers both authenticates and authorizes blockchain operations.  It is a PKI-based implementation of the Membership Services Provider (MSP) abstraction.
The fabric-ca component is an implementation of membership services to manage identities.  In particular, it handles the issuance and revocation of enrollment certificates and transaction certificates.

An enrollment certificate is a long-term identity credential; a transaction certificate is a short-term identity credential which is both anonymous and un-linkable.

</ks> 
Membership Service Provider
The Membership Service Provider (MSP) refers to an abstract component of the system that provides (anonymous) <ks> Remove ""(anonymous)"" as MSP says nothing about anonymity.  This is implemented by fabric-ca.</ks> credentials to clients, and peers for them to participate in a Hyperledger/fabric network. Clients use these credentials to authenticate their transactions, and peers use these credentials to authenticate transaction processing results (endorsements). While strongly connected to the transaction processing components of the systems, this interface aims to have membership services components defined, in such a way that alternate implementations of this can be smoothly plugged in without modifying the core of transaction processing components of the system.

Initialize (Murali to comment on next 3 definitions)
A chaincode method to define the assets and parameters in a piece of chaincode prior to issuing deploys and invocations.  As the name implies, this function should be used to do any initialization to the chaincode, such as configure the initial state of a key/value pair on the ledger.

appshim
An application client used by ordering service nodes to process “broadcast” messages arriving from clients or peers. This shim allows the ordering service to perform membership-related functionality checks. In other words, is a peer or client properly authorized to perform the requested function (e.g. upgrade chaincode or reconfigure channel settings).

osshim
An ordering service client used by the application to process ordering service messages (i.e. “deliver” messages) that are advertised within a channel. 


 
 ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-2277,0|hzzz8a:zr,,Sprint 12 - Documentation,Sprint 13 - Documentation,Sprint 14 - Documentation,Sprint 15 - Documenation,,,bmos299,joshhus,markparz,,,,,,,,,,,,,,,,,,"17/Feb/17 6:35 PM;markparz;[~muralisr] for the peer section, how about these additions? I wanted to add the committer role as well.
•	Peers - There are two 2 separate runtimes on a single peer – endorser and committer. Both require access to the ledger. In the role of an endorser, a peer executes the request (transaction proposal)through a chaincode installed on a peer (life cycle chaincode). The role of the committer is to write the verified transactions to the ledger. The architecture has been designed such that a peer is always a committer, but not necessarily always an endorser. {color:red}–Define further via use case in the use case section and point to it?{color}","17/Feb/17 10:23 PM;joshhus;For the Transaction comment, okay but those additional types are not all performed ""against the ledger"" either, per first sentence. Will figure something out. 

(Note there also isn't one/the ledger anymore. Because we document from the network perspective, there is one ledger per channel.)","17/Feb/17 10:40 PM;joshhus;For peer, it's simply a node right, first of all, that subscribes to/belongs to one or more channels. And it gossips with its fellow peers on a channel; it's not only endorsing and committing. Will address. Perhaps that's why [~muralisr] changed ""role"" to ""runtime"" ... ","17/Feb/17 10:47 PM;joshhus;When we get the cross-linking of terms and topics complete, the glossary will improve in usability. For this item, just getting the defs. updated.","17/Feb/17 11:07 PM;joshhus;(For all of these definitions, goal is to keep them simple; we don't need to write the whole doc for the term/concept in the glossary. Will eventually add the links to more / related info.

Proposed Peer definition:

## Peer
A peer is a node that belongs to (subscribes to) one or more network
channels. The main roles performed by peers are endorsing and committing
transactions. A peer always commits valid transactions to its ledger, but
does not necessarily endorse every transaction. To endorse a transaction, the
peer executes the referenced chaincode application, which is installed on
the peer. To commit a transaction, the peer writes the validated transaction  
to its copy of the channel ledger. To remain in sync, peers also broadcast
information across the channel, using the gossip protocol. (See also: Lifecycle
Chaincode, endorsement policy, validation policy, gossip protocol.)","17/Feb/17 11:11 PM;joshhus;Hello, 

Moving this discussion to a JIRA issue and linked Gerrit Patch set, FYI.

How do we want to organize the glossary. It's currently partially logical, not entirely, and non-alphabetical. (Potential for retrieval / usability complaints.)

An alphabetical children, by alphabetical parent, method could be done using indentation: e.g.:


Chaincode - definition

indented >     Configuration chaincode: definition
		      Lifecycle chaincode - definition
		      etc. 

Peer - definition
		     Anchor peer: definition
		     Leading peer: definition
		      etc.


(Glossaries are almost never read sequentially in any kind of logical order; they are instead find it, jump to it, repeat.)

Will add this to the JIRA Glossary issue. ","17/Feb/17 11:22 PM;joshhus;Proposed: these would be sub-entries (indented) under the previous general ""Peer"" definition:

Proposed definitions:

### Anchor Peer
(escapes me at the moment, I will come back to it.)

### Leading Peer
Each network member can own multiple peers on a channel. One of these member
peers is designated as the leading peer, which communicates with the ordering
service on behalf of the member peers. The leading peer distributes ordered
transactions to the member peers, for commitment to their replicas of the ledger.
When necessary, an algorithm can be invoked to select the leading peer. ","17/Feb/17 11:24 PM;joshhus;Like the ""Why blockchain"" topic, the ""Blockchain network"" entry is (arguably) too broad/high level to be included in a ""Hyperledger Fabric"" glossary. To be determined ... 

The def. also describes a fabric network more than a ""blockchain"" network - e.g. not all bc networks have endorsers. ... I would delete the term, but not deciding for the community.

(The intro Glossary ""Note"" is arguably contradicted by the subsequent term: 
*Note: This glossary is structured to prioritize new terms and features specific
to architecture.  It makes the assumption that one already possesses a
working familiarity with the basic tenets of blockchain.*)

I deleted the note/added new text, and did the network term edit:

# Hyperledger Fabric Glossary

The glossary includes definitions of terms used in the Hyperledger Fabric 
library, and links to related terms and topics.

## Blockchain Network
A blockchain network consists of, at minimum, one peer
(responsible for endorsing and committing transactions) leveraging an ordering
service, and a membership services component (certificate authority).","17/Feb/17 11:51 PM;joshhus;## Permissioned
Hyperledger Fabric networks are permissioned; all nodes and peers are required 
to maintain a membership identity. End users must also be authorized and authenticated 
through the fabric-CA or an alternative certificate authority plug-in.

(CA applies to only the auth/auth part right - not the membership identity part.)","18/Feb/17 1:42 PM;joshhus;For Member discussion - we need to be able to discuss a ""Member"" since we have the concept of Membership. So I think an updated def. of Member is called for here. Participant is more vague, potentially over-inclusive -- risks excluding folks who will participate in the network, but not as a ""Participant"" by our term 

(So let's rephrase this definition, but keep the Member term - my recommendation.) Please weigh in ... 

I will figure out an updated def. of Member. Current def.:

Member- Keith needs to update this definition- does not seem quite right
<ks>I agree that this is confusing. I think we should just use the word ""Participant"" or ""Organization"" and not use ""Member"" for this</ks>
A Member is a participant (such as a company or organization) that operates components - Peers, Orderers, and applications - in the blockchain network. A member is identified by its CA certificate (i.e. a unique enrollment). A Member’s peer will be leveraged by end users in order to perform transaction operations on specific channels","18/Feb/17 2:13 PM;bmos299;What is confusing is what is actually in the community and what is not.  We need to specify if this is new document being written from scratch or an existing document being edited.  For a brand new document, sure, maybe we get it somewhat presentable by work through a Jira item.  Once it is submitted as a patch set, I think from that point forward all edits are done via the patch sets.  I think we (doc team) need to really establish the ground rules to avoid confusion and doc's being updated all over the place.  What do you think?","18/Feb/17 2:34 PM;joshhus;e.g. seems a ""participant"" would have a ""membership identity"" but not be a ""member"" by our defs.","18/Feb/17 2:38 PM;joshhus;[~bmos299] Mark has set this up well in JIRA so that when a writer takes an issue to work, writer changes the Issue to In Progress. Then worked until Done. ... So then anything marked ToDo is open to the community to take. Right any Issue that is edits to an existing doc page include the filename/link to the existing doc in the Issue.","18/Feb/17 2:53 PM;markparz;[~bmos299] it should all be community, maybe I misunderstood your comment... Is there some specific that doesn't look right?","18/Feb/17 3:02 PM;joshhus;End user 

Current and Proposed below:

Current: 
End User
An end user is someone who would interact with the blockchain through a set of published APIs (i.e. the hfc SDK). You can have an admin user who will typically grant permissions to the Member’s components, and a client user, who, upon proper authentication through the admin user, will drive chaincode applications (deploy, invoke, query) on various channels. In the case of self-executing transactions, the application itself can also be thought of as the end user. Remove what is in red

Proposed: 
End User
An end user (person or self-executing application) interacts with the fabric network through an SDK API. For example, an admin end user would manage permissions (using ACL lists) for the specific member-owned components, including the member organization's ordering nodes, peers and chaincode applications. A client end user, with authentication and authorization from an administrator, would deploy chaincode applications to various channel peers. (See also: member.)","18/Feb/17 3:33 PM;joshhus;Ordering Service term: current and proposed:

Current:

Ordering Service
A centralized or decentralized (replace this with""Ordering""-- we don't want to go into centralized/decentalized specifically) service that orders transactions in a block. You can select different implementations of the “ordering” function - e.g “solo” for simplicity and testing, Kafka for crash fault tolerance, or sBFT/PBFT for byzantine fault tolerance. You can also develop your own protocol to plug into the service.

Proposed:

(Reviewers note: the ordering service also does some other stuff, this proposed definition is currently limited to the ordering task only - feel free to weigh in on the priority of adding that other stuff here, or perhaps instead for another glossary term.)

Ordering Service
A defined collective of nodes that orders transactions, using a pluggable ordering protocol, and writes them to a discrete block. The specific ordering protocol could be the basic SOLO orderer, the Kafka Crash Fault-Tolerant (CFT) protocol, or a Byzantine Fault-Tolerant (BFT) implementation. (Note that a **consensus** protocol is properly limited to an algorithm, such as PFBT, that manages the consensus messaging problem.) To optimize fabric network performance, security and scalability, no ordering nodes are peers, and no peers are ordering nodes. (See also: block, consensus, leading peer, ordering protocol.) 
","18/Feb/17 3:43 PM;bmos299;I am seeing the doc changes go from email to jira to gerrit...isn't this too much cut and paste of the same changes?  It just seems we make a jira item line to a patch set, have the patch set link to the jira item and make comments in gerrit.  Wouldn't this save a lot of work?  Just my opinion.","18/Feb/17 4:36 PM;joshhus;I suggest that we already have the orderer concept covered, by the ordering service definition / leave it out for now. Feel free to weigh in.

(I don't think the service ""delivers"" the transactions to the member's leading peer (on a channel); technically, the leading peer pulls the ordered transactions. (If that's a valuable distinction to some.)

Current:

Orderer
One of the network entities that form the ordering service. A collection of ordering service nodes (OSNs) will order transactions into blocks according to the network’s chosen ordering implementation. In the case of “solo”, only one OSN is required. Transactions are “broadcast” to orderers, and then “delivered” as blocks to the appropriate channel. (if you mention solo- then you should mention CFTimplementation. I would just remove solo part)

Proposed:

Remove ""Orderer"", as a distinct term/entry, from glossary - ordering nodes are described by the Ordering Service definition, and other term definitions, such as Peer. ","18/Feb/17 5:19 PM;joshhus;Endorser term/def. current and proposed.

(Reviewers: Note this will be located as one of the subentry terms/defs., under the main ""Peer"" term and definition, in Glossary.)

(Question: What determines whether or not an unsigned / not endorsed / i.e. failed endorsement transaction is forwarded to the ordering service? - Is that Lifecycle Chaincode - the current proposed definition below assumes so.) 

Current:

Endorser
A specific peer role, where the Endorser peer is responsible for simulating transactions , and in turn preventing unstable or non-deterministic transactions from passing through the network. (remove what is in red- replace with) and signing the transaction based on the policy set. A transaction is sent to an endorser in the form of a transaction proposal and send the information back to the application layer, which will in turn will send to the orderer All endorsing peers are currently also committing peers (i.e. they write to the ledger).

This actually isn't quite true- you can actually send transactions that don't have a consistent result onto consensus- it will be validated at the comitting peer with VSCC Validated system chain code. We do recommend the application checks this, but I suspect some will go ahead and send to the orderer.

Proposed: 

(a sub-entry under the ""Peer"" term/def. umbrella):

### Endorsing Peer
An endorsing peer receives a transaction proposal (request) from the **SDK** and executes the transaction. The endorsing peer then applies the channel **endorsement policy** to the transaction results, to either endorse (sign) the transaction, or not. The endorsing peer then returns the transaction results,
signed or unsigned, to the SDK. The SDK then forwards signed (endorsed) transactions to the **ordering service**; **Lifecycle Chaincode** for the channel dictates whether or not the SDK also forwards unsigned transactions for ordering. Depending on the endorsement policy, all peers on a channel may or may not be 
endorsing peers for any specific transaction proposal. (See also: deterministic chaincode, endorsement policy, Lifecycle Chaincode, SDK.)","18/Feb/17 5:31 PM;joshhus;[~bmos299] That wouldn't save work for this long/debated item - the current method saves work, my opinion, by facilitating ongoing review / debate in JIRA, in a single place/version, while I continue work the remaining terms. Avoids me pushing, and reviewers managing, many multiple patch sets. ... For this doc item anyway - lots of items (glossary), lots of comments and input and Q&As, this method is working.
https://jira.hyperledger.org/browse/FAB-2288?focusedCommentId=21011&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-21011

If you guys disagree I can push a patch set to Gerrit, though do all reviewers use it? I'm still using email also, because of the color-coding of the comments. - color not preserved in JIRA.","18/Feb/17 7:16 PM;joshhus;""Committer"" term/def. current and proposed:

Current:

Committer
A specific peer role, where the Committing peer appends the validated transactions to the channel-specific ledger. If the read/write set is not the same across peers, the transaction will be rejected. A peer can act as both an endorser and committer, but in more regulated circumstances might only serve as a committer. 

Proposed:

Committing Peer
A committing peer validates ordered blocks of transactions and commits (appends) the blocks to its replica of the channel ledger. All peers, including endorsing peers, are committing peers, because all peers maintain one or more ledgers (one ledger per channel). Committing peers also mark each transaction in the ordered block as valid or invalid, by applying the **validation policy** for the channel. (See also: ledger, Lifecycle Chaincode, validation policy.)","18/Feb/17 8:25 PM;joshhus;""Bootstrap"" current and proposed:

For this one I'll do Proposed first:

Proposed:  

(Review comment: this def. needs to be refined/limited to an HL fabric bootstrap. Fabric
network ""setup"" and ""installation"" are separate topics. ""bootstrap"" has specific  
implications in IT generally; bringing networked nodes online without fully
re-booting all OS-es in a network, I believe is the general idea.)
(Gerrit patch coming soon). ) 

Current: 

Bootstrap
The initial setup of a network. There is the bootstrap of a peer network, during which policies, system chaincodes, and cryptographic materials (certs) are disseminated amongst participants, and the bootstrap of an ordering network. The bootstrap of the ordering network must precede the bootstrap of the peer network, as a peer network is contingent upon the presence of an ordering service. A network need only be “bootstrapped” once.

Side notes:

Bootstrapping the network requires creating the network, creating/viewing multiple channels, setting up policies of network, setting up policies for channels, inviting participants to the network and setting up access control on the participants. You do have to have a CA and in that case you need to enroll id, passwords and certificates for applications and peers.

May want to rephrase your bootstrap section as a result of this information-- ","18/Feb/17 9:00 PM;joshhus;Block: current and proposed.

(Reviewer note: to answer the comment below, there are valid and invalid transactions, and they are marked as such in the ledger, in non-hashed, queryable data. ... If the objection is that this invalid designation is not part of the hashed ""block"", proper, that's true I believe; but an invalid transaction is still written to the ledger, as hashed Tx. ... Seems we should add an term. and definition for an ""invalid transaction"" - one that fails the validation policy for the channel. What else - one that could get sent for ordering / inclusion even though no peers ""endorsed"" it? Would all of these not-endorsed transactions subsequently also fail the validation policy, always? I guess so. Will attempt an invalid transaction entry and definition, Please weigh in.) ... (And I'll add my questions/comments as such to the Gerrit patch set.)

p.s. I was instructed to dump ""batch"" as a term for v1.0.

p.p.s. Need confirmation that it is the ""Lifecycle Chaincode"" that determines when a block is ""done"" / no new TX - e.g. This could be after x number of Tx in block, and/or after x amount of time without a new Tx added to block, etc. 

Current:

Block
A batch of ordered transactions, potentially containing ones of an invalid nature, that is delivered to the peers for validation and committal.

I do not know why you think there are transactions that are invalid- I would remove this.

Proposed:

Block: 
A block is a self-contained unit of a number of ordered transactions, which is eventually written to the channel ledger. Like each transaction within a block, each block is also cryptographically-linked by a series of unique hashtags. Lifecycle Chaincode determines when a block gets ordered and signed, by the ordering service, and broadcast to the channel leading peer. Committing peers then run the validation policy against the ordered block, mark transactions as valid or invalid (in non-hashed data for query), and commit (append) the block to the ledger.
","18/Feb/17 9:18 PM;joshhus;System Chain and System Chaincode. Current only:

System chain (have Murali verify this definition and the one immediate below)
Contains a configuration block defining the network at a system level.
The system chain lives within the ordering service, and similar to a channel, has an initial configuration containing information such as: root certificates for participating organizations and ordering service nodes, policies, listening address for OSN, and configuration details. Any change to the overall network (e.g. a new org joining or a new OSN being added) will result in a new configuration block being added to the system chain.

The system chain can be thought of as the common binding for a channel or group of channels. For instance, a collection of financial institutions may form a consortium (represented through the system chain), and then proceed to create channels relative to their aligned and varying business agendas.

System Chaincode
System Chaincode (SCC) is a chaincode built with the peer and run in the same process as the peer. SCC is responsible for broader configurations of fabric behavior, such as timing and naming services.","18/Feb/17 9:25 PM;joshhus;Channel: Current and Proposed:

Current:

Channel
A Channel is formed as an offshoot of the system chain; and best thought of as a “topic” for peers to subscribe to, or rather, a subset of a broader blockchain network. A peer may subscribe on various channels and can only access the transactions on the subscribed channels. Each channel will have a unique ledger, thus accommodating confidentiality and execution of multilateral contracts.

I like this better:

With a network created by peers, there are some use cases where some of the transactions may only go to specific peers. Channels allows you to create a topic for a subset of peers. As an example, Network has a, b,c, d participants. A channel can be created that the transactions can only be seen by a,b,and c, whereby participant d does not see the transaction or the ledger. 


Proposed: (don't know yet if anchor is correct here)

A channel is a private line of communication between two or more specific network members, for the purpose of conducting private and confidential transactions. A channel is defined by an anchor peer for each member, the shared ledger, chaincode applications and the ordering service nodes. Each transaction on the network is executed on a channel, where each party must be authenticated and authorized to transact on that channel. Although any one anchor peer can belong to multiple channels, and therefore maintain multiple ledgers, no ledger data can pass from one channel to another.","18/Feb/17 10:58 PM;joshhus;Dynamic Membership: Current and Proposed:

Current:

Dynamic membership
he fabric will allow for endorsers and committers to come and go based on membership, and the blockchain network will continue to operate. Dynamic membership is critical when businesses grow and members need to be added or removed for various reasons.

You are missing a T in The up in the beginning

Proposed:

I would delete from glossary, or fix the term and definition - membership at the org. level exists. and then for peers we have members of members? we can't really say we have members of members with a straight face. so this could be dynamic something, but not dynamic ""membership"". ","18/Feb/17 11:36 PM;joshhus;Query Current and Proposed:

(Note Proposed now sounds like we recommend Couch over Level, if that's what we want to do.)

Current:

Query/Non-Key Value Query
using couchDB 2.0 you now have the capability to leverage an API to perform more complex queries against combinations of variables, including time ranges, transaction types, users, etc.  This feature allows for auditors and regulators to aggregate and mine large chunks of data.

Capitlize ""u"" in Using. Remove ""2.0"" we can get into that later into the documentation.

Start with ""There are two ledgers that are currently implemented in fabric by default- level DB and CouchDB.  Users can also plug in their own ledger as a pluggable component. Using,...""""

Proposed: 

## Query
The fabric provides two ledger database programs to choose from: LevelDB and CouchDB. Alternative pluggable database programs are also supported. CouchDB leverages an API for performing queries against multiple variables, including time ranges, transaction types and user names. This complex query feature allows authorized users, including auditors and regulators, to aggregate and mine large chunks of data from the ledger.
  ","18/Feb/17 11:46 PM;joshhus;New addition: Gossip Protocol: 

Proposed:

## Gossip Protocol
The gossip data dissemination protocol performs three functions on a fabric network: 1) manages peer discovery and channel membership; 2) disseminates ledger data across all peers on the channel; and 3) syncs ledger state across all peers on the channel. Gossip broadcasting operates by peers receiving
messages from other peers on the channel, and then forwarding these messages to randomly-selected peers. This cycle continually repeats, with the result of channel membership, ledger and state information being kept current and in sync.","19/Feb/17 12:18 AM;joshhus;Endorsement System Chaincode: Current and Proposed:

(Review Question here: does ESCC manage both whether or not a peer signs the transaction, and also whether or not an unsigned transaction is forwarded by the SDK to the orderer? -- Or is the latter lifecycle chaincode. I think some of the percentage/numbers stuff in the ""current"" text is instead lifecycle chaincode,  that controls forwarding (or not) to the ordering service.) 

Current:

Endorsement System Chaincode
Endorsement System Chaincode (ESCC) is a system chaincode that andles the endorsement policy for specific pieces of chaincode deployed on a network, and defines the necessary parameters (percentage or combination of signatures from endorsing peers) for a transaction proposal to receive a successful proposal response (i.e. endorsement). Deployments and invocations of user chaincodes both require a corresponding ESCC, which is defined at the time of the deployment transaction proposal for the user chaincode.

andles- needs to change to handles

Proposed: 

## Endorsement System Chaincode
Endorsement System Chaincode (ESCC) defines the transaction **endorsement policy**  for each specific chaincode application. Following transaction execution, each endorsing peer applies the endorsement policy for the invoked chaincode application. Each endorsing peer then either signs (endorses) its transaction results, or does not sign, based on the endorsement policy, and returns its results to the SDK. (See also: Lifecycle Chaincode.)
","19/Feb/17 12:25 AM;joshhus;Endorsement Policy. Current and Proposed.

Keeping this Proposed text short b/c we have it pretty much covered already by the previous ESCC definition.

Current:

Endorsement policy
A blockchain network must establish rules that govern the endorsement (or not) of proposed, simulated transactions. This endorsement policy could require that a transaction be endorsed by a minimum number of endorsing peers, a minimum percentage of endorsing peers, or by all endorsing peers that are assigned to a specific chaincode application. Policies can be curated based on the application and the desired level of resilience against misbehavior (deliberate or not) by the endorsing peers. A distinct endorsement policy for deploy transactions, which install new chaincode, is also required.

Endorsements that are required to run a transaction for a chaincode will be validated by the orderer. (ie it will make sure all signatures were obtained before sending to committer)

Proposed: 
## Endorsement Policy
The endorsement policy for a chaincode application determines whether or not an endorsing peer signs (endorses) a specific transaction proposal, or not. (See also: Endorsement System Chaincode.)","19/Feb/17 1:02 AM;joshhus;Proposal and Deploy: Current and Proposed.

(Are we saying ""deploy"" is to be replaced now, everywhere, with install or instantiate? That's a big hit to the library.)

(A ""configuration request"" is just an invoke of system chaincode, right. It's an invoke.)

Current: 

Proposal
A transaction request sent from a client or admin user to one or more peers in a network; examples include deploy, invoke, query, or configuration request. (you should take out deploy- we have install/instantiate chaincode now)

Proposed:

Proposal:
A proposal is a transaction request sent from the SDK to a channel for endorsement. Each proposal is either a deploy/install/instantiate, invoke or query request. The term *proposal* is used to indicate that execution of a transaction does not guarantee that the transaction will be appended to the ledger. (See also: endorsing peer.)


(Deploy is marked for deletion it seems. Or change to install/instantiate.) 

Deploy (this should be removed)
Refers to the function through which chaincode applications are deployed on chain. A deploy is first sent from the client SDK or CLI to a Lifecycle System Chaincode in the form of a proposal.","19/Feb/17 2:30 PM;joshhus;Membership Services and MSP:

Current:

Membership Services (keith to validate the following two definitions)
Membership Services manages user identities on a permissioned blockchain network; this function is implemented through the fabric-ca component.  fabric-ca is comprised of a client and server, and handles the distribution and revocation of enrollment materials (certificates), which serve to identify and authenticate users on a network

The in-line MembershipSrvc code (MSP) runs on the peers themselves, and is used by the peer when authenticating transaction processing results, and by the client to verify/authenticate transactions. Membership Services provides a distinction of roles by combining elements of Public Key Infrastructure (PKI) and decentralization (consensus). By contrast, non-permissioned networks do not provide member-specific authority or a distinction of roles.

A permissioned blockchain requires entities to register for long-term identity credentials (Enrollment Certificates), which can be distinguished according to entity type. For users, an Enrollment Certificate authorizes the Transaction Certificate Authority (TCA) to issue pseudonymous credentials; these certificates authorize transactions submitted by the user. Transaction certificates persist on the blockchain, and enable authorized auditors to associate, and identify the transacting parties for otherwise un-linkable transactions.

<ks> I would write this section as follows ...
Membership Services authenticates, authorizes, and manages identities on a permissioned blockchain network.

The membership services code that runs in peers and orderers both authenticates and authorizes blockchain operations.  It is a PKI-based implementation of the Membership Services Provider (MSP) abstraction.
The fabric-ca component is an implementation of membership services to manage identities.  In particular, it handles the issuance and revocation of enrollment certificates and transaction certificates.

An enrollment certificate is a long-term identity credential; a transaction certificate is a short-term identity credential which is both anonymous and un-linkable.

</ks> 
Membership Service Provider
The Membership Service Provider (MSP) refers to an abstract component of the system that provides (anonymous) <ks> Remove ""(anonymous)"" as MSP says nothing about anonymity.  This is implemented by fabric-ca.</ks> credentials to clients, and peers for them to participate in a Hyperledger/fabric network. Clients use these credentials to authenticate their transactions, and peers use these credentials to authenticate transaction processing results (endorsements). While strongly connected to the transaction processing components of the systems, this interface aims to have membership services components defined, in such a way that alternate implementations of this can be smoothly plugged in without modifying the core of transaction processing components of the system.

Proposed:

## Membership Services
Membership services authenticates, authorizes, and manages identities on a
permissioned blockchain network. (All Hyperledger Fabric networks are 
permissioned.) The membership services code that runs in peers and ordering nodes
both authenticates and authorizes blockchain operations. It is a PKI-based
implementation of the Membership Services Provider (MSP) abstraction. The
`fabric-ca` component is an implementation of membership services for managing
identities. In particular, `fabric-ca` issues and revokes enrollment certificates
(eCerts) and transaction certificates (tCerts). eCerts are long-term identity
credentials; tCerts are short-term identity credentials, which are both anonymous
and unlinkable.

## Membership Service Provider
The Membership Service Provider (MSP) is an abstract system component that provides
credentials to clients and peers. Credentials are used by clients to authenticate
transactions, and by peers to authenticate (endorse) transaction results. The
MSP supports pluggable implementations of the Membership Services component,
without requiring any modification of core transaction processing components.

(EOF) 
",,,,,,,,,,
"Unable to deploy chaincode using certificates generated from behave tests with default chainid ""testchainid""",FAB-2270,14832,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,Ratnakar,Ratnakar,16/Feb/17 5:19 PM,19/Feb/17 6:09 AM,26/Apr/18 6:50 AM,19/Feb/17 6:09 AM,v1.0.0,,,v1.0.0,,fabric-endorser,fabric-peer,,,,,0,,,,,,,,"Commit Level : **3a61f6b61be404eb778d5d1be5179795eca218d0**


It is possible to deploy with default channel ""testchainid"" on a single peer.
However, if we want to deploy chaincode on multiple orgs on defaultchannel ""testchainid"" using the behave generated certs it is throwing the below error.

{code}
Error: Error endorsing chaincode: rpc error: code = 2 desc = The creator certificate is not valid, err The supplied identity is not valid, Verify() returned x509: certificate signed by unknown authority
{code}


The step-by-step instructions for using the default channel are outlined here https://github.com/hyperledger/fabric/blob/master/docs/channel-setup.md


*Pre-requisites:*

* Vagrant 
* Generate cert data from behave folder
  cd /opt/gopath/src/github.com/hyperledger/fabric/bddtests
  behave -k features/bootstrap.feature.

  The above command generates certs for each org and stores under volume folder,
  For one run this is how it looks on my machine : {panel}bddtests/volumes/peer/7bbe3559ef4711e6866c0800275fb08f/peer0{panel}

* Used the docker-compose from here https://github.com/hyperledger/fabric/blob/master/docs/docker-compose-channel.yml
  edit docker-compose with below info

  1. mount certs volume to orderer
{code}
      volumes:
        - .bddtests/volumes/peer/7bbe3559ef4711e6866c0800275fb08f/peer0:/opt/gopath/src/github.com/hyperledger/fabric/orderer/msp
{code}

  2. mount chaincode to peer0 volume 
{code}
         volumes:
        - /var/run/:/host/var/run/
        - ./data/peer0:/etc/hyperledger/fabric/msp/sampleconfig
        - /opt/gopath/src/github.com/hyperledger/fabric/examples/:/opt/gopath/src/github.com/hyperledger/fabric/examples/
{code}
  3. Also make sure peer is start with defaultchain true
{code}
     command: peer node start --peer-defaultchain=true
{code}
  and start the network
{code}
  docker-compose -f docker-compose-channel.yml up -d
{code}
* Install chaincode on peer0 container
{code}
  docker exec -e GOPATH=/opt/gopath -it peer0 bash
{code}
  execute the below command in container
{code}
  CORE_PEER_ADDRESS=peer0:7051 CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer:5005 peer chaincode install -C testchainid -n mycc -v 1.0 -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
{code}
* Instantiate from CLI container
{panel}
  docker exec -it cli bash
{panel}
{code}
CORE_PEER_ADDRESS=peer0:7051 CORE_PEER_COMMITTER_LEDGER_ORDERER=orderer:5005 peer chaincode instantiate -C testchainid -n mycc -v 1.0 -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}'
{code}

At this step fails to instantiate the chaincode with below error:
{code}
2017-02-16 16:28:08.442 UTC [logging] InitFromViper -> DEBU 001 Setting default logging level to DEBUG for command 'chaincode'
2017-02-16 16:28:08.444 UTC [msp] GetLocalMSP -> DEBU 002 Returning existing local MSP
2017-02-16 16:28:08.444 UTC [msp] GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity
2017-02-16 16:28:08.446 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default escc
2017-02-16 16:28:08.446 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 005 Using default vscc
2017-02-16 16:28:08.446 UTC [msp] Sign -> DEBU 006 Sign: plaintext: 0A87080A3F0803220B74657374636861...41554C540A04657363630A0476736363 
2017-02-16 16:28:08.446 UTC [msp] Sign -> DEBU 007 Sign: digest: 90FF7EF2F5F6AC1AA7B27805E3BA4964D873AFE75F2830C4EA265251D77BE1A8 
Error: Error endorsing chaincode: rpc error: code = 2 desc = The creator certificate is not valid, err The supplied identity is not valid, Verify() returned x509: certificate signed by unknown authority

{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00q3t:,,,,,,,,Ratnakar,ysim,,,,,,,,,,,,,,,,,,,"19/Feb/17 6:09 AM;Ratnakar;Unable to reproduce the issue on latest commit level : *dd658bf76c68a8791172534e70d71ff28171b96b*

Tried all the three combinations given here
https://github.com/asararatnakar/chaincode_sample#3-using-docker-images",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetCallerMetadata API returns nothing when called from testchaincode,FAB-2266,14828,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,adc,Nishi,Nishi,16/Feb/17 3:22 PM,11/Apr/17 10:07 PM,26/Apr/18 6:50 AM,11/Apr/17 10:07 PM,,,,,,fabric-peer,,,,,,0,,,,,,,,"goal: to test GetCallerMetadata API available in ""github.com/hyperledger/fabric/core/chaincode/shim/chaincode.go""

Implemented GetCallerMetadata API it from testchaincode as follows:

_func  (t *SimpleChaincode) getCallerMetadata(stub shim.ChaincodeStubInterface) pb.Response {
        fmt.Printf(""- getCallerMetadata \n"")
        metadataAsBytes, err := stub.GetCallerMetadata()
        if err != nil {
                return shim.Error(err.Error())
        }
       fmt.Printf("" metadata from chaincode : %v"", metadataAsBytes)
        return shim.Success(metadataAsBytes)
}
_
Called from CLI command after a successfull install, instantiaite, invoke and query as:
peer chaincode query -C testchainid -n marbles -c '{""Args"":[""getCallerMetadata""]}'

Expected Results: To see some information on metadata (not exactly sure what this would be though)

Actual Result: 
Query Result:
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00q35:,,,,,,,,denyeart,Nishi,,,,,,,,,,,,,,,,,,,11/Apr/17 10:07 PM;denyeart;GetCallerMetadata has been removed from v1.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetQueryResult chaincode API should allow client to pass in index name.,FAB-2263,14825,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,chris.elder,denyeart,denyeart,16/Feb/17 12:40 PM,25/Feb/17 10:07 PM,26/Apr/18 6:50 AM,25/Feb/17 10:07 PM,,,,,,fabric-ledger,,,,,,0,,,,,,,,"In CouchDB _find API, use_index parameter can specify which index to utilize for the query.  Since the API should be database agnostic, the new parameter should be a generic metadata parameter, to pass any metadata/properties that the specific DB may require.  Perhaps metadata should be a map, but need to check if there are any portability issues with that across go and java chaincode.

We don't yet have index management capability, but the GetQueryResult API at least needs to account for future indexes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-199,0|hzzzfg:,,Sprint 12 - Ledger,,,,,,denyeart,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
With new deploy procedure peer0 crashed after instantiating chaincode from CLI,FAB-2246,14806,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,Nishi,Nishi,15/Feb/17 2:41 PM,11/Apr/17 10:02 PM,26/Apr/18 6:50 AM,11/Apr/17 10:02 PM,,,,,,fabric-peer,,,,,,0,,,,,,,,"Followed steps in 
https://github.com/asararatnakar/chaincode_sample 
from section - ""Using Docker-compose"".

Please find attached docker-compose-channel.yml used in test.

It consistently failed in step2 of Deploy section i..e. during instantiating a chaincode:

Error from peer0 logs:

2017-02-15 14:30:05.553 UTC [gossip/comm#-1] Send -> INFO 569 Entering, sending tag:EMPTY signature:""0E\002!\000\334\215*\346\245a\270\246rX@\322\323\030z\221\306]\347GJ\233k\026\225J\023\376\321\232OB\002 \024\222(j\216\203e*\375\0073]\206A\247\214\362\215\033\261\270\344=\2436\203\350F\003\nT\\"" aliveMsg:<membership:<pkiID:""\037\273\337\266\307\256[\312\266\303Le\301DR\221K3K\366x\205\271\032\355\320\226\211\237H\332\205"" internalEndpoint:<endpoint:""172.21.0.3:7051"" signature:""0E\002!\000\326\016+\215\306\225$\365l.\2124\367\342\374I\202\247\347\0102\301x\244\t\0233\310\226\366\""\273\002 X+x+0$'%\337\233\022\317\216'To\350\235\333\2420N\320\324!V\332\201\n\256\214\350"" > > timestamp:<inc_number:1487168745484341504 seqNum:139 > >  to  0 peers
2017-02-15 14:30:07.424 UTC [protoutils] ValidateProposalMessage -> INFO 56a ValidateProposalMessage starts for signed proposal 0xc4200e7bc0
2017-02-15 14:30:07.424 UTC [protoutils] validateChannelHeader -> INFO 56b validateChannelHeader info: header type 3
2017-02-15 14:30:07.424 UTC [protoutils] checkSignatureFromCreator -> INFO 56c checkSignatureFromCreator starts
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x20 pc=0x8c5c13]

goroutine 1021 [running]:
panic(0xbbb660, 0xc420014050)
	/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/common/configtx/handlers/msp.(*MSPConfigHandler).DeserializeIdentity(0xc42028df40, 0xc421b4a400, 0x3a6, 0x3a6, 0x0, 0x0, 0xc420215e10, 0x1)
	<autogenerated>:1 +0x43
github.com/hyperledger/fabric/core/common/validation.checkSignatureFromCreator(0xc421b4a400, 0x3a6, 0x3a6, 0xc421a8ed70, 0x46, 0x46, 0xc421b48000, 0x4af, 0x4af, 0xc420215e00, ...)
	/opt/gopath/src/github.com/hyperledger/fabric/core/common/validation/msgvalidation.go:129 +0x156
github.com/hyperledger/fabric/core/common/validation.ValidateProposalMessage(0xc4200e7bc0, 0xed0365cef, 0x1952bfda, 0x1273380, 0xb1e0, 0x100)
	/opt/gopath/src/github.com/hyperledger/fabric/core/common/validation/msgvalidation.go:81 +0x1bf
github.com/hyperledger/fabric/core/endorser.(*Endorser).ProcessProposal(0x1297010, 0x7fa516c7a8a8, 0xc4200e7b60, 0xc4200e7bc0, 0x0, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/endorser/endorser.go:266 +0x67
github.com/hyperledger/fabric/protos/peer._Endorser_ProcessProposal_Handler(0xc2d620, 0x1297010, 0x7fa516c7a8a8, 0xc4200e7b60, 0xc421b352c0, 0x0, 0x0, 0x4416bb, 0x8000, 0xb767c0)
	/opt/gopath/src/github.com/hyperledger/fabric/protos/peer/peer.pb.go:99 +0x27d
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).processUnaryRPC(0xc4200741b0, 0x1259ae0, 0xc421aa3b90, 0xc420084f00, 0xc4201907e0, 0x1239970, 0xc4200e7b30, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:580 +0xa2d
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).handleStream(0xc4200741b0, 0x1259ae0, 0xc421aa3b90, 0xc420084f00, 0xc4200e7b30)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:737 +0x6ad
github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1.1(0xc420215c80, 0xc4200741b0, 0x1259ae0, 0xc421aa3b90, 0xc420084f00)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:402 +0xab
created by github.com/hyperledger/fabric/vendor/google.golang.org/grpc.(*Server).serveStreams.func1
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/google.golang.org/grpc/server.go:403 +0xa3

",,,,,,,,,,,,,,,,,,,,,,,,15/Feb/17 2:43 PM;Nishi;docker-compose-channel.yml;https://jira.hyperledger.org/secure/attachment/10511/docker-compose-channel.yml,,,,,,,,0|i00pyx:,,,,,,,,denyeart,Nishi,,,,,,,,,,,,,,,,,,,"11/Apr/17 10:01 PM;denyeart;I believe this is fixed, please re-open if you still see the issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
panic: Failed to create Kafka producer - when create non-default channelIDs on kafka orderer,FAB-2242,14802,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,kchristidis,scottz,scottz,15/Feb/17 12:17 AM,31/May/17 1:58 PM,26/Apr/18 6:50 AM,26/May/17 8:00 PM,v1.0.0-alpha2,,,v1.0.0,,fabric-orderer,,,,,,0,qa,quality,,,,,,"Using commit ad986bbf000ff34ebeb8e142cfcd747a01f12617
Date:   Tue Feb 14 18:57:03 2017 +0000
plus some local test tool changes for test tool development (but no changes to fabric code),

Test passes running ""ote"" tool, using:
* solo orderer with 1 channel, default testchainid, and when
* solo orderer with 1 or 2 channels, test-chan.00001, test-chan.00002,
* 1 kafka orderer with 3 kafka brokers and one channel with default channelID.

fabric/bddtests/regression/go/ote$ OTE_CHANNELS=1 CONFIGTX_ORDERER_ORDERERTYPE=kafka OTE_KAFKABROKERS=3  ./ote

Test FAILS when using 1 kafka orderer and 3 kafka-brokers with
one or more non-default channelID, test-chan.00000.

Point of failure is when running the equivalent of this on the command line:
peer channel create -c test-chan.00000

Observe in orderer0 logs the panic on kafka orderer: 

$ docker logs orderer0
2017-02-14 23:48:39.611 UTC [viperutil] EnhancedExactUnmarshal -> INFO 001 map[genesis:map[DeprecatedBatchTimeout:10s DeprecatedBatchSize:99 MB SbftShared:map[RequestTimeoutNsec:1000000000 Peers:map[:6101:sbft/testdata/cert1.pem] N:1 F:0]] general:map[LedgerType:ram ListenAddress:0.0.0.0 LogLevel:info QueueSize:10 TLS:map[ClientAuthEnabled:false ClientRootCAs:<nil> Enabled:false PrivateKey:<nil> Certificate:<nil> RootCAs:<nil>] Profile:map[Address:0.0.0.0:6060 Enabled:false] MaxWindowSize:1000 ListenPort:5005 GenesisMethod:provisional GenesisFile:./genesisblock] ramledger:map[HistorySize:1000] fileledger:map[Location:<nil> Prefix:hyperledger-fabric-ordererledger] kafka:map[TLS:map[RootCAs:<nil> Enabled:false PrivateKey:<nil> Certificate:<nil>] Retry:map[Stop:60s Period:3s] Verbose:false] sbftlocal:map[CertFile:sbft/testdata/cert1.pem KeyFile:sbft/testdata/key.pem DataDir:/tmp PeerCommAddr::6101]]
2017-02-14 23:48:39.614 UTC [orderer/config] completeInitialization -> INFO 002 General.LocalMSPDir unset, setting to ../msp/sampleconfig/
2017-02-14 23:48:39.614 UTC [orderer/config] completeInitialization -> INFO 003 General.LocalMSPID unset, setting to DEFAULT
2017-02-14 23:48:39.614 UTC [orderer/config] completeInitialization -> INFO 004 Validated configuration to: &{General:{LedgerType:ram QueueSize:10 MaxWindowSize:1000 ListenAddress:0.0.0.0 ListenPort:5005 TLS:{Enabled:false PrivateKey: Certificate: RootCAs:[] ClientAuthEnabled:false ClientRootCAs:[]} GenesisMethod:provisional GenesisFile:./genesisblock Profile:{Enabled:false Address:0.0.0.0:6060} LogLevel:info LocalMSPDir:/etc/hyperledger/msp/sampleconfig LocalMSPID:DEFAULT} RAMLedger:{HistorySize:1000} FileLedger:{Location: Prefix:hyperledger-fabric-ordererledger} Kafka:{Retry:{Period:3s Stop:1m0s} Verbose:false Version:{version:[0 9 0 1]} TLS:{Enabled:false PrivateKey: Certificate: RootCAs:[] ClientAuthEnabled:false ClientRootCAs:[]}} Genesis:{DeprecatedBatchTimeout:10s DeprecatedBatchSize:103809024 SbftShared:{N:1 F:0 RequestTimeoutNsec:1000000000 Peers:map[:6101:sbft/testdata/cert1.pem]}} SbftLocal:{PeerCommAddr::6101 CertFile:sbft/testdata/cert1.pem KeyFile:sbft/testdata/key.pem DataDir:/tmp}}
2017-02-14 23:48:39.670 UTC [configtx/tool/localconfig] Load -> INFO 005 Checking for genesis.yaml at: /etc/hyperledger/fabric
2017-02-14 23:48:39.670 UTC [configtx/tool/localconfig] Load -> INFO 006 Checking for genesis.yaml at: 
2017-02-14 23:48:39.671 UTC [viperutil] EnhancedExactUnmarshal -> INFO 007 map[orderer:map[BatchSize:map[MaxMessageCount:100 AbsoluteMaxBytes:99 MB PreferredMaxBytes:512 KB] Kafka:map[Brokers:[kafka0:9092,kafka1:9092,kafka2:9092]] OrdererType:kafka Addresses:[0.0.0.0:5005] BatchTimeout:10s]]
2017-02-14 23:48:43.620 UTC [orderer/main] NewServer -> INFO 008 Starting orderer
2017-02-14 23:48:43.620 UTC [orderer/main] main -> INFO 009 Beginning to serve requests
2017-02-14 23:48:50.226 UTC [peer/sharedconfig] ProposeConfig -> WARN 00a Uknown Peer config item with key MSP
2017-02-14 23:48:50.237 UTC [peer/sharedconfig] ProposeConfig -> WARN 00b Uknown Peer config item with key MSP
2017-02-14 23:48:50.239 UTC [peer/sharedconfig] ProposeConfig -> WARN 00c Uknown Peer config item with key MSP
panic: Failed to create Kafka producer: kafka: client has run out of available brokers to talk to (Is your cluster reachable?)

goroutine 59 [running]:
panic(0xa2ce40, 0xc4200da480)
	/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/orderer/kafka.newProducer(0xc42021c8e0, 0x1, 0x1, 0x0, 0x9, 0x0, 0x1, 0xb2d05e00, 0xdf8475800, 0x0, ...)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/producer.go:51 +0x619
github.com/hyperledger/fabric/orderer/kafka.glob..func2(0xc42021c8e0, 0x1, 0x1, 0x0, 0x9, 0x0, 0x1, 0xb2d05e00, 0xdf8475800, 0x0, ...)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/orderer.go:58 +0xb4
github.com/hyperledger/fabric/orderer/kafka.newChain(0x1001480, 0xc42018adc0, 0x1001d20, 0xc4202dacd0, 0xfffffffffffffffd, 0xc420206690)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/orderer.go:114 +0x37c
github.com/hyperledger/fabric/orderer/kafka.(*consenterImpl).HandleChain(0xc42018adc0, 0x1001d20, 0xc4202dacd0, 0xc4202e98c0, 0x2, 0x2, 0xc4202cb400, 0xc4202dac30)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/orderer.go:83 +0x67
github.com/hyperledger/fabric/orderer/multichain.newChainSupport(0xc42034be20, 0xc42034bc40, 0xc4202e80c0, 0xff91c0, 0x103dae8, 0xc42034bd00)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/chainsupport.go:132 +0x57b
github.com/hyperledger/fabric/orderer/multichain.(*multiLedger).newChain(0xc4202ec000, 0xc4201ea240)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/manager.go:206 +0x237
github.com/hyperledger/fabric/orderer/multichain.(*systemChainCommitter).Commit(0xc4202d1600)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/systemchain.go:55 +0x3c
github.com/hyperledger/fabric/orderer/multichain.(*chainSupport).WriteBlock(0xc4202db4a0, 0xc4202d1980, 0xc4202c3a40, 0x1, 0x1, 0xc4202c3b28, 0x2, 0x8, 0x1)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/multichain/chainsupport.go:243 +0x53
github.com/hyperledger/fabric/orderer/kafka.(*chainImpl).loop(0xc4203cc000)
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/orderer.go:284 +0x13a5
created by github.com/hyperledger/fabric/orderer/kafka.(*chainImpl).Start
	/opt/gopath/src/github.com/hyperledger/fabric/orderer/kafka/orderer.go:186 +0x567
",,,,,,,,,,,,,,,,,,,,,,,,28/Feb/17 12:22 AM;scottz;2242dockercompose.txt;https://jira.hyperledger.org/secure/attachment/10537/2242dockercompose.txt,28/Feb/17 12:22 AM;scottz;2242errlogs.txt;https://jira.hyperledger.org/secure/attachment/10536/2242errlogs.txt,,,,,,,0|i00py1:,,,,,,,,kchristidis,mastersingh24,scottz,,,,,,,,,,,,,,,,,,"25/Feb/17 11:14 PM;kchristidis;Scott, can you confirm whether this issue persists? If so, I'll look into it.","28/Feb/17 12:16 AM;scottz;Using commit 29d7fc035df697a68d271d628e693c556354486f (I rebased 2/27 morning), I can still see this issue. I attached logs. This time it occurs both with and without using the default channel name, so I wonder if there is something else going on. 

orderer0     | 2017-02-27 23:47:16.513 UTC [orderer/kafka] newProducer -> DEBU 078 Connecting to Kafka cluster: [127.0.0.1:9092]
orderer0     | panic: Failed to create Kafka producer: kafka: client has run out of available brokers to talk to (Is your cluster reachable?)
",26/May/17 5:08 PM;mastersingh24;[~scottz] Is this still an issue?  It's pretty hard to try to fix this since we are way past this in terms of the code,"26/May/17 5:56 PM;scottz;@surya is fixing the OTE tool to work with latest protos and configfiles and TLS, and will rerun most of our bug scenarios maybe next week. However, this one does indeed seem like it has been tested and passes for everyone these days - it is just the process of creating a new named channel in kafka network, requiring communications to be set up correctly with the orderer and the kafka brokers. there is no special requirement to use the OTE tool for this. I think we can agree to close this one.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Discovery is not working (PBFT: DISC_HELLO/ DISC_GET_PEERS),FAB-2221,14779,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,baohua,jsong1230,jsong1230,14/Feb/17 1:20 AM,29/Jun/17 12:47 PM,26/Apr/18 6:50 AM,14/Apr/17 11:48 AM,,,,v0.6,WON'T FIX,fabric-orderer,,,,,,0,,,,,,,,"I got the following errors.
I have modified core.yaml file for each peer, but not working.
Can I get a sample core.yaml file for peer connection?
Is there any other file to modify to connect peers using PBFT?
Thanks.

### Error
10:15:00.829 [peer] handleChat -> ERRO 042 Error handling message: Peer FSM failed while handling message (DISC_HELLO): current state: created, error: transition canceled with error: Error registering Handler: Duplicate Handler error: {name:""hf02""  172.31.11.114:7051 VALIDATOR }
10:15:02.115 [peer] handleChat -> ERRO 043 Error handling message: Peer FSM cannot handle message (DISC_GET_PEERS) with payload size (0) while in state: created
###

### core.yaml (changed part)
{color:red}    id: hf01{color}

    # The privateKey to be used by this peer
    # privateKey: 794ef087680e2494fa4918fd8fb80fb284b50b57d321a31423fe42b9ccf6216047cea0b66fe8365a8e3f2a8140c6866cc45852e63124668bee1daa9c97da0c2a

    # The networkId allows for logical seperation of networks
    # networkId: dev
    # networkId: test
{color:red}    networkId: {mynetwork}{color}

    # The Address this Peer will listen on
    listenAddress: 0.0.0.0:7051
    # The Address this Peer will bind to for providing services
    address: 0.0.0.0:7051
    # Whether the Peer should programmatically determine the address to bind to.
    # This case is useful for docker containers.
 {color:red}   addressAutoDetect: true{color}



    consensus:
    # Consensus plugin to use. The value is the name of the plugin, e.g. pbft, noops ( this value is case-insensitive)
    # if the given value is not recognized, we will default to noops
{color:red}    plugin: pbft{color}


    # PKI member services properties
    pki:
{color:red}        eca:
            paddr: {myip}:7054
        tca:
            paddr: {myip}:7054
        tlsca:
            paddr: {myip}:7054{color}


    discovery:

        # The root nodes are used for bootstrapping purposes, and generally
        # supplied through ENV variables
        # It can be either a single host or a comma separated list of hosts.
{color:red}        rootnode: {myip}:7051{color}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00psx:,,,,,,,,binhn,ChristopherFerris,jsong1230,ynamiki,,,,,,,,,,,,,,,,,14/Feb/17 1:20 AM;jsong1230;could you help?,"23/Feb/17 2:39 AM;ynamiki;Try with vp0, vp1, ... for peer.id in core.yaml.

bq. For MVP, set the VP's peer.id to vpX, where X is a unique integer between 0 and N-1 (N being the maximum number of VPs in the network

https://gerrit.hyperledger.org/r/gitweb?p=fabric.git;a=blob;f=consensus/pbft/pbft.go;h=d0d30432b342e1a9a99b1718e64ce852258be9ae;hb=e728c5c22160620e189e85be6becb7cbf75d87dc#l92",07/Apr/17 8:54 PM;binhn;Please move to v1.0.0-alpha if the issue has not been resolved. I suggest we close this item,"14/Apr/17 11:50 AM;ChristopherFerris;[~jsong1230] closing this because v0.6 is deprecated. Please do try v1.0.0-alpha release, and if you are still having questions about v0.6 you can inquire on rocket chat (https://chat.hyperledger.org/).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode FSM errors ,FAB-2203,14760,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,muralisr,muralisr,muralisr,12/Feb/17 7:22 PM,13/Feb/17 4:49 PM,26/Apr/18 6:50 AM,13/Feb/17 4:49 PM,,,,,,fabric-peer,,,,,,0,,,,,,,,"https://jenkins.hyperledger.org/job/fabric-verify-x86_64/6810/console

17:57:51 [33munit-tests_1  |[0m [31m2017-02-12 17:57:47.205 UTC [chaincode] processStream -> ERRO 00d[0m Got error: [2ab427df-69ab-4c96-99b5-aaa14374f864]Chaincode handler FSM cannot handle message (INIT) with payload size (22) while in state: established
17:57:51 [33munit-tests_1  |[0m --- FAIL: TestDeployAndUpgrade (23.38s)
17:57:51 [33munit-tests_1  |[0m 	endorser_test.go:381: Error deploying <upgradeex01>: Transaction returned with failure: [2ab427df-69ab-4c96-99b5-aaa14374f864]Chaincode handler FSM cannot handle message (INIT) with payload size (22) while in state: established
17:57:51 [33munit-tests_1  |[0m FAIL

Thanks to [~yacovm] for pointing out this is different from ""timeout"" errors.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00pop:,,,,,,,,muralisr,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CI errors from pb.Response unmarshal errors,FAB-2194,14751,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,muralisr,muralisr,muralisr,11/Feb/17 5:27 PM,12/Feb/17 12:13 PM,26/Apr/18 6:50 AM,12/Feb/17 12:13 PM,,,,,,fabric-peer,,,,,,0,,,,,,,,"CI shows errors in different places with the same signature

https://jenkins.hyperledger.org/job/fabric-verify-x86_64/6699/console
{code:java}
14:34:31  [33munit-tests_1  |[0m removing dir = /tmp/hyperledger/test/tmpdb/ledgersData
14:34:31  [33munit-tests_1  |[0m --- FAIL: TestChaincodeQueryChaincodeUsingInvoke (6.93s)
14:34:31  [33munit-tests_1  |[0m 	exectransaction_test.go:1062: Error initializing chaincode example02(Error deploying chaincode: Failed to unmarshal response for (09205c0c-7b7a-4a66-8a0a-a155481cc377): proto: can't skip unknown wire type 6 for peer.Response)
{code}

https://jenkins.hyperledger.org/job/fabric-verify-x86_64/6682/console
{code:java}
13:22:29 [33munit-tests_1  |[0m [31m2017-02-11 13:19:43.382 UTC [chaincode] ExecuteWithErrorFilter -> ERRO 04b[0m ExecuteWithErrorFilter esender error: Failed to unmarshal response for (5985ebea-b283-49d8-aa5a-02bca4fd432e): proto: can't skip unknown wire type 6 for peer.Response
{code}

These are likely due to unmarshalling pb.Response when the ChaincodeMessage does not container pb.Response payload. This can happen when the message contains erros not stemming from chaincode itself (for example, timeout errors).

This has been there for a while but likely got exposed when recent proto work rearranged things a bit.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00pmp:,,,,,,,,mastersingh24,muralisr,,,,,,,,,,,,,,,master,,,true,"11/Feb/17 7:55 PM;mastersingh24;
{code:java}
2017-02-11 16:23:49.134 UTC [chaincode] ExecuteWithErrorFilter -> ERRO 01a ExecuteWithErrorFilter cscc error: Failed to unmarshal response for (4e516518-f434-43db-a5e6-952e92e38c57): proto: peer.Response: wiretype end group for non-group
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Update core/ledger/ReadWriteSet.md,FAB-2192,14749,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,manish-sethi,manish-sethi,manish-sethi,11/Feb/17 12:04 PM,02/Apr/17 1:17 PM,26/Apr/18 6:50 AM,02/Apr/17 1:17 PM,,,,v1.0.0,,,,,,,,0,Ledger,,,,,,,The doc `core/ledger/ReadWriteSet.md` is out of sync with the code and needs to be updated to reflect the current transaction behavior implemented by ledger.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00pm9:,,,,,,,,gregnotso,manish-sethi,,,,,,,,,,,,,,,master,,,true,"15/Feb/17 2:04 PM;gregnotso;what is the current behavior vs prior behavior?

thx, gm",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error endorsing chaincode: rpc error: code = 2 desc = open /var/hyperledger/production/chaincodes/mycctest.1: no such file or directory,FAB-2191,14748,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,david_dornseifer,david_dornseifer,10/Feb/17 11:57 PM,11/Apr/17 9:59 PM,26/Apr/18 6:50 AM,11/Apr/17 9:59 PM,,,,v1.0.0,,fabric-endorser,,,,,,0,chaincode,Endorser,,,,,,"Running a chaincode instantiate on the latests fabric-peer images available (yeasy)

peer chaincode instantiate  -n mycctest -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -v '1' -c '{""Function"":""init"", ""Args"": [""a"",""100"", ""b"", ""200""]}'
2017-02-10 23:00:19.364 UTC [logging] InitFromViper -> DEBU 001 Setting default logging level to DEBUG for command 'chaincode'
2017-02-10 23:00:19.366 UTC [msp] GetLocalMSP -> DEBU 002 Returning existing local MSP
2017-02-10 23:00:19.366 UTC [msp] GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity
2017-02-10 23:00:19.529 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 004 Using default escc
2017-02-10 23:00:19.529 UTC [chaincodeCmd] checkChaincodeCmdParams -> INFO 005 Using default vscc
2017-02-10 23:00:19.530 UTC [msp] Sign -> DEBU 006 Sign: plaintext: 0A87080A3F0803220B74657374636861...41554C540A04657363630A0476736363
2017-02-10 23:00:19.530 UTC [msp] Sign -> DEBU 007 Sign: digest: 2B89B22C1101181A16765825BBB8184CFE037BD1BDBAD242F91D0527220871A1
Error: Error endorsing chaincode: rpc error: code = 2 desc = open /var/hyperledger/production/chaincodes/mycctest.1: no such file or directory",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzh6:zw,,,,,,,,david_dornseifer,denyeart,,,,,,,,,,,,,,,,,,,11/Apr/17 9:59 PM;denyeart;I believe this is fixed.  If you still see the issue please re-open.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
The BCCSP HMAC function should return []byte instead of Crypto Object type,FAB-2182,14739,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,adc,ashutosh_kumar,ashutosh_kumar,10/Feb/17 7:22 PM,28/Feb/17 4:35 PM,26/Apr/18 6:50 AM,28/Feb/17 4:35 PM,,,,v1.0.0,,,,,,,,0,Security,,,,,,,"bccsp.HMACTruncated256AESDeriveKeyOpts should return []byte instead of aesKey Object. This is failing TCert code integration to BCCSP. I am looking for same behavior as HMAC(key []byte , message []byte)[]byte. [~vpaprots] , can you please provide any workaround , if available ? ",,,,,,,,,,,,,,FAB-946,,,,,,,,,,,,,,,,,,0|i00pk9:,,Sprint 11 - Crypto,,,,,,angelo.decaro,ashutosh_kumar,vpaprots,,,,,,,,,,,,,,,,,,13/Feb/17 2:59 PM;angelo.decaro;[~ash1kumar][~vpaprots] So it looks to me this would be difficult to achieve with HSM because the output of the HMAC might be sensitive and not exportable. ,"13/Feb/17 3:27 PM;ashutosh_kumar;Can you have 2 functions : 
# Generating Key Object and 
# Generating Byte array ? 

Just an advice.","13/Feb/17 4:12 PM;ashutosh_kumar;I tried this piece of code : 
buff := new(bytes.Buffer)
		buffError := binary.Write(buff, binary.LittleEndian, tidxKey)
		*if buffError != nil {
			return nil, fmt.Errorf(""tidx byte conversion faield with error : %s "", buffError)
		}*

where tidxKey is 
tidxKey, tidxKeyError := tm.BCCSP.KeyDeriv(expansionValue, &bccsp.HMACTruncated256AESDeriveKeyOpts{Temporary: true, Arg: tidx})

While executing the code , got this error : 
*tidx byte conversion failed with error : binary.Write: invalid type *sw.aesPrivateKey*


","13/Feb/17 5:59 PM;ashutosh_kumar;Based on my Rocket Chat conversation with [~vpaprots@ca.ibm.com] : We need to support tm.BCCSP.KeyDeriv(pk2, &bccsp.ECDSAReRandKeyOpts{Temporary: true, *Expansion: /*tidxKeyByte*/ buff.Bytes()*}) for Expnsion argument to be of type bccsp.Key as for TCert work , I want the HMACked Key to be passed as Expansion Argument.","13/Feb/17 6:43 PM;vpaprots;Something like this in bccsp/opts.go

// ECDSAReRandKeyOpts contains options for ECDSA key re-randomization.
type ECDSAReRandKeyOptsFromKey struct {
	Temporary bool
	Expansion Key
}

// Algorithm returns the key derivation algorithm identifier (to be used).
func (opts *ECDSAReRandKeyOptsFromKey) Algorithm() string {
	return ECDSAReRand
}

// Ephemeral returns true if the key to generate has to be ephemeral,
// false otherwise.
func (opts *ECDSAReRandKeyOptsFromKey) Ephemeral() bool {
	return opts.Temporary
}","15/Feb/17 4:12 PM;ashutosh_kumar;Based on discussion with [~ellaki] and [~adc] , I have to use the function HMACDeriveKeyOpts to get expansion value. Will give it a try.",28/Feb/17 4:35 PM;ashutosh_kumar;The approach worked. [~vpaprots] is working on alternative approach. Closing it now.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to deploy chaincode using certificates generated from behave tests (Similar to sfhackfest),FAB-2168,14725,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,Ratnakar,Ratnakar,10/Feb/17 4:52 AM,11/Apr/17 9:58 PM,26/Apr/18 6:50 AM,11/Apr/17 9:58 PM,,,,v1.0.0,,fabric-peer,,,,,,0,quality,,,,,,,"Commit Level : 8d2701a2de9bf958a6393cce34003c9261bf043f


It is possible to deploy with default channel ""testchainid"" on a single peer.
However, if we want to deploy chaincode on multiple orgs connected to a channel using the behave generated certs it is throwing the below error 
Please NOTE: These certs are used for sfhackfest (https://github.com/hyperledger/fabric/tree/master/examples/sfhackfest/tmp/peer0) with anchor (-a) in the channel creation command 

{code}
Error: Error endorsing chaincode: rpc error: code = 2 desc = The creator certificate is not valid, err The supplied identity is not valid, Verify() returned x509: certificate signed by unknown authority
{code}


The step-by-step instructions for using the default channel are outlined here https://github.com/hyperledger/fabric/blob/master/docs/channel-setup.md


*Pre-requisites:*

* Vagrant 
* Generate cert data from behave folder
  cd /opt/gopath/src/github.com/hyperledger/fabric/bddtests
  behave -k features/bootstrap.feature.

  The above command generates certs for each org and stores under volume folder,
  For one run this is how it looks on my machine : {panel}bddtests/volumes/peer/7bbe3559ef4711e6866c0800275fb08f/peer0{panel}

* generate anchorPeer.txt with the below details (attached for reference)
  {code}127.0.0.1
  7051
  << Certificate data from peer0 signerCert goes here >>{code}
  Refer attached file  [^anchorPeer.txt] 

*Terminal Tab1*  - Start Orderer

{panel}ORDERER_GENERAL_LOGLEVEL=debug ./orderer{panel}

*Terminal Tab2* - 
{panel}CORE_PEER_GOSSIP_IGNORESECURITY=true CORE_PEER_MSPCONFIGPATH=opt/gopath/src/github.com/hyperledger/fabric/bddtests/volumes/peer/7bbe3559ef4711e6866c0800275fb08f/peer0 peer node start --peer-defaultchain=false {panel}

*Terminal Tab3* : Chain create/ Join and Deploychaincode 

run the below shell script

{code}
#!/bin/bash

export CORE_PEER_GOSSIP_IGNORESECURITY=true
export CORE_PEER_MSPCONFIGPATH=opt/gopath/src/github.com/hyperledger/fabric/bddtests/volumes/peer/7bbe3559ef4711e6866c0800275fb08f/peer0
export CORE_PEER_COMMITTER_LEDGER_ORDERER=127.0.0.1:7050

peer channel create -c myc1 -a anchorPeer.txt

peer channel join -b myc1.block

peer chaincode deploy -C myc1 -n mycc -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}'
sleep 120
peer chaincode invoke -C myc1 -n mycc -c '{""Args"":[""invoke"",""a"",""b"",""10""]}'

sleep 10

peer chaincode query -C myc1 -n mycc -c '{""Args"":[""query"",""a""]}'
{code}

while executing the deploy step it fails , attached the logs for both  [^peer-logs.txt]  and  [^deploy-failure.txt]  logs.",,,,,,,,,,,,,,,,,,,,,,,,10/Feb/17 4:44 AM;Ratnakar;anchorPeer.txt;https://jira.hyperledger.org/secure/attachment/10502/anchorPeer.txt,10/Feb/17 4:50 AM;Ratnakar;deploy-failure.txt;https://jira.hyperledger.org/secure/attachment/10501/deploy-failure.txt,10/Feb/17 4:50 AM;Ratnakar;peer-logs.txt;https://jira.hyperledger.org/secure/attachment/10500/peer-logs.txt,,,,,,0|i00ph5:,,,,,,,,denyeart,Ratnakar,,,,,,,,,,,,,,,,,,,"16/Feb/17 4:13 PM;Ratnakar;Not seeing the failure when I do invokes as before 

{code}
2017-02-10 04:33:46.398 UTC [msp] Setup -> INFO 021 MSP manager setup complete, setup 1 msps
Error: Error endorsing chaincode: rpc error: code = 2 desc = The creator certificate is not valid, err The supplied identity is not valid, Verify() returned x509: certificate signed by unknown authority
{code}

However unable to see the query results which works when verified with native binaries.

{code}
root@12df719e6ec5:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer chaincode invoke -C myc1 -n mycc -c '{""Args"":[""put"",""a"",""8qewiuyeiwqe9ijcknx,mcn,mxzn987098709870987987097098709870""]}'
2017-02-16 16:10:24.038 UTC [logging] InitFromViper -> DEBU 001 Setting default logging level to DEBUG for command 'chaincode'
2017-02-16 16:10:24.040 UTC [msp] GetLocalMSP -> DEBU 002 Returning existing local MSP
2017-02-16 16:10:24.040 UTC [msp] GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity
2017-02-16 16:10:24.043 UTC [msp] Sign -> DEBU 004 Sign: plaintext: 0A80080A38080322046D7963312A2464...37393837303937303938373039383730 
2017-02-16 16:10:24.043 UTC [msp] Sign -> DEBU 005 Sign: digest: 207CAD83AF04041F431F76EF6C40981BED81E3EE749AF0EDF566A8E1AFEA81EA 
2017-02-16 16:10:24.063 UTC [SW_BCCSP] createKeyStoreIfNotExists -> INFO 006 KeyStore path [/tmp] missing [true]: [<clean>]
2017-02-16 16:10:24.063 UTC [SW_BCCSP] createKeyStore -> DEBU 007 Creating KeyStore at [/tmp]...
2017-02-16 16:10:24.063 UTC [SW_BCCSP] createKeyStore -> DEBU 008 KeyStore created at [/tmp].
2017-02-16 16:10:24.063 UTC [SW_BCCSP] openKeyStore -> DEBU 009 KeyStore opened at [/tmp]...done
2017-02-16 16:10:24.064 UTC [msp] Sign -> DEBU 00a Sign: plaintext: 0A80080A38080322046D7963312A2464...CEB68C02FE62464D29482E223D393F9F 
2017-02-16 16:10:24.064 UTC [msp] Sign -> DEBU 00b Sign: digest: F6FDEAD35E652D2F8AD0E81052B49A6FB4D7A35441F527CE4BEEE7D7DF8A4675 
2017-02-16 16:10:24.065 UTC [chaincodeCmd] chaincodeInvokeOrQuery -> INFO 00c Invoke result: version:1 response:<status:200 message:""OK"" payload:""OK"" > payload:""\n \005b$SUn\365\323\353\262\320K\234\301\273\036\266\031\324T\t(\3261\006jj\224\025\031\366\232\022d\nY\002\004lccc\001\004mycc\004\001\001\001\001\000\000\004mycc\000\001\001a\000:8qewiuyeiwqe9ijcknx,mcn,mxzn987098709870987987097098709870\000\032\007\010\310\001\032\002OK"" endorsement:<endorser:""\n\007DEFAULT\022\222\003-----BEGIN -----\nMIIBCzCBsgICA+gwCgYIKoZIzj0EAwIwEzERMA8GA1UEAwwIcGVlck9yZzAwHhcN\nMTcwMTI0MTk1NTQ1WhcNMTgwMTI0MTk1NTQ1WjAQMQ4wDAYDVQQDDAVwZWVyMDBZ\nMBMGByqGSM49AgEGCCqGSM49AwEHA0IABAaE7jdt9VVGTSgwTnKn+r8/ZSQxEruT\nx8++HEmLMM3ae5MkqhiPqvBQIY5JiBMKNKrB7brZWpWishR2yB3cBOswCgYIKoZI\nzj0EAwIDSAAwRQIgFq+ACI//NZgmJb2uyuJ4TFWD9xDf0C2FYSUCZE4eo8ICIQCa\nYXlXCyNbP2hvd7+sJPmyBSvZRzf/jfMdTZaDKlEr7Q==\n-----END -----\n"" signature:""0D\002 ,\206\033\355\273\267\215\343\3369\035&!x\217)n\201\213\036\306D\362\230\325ne\033nU \306\002 ~z\200/\3179>\035\\\345\250\331ajxO\316\266\214\002\376bFM)H.\""=9?\237"" > 
2017-02-16 16:10:24.065 UTC [main] main -> INFO 00d Exiting.....
{code}


{code}
root@12df719e6ec5:/opt/gopath/src/github.com/hyperledger/fabric/peer# peer chaincode query -C myc1 -n mycc -c '{""Args"":[""get"",""a""]}'
2017-02-16 16:10:47.866 UTC [logging] InitFromViper -> DEBU 001 Setting default logging level to DEBUG for command 'chaincode'
2017-02-16 16:10:47.869 UTC [msp] GetLocalMSP -> DEBU 002 Returning existing local MSP
2017-02-16 16:10:47.869 UTC [msp] GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity
2017-02-16 16:10:47.871 UTC [msp] Sign -> DEBU 004 Sign: plaintext: 0A80080A38080322046D7963312A2430...12046D7963631A080A036765740A0161 
2017-02-16 16:10:47.871 UTC [msp] Sign -> DEBU 005 Sign: digest: 82932F85C3A3E7949D0EAABC9B3FD5FC976B7AD2D6CAB2BDB20ABBF3E76FF93A 
Query Result: 
2017-02-16 16:10:47.877 UTC [main] main -> INFO 006 Exiting.....
{code}","11/Apr/17 9:58 PM;denyeart;[~Ratnakar]
I believe this is fixed.  If you still see the issue please re-open.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK] pkcs11-tests.js not ok 2 Error: /usr/lib/libacsp-pkcs11.so: cannot open shared obry at Error (native) Load:129,FAB-2158,14715,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jjjjibm,jjjjibm,jjjjibm,09/Feb/17 11:43 PM,23/Feb/17 6:24 PM,26/Apr/18 6:50 AM,23/Feb/17 6:24 PM,,,,,,fabric-sdk-node,,,,,,0,,,,,,,,"Running the test cases  fabric-sdk-node/test/unit/pkcs11-tests.js requires either special hardware, or the software product softHSM-2*.  

So I installed softHSM-2.2.0 and created tokens:

softhsm2-util --init-token --slot 0 --label ""My token 1""
so pin abcd  user pin 1234 since that is what is coded in pkcs11-tests.js


Slot 2089908031
    Slot info:
        Description:      SoftHSM slot ID 0x7c91773f
        Manufacturer ID:  SoftHSM project
        Hardware version: 2.2
        Firmware version: 2.2
        Token present:    yes
    Token info:
        Manufacturer ID:  SoftHSM project
        Model:            SoftHSM v2
        Hardware version: 2.2
        Firmware version: 2.2
        Serial number:    17671c0d7c91773f
        Initialized:      yes
        User PIN init.:   yes
        Label:            JCW token 1

I set the User PIN to '1234' because that is the value hard coded in pkcs11-tests.js.

Nonetheless, the test case fails:
ibmadmin@jcwNodeSDK:~/work/src/github.com/hyperledger/fabric-sdk-js
TAP version 13
#

**PKCS11 - generate an ephemeral key


ok 1 Verify that the HSM based key management module has been ena
info: Returning a new winston logger with default configurations
info: [crypto_pkcs11]: CryptoSuite_PKCS11[69]: keySize: 256
info: [crypto_pkcs11]: CryptoSuite_PKCS11[79]: PKCS11 library: /u
info: [crypto_pkcs11]: CryptoSuite_PKCS11[91]: PKCS11 slot: 0
not ok 2 Error: /usr/lib/libacsp-pkcs11.so: cannot open shared obry at Error (native) Load:129
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      [Error: /usr/lib/libacsp-pkcs11.so: cannot open shared obje
    at Error (native) Load:129]
    at: Test.onetime [as end] (/home/ibmadmin/work/src/github.commodules/onetime/index.js:22:12)
    stack: |-
      Error: /usr/lib/libacsp-pkcs11.so: cannot open shared objec
          at Error (native) Load:129
          at Error (native)
          at CryptoSuite_PKCS11._pkcs11OpenSession (/home/ibmadmifabric-sdk-node/node_modules/fabric-client/lib/impl/bccsp_pkcs11.
          at new CryptoSuite_PKCS11 (/home/ibmadmin/work/src/gith/node_modules/fabric-client/lib/impl/bccsp_pkcs11.js:110:8)
          at Object.module.exports.getCryptoSuite (/home/ibmadminabric-sdk-node/node_modules/fabric-client/lib/utils.js:85:11)
          at test (/home/ibmadmin/work/src/github.com/hyperledgertests.js:52:22)
          at Test.<anonymous> (/home/ibmadmin/work/src/github.commodules/tape-promise/index.es5.js:21:13)
          at Test.bound [as _cb] (/home/ibmadmin/work/src/github.de_modules/tape/lib/test.js:66:32)
          at Test.run (/home/ibmadmin/work/src/github.com/hyperletape/lib/test.js:85:10)
          at Test.bound [as run] (/home/ibmadmin/work/src/github.de_modules/tape/lib/test.js:66:32)
          at Immediate.next (/home/ibmadmin/work/src/github.com/hdules/tape/lib/results.js:71:15)
  ...
#
<more errors follow>

The problem is that the code is looking for the softHSM libraries at libpath = '/usr/lib/libacsp-pkcs11.so';  based on the process.platform value of 'default' (anything but Darwin).  
SoftHSM installs the libraries at /usr/local/lib/softhsm/libsofthsm2.so''.   

On the Ubuntu vlaunch VM I am using, process.platform is set to 'linux'.

The fix is to use the same location as 'darwin' when process.platform is set to 'linux'. 

How to recreate:
1.Install softHSM on Ubuntu VM.  Instsructions are in the test case pkcs11-tests.js. 
2.Create token(s).  Set the user PIN to '1234' (or change source code in pkcs11-tests.js
3.Run the test case. 


",vlaunch VM running Ubuntu. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00pfd:,,,,,,,,jjjjibm,,,,,,,,,,,,,,,,master,,,true,"09/Feb/17 11:53 PM;jjjjibm;commit 8266a16b4fa363335fa85253cf44b4fed784c272
Author: jjjjibm <jcwolf@us.ibm.com>
Date:   Thu Feb 9 18:46:30 2017 -0500

    node-SDK Fix FAB-2158 pkcs11-tests.js fails

    The test pkcs11-tests.js was looking for softHSM libraries in
    '/usr/lib/libacsp-pkcs11.so' based on process.platform <> 'darwin'.
    The libraries are actually in /usr/local/lib/softhsm/libsofthsm2.so.
    I added 'linux' to the list of platforms with SoftHSM libraries in
    /usr/local/lib/softhsm/libsofthsm2.so.

    Change-Id: Ie997bb8beca657bd22f0340f8c10ab8e37e0b579
    Signed-off-by: jjjjibm <jcwolf@us.ibm.com>
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-sdk]  add initialAbsoluteMaxBytes initialPreferredMaxBytes to headless-tests.js,FAB-2154,14711,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jjjjibm,jjjjibm,jjjjibm,09/Feb/17 6:57 PM,09/Feb/17 10:37 PM,26/Apr/18 6:50 AM,09/Feb/17 10:37 PM,,,,,,fabric-sdk-node,,,,,,0,,,,,,,,"Add test cases to improve unit test coverage to headless-tests.js 

Start with *etInitialAbsoluteMaxBytes() and *etInitialPreferredMaxBytes()",Vlaunch VM running Ubuntu. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00peh:,,,,,,,,jjjjibm,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer should check/reject golang chaincode deployments for binary artifacts,FAB-2122,14625,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,greg.haskins,greg.haskins,greg.haskins,08/Feb/17 1:01 PM,09/Jul/17 12:21 PM,26/Apr/18 6:50 AM,09/Jul/17 12:21 PM,,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,,"The deployment payload for golang is expected to contain golang packages under /src.  This is then expanded into $GOPATH within the chaincode execution environment.  However, a malicious guest could technically include anything they want in the tarball, including binaries under /bin or /pkg.  It is not clear if this could be exploited as an attack surface, but its also clearly a gaping hole and not difficult to fix.

Proposal is we should scan the tarball so that it only includes files that match a pattern like

/src/.*\.(go|c|yaml)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00p7t:,,,,,,,,greg.haskins,,,,,,,,,,,,,,,,master,,,true,15/Feb/17 4:47 PM;greg.haskins;Fix submitted for review: https://gerrit.hyperledger.org/r/#/c/6059/,"09/Jul/17 12:21 PM;greg.haskins;Not sure why this was reopened when the work was completed many months ago.  I am assuming this was an error.  If intentional, please provide a rationale",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
batchsize change is ignored when using non-default channel ID,FAB-2083,14586,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,scottz,suryalnvs,suryalnvs,07/Feb/17 2:17 AM,31/May/17 1:58 PM,26/Apr/18 6:50 AM,01/Mar/17 11:15 PM,v1.0.0,,,v1.0.0,,fabric-orderer,,,,,,0,quality,,,,,,,"Test failures found with this and later loads, by Surya and Scott:
commit 5d9e4ede298ab646ac918dc5b034c7d319dd1d9a
commit date: Mon Jan 30 14:34:38 2017 +0000

When using the default testchainid, the same test passes (only 3 blocks delivered as expected).

When using a non-default channelID name such as test-chan.00000
with 1 channel, 1 orderer, either kafka or solo:
even though I change the batchSize to 20 on the command line, it still uses the default batchSize (10).
OTE_TXS=55  ORDERER_GENESIS_BATCHSIZE_MAXMESSAGECOUNT=20  ./ote

Consumer recvd a block, o 0 c 0 blkNum 1 numtrans 10
Consumer recvd a block, o 0 c 0 blkNum 2 numtrans 10
Consumer recvd a block, o 0 c 0 blkNum 3 numtrans 10
Consumer recvd a block, o 0 c 0 blkNum 4 numtrans 10
Consumer recvd a block, o 0 c 0 blkNum 5 numtrans 10
Consumer recvd a block, o 0 c 0 blkNum 6 numtrans 5
in compute(): totalTxRecv[]= [55], totalBlockRecv[]= [6]
Error: Unexpected Block count 6 (expected 3) on ordIndx=0 channelIDs[0]=test-chan.00000, chanSentTxTotal=55 BatchSize=20","Linux 16.04, vagrant, docker containers for each orderer and kafka-broke",,,,,,,,,,,,,,,,,,,,,,,07/Feb/17 2:16 AM;suryalnvs;output.txt;https://jira.hyperledger.org/secure/attachment/10423/output.txt,,,,,,,,0|i00p09:,,,,,,,,scottz,suryalnvs,,,,,,,,,,,,,,,,,,,"01/Mar/17 11:14 PM;scottz;Close this issue. It was retested and PASSED on March 1st, using
fabric-ca commit # c9fb04e0f795589485915883fcbca3ae2fc0aaad (current as of 5pm March 1st)
fabric commit # 29d7fc035df697a68d271d628e693c556354486f (current as of Feb 27)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK] setInitialAbsoluteMaxBytes() has no default value ,FAB-2082,14585,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,jjjjibm,jjjjibm,06/Feb/17 11:57 PM,07/Mar/17 3:49 AM,26/Apr/18 6:50 AM,07/Mar/17 3:49 AM,,,,WON'T FIX,,fabric-sdk-node,,,,,,0,,,,,,,,"Generated documentation for chain.setInitialAbsoluteMaxBytes says this:

setInitialAbsoluteMaxBytes(initial)

    Set the initial absolute maximum bytes that will be used when this chain is created. *Default 0
*   
Saying the default is zero is confusing.  You must specify a non negative integer value when calling the method, so the parameter has no default value.  When the chain is first created, the field seems to be set to 0xA00000.  So initialAbsoluteMaxBytes  has a default value, but it's not zero.  

The same is probably true of other methods documented in this class, but I didn't write the test cases for these methods.  I'll update if I find more such methods in my testing. 

How to recreate:
1.Clone fabric-sdk-node
2.cd fabric-sdk-node
3.gulp doc
4.Start HTTP server
5.Use browser to inspect documentation for class Chain. 

",Vlaunch VM running Ubuntu.  Documentation is generated with gulp. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00p01:,,,,,,,,jjjjibm,,,,,,,,,,,,,,,,,,,,07/Mar/17 3:49 AM;jimthematrix;this method has been removed as it's not intended to be implemented,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Document that Chaincode cannot read back written values in same transaction,FAB-2045,14548,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,binhn,sstone1,sstone1,04/Feb/17 8:58 PM,05/Jun/17 5:53 PM,26/Apr/18 6:50 AM,05/Jun/17 5:52 PM,,,,v1.0.0,,fabric-peer,,,,,,0,chaincode,Documentation,,,,,,"I am trying to port some chaincode from v0.6 to v1.0.
 I am running my v1.0 tests against the recent Docker images from the Hyperledger Hackfest.
 This chaincode makes calls to read data that it has written in the same transaction, but the data always seems to be read as nil:
{code:java}
err = stub.PutState(""test"", ""hello world"")
...
value, err = stub.GetState(""test"") // value == nil, should be ""hello world""
{code}
This does not match up with the design here, nor the previous behaviour in v0.6: [https://github.com/hyperledger/fabric/blob/master/core/ledger/ReadWriteSet.md]

In particular: _Also, if a transaction reads a value for a key that the transaction itself has written before, the last written value is returned instead of the value present in the committed snapshot; one implication of this is that if a transaction writes a value for a key before reading it from the committed snapshot, the key does not appear in the read set of the transaction._

Looking at the code it seems that lockBasedTxSimulator.GetState() does not look at the RWSet to see if a new value has been written in the current transaction.

I had a stab at an initial fix which seemed to fix the problem:
{code:java}
// GetState implements method in interface `ledger.TxSimulator`
func (s *lockBasedTxSimulator) GetState(ns string, key string) ([]byte, error) {
        // uncomment following lines for fix
	// value, ok := s.rwset.GetFromWriteSet(ns, key)
	// if ok {
        //      // use latest value from rwset rather than committed value from db
	// 	return value, nil
	// }
	return s.helper.getState(ns, key)
}
{code}
However it looks like a more complicated fix will be needed for lockBasedQueryExecutor for handling range queries?

In Review https://gerrit.hyperledger.org/r/#/c/10023/",,,,,,,,,,,,,,,,,,,,,,,,04/Feb/17 9:17 PM;sstone1;reproduce.go;https://jira.hyperledger.org/secure/attachment/10419/reproduce.go,,,,,,,FAB-758,0|hzzz76:zzzsui,,Sprint 12 - Ledger,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,Sprint 16  - Ledger,,binhn,Clayton Sims,denyeart,manish-sethi,mastersingh24,sstone1,,,,,,,,,,,master,,,true,"06/Feb/17 1:19 PM;mastersingh24;we don't currently support ""read your own writes"" in v1.0

[~denyeart] [~manish-sethi] any other comments?",06/Feb/17 1:43 PM;manish-sethi;I think that I forgot to correct the documentation while remove the RYW support in V1.0. Will fix it in the ReadWriteSet.md against this Jira item.,"06/Feb/17 2:10 PM;denyeart;That's right, v1 has a different model where the transaction execution is a proposal to apply something to state, rather than applying it to state.  Therefore there is not a good option for reading your writes on complex state queries. Other consensus driven databases behave in a similar way. 
 [~manish-sethi] could you use this work item to make the update to ReadWriteSet.md that you referenced. And then we'll also need to explain the behavior in the external chaincode authoring documentation.  ","10/Feb/17 7:50 PM;sstone1;As per my comments in CR https://gerrit.hyperledger.org/r/#/c/5707/, updating the design documentation to reflect the changes is not sufficient:

I think the chaincode documentation needs to be updated to reference the transaction behaviour. One, because it's more likely chaincode developers will read it then a design document, and two because it's misleading:

https://godoc.org/github.com/hyperledger/fabric/core/chaincode/shim#ChaincodeStubInterface

// PutState writes the specified `value` and `key` into the ledger.
PutState(key string, value []byte) error

With the current behaviour, that's wrong. PutState does not write anything into the ledger. It puts it into the write set for the current transaction simulation.
","11/Feb/17 12:18 PM;manish-sethi;As Simon pointed out in the comments for https://gerrit.hyperledger.org/r/#/c/5707, fixing the doc - ReadWriteSet.md should not be resolution of this Jira item. This Jira item is about fixing the chaincode documentation.

Created a separate Jira (https://jira.hyperledger.org/browse/FAB-2192) for fixing ReadWriteSet.md and unassigned myself for now. Does anyone know who is working on chaincode docs?","01/Jun/17 1:20 PM;binhn;[~manish-sethi] [~muralisr]

I've been working on the chaincode doc [https://gerrit.hyperledger.org/r/#/c/9263/]  so let me take this one then","01/Jun/17 3:48 PM;denyeart;[~binhn] Thanks for updating the chaincode readthedocs.

Actually I am planning to do a final pass to finalize all function comments in:

[https://godoc.org/github.com/hyperledger/fabric/core/chaincode/shim#ChaincodeStubInterface]

and was going to use this defect to do that.  But I can create a separate defect to do that.  Either way is fine, just let me know which route you'd like to take.","01/Jun/17 4:12 PM;binhn;[~denyeart]

In Review [https://gerrit.hyperledger.org/r/#/c/10023/]

 ",05/Jun/17 5:53 PM;Clayton Sims;CR merged so marking done,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK]  not ok 3 Failed to enroll admin2 with CA server. Error: Error: Calling enrollment endpoint failed with error [Error: Parse Error],FAB-2020,14523,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,cdaughtr,jjjjibm,jjjjibm,02/Feb/17 10:42 PM,08/Feb/17 3:37 AM,26/Apr/18 6:50 AM,08/Feb/17 3:37 AM,,,,,,fabric-sdk-node,,,,,,0,,,,,,,,"Running fabric-sdk-node/test/unit/coucb-fabriccoptest.js, two of four tests fail;

not ok 3 Failed to enroll admin2 with CA server. Error: Error: Calling enrollment endpoint failed with error [Error: Parse Error]
  ---
    operator: fail
    at: process._tickCallback (internal/process/next_tick.js:103:7)
  ...
info: [CouchDBKeyValueStore.js]: getValue: admin2, Entry does not exist
info: [Client.js]: Failed to load user ""admin2"" from local key value store
not ok 4 Failed to load the user from key value store
  ---
    operator: fail
    at: process._tickCallback (internal/process/next_tick.js:103:7)
  ...

1..4
# tests 4
# pass  2
# fail  2


",Vlaunch VM running Ubuntu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00oo1:,,,,,,,,cdaughtr,jimthematrix,jjjjibm,,,,,,,,,,,,,,,,,,"08/Feb/17 3:37 AM;jimthematrix;[~jjjjibm] this should be fixed now, please try again",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK] gulp test hangs when end-to-end.js included in test.js,FAB-2016,14519,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,cdaughtr,jjjjibm,jjjjibm,02/Feb/17 7:29 PM,03/Feb/17 4:57 PM,26/Apr/18 6:50 AM,03/Feb/17 4:57 PM,,,,,,fabric-sdk-node,,,,,,0,,,,,,,,"The unit tests executed by  fabric-sdk-node/gulp test are controlled by fabric-sdk-node/build/tasks/test.js, in the task called pre-test. 

When fabric-sdk-node/test/unit/end-to-end.js is included, gulp test hangs.

However, I have no trouble running end-to-end.js from the command line:  node end-to-end.js.

It's desirable to include end-to-end.js in gulp's pre-test task so we get a better unit test coverage map. 
",vlaunch VM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00on5:,,,,,,,,cdaughtr,jjjjibm,,,,,,,,,,,,,,,master,,,true,02/Feb/17 7:37 PM;cdaughtr;http://gerrit.hyperledger.org/r/5479,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CreateCompositeKey() and SplitCompositeKey() need to be order preserving,FAB-2008,14511,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,manish-sethi,denyeart,denyeart,02/Feb/17 3:10 PM,08/Feb/17 3:36 PM,26/Apr/18 6:50 AM,08/Feb/17 3:36 PM,,,,,,fabric-ledger,,,,,,0,,,,,,,,"Make updates to CreateCompositeKey() and SplitCompositeKey() to ensure that PartialCompositeKeyQuery is order preserving.

Example using marbles02:

expected composite key:
""marbles\u0000color~name\u0000blue\u0000marble1\u0000""

expected partial composite key range query for blue marbles:
startkey=“marbles\u0000color~name\u0000blue\u0000""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-758,0|hzzzhy:zzzzn,,Sprint 11 - Ledger,,,,,,denyeart,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK] fabric-sdk-node/.istanbul.yml still references 'hfc',FAB-1995,14497,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,jjjjibm,jjjjibm,01/Feb/17 9:31 PM,08/Feb/17 3:38 AM,26/Apr/18 6:50 AM,08/Feb/17 3:37 AM,,,,,,fabric-sdk-node,,,,,,0,,,,,,,,"Current content of .Istanbul.yml:


instrumentation:
    root: ./node_modules/hfc

This needs to reference fabric-client.",Not applicable.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00oj5:,,,,,,,,jjjjibm,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"chaincode deploy fails with defaultchain, when stateDatabase is changed to couchDB .",FAB-1953,14455,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,Ratnakar,Ratnakar,31/Jan/17 3:04 PM,03/Feb/17 8:28 PM,26/Apr/18 6:50 AM,01/Feb/17 4:46 AM,,,,,,,,,,,,0,quality,,,,,,,"chaincode deploy fails with defaultchain, when stateDatabase is changed to couchDB .

Commands to run 
{code:java}
cd /opt/gopath/src/github.com/hyperledger/fabric
{code}
 
{code:java}
orderer
{code}

{code:java}
 CORE_LEDGER_STATE_STATEDATABASE=CouchDB peer node start --peer-defaultchain=true
{code}

{code:java}
 CORE_PEER_MSPCONFIGPATH=./msp/sampleconfig peer chaincode deploy -n mycc -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}'
{code}



{noformat}
CORE_PEER_MSPCONFIGPATH=./msp/sampleconfig peer chaincode deploy -n mycc -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{""Args"":[""init"",""a"",""100"",""b"",""200""]}'
2017-01-31 14:44:40.833 UTC [msp] getPemMaterialFromDir -> INFO 001 Reading directory msp/sampleconfig/cacerts
2017-01-31 14:44:40.834 UTC [msp] getPemMaterialFromDir -> INFO 002 Inspecting file msp/sampleconfig/cacerts/cacert.pem
2017-01-31 14:44:40.834 UTC [msp] getPemMaterialFromDir -> INFO 003 Reading directory msp/sampleconfig/signcerts
2017-01-31 14:44:40.835 UTC [msp] getPemMaterialFromDir -> INFO 004 Inspecting file msp/sampleconfig/signcerts/peer.pem
2017-01-31 14:44:40.835 UTC [msp] getPemMaterialFromDir -> INFO 005 Reading directory msp/sampleconfig/admincerts
2017-01-31 14:44:40.836 UTC [msp] getPemMaterialFromDir -> INFO 006 Inspecting file msp/sampleconfig/admincerts/admincert.pem
2017-01-31 14:44:40.837 UTC [msp] getPemMaterialFromDir -> INFO 007 Reading directory msp/sampleconfig/keystore
2017-01-31 14:44:40.837 UTC [msp] getPemMaterialFromDir -> INFO 008 Inspecting file msp/sampleconfig/keystore/key.pem
2017-01-31 14:44:40.838 UTC [msp] NewBccspMsp -> INFO 009 Creating BCCSP-based MSP instance
2017-01-31 14:44:40.838 UTC [peer] GetLocalMSP -> INFO 00a Created new local MSP
2017-01-31 14:44:40.838 UTC [msp] Setup -> INFO 00b Setting up MSP instance DEFAULT
2017-01-31 14:44:40.840 UTC [msp] newIdentity -> INFO 00c Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-31 14:44:40.840 UTC [msp] newIdentity -> INFO 00d Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-31 14:44:40.840 UTC [msp] newIdentity -> INFO 00e Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-31 14:44:40.857 UTC [peer] GetManagerForChain -> INFO 00f Created new msp manager for chain testchainid
2017-01-31 14:44:40.858 UTC [msp] Setup -> INFO 010 Setting up the MSP manager (1 msps)
2017-01-31 14:44:40.858 UTC [msp] Setup -> INFO 011 Setting up MSP
2017-01-31 14:44:40.858 UTC [msp] NewBccspMsp -> INFO 012 Creating BCCSP-based MSP instance
2017-01-31 14:44:40.858 UTC [msp] Setup -> INFO 013 Setting up MSP instance DEFAULT
2017-01-31 14:44:40.859 UTC [msp] newIdentity -> INFO 014 Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-31 14:44:40.859 UTC [msp] newIdentity -> INFO 015 Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-31 14:44:40.860 UTC [msp] newIdentity -> INFO 016 Creating identity instance for ID &{DEFAULT IDENTITY}
2017-01-31 14:44:40.860 UTC [msp] Setup -> INFO 017 MSP manager setup complete, setup 1 msps
Error: Error endorsing chaincode: rpc error: code = 2 desc = chain does not exist(testchainid)

Usage:
  peer chaincode deploy [flags]

Global Flags:
  -C, --chainID string             The chain on which this command should be executed (default ""testchainid"")
  -c, --ctor string                Constructor message for the chaincode in JSON format (default ""{}"")
  -l, --lang string                Language the chaincode is written in (default ""golang"")
      --logging-level string       Default logging level and overrides, see core.yaml for full syntax
  -n, --name string                Name of the chaincode returned by the deploy transaction
  -p, --path string                Path to chaincode
      --test.coverprofile string   Done (default ""coverage.cov"")
  -t, --tid string                 Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64
  -u, --username string            Username for chaincode operations when security is enabled
  -v, --version                    Display current version of fabric peer server

{noformat}
",,,,,,,,,,,,,,,,,,,,,,,,01/Feb/17 3:54 AM;Ratnakar;DB_crash_newset_jan31.zip;https://jira.hyperledger.org/secure/attachment/10412/DB_crash_newset_jan31.zip,02/Feb/17 10:30 PM;AdnanChoudhury;docker-compose-couchdb.yml;https://jira.hyperledger.org/secure/attachment/10417/docker-compose-couchdb.yml,01/Feb/17 8:44 PM;Ratnakar;docker-compose.yaml;https://jira.hyperledger.org/secure/attachment/10415/docker-compose.yaml,03/Feb/17 8:22 PM;AdnanChoudhury;docker-couchdb.yml;https://jira.hyperledger.org/secure/attachment/10418/docker-couchdb.yml,31/Jan/17 3:04 PM;Ratnakar;orderer_logs.txt;https://jira.hyperledger.org/secure/attachment/10409/orderer_logs.txt,31/Jan/17 3:04 PM;Ratnakar;peer_logs.txt;https://jira.hyperledger.org/secure/attachment/10410/peer_logs.txt,,,0|i00oa9:,,Sprint 10 - Ledger,,,,,,AdnanChoudhury,denyeart,Ratnakar,,,,,,,,,,,,,,,,,,31/Jan/17 3:04 PM;Ratnakar;peer and orderer logs enclosed,"31/Jan/17 3:45 PM;denyeart;I am not able to reproduce on latest master code.  Please try on latest.  If you still see the issue, provide peer debug log.  Start peer with:
CORE_LOGGING_LEVEL=DEBUG CORE_LEDGER_STATE_STATEDATABASE=CouchDB peer node start --peer-defaultchain=true","01/Feb/17 3:54 AM;Ratnakar;[~denyeart] I still see the issue on very latest commit, 
enabled the peer and orderer logs as per your suggestion.

Commit details:
{code}
Author: rameshbabu79 <rameshbabu.thoomu@gmail.com>
Date:   Tue Jan 31 23:33:04 2017 +0000

    Update docker-compose with ports and image names
    
    Updated ports and sfhackfest dockerimage names in docker-compose file
    and updated grep condition in channel_test.sh file
    
    Change-Id: Ie06c14aafda7bed4326ffd7ac1dc597cf9bb0b66
    Signed-off-by: rameshbabu79 <rameshbabu.thoomu@gmail.com>
{code}

I do see the below error in peer logs


{noformat}
2017-02-01 03:40:52.471 UTC [couchdb] CreateCouchDatabase -> ERRO 0e6 Error during CouchDB CreateDatabaseIfNotExist() for dbName: testchainid  error: Get http://127.0.0.1:5984/testchainid: dial tcp 127.0.0.1:5984: getsockopt: connection refused
create default chain [testchainid] failed with Get http://127.0.0.1:5984/testchainid: dial tcp 127.0.0.1:5984: getsockopt: connection refused2017-02-01 03:40:52.472 UTC [peer] Initialize -> INFO 0e7 Loading chain testchainid
{noformat}


attached the latest logs [DB_crash_newset_jan31.zip]
","01/Feb/17 4:34 AM;denyeart;[~Ratnakar][~movee2005]
Hi, looks like you don't have couchdb started or configured.  Your peer simply can't connect to it.  If you are in vagrant environment you can run 'couchdb start' to start it.  If you are in docker environment then [~AdnanChoudhury] can help you configure it.  I think we can cancel this Bug. 

Note that there is a work item already to provide a more clear error message if peer can't find/connect to couchdb: https://jira.hyperledger.org/browse/FAB-1925.","01/Feb/17 4:46 AM;Ratnakar;[~denyeart] You are right, CouchDB is not started hence the above issue.

 I was using docker based approach and didn't realized that I need to run couchdb manually when native binaries are used for starting peer and orderer

We see some issue with docker-compose (channel creation fails) , either I shall raise a new issue or will discuss with you to sort it out.


{noformat}
Error: proposal failed (err: rpc error: code = 2 desc = Get http://couchdb0:5984/myc1: dial tcp 172.18.0.3:5984: getsockopt: connection refused)
Usage:
  peer channel join [flags]
{noformat}



Thank you.",01/Feb/17 8:18 PM;AdnanChoudhury;[~Ratnakar] Can you please share the docker-compose file you are using? The issue might be originating from there. ,01/Feb/17 8:44 PM;Ratnakar;[~AdnanChoudhury] Here is file attached [docker-compose.yaml],02/Feb/17 10:30 PM;AdnanChoudhury;[~Ratnakar] to test with a different docker-compose file and provide feedback. [^docker-compose-couchdb.yml] ,"03/Feb/17 8:22 PM;AdnanChoudhury;Uploaded a new compose file. This is based on the docker compose file in /examples/sfhackfest, and we added changes so that it uses couchDB (instead of the default leveldb). 
 [^docker-couchdb.yml] ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Commit fails when writes were sent to a ledger from parallel clients,FAB-1939,14441,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,manish-sethi,Nishi,Nishi,30/Jan/17 6:07 PM,07/Apr/17 6:23 PM,26/Apr/18 6:50 AM,07/Apr/17 6:23 PM,,,,,,fabric-ledger,,,,,,0,,,,,,,,"Input: 400 keys
Ledgers: 500
Parallel Clients: 10
#keys per tx; 4
BatchSize: 10

At the time building a block with batchSize10. Program failed with following error.

P.S. Same program war run successfully when code to Commit was locked using a sync.Mutex

2017/01/30 17:28:21 Write lock aquired for committing updates to state database
panic: validateAndPrepare() method should have been called before calling commit()

goroutine 89 [running]:
panic(0x904020, 0xc421ca2250)
    /opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.(*LockBasedTxMgr).Commit(0xc4202712c0, 0x0, 0x0)
    /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/lockbased_txmgr.go:98 +0x283
github.com/hyperledger/fabric/core/ledger/kvledger.(*kvLedger).Commit(0xc420013640, 0xc421e12bc0, 0xd50aad4, 0x9298e3e9bf942b65)
    /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:272 +0x165
github.com/hyperledger/fabric/core/ledger/ledgermgmt.(*closableLedger).Commit(0xc4201caae0, 0xc421e12bc0, 0x4, 0xc421751758)
    <autogenerated>:1 +0x54
github.com/hyperledger/fabric/core/ledger/perf.buildBatchAndCommitTransactions(0x4, 0xa, 0x3c, 0x32)
    /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/perf/perf_concurrency_test.go:230 +0x2ee
github.com/hyperledger/fabric/core/ledger/perf.simulateWriteTx(0x4, 0x5, 0x9d27df, 0x4, 0xc8, 0xf0, 0x4, 0xc8, 0xa)
    /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/perf/perf_concurrency_test.go:201 +0x7c8
github.com/hyperledger/fabric/core/ledger/perf.TestWrite_Transactions.func1(0xc421898aa0, 0x28, 0x4, 0x5, 0xc421898a80, 0x0, 0x0, 0xc421898a50, 0xc421898a38, 0xc421898a68)
    /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/perf/perf_concurrency_test.go:150 +0xc6
created by github.com/hyperledger/fabric/core/ledger/perf.TestWrite_Transactions
    /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/perf/perf_concurrency_test.go:152 +0x419",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00o7d:,,,,,,,,denyeart,manish-sethi,Nishi,,,,,,,,,,,,,,,,,,31/Jan/17 12:36 PM;manish-sethi;This panic could have happened if you invoke Commit() function on a ledger instance concurrently. You can invoke Commit() function of different ledger instances in parallel but not on of a single instance. Can you please confirm if you see this error when you Commit to different ledgers in parallel but still Commit to a particular ledger serially?,"07/Feb/17 6:21 PM;Nishi;I am locking a single instance of ledger to commit multiple txs on the same ledger in parallel.
Test worked fine if I have only one batch being written from all keys on a single client, if the keys make up more than one block that's when I run into a crash.","07/Feb/17 8:14 PM;Nishi;This is the function where I build a single block and commit

func buildBatchAndCommitTransactions(ledgerNum int, batchSize int) {
	var globalCommitLock sync.Mutex
	chainSimulationResults := [][]byte{}
        //works for a single block hence limiting tx's to 1 block
	for qIndex := 0; qIndex < batchSize; qIndex++ {
		chainSimulationResults = append(chainSimulationResults, OpenedChannels[ledgerNum].myBatchQ[qIndex])
	}
	//construct a block from all transactions
	block1 := OpenedChannels[ledgerNum].BG.NextBlock(chainSimulationResults, false)
	curChannel := OpenedChannels[ledgerNum]
	if curChannel.myLedger == nil {
		fmt.Println(""Curchannel is NIL ******"")
	}
	//commit transactions on channel
	globalCommitLock.Lock()
	err := curChannel.myLedger.Commit(block1)
	if err != nil {
		fmt.Println(""Committed Block"")
		panic(fmt.Errorf(""Error Committing Block to Ledger: %s\n"", err))
	}
	globalCommitLock.Unlock()

	bcInfo, err := curChannel.myLedger.GetBlockchainInfo()
	if err != nil {
		fmt.Println(""Failed to get Block Chain"")
		panic(fmt.Errorf(""Failed to get Block ChainInfo: %s\n"", err))
	}
	fmt.Printf(""value in height %v:"", bcInfo)
}
",07/Apr/17 6:23 PM;denyeart;I believe this was a problem with test client.  Please reopen if you think otherwise.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
QSCC GetQueryResult does not produce valid JSON,FAB-1931,14433,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,denyeart,denyeart,29/Jan/17 6:45 PM,01/Feb/17 3:17 PM,26/Apr/18 6:50 AM,30/Jan/17 2:49 AM,,,,,,fabric-ledger,,,,,,0,,,,,,,,A comma is needed between the result set records.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00dzq:m6mj2,,Sprint 10 - Ledger,,,,,,denyeart,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[fabric-ca] Auhentication -> Authetication,FAB-1895,14396,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,jjjjibm,jjjjibm,27/Jan/17 4:17 PM,27/Feb/17 6:08 PM,26/Apr/18 6:50 AM,27/Feb/17 6:08 PM,,,,,,fabric-ca,,,,,,0,,,,,,,,"I selected component = fabric-cop because I don't see 'fabric-ca' in the pulldown menu.  This is actually against fabric-ca.

In the readme at https://github.com/hyperledger/fabric-ca    
this sentence appears: 

{color:red}{color:#59afe1}Auhe{color}{color:#59afe1}ntication is added by fabric-ca since CFSSL does not perform authentication{color}.
{color}
Probably should be 

+Authentication +_added by fabric-ca since CFSSL does not perform authentication_.

How to recreate: 
1.Enter this in your web browser navigation bar: https://github.com/hyperledger/fabric-ca 

2.Scroll as needed to view the text starting with Start the fabric-ca server and locate the sentence in the problem description.   
-or- 
  Use the browser's 'Find on this page' function to  locate the text. 
",Not applicable. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00ny9:,,,,,,,,jjjjibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetTransactionByID should return a Transaction  Envelope,FAB-1885,14386,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,denyeart,denyeart,27/Jan/17 11:06 AM,01/Feb/17 3:17 PM,26/Apr/18 6:50 AM,27/Jan/17 4:26 PM,,,,,,fabric-ledger,,,,,,0,ledger,,,,,,,"QSCC GetTransactionByID should return a Transaction  Envelope,
not a Transaction. The Envelope contains the signature and
Payload, which contains the transaction header and Transaction.

Clients will want the transaction header information when retrieving
the transaction.  They may also want the signature to verify that
the transaction hasn't changed since the time they submitted it.
The return type will change from Transaction proto to Envelope proto.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-758,0|i00dzq:m6miy,,Sprint 10 - Ledger,,,,,,denyeart,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enrollment failed in end-to-end test with sql no rows in error result,FAB-1881,14382,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,rameshthoomu,rameshthoomu,27/Jan/17 3:42 AM,31/Jan/17 3:32 PM,26/Apr/18 6:50 AM,31/Jan/17 3:32 PM,,,,,,,,,,,,0,,,,,,,,"Enrollment failed in end-to-end test with sql no rows in error result
Observed first failure on below commits:

=======> FABRIC PEER COMMIT NUMBER - dffcaf4 =======> FABRIC CA COMMIT NUMBER - f5291e7 =======> FABRIC SDK NODE COMMIT NUMBER - 51699b8

*Build Reference:
*https://jenkins.hyperledger.org/view/FIT/job/FIT-node-x86_64/37/
https://jenkins.hyperledger.org/sandbox/job/Functional-Integration-Testing/13/
https://jenkins.hyperledger.org/sandbox/job/Functional-Integration-Testing/14/",Jenkins CI,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00nvd:,,,,,,,,jimthematrix,rameshthoomu,,,,,,,,,,,,,,,,,,,"31/Jan/17 5:32 AM;jimthematrix;[~rameshthoomu] I'm almost certain this is due to the fact that the fabric-ca image uses the /etc/hyperledger/fabric-ca/server-config.json that has only one user ""admin"", unless the build somehow swaps in a config more suitable for testing purposes. end-to-end.js uses ""admin2"" by default.",31/Jan/17 3:32 PM;rameshthoomu;Thanks Jim for the fix. This issue fixed with the patch https://gerrit.hyperledger.org/r/#/c/5125/. Tested this patch in Jenkins environment and observed tests are passing now. Build Reference https://jenkins.hyperledger.org/sandbox/job/FIT-node-x86_64/2/console,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
end-to-end.js tests are failing due to latets chaincode Interface changes,FAB-1835,14336,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,Ratnakar,rameshthoomu,rameshthoomu,25/Jan/17 3:14 AM,26/Jan/17 11:10 PM,26/Apr/18 6:50 AM,26/Jan/17 11:10 PM,,,,,,,,,,,,0,,,,,,,,"end-to-end.js tests are failing due to due to latets chaincode Interface changes on below fabric commit Levels:

=======> FABRIC PEER COMMIT NUMBER - 1b53e6e =======> FABRIC COP COMMIT NUMBER - f5291e7 =======> FABRIC SDK NODE COMMIT NUMBER - 3cf2ad9

*Docker log file: *https://jenkins.hyperledger.org/sandbox/job/Functional-Integration-Testing/10/artifact/gopath/src/github.com/hyperledger/fabric-sdk-node/test/fixtures/dockerlogfile.log
*
Jenkins Build Reference*:https://jenkins.hyperledger.org/sandbox/job/Functional-Integration-Testing/10/console",Jenkins CI,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00nll:,,,,,,,,DrVadson,rameshthoomu,Ratnakar,,,,,,,,,,,,,,master,,,true,26/Jan/17 10:53 PM;Ratnakar;Fixed the issue with gerrit https://gerrit.hyperledger.org/r/#/c/4839/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Chaincode->Peer TLS certificate needs to be injected at runtime,FAB-1820,14321,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,greg.haskins,greg.haskins,greg.haskins,24/Jan/17 2:33 PM,05/Feb/17 2:43 AM,26/Apr/18 6:50 AM,05/Feb/17 2:43 AM,,,,,,fabric-peer,,,,,,0,,,,,,,,"We currently bake the ""peer's"" TLS key in during the creation of a deployment payload, which is much too early and thus almost assuredly incorrect.

Today, this deployment payload is formed by the client/CLI, and thus it is in no position to actually know what peer will be on the other end of a connection with the chaincode.  Rather than baking the peers certificate in during deployment, each peer should inject the certificate just-in-time using something like a docker bind mount.  This will ensure each chaincode runs in with the proper context. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00nih:,,,,,,,,greg.haskins,,,,,,,,,,,,,,,,master,,,true,05/Feb/17 2:43 AM;greg.haskins;Fixed with https://gerrit.hyperledger.org/r/#/c/4943/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK] setInitialPrefferedMaxBytes --> setInitialPreferredMaBytes,FAB-1813,14314,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,nnao,jjjjibm,jjjjibm,24/Jan/17 12:11 AM,31/Jan/17 4:45 PM,26/Apr/18 6:50 AM,31/Jan/17 4:45 PM,,,,,,fabric-sdk-node,,,,,,0,,,,,,,,"Node SDK generated doc contains this method In class Chain:

setInitial*Preffered*MaxBytes(initial)

    Set the initial preferred maximum bytes that will be used when this chain is created. Default 0
    Parameters:
    Name 	Type 	Description
    initial 	int 	

    preferred maximum bytes

I'm wondering why the API is called Preffered and not Preferred?  It will be awkward for touch typists to enter. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00ngp:,,,,,,,,jjjjibm,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
ledger panic error when trying to create 3800 channels inside fabric 1.0,FAB-1808,14309,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,Nishi,Nishi,23/Jan/17 5:07 PM,07/Apr/17 7:22 PM,26/Apr/18 6:50 AM,07/Apr/17 7:22 PM,,,,,,fabric-ledger,,,,,,0,,,,,,,,"During ledger stress testing, tried to create 3800 channels ran into panic error:
where each channels holds:
type Channel struct {
	myLedger ledger.PeerLedger
	myBatchQ BatchQ
	BG       *ledgertestutil.BlockGenerator
}

When the #of channels is set to 3500 writes channels got created successfully.
2017/01/23 17:00:00 Error while creating dir [ledgersData/blocks/blocks/Default_3514/]
panic: Error: mkdir ledgersData/blocks/blocks/Default_3514: protocol error [recovered]
	panic: Error: mkdir ledgersData/blocks/blocks/Default_3514: protocol error

goroutine 6 [running]:
panic(0x8f63c0, 0xc4210caeb0)
	/opt/go/src/runtime/panic.go:500 +0x1a1
testing.tRunner.func1(0xc42026afc0)
	/opt/go/src/testing/testing.go:579 +0x25d
panic(0x8f63c0, 0xc4210caeb0)
	/opt/go/src/runtime/panic.go:458 +0x243
github.com/hyperledger/fabric/core/ledger/blkstorage/fsblkstorage.newBlockfileMgr(0xc4210caca4, 0xc, 0xc4201d0080, 0xc42006a2a0, 0xc4201d1c00, 0xc4201d1c00)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/blkstorage/fsblkstorage/blockfile_mgr.go:108 +0xbb9
github.com/hyperledger/fabric/core/ledger/blkstorage/fsblkstorage.newFsBlockStore(0xc4210caca4, 0xc, 0xc4201d0080, 0xc42006a2a0, 0xc4201d1c00, 0xc4201d1ae0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/blkstorage/fsblkstorage/fs_blockstore.go:38 +0x57
github.com/hyperledger/fabric/core/ledger/blkstorage/fsblkstorage.(*FsBlockstoreProvider).OpenBlockStore(0xc4201d0280, 0xc4210caca4, 0xc, 0xc66b60, 0xc4201d1b80, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/blkstorage/fsblkstorage/fs_blockstore_provider.go:48 +0x7f
github.com/hyperledger/fabric/core/ledger/kvledger.(*Provider).Open(0xc4201afce0, 0xc4210caca4, 0xc, 0x0, 0x0, 0x0, 0xc420047c40)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger_provider.go:106 +0xe3
github.com/hyperledger/fabric/core/ledger/kvledger.(*Provider).Create(0xc4201afce0, 0xc4210caca4, 0xc, 0xc4210cacb0, 0x1, 0x1, 0x2)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger_provider.go:90 +0xa9
github.com/hyperledger/fabric/core/ledger/ledgermgmt.CreateLedger(0xc4210caca4, 0xc, 0x0, 0x0, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/ledgermgmt/ledger_mgmt.go:73 +0x19c
github.com/hyperledger/fabric/core/ledger/perf.CreateLedger(0xed8)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/perf/perf_concurrency_test.go:242 +0xa1
github.com/hyperledger/fabric/core/ledger/perf.TestInitParams_C(0xc42026afc0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/perf/perf_concurrency_test.go:82 +0x64b
testing.tRunner(0xc42026afc0, 0xa13f00)
	/opt/go/src/testing/testing.go:610 +0x81
created by testing.(*T).Run
	/opt/go/src/testing/testing.go:646 +0x2ec
vagrant@hyperledger-devenv:v0.2.2-aaa998e:/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/perf$ ls
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzz96:zzzz,,Sprint 15  - Ledger,,,,,,denyeart,Nishi,,,,,,,,,,,,,,,,,,,"07/Apr/17 6:20 PM;denyeart;[~2020Nishi] Do you think this is still an issue, or did you simply run out of space on your harddrive or something like that?",07/Apr/17 7:22 PM;denyeart;We think this was an issue with the test rather than the fabric - closing.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Database creation fails on CouchDB if chainid does not meet Couch DB database naming conventions,FAB-1764,14193,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,chris.elder,denyeart,denyeart,19/Jan/17 9:03 PM,26/Feb/17 11:09 PM,26/Apr/18 6:50 AM,26/Feb/17 11:09 PM,,,,,,fabric-ledger,,,,,,0,ledger,,,,,,,"Chainid becomes database name in CouchDB.

CouchDB naming conventions:

Only lowercase characters (a-z), digits (0-9), and any of the characters _, $, (, ), +, -, and / are allowed. Must begin with a letter.

Therefore, we either need to adopt these same restrictions for chainid naming, or have a deterministic mapping of chainid to a valid (and unique) CouchDB database name.

The chainid also becomes a directory on the peer file system for the block storage ledger.  Therefore the character '/' must also be avoided.

See TODO in statecouchdb.go.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzfi:d,,Sprint 10 - Ledger,Sprint 12 - Ledger,,,,,denyeart,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Peer end-to-end tests fail on CouchDB due to chainid **TEST_CHAINID**,FAB-1763,14192,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,denyeart,denyeart,19/Jan/17 8:44 PM,01/Feb/17 3:18 PM,26/Apr/18 6:50 AM,20/Jan/17 11:36 AM,,,,,,fabric-ledger,,,,,,0,,,,,,,,"create default chain [**TEST_CHAINID**] failed with Couch DB Error: Name: '**test_chainid**'. Only lowercase characters (a-z), digits (0-9), and any of the characters _, $, (, ), +, -, and / are allowed. Must begin with a letter.",,,,,,,,,,,,,,,,,,,FAB-1764,FAB-1803,,,,,,,,,,,,0|i00dzq:m6mj3,,Sprint 10 - Ledger,,,,,,denyeart,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
CouchDB tests fail when running all ledgers tests at once,FAB-1758,14187,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,denyeart,denyeart,19/Jan/17 3:36 PM,02/Feb/17 3:17 PM,26/Apr/18 6:50 AM,02/Feb/17 3:17 PM,,,,,,fabric-ledger,,,,,,0,ledger,,,,,,,"When running tests that include a single couchdb package, all tests pass:

/fabric/core/ledger/kvledger/txmgmt/statedb$ go test ./... -cover
?   	github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb	[no test files]
?   	github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/commontests	[no test files]
ok  	github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb	2.830s	coverage: 77.9% of statements
ok  	github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/stateleveldb	0.078s	coverage: 82.5% of statements


When running tests for multiple packages that hit couchdb, the same tests fails:

/fabric/core/ledger/kvledger$ go test ./... -cover

2017/01/19 15:21:23 Couch DB error  status code=412  error={""error"":""file_exists"",""reason"":""The database could not be created, the file already exists.""}

FAIL	github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/statedb/statecouchdb	1.115s

Full log attached.

The tests fail in different places each time they are executed - must be a timing issue.  Perhaps there is a problem using the same chainid/database name and cleanup across tests?  Do the tests run in parallel?",,,,,,,,,,,,,,,,,,,,,,,,19/Jan/17 4:59 PM;denyeart;test_failure.log;https://jira.hyperledger.org/secure/attachment/10399/test_failure.log,,,,,,,,0|hzzzi6:zx,,Sprint 10 - Ledger,,,,,,denyeart,,,,,,,,,,,,,,,,master,,,true,"20/Jan/17 4:49 AM;denyeart;Found the problem - 
When various packages that utilize CouchDB were tested all together, we received intermittent test failures due to collisions in test environment, since go test will test different packages in parallel.  Fixed by scoping each test package to different CouchDB databases (chains).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
orderer sends a block with empty transactions,FAB-1733,14162,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,sanchezl,muralisr,muralisr,18/Jan/17 7:03 PM,20/Jan/17 8:16 PM,26/Apr/18 6:50 AM,20/Jan/17 8:16 PM,,,,,,,,,,,,0,,,,,,,,"Recreate 
https://github.com/hyperledger/fabric/blob/aea1751fba4e61f9becdf37f9861d5e010491520/docs/channel-setup.md

The deploy step crashes peer because Block.Data is nil (the line #s maybe off a bit)

{code:java}

goroutine 118 [running]:
panic(0xa9e500, 0xc42102fe10)
	/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/core/committer/txvalidator.(*txValidator).Validate(0xc42012cee0, 0xc420fa2c60)
	/opt/gopath/src/github.com/hyperledger/fabric/core/committer/txvalidator/validator.go:94 +0x1fc
github.com/hyperledger/fabric/core/committer.(*LedgerCommitter).CommitBlock(0xc42012cf60, 0xc420fa2c60, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/committer/committer_impl.go:55 +0xdf
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock(0xc420f42ab0, 0xc420fa2c60, 0x1, 0x2, 0x2)
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:419 +0x56
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads(0xc420f42ab0)
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:310 +0x72c
created by github.com/hyperledger/fabric/gossip/state.NewGossipStateProvider
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:162 +0x6c5
{code}


Verified that a Deploy tx is getting sent into Orderer correctly and that the delivered block has Block.Data == nil. So must be the orderer not creating Data for some reason. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00mz5:,,,,,,,,ishihara.shun,muralisr,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[fabric-SDK] chain.setPreFetchMode() takes an undocumented parameter,FAB-1719,14148,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,jjjjibm,jjjjibm,18/Jan/17 3:06 AM,05/Apr/17 6:43 PM,26/Apr/18 6:50 AM,05/Apr/17 6:43 PM,,,,,,fabric-sdk-node,,,,,,0,,,,,,,,"The implementation of setPreFetchMode in chain.js is this:

/**
	 * Set prefetch mode to true or false.
	 */
	setPreFetchMode(preFetchMode) {
		this._preFetchMode = preFetchMode;
	}

Clearly, setPreFetchMode() takes a parameter. 

However, the generated documentation does not mention the parameter:

setPreFetchMode()

    Set prefetch mode to true or false.


Here's another:

code : 
/**
	 * Set the tcert batch size.
	 */
	setTCertBatchSize(batchSize) {
		this._tcertBatchSize = batchSize;
	}

docs/gen:  
setTCertBatchSize()

    Set the tcert batch size.

Example of method with documented inputs:

From class Client

setUserContext(user, skipPersistence)

    Sets an instance of the User class as the security context of self client instance. This user’s credentials (ECert), or special transaction certificates that are derived from the user's ECert, will be used to conduct transactions and queries with the blockchain network. Upon setting the user context, the SDK saves the object in a persistence cache if the “state store” has been set on the Client instance. If no state store has been set, this cache will not be established and the application is responsible for setting the user context again if the application crashes and is recovered.
    Parameters:
    Name 	Type 	Description
    user 	User 	

    An instance of the User class encapsulating the authenticated user’s signing materials (private key and enrollment certificate)
    skipPersistence 	boolean 	

    Whether to skip saving the user object into persistence. Default is false and the method will attempt to save the user object to the state store.

How to recreate:
1.Cllone fabric-sdk-node
2.gulp doc from <fabric-sdk-node>
3.cd to fabric-sdk-node/docs
4.python -m SimpleHTTP  /* start HTTP server on your VM */
5.In a browser, <your VM  ip>:8000 and follow the bouncing ball.  
","Fabric-node-SDK cloned yesterday.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00mw9:,,,,,,,,jjjjibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
DNS lookups fail within runtime/busybox based docker containers,FAB-1652,14079,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,greg.haskins,greg.haskins,greg.haskins,14/Jan/17 2:20 AM,28/Jan/17 9:33 AM,26/Apr/18 6:50 AM,28/Jan/17 9:33 AM,,,,,,fabric-ca,fabric-orderer,fabric-peer,,,,0,,,,,,,,"DNS lookups based on gethostbyname() fail for static assets (peer, orderer, cop, busybox), such as those employed in our docker containers such as hyperledger/fabric-peer.

It was observed that a docker-composition between orderer and peer was failing to form a connection.  After investigating, it was determined that:

* No DNS names could be resolved, regardless of internal composition link or external service (e.g. www.cnn.com).
* Docker/compose were not to blame, as loading other images (such as ubuntu:xenial and alpine) could resolve names just fine.

The root cause is that binaries such as peer/busybox were compiled under fabric-baseimage (ubuntu:xenial on x86) which utilizes glibc.  This library is notoriously difficult to utlize in a -static build, in part because of its architecture surround dlopen() for NSS.

We will need to find an alternate strategy for building out minimal containers.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00mi1:,,,,,,,,greg.haskins,mastersingh24,,,,,,,,,,,,,,,master,,,true,"14/Jan/17 11:59 PM;mastersingh24;Why not just copy the official busybox images?  I'd say just use them but we do build on multiple platforms so probably better to copy them.

I'd suggest https://github.com/docker-library/busybox/blob/master/uclibc/Dockerfile.builder   - which uses ulibc and does not require any of the libnss* stuff used by glibc.  

There is also a nice glibc version as well if we are inclined to stay on that path","18/Jan/17 3:45 AM;greg.haskins;Pasted from slack;

The problem is build environment neutral.  We compile both busybox and the golang code in our baseimage container.  The glibc in question is therefore picked up in our Debian/Ubuntu ecosystem.  I explain the rationale for not using the official busybox here: https://github.com/hyperledger/fabric/commit/b61723f9ddcc91cafd4f3a8c3634bd8d32388b32

One complication here is the multiarch stuff as you noted.  Another is that it's not only busybox that is broken:  Our golang apps pick up the bad dns functions too

There are numerous ways to solve this but most of them are probably untenable from either a support and/or licensing perspective.  I think I have a workable solution being tested right now though.",18/Jan/17 4:04 AM;greg.haskins;https://gerrit.hyperledger.org/r/#/c/4107/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
system chaincodes sometimes panic on cleanup,FAB-1632,14047,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,muralisr,muralisr,muralisr,12/Jan/17 9:34 PM,13/Aug/17 11:52 PM,26/Apr/18 6:50 AM,13/Aug/17 11:52 PM,,,,v1.1,,fabric-endorser,,,,,,0,help-wanted,,,,,,,"Once a while system chaincodes panic when bringing the system down (deregistering the sys cc) as in this console https://jenkins.hyperledger.org/job/fabric-verify-x86_64/5086/console

panic: send on closed channel

goroutine 2371 [running]:
panic(0xa8b880, 0xc4202f1ed0)
       /opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/core/container/inproccontroller.(*inProcStream).Send(0xc42024cf90, 0xc420291cc0, 0xc42024ec98, 0x42bf81)
       /opt/gopath/src/github.com/hyperledger/fabric/core/container/inproccontroller/inprocstream.go:34 +0x4f
github.com/hyperledger/fabric/core/chaincode.(*Handler).serialSend(0xc42024ec80, 0xc420291cc0, 0x0, 0x0)
       github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:147 +0xd6
github.com/hyperledger/fabric/core/chaincode.(*Handler).serialSendAsync.func1(0xc42024ec80, 0xc420291cc0, 0x0)       github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:165 +0x43created by github.com/hyperledger/fabric/core/chaincode.(*Handler).serialSendAsync       
       github.com/hyperledger/fabric/core/chaincode/_test/_obj_test/handler.go:170 +0x5d
FAIL  github.com/hyperledger/fabric/core/chaincode    168.380s
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzhy:zz9xr6zzt,,,,,,,,muralisr,,,,,,,,,,,,,,,,master,,,true,"13/Aug/17 12:58 PM;muralisr;[~raidinesh80] I know you have working fix for this... however this is happening of  more frequently of late. Please allow me to checkin this fix for now to provide relief to CI. If yours is better, we can change to that. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
concurrent_test.go in chaincode fails occastionally,FAB-1600,14011,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,muralisr,muralisr,muralisr,11/Jan/17 5:34 PM,20/Apr/17 1:29 AM,26/Apr/18 6:50 AM,20/Apr/17 1:29 AM,,,,v1.0.0,,fabric-endorser,,,,,,0,,,,,,,,"Occasionally make unit-test fails with the following signature

{code:java}
...
Closing ledger mgmt
ledger mgmt closed
FAIL: TestExecuteConcurrentInvokes (59.73s)
concurrency_test.go:134: Error concurrent query 92(nkpi)
Init CSCC
....
{code}

Example -  https://jenkins.hyperledger.org/job/fabric-verify-x86_64/5021/consoleFull.

The error is due to failure receiving an expected value (receiving ""nil"" value instead) when executing queries concurrently. 

This could be a problem in the running chaincode (ie, the test case) or somewhere else . But rather than have CI slowed down with periodic failures, will Skip CI for now
",,,,,,,,,,,,,,,,,,,,,,,,11/Jan/17 5:23 PM;muralisr;image-2017-01-11-12-23-45-890.png;https://jira.hyperledger.org/secure/attachment/10375/image-2017-01-11-12-23-45-890.png,,,,,,,,0|hzzzhy:zz9xr6zzv,,,,,,,,muralisr,,,,,,,,,,,,,,,,master,,,true,"20/Apr/17 1:28 AM;muralisr;This was due to timing in handling ChaincodeMessages that were triggered in an async fashion. This actually sporadically manifested in non concurrent CI runs as well.  https://jira.hyperledger.org/browse/FAB-2203 captures the details and was fixed in http://gerrit.hyperledger.org/r/5919.

In the spirit of keeping chaincode test time down, will not attempt to resurrect concurrent_test.go  but leave it as Skipped and mark this as Done. Any issues with the concurrency will surely come up in stress tests and we can revisit this (even use concurrent_test.go in that investigation)  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK] gulp test fails ,FAB-1593,14004,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,jjjjibm,jjjjibm,10/Jan/17 7:01 PM,05/Apr/17 6:43 PM,26/Apr/18 6:50 AM,05/Apr/17 6:43 PM,,,,,,fabric-sdk-node,,,,,,0,,,,,,,,"Having set up fabric, fabric-sdk-node, and fabric cop per Jim Zhang's sprint 7 video, gulp test fails, starting from test 27: 

not ok 27 test exited without ending
  ---
    operator: fail
    at: processEmit [as emit] (/home/ibmadmin/work/src/github.com/hyperledger/fabric-sdk-node/node_modules/grpc/node_modules/node-pre-gyp/node_modules/npmlog/node_modules/gauge/node_modules/signal-exit/index.js:140:35)
  ...

The remaining test cases fail the same way.

1..52
# tests 52
# pass  25
# fail  27
Our public fabric-sdk-node readme, https://github.com/hyperledger/fabric-sdk-node/blob/master/README.md
has this instruction:

Run the full unit test bucket and make sure 100% are passing:

    gulp test

I have run each unit test individually.  Most of these fail, but in a different way. 

 How to recreate:
1.Set up fabric, fabric-cop,.and fabric-sdk-node per Jim Zhang's sprint 7 video.  See Environment for commit levels. 
2.cd fabric-sdk-node
3.gulp test
","Use commit levels specified in Jim Zhang's sprint 7 video:

Fabric:
git checkout -b sprint7 d26b8b4aa8e382555f3e6b518a3ef9d5bbfc8091
fabric-cop:
        git checkout -b sprint7 ffb4fc22b84775769c755c5c3db53f6911ba4835
fabric-sdk-node
        git checkout -b sprint7 662135eedefd43e0d249362b991cf04e2b423783

I am running a vlaunch VM running Ubuntu ""trusty"" .  
I am using the docker compose file in fabric-sdk-node/test/fixtures

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00m1t:,,,,,,,,jjjjibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crash during basic enrollment: POST /api/v1/cfssl/enroll,FAB-1591,14002,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,JonathanLevi,greg.haskins,greg.haskins,10/Jan/17 5:55 PM,15/Mar/17 1:12 AM,26/Apr/18 6:50 AM,15/Mar/17 1:12 AM,,,,,,fabric-ca,,,,,,0,,,,,,,,"Working on trying to get basic e2e environment in the v1.0 branch with Jonathan Levi

Versions:

* fabric-cop.git f32a17caef (Tue Jan 10 14:17:43 2017 +0000)
* fabric-sdk-node.git a4dd2b69 (Fri Jan 6 18:18:45 2017 +0000)

Basic enrollment operation causes the cop backend to crash with following log

cop_1      | 2017/01/10 17:22:36 [INFO] Received request
cop_1      | POST /api/v1/cfssl/enroll
cop_1      | Authorization: Basic YWRtaW46YWRtaW5wdw==
cop_1      | {""certificate_request"":""-----BEGIN CERTIFICATE REQUEST-----\r\nMIHLMHICAQAwEDEOMAwGA1UEAwwFYWRtaW4wWTATBgcqhkjOPQIBBggqhkjOPQMB\r\nBwNCAAQNLnhMx1XAa7ed8GV5BpdByG8ygyMswejUonB3IDZNfOJjQkPhstZHNSPW\r\nMm6qAA+s6ytW2fulZapFHpeaL+wRoAAwDAYIKoZIzj0EAwIFAANHADBEAiBBWJq9\r\nFUwKt9TWzFEfFE+gSQodxhMJKdo/XAVpq+6CkgIgcGrkIq/9LCDoYBCc5o01zrop\r\ngo665TTDxBG7et1Ti44=\r\n-----END CERTIFICATE REQUEST-----\r\n""}
cop_1      | 2017/01/10 17:22:37 http: panic serving 10.0.2.2:59518: runtime error: invalid memory address or nil pointer dereference
cop_1      | goroutine 7 [running]:
cop_1      | net/http.(*conn).serve.func1(0xc42043e480)
cop_1      | 	/opt/go/src/net/http/server.go:1491 +0x12a
cop_1      | panic(0xb6a8a0, 0xc420012050)
cop_1      | 	/opt/go/src/runtime/panic.go:458 +0x243
cop_1      | github.com/hyperledger/fabric-cop/cli/server.(*signHandler).Handle(0xc420440060, 0x115d4e0, 0xc420431860, 0xc4200bd590, 0xc4202bdd01, 0xc420442460)
cop_1      | 	/opt/gopath/src/github.com/hyperledger/fabric-cop/cli/server/enroll.go:76 +0x231
cop_1      | github.com/hyperledger/fabric-cop/vendor/github.com/cloudflare/cfssl/api.HTTPHandler.ServeHTTP(0x1155020, 0xc420440060, 0xc420440070, 0x1, 0x1, 0x115d4e0, 0xc420431860, 0xc4200bd590)
cop_1      | 	/opt/gopath/src/github.com/hyperledger/fabric-cop/vendor/github.com/cloudflare/cfssl/api/api.go:85 +0x3e4
cop_1      | github.com/hyperledger/fabric-cop/vendor/github.com/cloudflare/cfssl/api.(*HTTPHandler).ServeHTTP(0xc42043c4e0, 0x115d4e0, 0xc420431860, 0xc4200bd590)
cop_1      | 	<autogenerated>:4 +0x8c
cop_1      | github.com/hyperledger/fabric-cop/cli/server.(*copAuthHandler).ServeHTTP(0xc4202bdd80, 0x115d4e0, 0xc420431860, 0xc4200bd590)
cop_1      | 	/opt/gopath/src/github.com/hyperledger/fabric-cop/cli/server/auth.go:82 +0x91
cop_1      | net/http.(*ServeMux).ServeHTTP(0x1181680, 0x115d4e0, 0xc420431860, 0xc4200bd590)
cop_1      | 	/opt/go/src/net/http/server.go:2022 +0x7f
cop_1      | net/http.serverHandler.ServeHTTP(0xc42043e400, 0x115d4e0, 0xc420431860, 0xc4200bd590)
cop_1      | 	/opt/go/src/net/http/server.go:2202 +0x7d
cop_1      | net/http.(*conn).serve(0xc42043e480, 0x115dde0, 0xc42042ba80)
cop_1      | 	/opt/go/src/net/http/server.go:1579 +0x4b7
cop_1      | created by net/http.(*Server).Serve
cop_1      | 	/opt/go/src/net/http/server.go:2293 +0x44d
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00m1d:,,,,,,,,greg.haskins,JonathanLevi,smithbk,,,,,,,,,,,,,,,,,,11/Jan/17 2:38 PM;greg.haskins;Work-around submitted as https://gerrit.hyperledger.org/r/#/c/3843/,"14/Mar/17 7:31 PM;smithbk;Greg, fabric-ca has been reworked quite a bit since this since I see ""fabric-ca/cli"" in the stack.  It must be using the fabric-ca executable before we broke it up into separate fabric-ca-server and fabric-ca-client executable.
Anyway, I don't think this is a problem any longer.",15/Mar/17 1:11 AM;JonathanLevi;[~keithsmith] Certainly!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
handleRangeQueryState incorrect,FAB-1541,13951,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,zlliu,zlliu,zlliu,06/Jan/17 7:24 AM,11/May/17 7:46 PM,26/Apr/18 6:50 AM,11/May/17 7:46 PM,v1.0.0,,,DUPLICATE,,fabric-ledger,,,,,06/Jan/17 12:00 AM,1,chaincode,,,,,,,"When calling the RangeQueryState interface in chaincode, returns the result that all keys have the same value.",fabric 1.0,,,,,14400,7200,,0%,14400,7200,,,,,,,,,,,,,,,,,,,,FAB-757,0|hzzz76:zzzss,,Sprint 16  - Ledger,,,,,,ChristopherFerris,denyeart,inatatsu,yoheiueda,zlliu,,,,,,,,,,,,,,,,"26/Jan/17 2:39 AM;inatatsu;Encountered the same issue when porting chaincode using the deprecated Table API to use PartialCompositeKeyQuery().
https://jira.hyperledger.org/browse/FAB-1837
Wish the change set be merged soon!","26/Jan/17 2:43 AM;inatatsu;Attached is my commit message for reference. I'll abandon my change set.
{code:java}
[FAB-1837] Deep copy byte arrays returned by ledger

It is observed that a value returned by PartialCompositeKeyQuery() intermittently differs from the one returned by GetState() for the corresponding key. This is resolved by copying byte arrays returned by the iterator of the ledger instead of copying byte array pointers.

Fixes FAB-1837.
https://jira.hyperledger.org/browse/FAB-1837

Change-Id: Ib5aa6cb89d3b3438836459d4cc6ad270a972fe3f
Signed-off-by: Tatsushi Inagaki <e29253@jp.ibm.com>
{code}
","11/Apr/17 9:30 PM;denyeart;[~zlliu][~inagaki][~Senthil1]
Is this still an issue? If so please rebase the changeset and ask for reviews: https://gerrit.hyperledger.org/r/#/c/3709/","21/Apr/17 8:25 PM;ChristopherFerris;So, the CR above was abandoned (by me) because no one ever followed up on Jason's comment.

If this is a bug, as I suspect isthe case from the comment thread, then someone will need to send in a CR. [~denyeart]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric-ca server and client directs all output to stderr instead of stdout,FAB-1527,13936,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,smithbk,jjjjibm,jjjjibm,05/Jan/17 7:25 PM,08/May/17 7:37 PM,26/Apr/18 6:50 AM,08/May/17 7:37 PM,,,,WON'T FIX,,fabric-ca,,,,,,0,,,,,,,,"Whether I start the cop server from a shell script or manually, all the server output is directed to stderr, even messages that are not errors. 

Sample output:
ibmadmin@jcwNodeSDK:/tmp$ cd $COP
ibmadmin@jcwNodeSDK:~/work/src/github.com/hyperledger/fabric-cop$ bin/*cop server _parameters_ >cop.out*
2017/01/05 14:07:01 [ERROR] Group already registered
2017/01/05 14:07:01 [ERROR] Group already registered
2017/01/05 14:07:01 [ERROR] Group already registered
2017/01/05 14:07:01 [ERROR] Group already registered
2017/01/05 14:07:01 [ERROR] Group already registered
2017/01/05 14:07:01 [ERROR] Group already registered
2017/01/05 14:07:01 [ERROR] Group already registered
2017/01/05 14:07:01 [ERROR] User is already registered
2017/01/05 14:07:01 [ERROR] User is already registered
2017/01/05 14:07:01 [ERROR] User is already registered
2017/01/05 14:07:01 [ERROR] User is already registered
2017/01/05 14:07:01 [ERROR] User is already registered
2017/01/05 14:07:01 [ERROR] User is already registered
2017/01/05 14:07:01 [INFO] Initializing signer
2017/01/05 14:07:01 [WARNING] couldn't initialize ocsp signer: open : no such file or directory
2017/01/05 14:07:01 [INFO] endpoint '/api/v1/cfssl/info' is enabled
2017/01/05 14:07:01 [INFO] endpoint '/api/v1/cfssl/gencrl' is enabled
2017/01/05 14:07:01 [INFO] endpoint '/api/v1/cfssl/enroll' is enabled
2017/01/05 14:07:01 [INFO] endpoint '/api/v1/cfssl/newcert' is enabled
2017/01/05 14:07:01 [INFO] bundler API ready
2017/01/05 14:07:01 [INFO] endpoint '/api/v1/cfssl/bundle' is enabled
2017/01/05 14:07:01 [INFO] setting up key / CSR generator
2017/01/05 14:07:01 [INFO] endpoint '/api/v1/cfssl/newkey' is enabled
2017/01/05 14:07:01 [INFO] endpoint '/api/v1/cfssl/init_ca' is enabled
2017/01/05 14:07:01 [INFO] endpoint '/api/v1/cfssl//' is enabled
2017/01/05 14:07:01 [WARNING] endpoint 'authsign' is disabled: {""code"":5200,""message"":""Invalid or unknown policy""}
2017/01/05 14:07:01 [WARNING] endpoint 'ocspsign' is disabled: signer not initialized
2017/01/05 14:07:01 [INFO] endpoint '/api/v1/cfssl/sign' is enabled
2017/01/05 14:07:01 [INFO] endpoint '/api/v1/cfssl/scan' is enabled
2017/01/05 14:07:01 [INFO] endpoint '/api/v1/cfssl/scaninfo' is enabled
2017/01/05 14:07:01 [INFO] endpoint '/api/v1/cfssl/certinfo' is enabled
2017/01/05 14:07:01 [INFO] endpoint '/api/v1/cfssl/revoke' is enabled
2017/01/05 14:07:01 [INFO] endpoint '/api/v1/cfssl/register' is enabled
2017/01/05 14:07:01 [INFO] endpoint '/api/v1/cfssl/reenroll' is enabled
2017/01/05 14:07:01 [INFO] Handler set up complete.
2017/01/05 14:07:01 [INFO] Now listening on :8888
^C

Notice that even though I was directing stdout this way :  >cop.out
all output still appeared on my screen.   I captured the output this way:
cop server start _parameters_ 2>cop.out

It's OK to direct actual error messages to stderr, but regular messages should go to stdout. 

*How to recreate:
*clone fabric-cop, then git log which gives thsi commit:
commit 
Author: Keith Smith <bksmith@us.ibm.com>
Date:   Mon Nov 28 13:32:55 2016 -0500

    Add support for certificate revocation

git checkout -b sprint7a ffb4fc22b84775769c755c5c3db53f6911ba4835

clone fabric-sdk-node then git log which gives this commit:
commit 662135eedefd43e0d249362b991cf04e2b423783
Author: Yuki Kondo <yuki.kondo@hal.hitachi.com>
Date:   Thu Dec 22 10:00:55 2016 -0800

    Fix docker-compose.yml for Test

git checkout -b sprint7a 662135eedefd43e0d249362b991cf04e2b423783

clone fabric, then  git log --author=YACOVM --after ""2016-12-01""  which gives this commit:
commit d26b8b4aa8e382555f3e6b518a3ef9d5bbfc8091
Author: YACOVM <YACOVM@il.ibm.com>
Date:   Mon Dec 19 18:06:06 2016 +0200

    [FAB-1449] Add getPkiID to the commReceivedMsg

git checkout -b sprint7a d26b8b4aa8e382555f3e6b518a3ef9d5bbfc8091

Build the COP server as directed in the readme, and start it as described above. 



","Ubuntu server running on a VM. 

Commit levels: 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00lop:,,Sprint 16 - Membership Service,,,,,,aambati,jjjjibm,mastersingh24,smithbk,,,,,,,,,,,,,,,,,"03/May/17 3:26 PM;aambati;cfssl logger uses default go's default logger which outputs to stderr by default. So, in the main.go of cmd/fabric-ca-client and cmd/fabric-ca-server, we can call log.SetOutput(os.Stdout) to make default logger to output to stdout instead. But with this change all log messages are output to stdout except for bccsp log messages.",04/May/17 2:53 PM;smithbk;See http://gerrit.hyperledger.org/r/8959,04/May/17 3:36 PM;jjjjibm;https://gerrit.hyperledger.org/r/#/c/8959/,06/May/17 10:32 AM;mastersingh24;sorry I missed this earlier - we should mark this as won't fix as it seems to be industry standard to log to stderr and this what what core fabric does as well - https://github.com/hyperledger/fabric/blob/master/common/flogging/logging.go#L58,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
deploying chaincode failing on master due to missing image,FAB-1515,13924,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,david_dornseifer,david_dornseifer,04/Jan/17 4:58 PM,13/Jan/17 11:28 PM,26/Apr/18 6:50 AM,13/Jan/17 11:28 PM,,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,,"The following error occurs when I try to deploy chaincode on the latest fabric using the 'yeasy/hyperledger-fabric-peer' docker images. On docker.io there is just the x86_64-0.6.1-preview
available. 

2017-01-04 14:10:29.838 UTC [dockercontroller] deployImage -> ERRO 464 Error building images: Tag x86_64-1.0.0-preview not found in repository docker.io/hyperledger/fabric-ccenv
2017-01-04 14:10:29.838 UTC [dockercontroller] deployImage -> ERRO 465 Image Output:
********************
Step 1 : FROM hyperledger/fabric-ccenv:x86_64-1.0.0-preview
Pulling repository docker.io/hyperledger/fabric-ccenv


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00lm1:,,,,,,,,david_dornseifer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
events do not work ,FAB-1448,13857,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,bfuentes@fr.ibm.com,bfuentes@fr.ibm.com,19/Dec/16 2:38 PM,05/Apr/17 6:42 PM,26/Apr/18 6:50 AM,05/Apr/17 6:42 PM,,,,WON'T FIX,,fabric-sdk-node,,,,,,0,help-wanted,,,,,,,"I am trying to make events working on hfc, but when I initialize it, I have an error.
So I used debug to see what happened (see attached file) 
It sounds like ""this"" is no more referencing the eventHub line 2382 of hfc.js (v0.6.5) 

!image-2016-12-19-15-35-08-973.png|thumbnail! ",,,,,,,,,,,,,,,,,,,,,,,,19/Dec/16 2:35 PM;bfuentes@fr.ibm.com;image-2016-12-19-15-35-08-973.png;https://jira.hyperledger.org/secure/attachment/10322/image-2016-12-19-15-35-08-973.png,,,,,,,,0|i00l9d:,,,,,,,,bfuentes@fr.ibm.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer crashes at commit time if block's metadata is nil,FAB-1415,13824,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,C0rWin,muralisr,muralisr,15/Dec/16 4:09 PM,15/Dec/16 10:28 PM,26/Apr/18 6:50 AM,15/Dec/16 10:28 PM,,,,,,fabric-gossip,,,,,,0,,,,,,,,"Peer crashes with 

panic: runtime error: index out of range

goroutine 69 [running]:
panic(0xa6f740, 0xc42000e100)
	/opt/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/validator/statebasedval.(*Validator).ValidateAndPrepareBatch(0xc4203122e0, 0xc420294140, 0x1, 0xc4202d41b0, 0x1, 0x1)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/validator/statebasedval/state_based_validator.go:48 +0xba5
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr.(*LockBasedTxMgr).ValidateAndPrepare(0xc42029c140, 0xc420294140, 0x1, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/txmgr/lockbasedtxmgr/lockbased_txmgr.go:77 +0xfb
github.com/hyperledger/fabric/core/ledger/kvledger.(*KVLedger).Commit(0xc420317440, 0xc420294140, 0x48afc2, 0xc420080dc0)
	/opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/kv_ledger.go:219 +0x8a
github.com/hyperledger/fabric/core/committer.(*LedgerCommitter).CommitBlock(0xc420312990, 0xc420294140, 0x0, 0x21776bb3202c9c00)
	/opt/gopath/src/github.com/hyperledger/fabric/core/committer/committer_impl.go:51 +0x3d
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).commitBlock(0xc420086000, 0xc420294140, 0x1, 0x4, 0xc4202d40d8)
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:388 +0x56
github.com/hyperledger/fabric/gossip/state.(*GossipStateProviderImpl).deliverPayloads(0xc420086000)
	/opt/gopath/src/github.com/hyperledger/fabric/gossip/state/state.go:285 +0x458
created by github.com/hyperledger/fabric/gossip/state.NewGossipStateProvider
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00l2x:,,,,,,,,C0rWin,muralisr,,,,,,,,,,,,,,,master,,,true,"15/Dec/16 5:09 PM;C0rWin;The block arrives from ordering service with metadata field underlined for transaction filter bit array not initialized, whereas later validator tries access that field and fails due to null pointer deference. Providing a fix which will take care to properly initialize metadata field and copy metadata fields it got from the orderer.

{code}
                        block.Metadata = t.Block.Metadata
                        if block.Metadata == nil {
                                block.Metadata = &common.BlockMetadata{ Metadata: [][]byte{[]byte{}, []byte{}, []byte{}}}
                        } else if len(block.Metadata.Metadata) < int(common.BlockMetadataIndex_TRANSACTIONS_FILTER+1) {
                                for i := int(len(block.Metadata.Metadata));  i <= int(common.BlockMetadataIndex_TRANSACTIONS_FILTER); i++ {
                                        block.Metadata.Metadata = append(block.Metadata.Metadata, []byte{})
                                }
                        }
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
TLS for p2p communicaitons fail in dev mode (--peer-chaincodedev),FAB-1414,13823,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,wayoon,wayoon,15/Dec/16 3:50 PM,31/Dec/16 8:11 PM,26/Apr/18 6:50 AM,31/Dec/16 8:11 PM,v0.6,,,v0.6,,fabric-baseimage,fabric-peer,,,,,0,chaincode,Security,won't_fix,,,,,"I enabled p2p TLS, and started peer in dev mode.
It fails when I tyr to run chaincode, saying ""grpc: Server.Serve failed to complete security handshake from ""127.0.0.1:55808"": tls: first record does not look like a TLS handshake"" (please see the last part of the peer log below).


in core.yaml
{code}
peer:

    # TLS Settings for p2p communications
    tls:
        enabled:  true
        cert:
            file: testdata/server1.crt
        key:
            file: testdata/server1.key
        # The server name use to verify the hostname returned by TLS handshake
        serverhostoverride: VP0
{code}

starting peer in dev mode:
{code}
vagrant@hyperledger-devenv:v0.0.11-ed90562:/opt/gopath/src/github.com/hyperledger/fabric$ peer node start --peer-chaincodedev

15:29:31.479 [logging] LoggingInit -> DEBU 001 Setting default logging level to DEBUG for command 'node'
15:29:31.480 [nodeCmd] serve -> INFO 002 Running in chaincode development mode
15:29:31.480 [nodeCmd] serve -> INFO 003 Set consensus to NOOPS and user starts chaincode
15:29:31.480 [nodeCmd] serve -> INFO 004 Disable loading validity system chaincode
15:29:31.487 [eventhub_producer] AddEventType -> DEBU 005 registering BLOCK
15:29:31.488 [eventhub_producer] AddEventType -> DEBU 006 registering CHAINCODE
15:29:31.488 [eventhub_producer] AddEventType -> DEBU 007 registering REJECTION
15:29:31.488 [eventhub_producer] AddEventType -> DEBU 008 registering REGISTER
15:29:31.488 [nodeCmd] serve -> INFO 009 Security enabled status: true
15:29:31.488 [nodeCmd] serve -> INFO 00b Privacy enabled status: true
15:29:31.489 [db] open -> DEBU 00c Is db path [/var/hyperledger/production/db] empty [false]
15:29:31.488 [eventhub_producer] start -> INFO 00a event processor started
15:29:31.490 [db] open -> INFO 00d Setting rocksdb maxLogFileSize to 10485760
15:29:31.490 [db] open -> INFO 00e Setting rocksdb keepLogFileNum to 10
15:29:31.680 [nodeCmd] func1 -> DEBU 00f Registering validator with enroll ID: vp
15:29:31.680 [crypto] RegisterValidator -> INFO 010 Registering validator [vp] with name [vp]...
15:29:31.682 [crypto] Debugf -> DEBU 011 [validator.vp] Data will be stored at [/var/hyperledger/production/crypto/validator/vp]
15:29:31.683 [crypto] Debugf -> DEBU 012 [validator.vp] Keystore path [/var/hyperledger/production/crypto/validator/vp/ks] missing [false]: [<clean>]
15:29:31.683 [crypto] Debugf -> DEBU 013 [validator.vp] Keystore [/var/hyperledger/production/crypto/validator/vp/ks/db] missing [false]:[<clean>]
15:29:31.683 [crypto] Debugf -> DEBU 014 [validator.vp] Keystore opened at [/var/hyperledger/production/crypto/validator/vp/ks]...done
15:29:31.683 [crypto] Debug -> DEBU 015 [validator.vp]  Registering node crypto engine...
15:29:31.684 [crypto] Debug -> DEBU 016 [validator.vp]  Initiliazing TLS...
15:29:31.684 [crypto] Debugf -> DEBU 017 [validator.vp] Loading external certificate at [testdata/server.crt]...
15:29:31.685 [crypto] Debug -> DEBU 018 [validator.vp]  Initiliazing TLS...Done
15:29:31.686 [crypto] Debug -> DEBU 019 [validator.vp]  Registering node crypto engine...done!
15:29:31.686 [crypto] Debugf -> DEBU 01a [validator.vp] Registration of node [%!s(crypto.NodeType=2)] with name [vp] completed
15:29:31.686 [crypto] Debug -> DEBU 01b [validator.vp]  Closing keystore...
15:29:31.687 [crypto] Debug -> DEBU 01c [validator.vp]  Closing keystore...done!
15:29:31.687 [crypto] RegisterValidator -> INFO 01d Registering validator [vp] with name [vp]...done!
15:29:31.687 [nodeCmd] func1 -> DEBU 01e Initializing validator with enroll ID: vp
15:29:31.687 [crypto] InitValidator -> INFO 01f Initializing validator [vp]...
15:29:31.689 [crypto] Debugf -> DEBU 020 [validator.vp] Data will be stored at [/var/hyperledger/production/crypto/validator/vp]
15:29:31.689 [crypto] Debugf -> DEBU 021 [validator.vp] Keystore path [/var/hyperledger/production/crypto/validator/vp/ks] missing [false]: [<clean>]
15:29:31.689 [crypto] Debugf -> DEBU 022 [validator.vp] Keystore [/var/hyperledger/production/crypto/validator/vp/ks/db] missing [false]:[<clean>]
15:29:31.689 [crypto] Debugf -> DEBU 023 [validator.vp] Keystore opened at [/var/hyperledger/production/crypto/validator/vp/ks]...done
15:29:31.689 [crypto] Debug -> DEBU 024 [validator.vp]  Initializing node crypto engine...
15:29:31.690 [crypto] Debug -> DEBU 025 [validator.vp]  Loading ECA certificates chain...
15:29:31.690 [crypto] Debugf -> DEBU 026 [validator.vp] Loading certificate [eca.cert.chain] at [/var/hyperledger/production/crypto/validator/vp/ks/raw/eca.cert.chain]...
15:29:31.690 [crypto] Debug -> DEBU 027 [validator.vp]  Loading TCA certificates chain...
15:29:31.690 [crypto] Debugf -> DEBU 028 [validator.vp] Loading certificate [tca.cert.chain] at [/var/hyperledger/production/crypto/validator/vp/ks/raw/tca.cert.chain]...
15:29:31.690 [crypto] Debug -> DEBU 029 [validator.vp]  Loading enrollment key...
15:29:31.691 [crypto] Debugf -> DEBU 02a [validator.vp] Loading private key [enrollment.key] at [/var/hyperledger/production/crypto/validator/vp/ks/raw/enrollment.key]...
15:29:31.707 [crypto] Debug -> DEBU 02b [validator.vp]  Loading enrollment certificate...
15:29:31.707 [crypto] Debugf -> DEBU 02c [validator.vp] Loading certificate [enrollment.cert] at [/var/hyperledger/production/crypto/validator/vp/ks/raw/enrollment.cert]...
15:29:31.708 [crypto] Debugf -> DEBU 02d [validator.vp] Setting id to [5c e6 b6 13 80 eb a3 a9 26 5b 2b f8 b5 7e e1 6b 27 b1 b5 4f 25 0d 45 36 8d 5b 99 0b 5c 57 cb c1].
15:29:31.708 [crypto] Debugf -> DEBU 02e [validator.vp] Setting enrollCertHash to [5c e6 b6 13 80 eb a3 a9 26 5b 2b f8 b5 7e e1 6b 27 b1 b5 4f 25 0d 45 36 8d 5b 99 0b 5c 57 cb c1].
15:29:31.708 [crypto] Debugf -> DEBU 02f [validator.vp] Loading enrollment id at [/var/hyperledger/production/crypto/validator/vp/ks/raw/enrollment.id]...
15:29:31.708 [crypto] Debugf -> DEBU 030 [validator.vp] Setting enrollment id to [vp].
15:29:31.708 [crypto] Debug -> DEBU 031 [validator.vp]  Loading enrollment chain key...
15:29:31.708 [crypto] Debugf -> DEBU 032 [validator.vp] Loading private key [chain.key] at [/var/hyperledger/production/crypto/validator/vp/ks/raw/chain.key]...
15:29:31.709 [crypto] Debug -> DEBU 033 [validator.vp]  Loading TLSCA certificates chain...
15:29:31.709 [crypto] Debugf -> DEBU 034 [validator.vp] Loading external certificate at [testdata/server.crt]...
15:29:31.710 [crypto] Debug -> DEBU 035 [validator.vp]  Loading TLSCA certificates chain...done
15:29:31.710 [crypto] Debug -> DEBU 036 [validator.vp]  Loading tls certificate...
15:29:31.710 [crypto] Debugf -> DEBU 037 [validator.vp] Loading certificate [tls.cert] at [/var/hyperledger/production/crypto/validator/vp/ks/raw/tls.cert]...
15:29:31.710 [crypto] Debug -> DEBU 038 [validator.vp]  Initializing node crypto engine...done!
15:29:31.710 [crypto] Debug -> DEBU 039 [validator.vp]  Init keystore...
15:29:31.710 [crypto] Debugf -> DEBU 03a [validator.vp] Create Table [Certificates] if not exists
15:29:31.719 [crypto] Debug -> DEBU 03b [validator.vp]  Init keystore...done.
15:29:31.719 [crypto] InitValidator -> INFO 03c Initializing validator [vp]...done!
15:29:31.720 [chaincode] NewChaincodeSupport -> INFO 03d Chaincode support using peerAddress: 0.0.0.0:7051
15:29:31.720 [chaincode] NewChaincodeSupport -> DEBU 03e Turn off keepalive(value 0)
15:29:31.721 [sysccapi] RegisterSysCC -> WARN 03f Currently system chaincode does support security(noop,github.com/hyperledger/fabric/bddtests/syschaincode/noop)
15:29:31.721 [nodeCmd] serve -> DEBU 040 Running as validating peer - making genesis block if needed
15:29:31.723 [state] loadConfig -> INFO 041 Loading configurations...
15:29:31.724 [state] loadConfig -> INFO 042 Configurations loaded. stateImplName=[buckettree], stateImplConfigs=map[bucketCacheSize:%!s(int=100) numBuckets:%!s(int=1000003) maxGroupingAtEachLevel:%!s(int=5)], deltaHistorySize=[500]
15:29:31.724 [state] NewState -> INFO 043 Initializing state implementation [buckettree]
15:29:31.724 [buckettree] initConfig -> INFO 044 configs passed during initialization = map[string]interface {}{""numBuckets"":1000003, ""maxGroupingAtEachLevel"":5, ""bucketCacheSize"":100}
15:29:31.725 [buckettree] initConfig -> INFO 045 Initializing bucket tree state implemetation with configurations &{maxGroupingAtEachLevel:5 lowestLevel:9 levelToNumBucketsMap:map[4:321 2:13 7:40001 3:65 9:1000003 6:8001 1:3 0:1 8:200001 5:1601] hashFunc:0xab1fb0}
15:29:31.725 [buckettree] newBucketCache -> INFO 046 Constructing bucket-cache with max bucket cache size = [100] MBs
15:29:31.726 [buckettree] loadAllBucketNodesFromDB -> INFO 047 Loaded buckets data in cache. Total buckets in DB = [0]. Total cache size:=0
15:29:31.726 [nodeCmd] serve -> DEBU 048 Running as validating peer - installing consensus noops
15:29:31.726 [peer] initDiscovery -> DEBU 049 Retrieved discovery list from disk: []
15:29:31.727 [consensus/controller] NewConsenter -> INFO 04a Creating default consensus plugin (noops)
15:29:31.728 [consensus/noops] newNoops -> DEBU 04b Creating a NOOPS object
15:29:31.731 [consensus/noops] newNoops -> INFO 04c NOOPS consensus type = *noops.Noops
15:29:31.731 [consensus/noops] newNoops -> INFO 04d NOOPS block size = 500
15:29:31.732 [consensus/noops] newNoops -> INFO 04e NOOPS block wait = 1s
15:29:31.732 [peer] chatWithSomePeers -> DEBU 04f Starting up the first peer of a new network
15:29:31.734 [consensus/statetransfer] verifyAndRecoverBlockchain -> DEBU 050 Validating existing blockchain, highest validated block is 0, valid through 0
15:29:31.734 [consensus/statetransfer] blockThread -> INFO 051 Validated blockchain to the genesis block
15:29:31.734 [consensus/handler] 1 -> DEBU 052 Starting up message thread for consenter
15:29:31.734 [nodeCmd] serve -> INFO 053 Starting peer with ID=name:""jdoe"" , network ID=dev, address=0.0.0.0:7051, rootnodes=, validator=true
15:29:31.735 [peer] ensureConnected -> DEBU 054 Starting Peer reconnect service (touch service), with period = 6s
15:29:31.736 [rest] StartOpenchainRESTServer -> INFO 055 Initializing the REST service on 0.0.0.0:7050, TLS is enabled.
2016/12/15 15:29:37 grpc: Server.Serve failed to complete security handshake from ""127.0.0.1:55807"": tls: first record does not look like a TLS handshake
15:29:37.741 [peer] ensureConnected -> DEBU 056 Touch service indicates no dropped connections
15:29:37.741 [peer] ensureConnected -> DEBU 057 Connected to: []
15:29:37.741 [peer] ensureConnected -> DEBU 058 Discovery knows about: []
2016/12/15 15:29:38 grpc: Server.Serve failed to complete security handshake from ""127.0.0.1:55808"": tls: first record does not look like a TLS handshake
2016/12/15 15:29:39 grpc: Server.Serve failed to complete security handshake from ""127.0.0.1:55809"": tls: first record does not look like a TLS handshake
15:29:43.741 [peer] ensureConnected -> DEBU 059 Touch service indicates no dropped connections
15:29:43.741 [peer] ensureConnected -> DEBU 05a Connected to: []
15:29:43.741 [peer] ensureConnected -> DEBU 05b Discovery knows about: []
{code}

starting chaincode:
{code}
vagrant@hyperledger-devenv:v0.0.11-ed90562:/opt/gopath/src/consentmanager$ CORE_CHAINCODE_ID_NAME=consentmanager CORE_PEER_ADDRESS=0.0.0.0:7051 ./cc
2016/12/15 15:29:37 ----starting chaincode----
2016/12/15 15:29:37 Set CORE_LOGGING_CHAINCODE=DEBUG
2016/12/15 15:29:37 Set CORE_REST_ADDRESS=0.0.0.0:7050
15:29:37.153 [shim] DEBU : Peer address: 0.0.0.0:7051
2016/12/15 15:29:37 transport: http2Client.notifyError got notified that the client transport was broken unexpected EOF.
2016/12/15 15:29:38 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: write tcp 127.0.0.1:55807->127.0.0.1:7051: write: connection reset by peer""; Reconnecting to {""0.0.0.0:7051"" <nil>}
2016/12/15 15:29:39 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: write tcp 127.0.0.1:55808->127.0.0.1:7051: write: broken pipe""; Reconnecting to {""0.0.0.0:7051"" <nil>}
15:29:40.154 [shim] ERRO : Error trying to connect to local peer: grpc: timed out when dialing
Error starting Simple chaincode: Error trying to connect to local peer: grpc: timed out when dialing

{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00l2p:,,,,,,,,mastersingh24,wayoon,,,,,,,,,,,,,,,,,,,"28/Dec/16 4:11 PM;mastersingh24;Not sure this is really a bug as I'm not sure we really want to be running the peer with TLS enabled in chaincode-dev mode, but in any case you should be able to solve this by passing the appropriate environment variables when you start the chaincode - basically all of the ""peer.tls"" settings from core.yaml",31/Dec/16 7:48 PM;mastersingh24;closing this as I believe my previous comment will help work around this issue and we have no plans to make any non-criticial fixes to the v0.6 branch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Remove node's call to bootstrapper,FAB-1410,13819,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,kchristidis,kchristidis,kchristidis,15/Dec/16 5:13 AM,15/Dec/16 10:46 PM,26/Apr/18 6:50 AM,15/Dec/16 10:46 PM,,,,,,fabric-peer,,,,,,0,,,,,,,,"The node package gets the genesis block by invoking the static bootstrapper, then uses that block for this call

{code}deliverService.JoinChannel(commit, block){code}

It should be noted that this is a temporary solution by the node package authors to test out the end-to-end integration.

However, this layering violation (which could be ignored temporarily due to the reason cited above) manifests itself in a very practical and real way:

# The static bootstrapper is being replaced by the provisional bootstrapper, for the reasons documented here: https://jira.hyperledger.org/browse/FAB-1364.
# The provisional bootstrapper loads the *orderer.yaml* file (in the *orderer* package) to determine its output.
# The fabric-peer Docker image however does not have access to this file.
# Thus, if we call the provisional bootstrapper from the node, the fabric-peer container will crash.

Upon further inspection, it seems that what the node really needs now is a configuration block with just the right chain ID, on the payload header of its first enclosed envelope.

The simplest, least invasive way to offer this is by creating a sample block via the following call: 

{code}utils.MakeConfigurationBlock(util.GetTestChainID()){code}

(Where *utils* refers to the *protos/utils* and *util* to the *core/util* package respectively.)

This is also inline with Binh's suggestion: https://hyperledgerproject.slack.com/archives/fabric-peer-dev/p1481691533000088",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00l1t:,,Sprint 7 - consensus,,,,,,kchristidis,,,,,,,,,,,,,,,,master,,,true,15/Dec/16 6:50 AM;kchristidis;https://gerrit.hyperledger.org/r/#/c/3315/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"[java-chaincode] In Chaincode-to-Chaincode invocation, main transaction become successful even if second chaincode invocation fails.",FAB-1381,13790,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,satheeshk,abhi201191,abhi201191,13/Dec/16 1:27 PM,28/Mar/17 5:34 PM,26/Apr/18 6:50 AM,28/Mar/17 5:34 PM,,,,,,fabric-sdk-java,,,,,,0,,,,,,,,"

Lets take a reference to example chaincodes: LinkExample and MapExample.

In LinkExample, we are invoking MapExample chaincode and in put function of MapExample chaincode we are doing some check on number of arguments i.e if the number of arguments is odd then we are throwing an RuntimeException.

Now, when we invoke LinkExample chaincode with odd number of arguments and it internally invokes MapExample chaincode with same number of arguments then MapExample chaincode throw an RuntimeException and shim layer catch this exception which results in the failure of invoke transaction to MapExample. But the whole transaction (invoke transaction to LinkExample) is getting successful even if when part of the transaction fails.

In this senario, MapExample is not sending any message regarding its failure to LinkExample which results in success of transaction to LinkExample.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00l19:,,,,,,,,abhi201191,rickr,,,,,,,,,,,,,,,,,,,28/Mar/17 5:34 PM;rickr;Closing this as it's not marked 1.0.0  reopen label as v6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
system test crashed when processing 1000 records in 1000 databases in leveldb ,FAB-1312,13719,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,Nishi,Nishi,08/Dec/16 4:45 PM,07/Apr/17 6:09 PM,26/Apr/18 6:50 AM,07/Apr/17 6:09 PM,,,,,,fabric-ledger,,,,,,0,,,,,,,,"In my stress test program(multidb_multitx_test.go) for ledger.

Test1: Created 1000 databases in leveldb 
Test2: Insert 1000 records each in each db
Test3: Read 1000 inserted records from each db

Test crashed with following errors:

goroutine 3755 [select, 9 minutes]:
github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb.(*DB).compactionError(0xc4cc5d5b00)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb/db_compaction.go:90 +0x5e1
created by github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb.openDB
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb/db.go:139 +0x592
",,,,,,,,,,,,,,,,,,,,,,,,15/Dec/16 9:46 PM;Nishi;Report on Memory Usage from MemProfiling.ods;https://jira.hyperledger.org/secure/attachment/10320/Report+on+Memory+Usage+from+MemProfiling.ods,14/Dec/16 6:59 PM;Nishi;multidb_multitx_test 1000 X 1000  report 12-14;https://jira.hyperledger.org/secure/attachment/10315/multidb_multitx_test+1000+X+1000++report+12-14,15/Dec/16 9:47 PM;Nishi;multidb_multitx_test.go;https://jira.hyperledger.org/secure/attachment/10321/multidb_multitx_test.go,13/Dec/16 5:01 PM;Nishi;multidb_multitx_test.go;https://jira.hyperledger.org/secure/attachment/10310/multidb_multitx_test.go,13/Dec/16 6:02 PM;Nishi;pkg_test.go;https://jira.hyperledger.org/secure/attachment/10311/pkg_test.go,,,,0|hzzz8y:zzt,,Sprint 10 - Ledger,Sprint 12 - Ledger,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,,denyeart,Nishi,,,,,,,,,,,,,,,,,,,"13/Dec/16 3:27 PM;Nishi;After increasing timeout on test ""go test -timeout 240m"" all 1000 records were inserted successfully into each of the 1000 databases.

Upon subsequent reading of these 1000 records from each database test ended abruptly with ""signal killed"" message

from web on ""signal killed"" : ""If the user or sysadmin did not kill the program the kernel may have. The kernel would only kill a process under exceptional circumstances such as extreme resource starvation (think mem+swap exhaustion).""

On running - dmesg | grep -E -i -B100 'killed process'
[15679.524422] Out of memory: Kill process 5195 (lockbasedtxmgmt) score 942 or sacrifice child
[15679.524641] Killed process 5195 (lockbasedtxmgmt) total-vm:5570356kB, anon-rss:3815248kB, file-rss:1104kB

After increasing vagrant base memory inside virtual box from 4096MB to 8192MB at the time of vagrant startup, test ran for a little longer time and processed/read few extra records but eventually crashed without completing processing/reading all 1000 records from 1000 databases.

","13/Dec/16 4:58 PM;Nishi;updated /etc/sysctl.conf to include 
vm.overcommit_memory=1
vm.overcommit_ratio=50

Resulting in out of memory errors. Looks like VM has to be fine tuned with right set of parameters to be able to use and swap memory efficiently

Processed so far 20 databases
Processing/Reading record 0 in db db_336:
fatal error: runtime: out of memory

runtime stack:
runtime.throw(0x989bbb, 0x16)
        /opt/go/src/runtime/panic.go:566 +0x95
runtime.sysMap(0xc595290000, 0xf6d0000, 0x0, 0xc3e458)
        /opt/go/src/runtime/mem_linux.go:219 +0x1d0
runtime.(*mheap).sysAlloc(0xc239a0, 0xf6d0000, 0x0)
        /opt/go/src/runtime/malloc.go:407 +0x37a
runtime.(*mheap).grow(0xc239a0, 0x7b63, 0x0)
        /opt/go/src/runtime/mheap.go:726 +0x62
runtime.(*mheap).allocSpanLocked(0xc239a0, 0x7b63, 0x8000)
        /opt/go/src/runtime/mheap.go:630 +0x4f2
runtime.(*mheap).alloc_m(0xc239a0, 0x7b63, 0x100000000, 0x7fc6bba59288)
        /opt/go/src/runtime/mheap.go:515 +0xe0
runtime.(*mheap).alloc.func1()
        /opt/go/src/runtime/mheap.go:579 +0x4b
runtime.systemstack(0x7fc6bdceee18)
        /opt/go/src/runtime/asm_amd64.s:314 +0xab
runtime.(*mheap).alloc(0xc239a0, 0x7b63, 0x100000000, 0x4235ae)
        /opt/go/src/runtime/mheap.go:580 +0x73
runtime.largeAlloc(0xf6c6000, 0x7fc6bdceee00, 0x454d6a)
        /opt/go/src/runtime/malloc.go:774 +0x93
runtime.mallocgc.func1()
        /opt/go/src/runtime/malloc.go:669 +0x3e
runtime.systemstack(0xc42001b500)
        /opt/go/src/runtime/asm_amd64.s:298 +0x79
runtime.mstart()
        /opt/go/src/runtime/proc.go:1079

goroutine 5094 [running]:
runtime.systemstack_switch()
        /opt/go/src/runtime/asm_amd64.s:252 fp=0xc517711b70 sp=0xc517711b68
runtime.mallocgc(0xf6c6000, 0x0, 0x0, 0x1)
        /opt/go/src/runtime/malloc.go:670 +0x903 fp=0xc517711c10 sp=0xc517711b70
runtime.growslice(0x8baa20, 0xc588d20000, 0xc5690e8, 0xc56a000, 0xc56b8b4, 0x27b8, 0x3000, 0xc540fa3200)
        /opt/go/src/runtime/slice.go:126 +0x24e fp=0xc517711ca0 sp=0xc517711c10
testing.(*common).log(0xc42007a180, 0xc540fa3200, 0x27b8)
        /opt/go/src/testing/testing.go:460 +0x15a fp=0xc517711d10 sp=0xc517711ca0
testing.(*common).Logf(0xc42007a180, 0x98febc, 0x20, 0xc540e9fbc0, 0x3, 0x3)
        /opt/go/src/testing/testing.go:473 +0x75 fp=0xc517711d58 sp=0xc517711d10
github.com/hyperledger/fabric/core/ledger/testutil.AssertEquals(0xbfc180, 0xc42007a180, 0x8b2a20, 0xc540ecf4e0, 0x8b2a20, 0xc540ecf500)
        /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/testutil/test_util.go:136 +0x128 fp=0xc517711dc8 sp=0xc517711d58
github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/lockbasedtxmgmt.TestDBTxGet(0xc42007a180)
        /opt/gopath/src/github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/lockbasedtxmgmt/multidb_multitx_test.go:128 +0x4dd fp=0xc517711f78 sp=0xc517711dc8
testing.tRunner(0xc42007a180, 0x9c7680)
        /opt/go/src/testing/testing.go:610 +0x81 fp=0xc517711fa0 sp=0xc517711f78
runtime.goexit()
        /opt/go/src/runtime/asm_amd64.s:2086 +0x1 fp=0xc517711fa8 sp=0xc517711fa0
created by testing.(*T).Run
        /opt/go/src/testing/testing.go:646 +0x2ec

goroutine 1 [chan receive]:
testing.(*T).Run(0xc420236e40, 0x982b6d, 0xb, 0x9c7680, 0xc42014bd01)
        /opt/go/src/testing/testing.go:647 +0x316
testing.RunTests.func1(0xc420236e40)
        /opt/go/src/testing/testing.go:793 +0x6d
testing.tRunner(0xc420236e40, 0xc42014ae30)
        /opt/go/src/testing/testing.go:610 +0x81
testing.RunTests(0x9c8310, 0xc16880, 0xe, 0xe, 0xc42023aad0)
        /opt/go/src/testing/testing.go:799 +0x2f5
testing.(*M).Run(0xc42014aef8, 0xc42014bef8)
        /opt/go/src/testing/testing.go:743 +0x85
main.main()
        github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/lockbasedtxmgmt/_test/_testmain.go:80 +0xc6

goroutine 17 [syscall, 84 minutes, locked to thread]:
runtime.goexit()
        /opt/go/src/runtime/asm_amd64.s:2086 +0x1

goroutine 899 [select, 84 minutes]:
github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb.(*DB).tCompaction(0xc4499a6180)
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb/db_compaction.go:804 +0x83c
created by github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb.openDB
        /opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/syndtr/goleveldb/leveldb/db.go:146 +0x73a","14/Dec/16 6:54 PM;Nishi;Reran test after modifying util/db.go (line: 79) as
""dbOpts := &opt.Options{OpenFilesCacheCapacity: -1, BlockCacheCapacity: 2 * 1024 * 1024}""

All writes (1000/1000) were successful. 
Reads were processed only in 61/1000 databases and then test exited with ""signal killed process"".

dmesg | grep -E -i -B100 'killed process'

resulted in 

[ 5792.005255] Out of memory: Kill process 2675 (lockbasedtxmgmt) score 950 or sacrifice child
[ 5792.005553] Killed process 2675 (lockbasedtxmgmt) total-vm:9523480kB, anon-rss:7748680kB, file-rss:944kB

same as in previous run.

","15/Dec/16 9:46 PM;Nishi;With default db options: dbOpts := &opt.Options{}
Ran go test to generate memprofile on different sample sets 1 X 1 , 2 X 2, 100 X 100, 100 X 200, 200 X 100, 200 X 200 (databses X records) using following command:
go test -c && ./commontests.test -test.memprofile=tmp.pprof
Uploaded file ""Report on Memory Usage from MemProfiling.ods"" after consolidating memory profiling on these samples.
Also uploading new multidb_multitx_test.go (updated after txmgr code refactoring)
",07/Apr/17 6:09 PM;denyeart;Recent stress tests in LevelDB did not see this issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK] Command init is not defined.,FAB-1283,13618,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,jjjjibm,jjjjibm,06/Dec/16 6:12 AM,06/Apr/17 1:51 AM,26/Apr/18 6:50 AM,06/Apr/17 1:51 AM,v1.0.0,,,,,fabric-ca,,,,,,0,,,,,,,,"This README.md here https://github.com/hyperledger/fabric-cop

and this design doc: https://docs.google.com/document/d/1TRYHcaT8yMn8MZlDtreqzkDcXx0WI50AV2JpAcvAM5w/edit  (See section 1.1.1) 

cause me to believe this is a valid and required command: cop server init ../testdata/csr_dsa.json

However, the actual result is: 

fabric-cop/bin$ ./cop server init ../testdata/csr_dsa.json
Command init is not defined.
Usage:
Available commands:
        start
Top-level flags:
  -allow_verification_with_non_compliant_keys
        Allow a SignatureVerifier to use keys which are technically non-compliant with RFC6962.
vagrant@hyperledger-devenv:v0.2.1-f09b5da:/opt/gopath/src/github.com/hyperledger/fabric-cop/bin$


",windows -> virtualbox -> vagrant -> ubuntu,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00kcx:,,,,,,,,jjjjibm,smithbk,,,,,,,,,,,,,,,,,,,06/Apr/17 1:51 AM;smithbk;No longer an issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK] README.md errors: copy docker-compose.yml file in home directory (/home/vagrant) and copy the following content into the file,FAB-1254,13588,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,jjjjibm,jjjjibm,02/Dec/16 9:37 PM,08/Mar/17 4:49 AM,26/Apr/18 6:50 AM,08/Mar/17 4:49 AM,,,,,,fabric-sdk-node,,,,,,0,,,,,,,,"README.md at this url: https://github.com/hyperledger/fabric-sdk-node

Has these instructions which aren't clear: 
run vagrant up to launch the vagrant VM
Once inside vagrant, cd $GOPATH/src/github.com/hyperledger/fabric
run make images to build the docker images
copy docker-compose.yml file in home directory (/home/vagrant) and copy the following content into the file

 
1.Need to add  'vagrant ssh' between the 'run vagrant up' instruction and the 'Once inside vagrant' instruction.   
2.This instruction is unclear: 
docker-compose.yml file in home directory (/home/vagrant) and copy the following content into the file

I discussed this instruction with JIm.  I suggest  breaking this into two steps:
a.Create a file in /home/vagrant called docker-compose.yml.
c.Copy the contents of the file here: <link to docker-compose.yml> into /home/vagrant/docker-compose.yml

",Applies to all environments.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00k7d:,,,,,,,,jjjjibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Can't send Tx larger than 1000000 bytes to Kafka,FAB-1253,13587,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,sanchezl,sanchezl,sanchezl,02/Dec/16 8:38 PM,31/May/17 1:58 PM,26/Apr/18 6:50 AM,07/Dec/16 2:13 PM,,,,,,fabric-orderer,,,,,,0,consensus,,,,,,,"Even after configuring the Kafka server to accept messages larger than 1,000,000 bytes, default configuration provided by the sarama kafka library rejects any attempts to send kafka messages larger than 1,000,000 bytes.

Since deploy transactions are typically, >1MB in size, this limitation basically makes it difficult to use the Kafka orderer in an end-to-end scenario.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00k75:,,,,,,,,sanchezl,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK] npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.0.15,FAB-1248,13582,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,jjjjibm,jjjjibm,01/Dec/16 11:02 PM,08/Feb/17 3:09 PM,26/Apr/18 6:50 AM,08/Feb/17 3:09 PM,,,,,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"npm WARN optional Skipping failed optional dependency /chokidar/fsevents:
npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.0.15

The second warning is alarming.  I'm running Windows->virtualbox->vagrant->Ubuntu 

Since I'm using Ubuntu, we shouldn't be seeing these warnings. 


How to recreate:
1.vagrant up 
2.vagrant ssh 
3.cd $GOPATH/src/github.com/hyperledger
4.git clone http://gerrit.hyperledger.org/r/fabric-sdk-node
5.cd fabric-sdk-node 
6.npm install ",Windows ->Virtualbox->vagrant->Ubuntu ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00k61:,,,,,,,,jimthematrix,jjjjibm,,,,,,,,,,,,,,,,,,,08/Feb/17 3:09 PM;jimthematrix;[~jjjjibm] unless this causes a problem...,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
behave feature:37 fails,FAB-1184,13517,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,ChristopherFerris,ChristopherFerris,22/Nov/16 5:41 PM,13/Apr/17 11:24 PM,26/Apr/18 6:50 AM,13/Apr/17 11:24 PM,v0.6,,,WON'T FIX,,fabric-membersrvc,,,,,,0,MembershipServices,quality,,,,,,"behave tests fail consistently

@endorser
Feature: Endorser # features/endorser.feature:10
  As a application developer
  I want to get endorsements and submit transactions and receive events
  @FAB-184
  Scenario Outline: Basic deploy endorsement for chaincode through GRPC to multiple endorsers -- @1.1 Orderer Options                                                       # features/endorser.feature:37
    Given we compose ""docker-compose-next-4.yml""                                                                                                                            # steps/peer_basic_impl.py:68 5.702s
    And I wait ""1"" seconds                                                                                                                                                  # steps/peer_basic_impl.py:120 1.002s
    And I register with CA supplying username ""binhn"" and secret ""7avZQLwcUe9q"" on peers                                                                                    # steps/peer_basic_impl.py:658 0.030s
      | vp0 |
      Traceback (most recent call last):
        File ""/usr/local/lib/python2.7/dist-packages/behave/model.py"", line 1456, in run
          match.run(runner.context)
        File ""/usr/local/lib/python2.7/dist-packages/behave/model.py"", line 1903, in run
          self.func(context, *args, **kwargs)
        File ""/hyperledger/bddtests/steps/peer_basic_impl.py"", line 677, in step_impl
          resp = requests.post(request_url, headers={'Content-type': 'application/json'}, data=json.dumps(secretMsg), verify=False)
        File ""/usr/local/lib/python2.7/dist-packages/requests/api.py"", line 94, in post
          return request('post', url, data=data, json=json, **kwargs)
        File ""/usr/local/lib/python2.7/dist-packages/requests/api.py"", line 49, in request
          return session.request(method=method, url=url, **kwargs)
        File ""/usr/local/lib/python2.7/dist-packages/requests/sessions.py"", line 443, in request
          prep = self.prepare_request(req)
        File ""/usr/local/lib/python2.7/dist-packages/requests/sessions.py"", line 374, in prepare_request
          hooks=merge_hooks(request.hooks, self.hooks),
        File ""/usr/local/lib/python2.7/dist-packages/requests/models.py"", line 304, in prepare
          self.prepare_url(url, params)
        File ""/usr/local/lib/python2.7/dist-packages/requests/models.py"", line 361, in prepare_url
          raise InvalidURL(""Invalid URL %r: No host supplied"" % url)
      InvalidURL: Invalid URL u'http://:7050/registrar': No host supplied
      
      Captured stdout:
      17:35:35 POSTing path = http://:7050/registrar",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00eat:,,,,,,,,ChristopherFerris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Vagrant tries to expose port 5984 (CouchDB) which might conflict with local env,FAB-1173,13506,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,ChristopherFerris,ChristopherFerris,ChristopherFerris,21/Nov/16 7:12 PM,06/Dec/16 1:46 PM,26/Apr/18 6:50 AM,28/Nov/16 2:08 PM,,,,,,fabric-ledger,,,,,,0,build-system,Ledger,,,,,,"Vagrant tries to expose port 5984 (CouchDB) which might conflict with local environment should it already have CouchDB installed.

Should bind to another port (eg bind 5984 to 15984)",,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,,,,,,,,,0|i00dzq:m6v6,,Sprint 6 - Ledger,,,,,,bobbiejc,ChristopherFerris,,,,,,,,,,,,,,,master,,,true,22/Nov/16 6:15 PM;ChristopherFerris;https://gerrit.hyperledger.org/r/#/c/2717/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Query timeout crash a chaincode [v0.6],FAB-1163,13496,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,muralisr,stylix,stylix,21/Nov/16 1:50 AM,12/May/17 4:45 PM,26/Apr/18 6:50 AM,10/May/17 1:16 PM,v0.6,,,v1.0.0-alpha2,,fabric-peer,,,,,,2,alpha2,chaincode,help-wanted,,,,,"*Issue*
With some heavy process, e.g. query with a very time consuming function,
I found that when the query time is over 30 seconds, the chaincode will got crashed

*Chaincode *log
------------------------------------------------------------------------------
09:01:43.342 [shim] DEBU : [eecae41e]Sending RANGE_QUERY_STATE
09:01:46.983 [shim] DEBU : [eecae41e]Received message RESPONSE from shim
09:01:46.983 [shim] DEBU : [eecae41e]Handling ChaincodeMessage of type: RESPONSE(state:ready)
09:01:46.983 [shim] DEBU : [eecae41e]before send
09:01:46.983 [shim] DEBU : [eecae41e]after send
09:01:46.983 [shim] DEBU : [eecae41e]Received RESPONSE, communicated (state:ready)
09:01:46.983 [shim] DEBU : [eecae41e]Received RESPONSE. Successfully got range
Removed: 368
09:01:46.984 [shim] DEBU : [eecae41e]Sending RANGE_QUERY_STATE
2016/11/18 09:01:47 transport: http2Client.notifyError got notified that the client transport was broken EOF.
09:01:47.027 [shim] ERRO : Received error from server: rpc error: code = 13 desc = transport is closing, ending chaincode stream
Error starting AML chaincode: rpc error: code = 13 desc = transport is closing
------------------------------------------------------------------------------



However, on the *validator peer,* it’s still there, but shown some segmentation fault.
------------------------------------------------------------------------------
NFO 0a5 Successfully queried chaincode: []
08:59:53.631 [rest] ProcessChaincode -> INFO 0a6 REST successfully query chaincode: {""jsonrpc"":""2.0"",""result"":{""status"":""OK"",""message"":""[]""},""id"":0}
09:01:13.693 [rest] ProcessChaincode -> INFO 0a7 REST processing chaincode request...
09:01:13.693 [rest] processChaincodeInvokeOrQuery -> INFO 0a8 REST query chaincode...
09:01:13.693 [devops] invokeOrQuery -> INFO 0a9 Transaction ID: eecae41e-05fc-4175-aedb-0a2aa96db4ac
09:01:43.694 [rest] processChaincodeInvokeOrQuery -> ERRO 0aa Error when querying chaincode: Error:Failed to execute transaction or query(Timeout expired while executing transaction)
09:01:43.694 [rest] ProcessChaincode -> INFO 0ab REST successfully query chaincode: {""jsonrpc"":""2.0"",""error"":{""code"":-32003,""message"":""Query failure"",""data"":""Error when querying chaincode: Error:Failed to execute transaction or query(Timeout expired while executing transaction)""},""id"":0}
panic: runtime error: invalid memory address or nil pointer dereference
        panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x30 pc=0x6f21be]

goroutine 1481284 [running]:
panic(0xb82c00, 0xc4200160b0)
        /usr/local/go/src/runtime/panic.go:500 +0x1a1
github.com/hyperledger/fabric/core/chaincode.(*Handler).handleRangeQueryState.func1.1(0xc420268b80, 0xc428d7d040, 0xc4202e2e48)
        /go/src/github.com/hyperledger/fabric/core/chaincode/handler.go:689 +0x4e
panic(0xb82c00, 0xc4200160b0)
        /usr/local/go/src/runtime/panic.go:458 +0x243
github.com/hyperledger/fabric/core/chaincode.(*Handler).putRangeQueryIterator(0xc420268b80, 0x0, 0xc4257eb830, 0x24, 0x11da2a0, 0xc42015a1c0)
        /go/src/github.com/hyperledger/fabric/core/chaincode/handler.go:149 +0x8f
github.com/hyperledger/fabric/core/chaincode.(*Handler).handleRangeQueryState.func1(0xc420268b80, 0xc428d7d040)
        /go/src/github.com/hyperledger/fabric/core/chaincode/handler.go:727 +0x2de
created by github.com/hyperledger/fabric/core/chaincode.(*Handler).handleRangeQueryState
        /go/src/github.com/hyperledger/fabric/core/chaincode/handler.go:774 +0x49
------------------------------------------------------------------------------



And here is what the *other validator peers* keep talking about
------------------------------------------------------------------------------
09:13:12.002 [peer] ensureConnected -> WARN 171 Touch service indicates dropped connections, attempting to reconnect...
2016/11/18 09:13:13 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 11.44.0.7:7051: getsockopt: connection refused""; Reconnecting to {""11.44.0.7:7051"" <nil>}
2016/11/18 09:13:14 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 11.44.0.7:7051: getsockopt: connection refused""; Reconnecting to {""11.44.0.7:7051"" <nil>}
09:13:15.003 [peer] chatWithPeer -> ERRO 172 Error creating connection to peer address 11.44.0.7:7051: grpc: timed out when dialing
2016/11/18 09:13:15 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 11.44.0.7:7051: getsockopt: connection refused""; Reconnecting to {""11.44.0.7:7051"" <nil>}
------------------------------------------------------------------------------


*To reproduce it*
Run a query more than 30 secs on v0.6 branch",,,,,,,,,,,,,,FAB-3040,,,,,FAB-2788,,,,,08/May/17 6:43 PM;muralisr;read_ledger.go;https://jira.hyperledger.org/secure/attachment/10803/read_ledger.go,,,,,,,,0|i00jox:,,,,,,,,aelmanaa,ChristopherFerris,denyeart,jojocheung,muralisr,shibo.lin,stylix,,,,,,,,,,master,,,true,"10/Apr/17 11:32 AM;ChristopherFerris;this needs to be validated against current master (v1.0-alpha) and if relevant, tagged with v1.0.0. If not, mark WON'T FIX and close (DONE). [~Clayton Sims]","11/Apr/17 3:36 AM;jojocheung;With recent master branch of fabric up till commit 
{code}
commit cacb292921553900ea808344599b9914632bf1d3
Author: Gregory Haskins <gregory.haskins@gmail.com>
Date:   Tue Apr 4 09:21:17 2017 -0400

    [FAB-2865] Set the chaincode file mode bits
    
    We should force the mode bits, rather than accepting what the
    filesystem just happened to present.
    
    Fixes FAB-2865
    
    Change-Id: I02618026927607cc78fd5545e05880bf01bea5af
    Signed-off-by: Gregory Haskins <gregory.haskins@gmail.com>
{code}
I'm still getting a similar issue
{code}
===================== Querying on PEER0 on channel 'MarblesTradingAlliance'... ===================== 
CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peer/peer0/localMspConfig/cacerts/peerOrg0.pem
CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peer/peer0/localMspConfig/keystore/peer0Signer.pem
CORE_PEER_LOCALMSPID=Org0MSP
CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peer/peer0/localMspConfig/signcerts/peer0Signer.pem
CORE_PEER_ADDRESSAUTODETECT=true
CORE_PEER_TLS_ENABLED=true
CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peer/peer0/localMspConfig
CORE_PEER_ID=cli
CORE_LOGGING_LEVEL=DEBUG
CORE_PEER_ADDRESS=peer0:7051
CORE_PEER_ENDORSER_ENABLED=true
CORE_NEXT=true
Attempting to Query PEER0 ...3 secs
Attempting to Query PEER0 ...7 secs
Attempting to Query PEER0 ...10 secs
Attempting to Query PEER0 ...13 secs
Attempting to Query PEER0 ...16 secs
Attempting to Query PEER0 ...31 secs
Attempting to Query PEER0 ...35 secs
Attempting to Query PEER0 ...38 secs
Attempting to Query PEER0 ...41 secs
Attempting to Query PEER0 ...44 secs
Attempting to Query PEER0 ...47 secs
Attempting to Query PEER0 ...50 secs
Attempting to Query PEER0 ...53 secs
Attempting to Query PEER0 ...57 secs
Attempting to Query PEER0 ...61 secs

2017-04-11 03:13:17.849 UTC [logging] InitFromViper -> DEBU 001 Setting default logging level to DEBUG for command 'chaincode'
2017-04-11 03:13:17.856 UTC [msp] GetLocalMSP -> DEBU 002 Returning existing local MSP
2017-04-11 03:13:17.856 UTC [msp] GetDefaultSigningIdentity -> DEBU 003 Obtaining default signing identity
2017-04-11 03:13:17.857 UTC [msp] Sign -> DEBU 004 Sign: plaintext: 0A9C050A66080322164D6172626C6573...0A04726561640A0873656C6674657374 
2017-04-11 03:13:17.857 UTC [msp] Sign -> DEBU 005 Sign: digest: B74C8F48331E979F8E1C390AA783686EF35EB876B720E24A680C95D309EEF6C1 
2017-04-11 03:13:17.863 UTC [msp] Sign -> DEBU 006 Sign: plaintext: 0A9C050A66080322164D6172626C6573...9D944B2F11B70B8D17343ED36FE8AAA7 
2017-04-11 03:13:17.863 UTC [msp] Sign -> DEBU 007 Sign: digest: C2458E142A38E25CACC9996C2B62CDA755CB67F318321043356D2048FF7BA95F 
Error: Error sending transaction invoke: Could not send :rpc error: code = 13 desc = transport is closing)
Usage:
  peer chaincode invoke [flags]

Global Flags:
      --cafile string              Path to file containing PEM-encoded trusted certificate(s) for the ordering endpoint
  -C, --chainID string             The chain on which this command should be executed (default ""testchainid"")
  -c, --ctor string                Constructor message for the chaincode in JSON format (default ""{}"")
  -E, --escc string                The name of the endorsement system chaincode to be used for this chaincode
  -l, --lang string                Language the chaincode is written in (default ""golang"")
      --logging-level string       Default logging level and overrides, see core.yaml for full syntax
  -n, --name string                Name of the chaincode
  -o, --orderer string             Ordering service endpoint
  -p, --path string                Path to chaincode
  -P, --policy string              The endorsement policy associated to this chaincode
      --test.coverprofile string   Done (default ""coverage.cov"")
  -t, --tid string                 Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64
      --tls                        Use TLS when communicating with the orderer endpoint
  -u, --username string            Username for chaincode operations when security is enabled
  -v, --version string             Version of the chaincode specified in install/instantiate/upgrade commands
  -V, --vscc string                The name of the verification system chaincode to be used for this chaincode

!!!!!!!!!!!!!!! Query result on PEER0 is INVALID !!!!!!!!!!!!!!!!
================== ERROR !!! FAILED to execute End-2-End Scenario ==================

{code}","11/Apr/17 9:15 PM;denyeart;The original problem description would not happen on v1.0.  But a similar problem may happen.  
[~jojocheung]Please provide replication steps and peer log at debug level.","13/Apr/17 8:02 AM;muralisr;As [~denyeart] mentions the crash should be fixed (due to a timeout anyway). Also we now expose an ""executetimeout"" parameter to control timeout on invokes and inits. Can you check this again and close if agree [~stylix] ?
","13/Apr/17 8:54 AM;stylix;It seemed the problem was escaped by exposing the CORE_CHAINCODE_EXECUTETIMEOUT parameter in https://jira.hyperledger.org/browse/FAB-2767.
However, in the case we do not know how long time for the process, or if we do not properly set the timeout enough, then it will crash again, right?

Can anyone confirm this? If the chaincode run over a defined timeout will not goes crash ending, I'm happy to close this issue.","13/Apr/17 9:42 AM;muralisr;[~stylix] I should have been clearer. Your test case was originally on 0.6 (the ""Affect Version"" field) while  the ""Fix Version"" points to 1.0.  My suggestion was to try in 1.0 and close if it does not crash there ? Also, note that the ""executetimeout"" parameter is in 1.0 mentioned in my comment refers to 1.0. ","13/Apr/17 11:05 AM;stylix;Yes, I'm talkig about 1.0 in the previous comment as I gave up on this 0.6 bug already.
Now I'm asking for comfirmation if 1.0 will not have the same issue even if it runs over timeout?

Note: Sorry, I cannot test any fabric 0.6 and 1.0. As I do not have access to the test environment  now. That why I'm asking confirmation from the other guys.","13/Apr/17 12:22 PM;ChristopherFerris;So, having a property that one can expose to set the timeout value doesn't fix the problem. It simply masks it. The problem is that the process crashes, unless I am mistaken (and if I am, then the description is incorrect). A timeout should not cause a crash, otherwise there's potential for a DoS attack.

Please verify that the process DOES NOT CRASH if the timeout expires before the query is completed.","14/Apr/17 2:36 PM;muralisr;_> Now I'm asking for comfirmation if 1.0 will not have the same issue even if it runs over timeout ?_

[~stylix] Likely it should not crash in 1.0 but cannot confirm 100% based on the docs provided. Can you share the test case and recreate steps ?

 [~ChristopherFerris] the timeout property was pointed out as an aside... just an additional means of control available in 1.0 in case it could be used to unblock while this problem is being looked at.",20/Apr/17 7:22 AM;jojocheung;The crash can be replicated in v1 by running http://fabric-rtd.readthedocs.io/en/latest/getting_started.html against https://github.com/IBM-Blockchain/marbles (i.e. replace chaincode_example02.go chaincode with marbles.v3/chaincode/src/marbles/* chaincode and try to run the chaincodeQuery test specified in github.com/hyperledger/fabric/examples/e2e_cli/scripts/script.sh).,"08/May/17 6:44 PM;muralisr;[~stylix] [~jojocheung] the chaincode wouldn't build against latest code. That could be the problem.... 

Attaching [^read_ledger.go] so marbles builds against the latest fabric. With that change, I was able to get invokes and queries to work. Can you check with this please ?",09/May/17 3:25 PM;muralisr;[~stylix] [~jojocheung] I'm going to do some more tests and will update by EOD.,09/May/17 11:27 PM;muralisr;[~stylix] [~jojocheung] Can recreate the problem... working on a fix.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer exited with error: panic: Network unable to find stable certificate for seqNo 8 (3 different values observed already),FAB-1139,13471,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,bryanhuang,bryanhuang,17/Nov/16 12:17 PM,31/May/17 1:58 PM,26/Apr/18 6:50 AM,17/Nov/16 2:01 PM,,,,v0.6,,fabric-orderer,,,,,,0,Consensus,,,,,,,"Running fabric with docker-compose-4-consensus-batch.yml and set CORE_SECURITY_PRIVACY=true

Branch: fabric/v0.6

When invoking the chaincode, 2 peer containers exit, and found following error in peer log:

11:54:36.653 [consensus/pbft] recvCheckpoint -> CRIT 2107 Network unable to find stable certificate for seqNo 8 (3 different values observed already)
panic: Network unable to find stable certificate for seqNo 8 (3 different values observed already)

goroutine 38 [running]:
panic(0xc13e20, 0xc820aa8f00)
	/opt/go/src/runtime/panic.go:464 +0x3e6
github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc820161d40, 0x103cce0, 0x5d, 0xc8209f47a0, 0x2, 0x2)
	/opt/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x11e
github.com/hyperledger/fabric/consensus/pbft.(*pbftCore).recvCheckpoint(0xc8202c0680, 0xc8209f4760, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/pbft/pbft-core.go:1185 +0xcc7
github.com/hyperledger/fabric/consensus/pbft.(*pbftCore).Checkpoint(0xc8202c0680, 0x8, 0xc820c35680, 0x86, 0xa0)
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/pbft/pbft-core.go:988 +0x57e
github.com/hyperledger/fabric/consensus/pbft.(*pbftCore).execDoneSync(0xc8202c0680)
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/pbft/pbft-core.go:997 +0x215
github.com/hyperledger/fabric/consensus/pbft.(*pbftCore).ProcessEvent(0xc8202c0680, 0xc30220, 0x15ffd38, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/pbft/pbft-core.go:386 +0x1843
github.com/hyperledger/fabric/consensus/pbft.(*obcBatch).ProcessEvent(0xc820388240, 0xc30220, 0x15ffd38, 0x0, 0x0)
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/pbft/batch.go:367 +0xbc6
github.com/hyperledger/fabric/consensus/util/events.SendEvent(0x7f81732a0078, 0xc820388240, 0xda3a60, 0xc8209f4660)
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/util/events/events.go:113 +0x45
github.com/hyperledger/fabric/consensus/util/events.(*managerImpl).Inject(0xc820390c80, 0xda3a60, 0xc8209f4660)
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/util/events/events.go:123 +0x4f
github.com/hyperledger/fabric/consensus/util/events.(*managerImpl).eventLoop(0xc820390c80)
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/util/events/events.go:132 +0xdb
created by github.com/hyperledger/fabric/consensus/util/events.(*managerImpl).Start
	/opt/gopath/src/github.com/hyperledger/fabric/consensus/util/events/events.go:100 +0x35
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00jk1:,,,,,,,,bryanhuang,fouad.aberkane,,,,,,,,,,,,,,,,,,,"17/Nov/16 2:01 PM;bryanhuang;Found the root cause is the chaincode, so closing this issue.","01/Mar/17 3:44 PM;fouad.aberkane;Hi, I am observing the same issue. What did you do to fix the issue...? Or could you pls provide more information regarding your finding...
Thx",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Query Proposal does not bring back results,FAB-1129,13461,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,ales,rickr,rickr,14/Nov/16 11:23 PM,16/Jan/17 2:30 PM,26/Apr/18 6:50 AM,16/Jan/17 2:30 PM,,,,,,fabric-baseimage,,,,,,0,,,,,,,,Murali has the details in slack   summary is pretty much it.   query comes back with 200 and success but there are no results ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzvf:,,,,,,,,ales,muralisr,rickr,,,,,,,,,,,,,,master,,,true,"15/Nov/16 9:45 AM;ales;Thanks, I'll fix it asap. But: Response2.Payload was largely ignored in the design/security discussion. It does not seem to be signed in the current infrastructure, and this aspect should be discussed. Also, the client will receive n Response2.Payload messages, one from each of its endorsers. Might they not differ in content? This seems to be possible given that no ordering has taken place yet. What does it mean if they differ? How should the field be used by the SDK given these observations?","15/Nov/16 12:37 PM;rickr;Got the patch and seems to fix the issue -- thx!
https://gerrit.hyperledger.org/r/#/c/2481/","15/Nov/16 1:05 PM;muralisr;thanks [~rickr], [~ales]
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"deploy execute ""go install"", which cannot find packages and thus fails build",FAB-1126,13458,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,kletkeman,kletkeman,14/Nov/16 9:03 PM,04/Dec/16 6:15 PM,26/Apr/18 6:50 AM,04/Dec/16 12:58 PM,,,,,,fabric-peer,,,,,,0,build,chaincode,deploy,failure,,,,"I have split our chaincode samples into an iot contract platform -- consisting of a fair amount of code to model asset classes and efficiently support state history, recent states, filters on read all, delete all and read history, and so on -- and a contract sample, which is pretty small for what it can do.

It all works swimmingly in the dev environment, and it works to perform go get of the platform and then go install of the contract.

But when I deploy to Bluemix using v0.6, it fails because the peer uses ""gi install"" instead of ""go get"", which means that only packages already on the peer can participate. This forces us to vendor everything we use, which is a bit of a barrier to development at this early stage.

Would it be possible to get the script that builds chaincode -- see step 4 in the included text below -- to call go get for now instead? The Go docs are rather ambiguous, but stackexchange seems to say that go get is go install++ in that it will not download what already exists, but will find what does not exist on the server.

NOTE: This can be a temporary stop gap until we have a chaincode build / deploy solution that avoids the vendoring hassle.

OUT - ********************
OUT - Step 1 : FROM hyperledger/fabric-baseimage
OUT -  ---> 21cb00fb27f4
OUT - Step 2 : COPY src $GOPATH/src
OUT -  ---> 3710794ab177
OUT - Step 3 : WORKDIR $GOPATH
OUT -  ---> Running in b43f98b91790
OUT -  ---> 9ac881f80192
OUT - Step 4 : RUN go install github.com/ibm-watson-iot/blockchain-samples/contracts/platform/iotcontractplatformsample && cp src/github.com/hyperledger/fabric/peer/core.yaml $GOPATH/bin && mv $GOPATH/bin/iotcontractplatformsample $GOPATH/bin/0fec010c8c2d70c764cac5796bf0c3ac74817a3237a70bf30e26c60c210dc6d8d5cbeac36b80c779158fb518f29113f4098ff391fcd8b176152ce7d734c51dd3
OUT -  ---> Running in 320b56849672
OUT - [91msrc/github.com/ibm-watson-iot/blockchain-samples/contracts/platform/iotcontractplatformsample/assetContainer.go:23:2: cannot find package ""github.com/ibm-watson-iot/blockchain-samples/contracts/platform/iotcontractplatform"" in any of:
OUT -     /opt/go/src/github.com/ibm-watson-iot/blockchain-samples/contracts/platform/iotcontractplatform (from $GOROOT)
OUT -     /opt/gopath/src/github.com/ibm-watson-iot/blockchain-samples/contracts/platform/iotcontractplatform (from $GOPATH)
OUT - [0m
OUT - ********************",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00jhl:,,,,,,,,kletkeman,mastersingh24,,,,,,,,,,,,,,,,,,,"04/Dec/16 12:49 PM;mastersingh24;This is not a ""bug"" as things are working as designed and actually vendoring is the preferred (and really only) method in Golang for ensuring that you always package proper versions of your dependencies.

That being said, in V1, there are a couple of changes in both the Fabric and the SDK(s):

1) Fabric now produces two base images for chaincode:  [https://hub.docker.com/r/hyperledger/fabric-ccenv/] (for Golang) and [https://hub.docker.com/r/hyperledger/fabric-javaenv/] (for Java) which include all of the Fabric dependencies so for example will no longer need to vendor the Fabric src when deploying Go-based chaincode

2) The SDK(s) now provide an option to specify your own Dockerfile (which is wnat ends up in the tarball that actually is the payload of a deploy transaction).  For example, here's the property in the the Node SDK for V1:  https://github.com/hyperledger/fabric-sdk-node/blob/master/hfc/config/default.json#L11

I will say that you really do not want to be doing {{go get}} for production deployment unless you have used something like gopkg.in for versioning and have locked down dependencies across versions.  For development, this is likely OK.  But in V1, peers can now change after the fact and you would not want them to end up with different versions of chaincode due to {{go get}} always pulling from the master branch",04/Dec/16 12:56 PM;mastersingh24;I'm going to mark this done as we are not going to do anything about this for v0.6 but I believe that V1 addresses these concerns,"04/Dec/16 6:15 PM;kletkeman;Thanks for the explanation. I did convert our contracts to vendoring and it does work perfectly fine. One issue with vendoring is that builds are much slower when the vendor folder is present, so this is mildly annoying during development. But all in all, I am very pleased with how this all works out when deploying to external fabrics such as Bluemix. Looking forward to working with the v1 deployment mechanism.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
If initial logon on fails subsequent logon fails even with correct pw,FAB-1093,13424,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,Clayton Sims,Clayton Sims,11/Nov/16 8:41 PM,13/Apr/17 11:18 PM,26/Apr/18 6:50 AM,13/Apr/17 11:18 PM,v0.6,,,WON'T FIX,,fabric-membersrvc,,,,,,0,membershipservices,,,,,,,"I followed the external instructions posted on IBM docker hub v0.6.   I start up a single node network.   If I log on using this CLI with incorrect pw ->  'peer network login test_user0 -p xxxxxxxxx' it fails as expected.  If I then log on with correct pw 'peer network login test_user0 -p MS9qrN8hFjlE' it fails which is not expected

Note this is on v0.6.  If this is specific to v0.6 then priority would be very low otherwise it would be high. 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00ja1:,,,,,,,,Clayton Sims,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kafka orderer: Illegal genesis message,FAB-1092,13423,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,kchristidis,bcbrock,bcbrock,11/Nov/16 7:18 PM,31/May/17 1:58 PM,26/Apr/18 6:50 AM,20/Nov/16 3:53 PM,,,,,,fabric-orderer,,,,,,0,Consensus,,,,,,,"After the proto updates a couple of days ago, the genesis message created by the Kafka orderer is no longer valid. This was probably not noticed because I assume none of the current tests look inside the blobs that are being delivered. The genesis message needs to be an Envelope.

",,,,,,,,,,,,,,,,,,,,,,,,11/Nov/16 7:19 PM;bcbrock;kafka_patch.txt;https://jira.hyperledger.org/secure/attachment/10225/kafka_patch.txt,,,,,,,,0|hzzzwp:e,,Sprint 5 - Consensus,,,,,,bcbrock,kchristidis,,,,,,,,,,,,,,,master,,,true,"19/Nov/16 4:07 PM;kchristidis;Thanks as always for pointing these out.

In review here: https://gerrit.hyperledger.org/r/#/c/2633/

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK] headless-tests.js Possible EventEmitter memory leak detected ,FAB-1032,13363,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,jjjjibm,jjjjibm,08/Nov/16 4:08 PM,05/Dec/16 6:00 AM,26/Apr/18 6:50 AM,05/Dec/16 6:00 AM,,,,,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"I cloned fabric-sdk-node, master, v1.0, today and ran the headless tests as directed in README.md.   The headless tests ran successfully, but I noticed warnings generated by test case 57. 

Here is some context for you:
<lines of output omitted> 
ok 56 Member constructor get set tests 1: new Member cfg getAffiliation was successful
ok 57 Member constructor get set tests 2: getChain new Member cfg getName was successful
#

 ** Member sendDeploymentProposal() tests
error: [Member.js]: Invalid input parameter to ""sendDeploymentProposal"": must have ""target"" object
error: [Member.js]: Invalid input parameter to ""sendDeploymentProposal"": must have ""chaincodePath""
*(node:27391) Warning: Possible EventEmitter memory leak detected. 11 **unhandledRejection listeners added. Use emitter.setMaxListeners() to increase limit
*ok 58 Successfully caught missing peer error
ok 59 Successfully caught missing chaincodePath error
#
.....

How to recreate:
1.git clone http://gerrit.hyperledger.org/r/fabric-sdk-node
2.npm install 
3.gulp doc
4.npm test 

Inspect the output for warning messages.",vLaunch vm running Ubuntu 'Trusty'.  Clone fabric 1.0 and fabric-node-sdk from master. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00iy1:,,Sprint 6 - nodeSDK,,,,,,jjjjibm,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
end-to-end.js failed when running in a clean environment,FAB-952,13283,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,jimthematrix,jimthematrix,03/Nov/16 8:43 PM,04/Nov/16 7:26 PM,26/Apr/18 6:50 AM,04/Nov/16 7:26 PM,,,,,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"reported by Eric Vaughn in slack. this is caused by end-to-end.js using a different key value store but running after ca-tests.js that has already enrolled the same user, causing the code to try to re-enroll the same user with the CA, which gets rejected.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00ijd:,,Sprint 4 - nodeSDK,,,,,,jimthematrix,,,,,,,,,,,,,,,,master,,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to redeploy chaincode when eventhub is registered,FAB-949,13280,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,pmullaney,Ratnakar,Ratnakar,03/Nov/16 4:51 PM,03/Jan/17 6:19 PM,26/Apr/18 6:50 AM,03/Jan/17 6:19 PM,,,,,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"Once the chaincode is deployed successfully, deploying the same chaincode again hungs the program from further execution. This is seen when evenHub is registered.

{code:javascript}
chain.eventHubConnect();
{code}

In general redeploy will use the existing transactionID and proceeds further however when eventHub is used client program hungs",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00iip:,,,,,,,,pmullaney,Ratnakar,,,,,,,,,,,,,,,,,,,10/Nov/16 5:02 PM;pmullaney;Can I get the exact test being used to reproduce this? Thanks.,"10/Nov/16 5:29 PM;Ratnakar;
I have written a sample program here
https://github.com/ratnakar-asara/NodeSdkSample/tree/master/events

If I rerun the program again I could see it is getting stuck after deploy.

So to avoid the problem I had to add a hack in the code , which checks if the chaincode is already deployed it will check for chaincodeID and proceeds further with Invoke and Query.

To reproduce the problem run the program with below sequence of commands:

Step1:
*node node event-sample.js*

Step2: 
Once chaincode deployment is successful, delete the chaincodeID file generated

*rm chaincodeID*

Step3 : 
Retry deploying the chaincode again
*node node event-sample.js*
It hangs at this step and wouldn't proceed further.","10/Nov/16 5:46 PM;pmullaney;This is actually expected behavior. Without eventhub enables, the sdk times out on deploys and invokes and assumes that they are successful. In this case of a redeploy, its actually a failure. Currently you cannot reploy onto an active chaincode.

There is a secondary issue being reported of a hang in the test script. This is likely due to not calling ""chain.eventHubDisconnect();"". This is limitation having to do with grpc streams that must be closed prior to exit.
","10/Nov/16 5:56 PM;Ratnakar;I don't see it comes in to *error* event , I don't see this log printed when last time I executed the program
https://github.com/ratnakar-asara/NodeSdkSample/blob/master/events/event-sample.js#L132",10/Nov/16 6:09 PM;pmullaney;You need to add either a process.exit(1) or an explicit call to Disconnect the stream. The log may be unreliable at this point.,23/Nov/16 3:27 PM;pmullaney;I'm inclined to close this as functions as designed unless there is further comment or issues.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Nested configs are not processed correctly by the orderer when passed as env. vars,FAB-918,13249,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jyellick,bcbrock,bcbrock,01/Nov/16 12:00 AM,31/May/17 1:59 PM,26/Apr/18 6:50 AM,01/Nov/16 4:38 PM,,,,,,fabric-orderer,,,,,,0,Consensus,,,,,,,"This issue only affects configurations nested more than 2 levels deep, it seems. Briefly, you can observe that the orderer does not correctly processes certain nested configs. when entered as env. vars from the command line:

{code:java}
 ORDERER_KAFKA_RETRY_PERIOD=10s ./orderer
...
h3. [18:45:22.261]      config.go:196: [INFO ] Validated configuration to: &{General:{OrdererType:solo LedgerType:ram BatchTimeout:10s BatchSize:10 QueueSize:10 MaxWindowSize:1000 ListenAddress:127.0.0.1 ListenPort:5151 GenesisMethod:static Profile:{Enabled:false Address:0.0.0.0:6060}} RAMLedger:{HistorySize:1000} FileLedger:{Location: Prefix:hyperledger-fabric-rawledger} Kafka:{Brokers:[127.0.0.1:9092] Topic:test PartitionID:0 Retry:{Period:3s Stop:1m0s} Version:{version:[0 9 0 1]}}}
{code}

Note that the Kafka/retry/period period has not changed from the default 3 seconds as reported by the debug output. The fix I will submit shortly fixes this:
{code}
 ORDERER_KAFKA_RETRY_PERIOD=10s ./orderer
...
[18:44:30.830]      config.go:196: [INFO ] Validated configuration to: &{General:{OrdererType:solo LedgerType:ram BatchTimeout:10s BatchSize:10 QueueSize:10 MaxWindowSize:1000 ListenAddress:127.0.0.1 ListenPort:5151 GenesisMethod:static Profile:{Enabled:false Address:0.0.0.0:6060}} RAMLedger:{HistorySize:1000} FileLedger:{Location: Prefix:hyperledger-fabric-rawledger} Kafka:{Brokers:[127.0.0.1:9092] Topic:test PartitionID:0 Retry:{Period:10s Stop:1m0s} Version:{version:[0 9 0 1]}}}
{code}
Now Kafka/retry/period is correctly overridden to 10 seconds.

When can we eliminate the use of Viper - please?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00ic1:,,,,,,,,bcbrock,jyellick,kchristidis,,,,,,,,,,,,,,master,,,true,"01/Nov/16 1:17 PM;kchristidis;Thanks for reporting this and looking into it.

(Do you have a better alternative for dealing with YAML files? The most relevant discussion I can think of is this one https://jira.hyperledger.org/browse/FAB-50, but it discusses alternatives to the YAML format.)","01/Nov/16 1:21 PM;jyellick;I really think the key is that we need to upgrade our version of Viper.  When I submitted the config, I noted an issue on Github about the improperly handled nested config for env overrides.  I know this has been fixed since, and I suspect there are other bug fixes lurking out there which have yet to bite us.","01/Nov/16 2:59 PM;bcbrock;Jason, if you'd like to redo the config handling based on a new version of Viper it's OK with me, I can drop my proposed fix.

Some of the original arguments about alternatives to Viper are documented here: https://github.com/hyperledger-archives/fabric/issues/1309
As I mentioned there I think it would be helpful to have 2 YAML files: One read-only file documenting all config. options and their defaults, and another with the user's overrides. ","01/Nov/16 3:21 PM;jyellick;It would probably be worth writing up a help wanted JIRA item for the config work, but I don't have the cycles to implement this at the moment.

I +2-ed your changeset because it fixes a current bug, is simple, and I have no real time-table for when the viper upgrade might happen, so I would not suggest you abandon your changeset.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to run the unit tests written for Fabrick-sdk-java,FAB-907,13238,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,malik-altaf,Ratnakar,Ratnakar,29/Oct/16 5:10 PM,06/Dec/16 4:31 PM,26/Apr/18 6:50 AM,04/Nov/16 3:43 PM,,,,,,fabric-quality,,,,,,0,quality,,,,,,,"From the documentation provided here https://github.com/hyperledger/fabric-sdk-java. 

After the environment setup, Unit tests are executed with either of the below commands, However it fails with error ""*UNKNOWN: Identity or token does not match*""


{code:java}
* mvn install
* mvn test
{code}


Gist of error logs:


{code:java}
INFO: [ManagedChannelImpl@ba8d91c] Created with target localhost:7051
org.hyperledger.fabric.sdk.exception.EnrollmentException: Failed to enroll user
	at org.hyperledger.fabric.sdk.MemberServicesImpl.enroll(MemberServicesImpl.java:218)
	at org.hyperledger.fabric.sdk.Member.enroll(Member.java:215)
	at org.hyperledger.fabric.sdk.Chain.enroll(Chain.java:296)
	at org.hyperledger.fabric.sdk.PeerClientTest.init(PeerClientTest.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
Caused by: io.grpc.StatusRuntimeException: UNKNOWN: Identity or token does not match.
	at io.grpc.Status.asRuntimeException(Status.java:536)
	at io.grpc.stub.ClientCalls.getUnchecked(ClientCalls.java:208)
	at io.grpc.stub.ClientCalls.blockingUnaryCall(ClientCalls.java:141)
	at org.hyperledger.protos.ECAPGrpc$ECAPBlockingStub.createCertificatePair(ECAPGrpc.java:321)
	at org.hyperledger.fabric.sdk.MemberServicesImpl.enroll(MemberServicesImpl.java:190)
	... 32 more

{code}


*NOTE: It is not clear on what to be added in '+_test.properties_+', Is it not a pre-req to have something in this file ?*

It would be great to have a sample program on how to use fabric-sdk-java.
",,,,,,,,,,,,,,,,,,,,,,,,29/Oct/16 5:10 PM;Ratnakar;java-sdk-unit-test-failures.txt;https://jira.hyperledger.org/secure/attachment/10209/java-sdk-unit-test-failures.txt,03/Nov/16 2:07 PM;Ratnakar;non-vagrant-logs.txt;https://jira.hyperledger.org/secure/attachment/10211/non-vagrant-logs.txt,04/Nov/16 1:43 AM;Ratnakar;query-failure.txt;https://jira.hyperledger.org/secure/attachment/10215/query-failure.txt,03/Nov/16 2:07 PM;Ratnakar;vagrant-logs.txt;https://jira.hyperledger.org/secure/attachment/10212/vagrant-logs.txt,,,,,0|i00i9l:,,,,,,,,malik-altaf,Ratnakar,,,,,,,,,,,,,,,master,,,true,"03/Nov/16 5:16 AM;malik-altaf;This error occures when the user is already enrolled,  the membership service does not allow re-enrolling a user. To get the test cases work, you need to do two things:
(1) Delete the membership database - typically this involves deleting the /var/hyperledger/production folder (unless you modified the core.yaml file to use a different database location)

(2) Delete the local KeyValStore - testcases use ${user.home}/test.properties.

After performing the above two steps, {{mvn test}} should succeed unless the chaincode referred in test cases is not at default location.

* What should be in test.properties
===========================
Nothing. The test.properties file is created by the SDK test cases to store the membership details including the keys and certs. This will be automatically created and updated when you enroll or register a member. Please note that whenever you clear the membership services database, delete this file as well otherwise SDK will think that the user is registered while the

This information has been updated in README file for future references ","03/Nov/16 2:16 PM;Ratnakar;[~malik-altaf] Thanks for clarifying on the *test.properties* file.

However I couldn't get rid of the issue still. First of all the test.properties has never been created I myself has created one (I deleted again)

The steps I followed are as below :

{panel}
rm -rf /var/hyperledger/*
{panel}

Started Membersrvc
{panel}
membersrvc
{panel}

started peer
{panel}
CORE_LOGGING_LEVEL=debug peer node start
{panel}

and ran the tests (both from inside and outside vagrant environments)
{panel}
cd /opt/gopath/src/github.com/hyperledger/fabric-sdk-java
mvn install
{panel}


Did I missed any steps here ? Do i need to setup any thing else ?


Tried  on vagrant and non-vagrant environments, root cause seems to be the same.
attached the log files for both the environments  [^non-vagrant-logs.txt]  [^vagrant-logs.txt] 


Here are the gist of logs for your reference in both the environments

{code:java}
Nov 03, 2016 1:50:29 PM org.hyperledger.fabric.sdk.FileKeyValStore loadProperties
WARNING: Could not find the file ""/home/vagrant/test.properties""
Nov 03, 2016 1:50:29 PM org.hyperledger.fabric.sdk.FileKeyValStore loadProperties
WARNING: Could not find the file ""/home/vagrant/test.properties""
org.hyperledger.fabric.sdk.exception.EnrollmentException: Failed to enroll user
	at org.hyperledger.fabric.sdk.MemberServicesImpl.enroll(MemberServicesImpl.java:218)
	at org.hyperledger.fabric.sdk.Member.enroll(Member.java:224)
	at org.hyperledger.fabric.sdk.Chain.enroll(Chain.java:299)
	at org.hyperledger.fabric.sdk.PeerClientTest.setupChain(PeerClientTest.java:29)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: io.grpc.StatusRuntimeException: UNKNOWN: Identity or token does not match.
	at io.grpc.Status.asRuntimeException(Status.java:536)
	at io.grpc.stub.ClientCalls.getUnchecked(ClientCalls.java:208)
	at io.grpc.stub.ClientCalls.blockingUnaryCall(ClientCalls.java:141)
	at org.hyperledger.protos.ECAPGrpc$ECAPBlockingStub.createCertificatePair(ECAPGrpc.java:321)
	at org.hyperledger.fabric.sdk.MemberServicesImpl.enroll(MemberServicesImpl.java:190)
	... 24 more
Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 1.365 sec <<< FAILURE!
{code}","04/Nov/16 12:37 AM;malik-altaf;The logs contain two different errors.
The non-vagrant logs show an error about IllegalKeySize, which indicates that your version of JDK does not include unlimited strength crypto capabilities. I have included the instructions in README.md, please see if your issue gets fixed.

The vagrant logs show that it is looking for file ""/home/vagrant/test.properties"", so please make sure you delete this file as well alongside /var/hyperledger/production. This file will be inside the vagrant VM in case you are looking for this in your HOST OS.","04/Nov/16 1:43 AM;Ratnakar;After fixning the security issue as per the readme file from here https://gerrit.hyperledger.org/r/#/c/2209/3/README.md

I still see Query failure randomly 

Results :
{code:java}
Tests in error: 
  testQuery(org.hyperledger.fabric.sdk.PeerClientTest): Error:Failed to launch chaincode spec(Could not get deployment transaction for 0113161a2d28ce1a7b5de317c6ab440e560fad7a634ba09d40add68facee7017 - LedgerError - ResourceNotFound: ledger: resource not found)
{code}

{code}
$ docker ps
CONTAINER ID        IMAGE                                                                       COMMAND                  CREATED             STATUS              PORTS               NAMES
23d6b1e6fdec        dev-jdoe-0113161a2d28ce1a7b5de317c6ab440e560fad7a634ba09d40add68facee7017   ""/opt/gopath/bin/0113""   13 seconds ago      Up 12 seconds                           dev-jdoe-0113161a2d28ce1a7b5de317c6ab440e560fad7a634ba09d40add68facee7017
{code}
I made sure the container is getting created 
I also see the container logs which indicates  Invoke is successful.

{code}
vagrant@hyperledger-devenv:v0.0.11-02a123c:/opt/gopath/src/github.com/hyperledger/fabric-sdk-java$ docker logs -f 23d6b1e6fdec44505601cc87320c0412e969527b48e6035f1091a7b6ec87d567 
01:36:21.008 [shim] DEBU : Peer address: 0.0.0.0:7051
01:36:21.008 [shim] DEBU : os.Args returns: [/opt/gopath/bin/0113161a2d28ce1a7b5de317c6ab440e560fad7a634ba09d40add68facee7017 -peer.address=0.0.0.0:7051]
01:36:21.008 [shim] DEBU : Registering.. sending REGISTER
01:36:21.012 [shim] DEBU : []Received message REGISTERED from shim
01:36:21.012 [shim] DEBU : []Handling ChaincodeMessage of type: REGISTERED(state:created)
01:36:21.013 [shim] DEBU : Received REGISTERED, ready for invocations
01:36:21.023 [shim] DEBU : [4f8321e1]Received message INIT from shim
01:36:21.024 [shim] DEBU : [4f8321e1]Handling ChaincodeMessage of type: INIT(state:established)
01:36:21.024 [shim] DEBU : Entered state init
01:36:21.024 [shim] DEBU : [4f8321e1]Received INIT, initializing chaincode
Aval = 700, Bval = 20000
01:36:21.024 [shim] DEBU : [4f8321e1]Inside putstate, isTransaction = true
01:36:21.024 [shim] DEBU : [4f8321e1]Sending PUT_STATE
01:36:21.026 [shim] DEBU : [4f8321e1]Received message RESPONSE from shim
...
01:36:22.097 [shim] DEBU : [0113161a]after send
01:36:22.097 [shim] DEBU : [0113161a]Received RESPONSE, communicated (state:transaction)
01:36:22.097 [shim] DEBU : [0113161a]GetState received payload RESPONSE
Aval = 500, Bval = 20200
01:36:22.097 [shim] DEBU : [0113161a]Inside putstate, isTransaction = true
....
01:36:22.101 [shim] DEBU : [0113161a]Move state message COMPLETED
01:36:22.101 [shim] DEBU : [0113161a]Handling ChaincodeMessage of type: COMPLETED(state:transaction)
01:36:22.101 [shim] DEBU : [0113161a]send state message COMPLETED

{code}

complete logs attached  [^query-failure.txt] 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kafka orderer hangs if blocks are cut by a timeout,FAB-899,13230,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,kchristidis,bcbrock,bcbrock,28/Oct/16 3:42 PM,31/May/17 1:58 PM,26/Apr/18 6:50 AM,31/Oct/16 7:40 PM,,,,,,fabric-orderer,,,,,,0,Consensus,,,,,,,"The way the timer reset is handled at lines 104-106 of orderer/kafka/broadcast.go assumes that if timer.Stop() returns false, then the timer channel contains an event. This is not true - and the Go documentation should be clearer on the semantics of timer.Stop(). The simple fix is to only remove events from the channel if there are known to be any in the channel. Otherwise, the goroutine hangs waiting for the now-stopped timer to produce an event.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,FAB-32,0|i00i81:,,Sprint 4 - Consensus,,,,,,bcbrock,kchristidis,,,,,,,,,,,,,,,master,,,true,"28/Oct/16 11:54 PM;bcbrock;On further analysis, the real bug here is that the timer is not being reset on the ""case <-timer.C"" branch. This is required because Go timers are one-shot timers, and without this, once the timer has cut a block, the timeout will be inactive until the message-limit cuts a block, which may never occur if the client(s) stop sending messages. With timer.Reset() on this branch, the current code on the ""case msg := <-b.batchChan"" should work as-is.","29/Oct/16 5:04 PM;kchristidis;Thank you both for reporting and debugging this.

I pushed a fix along with the relevant tests to make sure it doesn't happen again: https://gerrit.hyperledger.org/r/#/c/2097/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK] headless-tests.js error: not ok 10 .end() called twice,FAB-891,13222,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,cdaughtr,jjjjibm,jjjjibm,27/Oct/16 7:23 PM,02/Nov/16 2:11 PM,26/Apr/18 6:50 AM,02/Nov/16 2:11 PM,,,,,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"My kvsTest directory happened to be owned by root.  I tried running headless-tests.js as ibmadmin.   One of the tests failed like this: 

not ok 9 FileKeyValueStore read and write test: Failed to set value, reason: Error: EACCES: permission denied, open '/home/ibmadmin/kvsTemp/keyValFileStoreName'
  ---
    operator: fail

which exposes this test case error: 

not ok 10 .end() called twice
  ---
    operator: fail



Here is some context for you:

# Chain constructor test
info: [Chain.js]: Constructed Chain instance: name - testChain, securityEnabled: true, TCert download batch size: 200, network mode: true
ok 5 Chain constructor test: getName successful
error: [Chain.js]: No key value store was found on this Chain instance: name - ""testChain""
ok 6 Successfully rejected a ""getMember()"" call on a chain without keyvalue store
error: [Chain.js]: No member services was found on this Chain instance: name - ""testChain""
ok 7 Successfully rejected a ""getMember()"" call on a chain without member services
ok 8 FileKeyValueStore read and write test: Successfully created new directory for testValueStore
not ok 9 FileKeyValueStore read and write test: Failed to set value, reason: Error: EACCES: permission denied, open '/home/ibmadmin/kvsTemp/keyValFileStoreName'
  ---
    operator: fail
  ...
not ok 10 .end() called twice
  ---
    operator: fail
  ...
ok 11 FileKeyValueStore error check tests: Delete store & setValue test. Failed to set value: Error: ENOENT: no such file or directory, open 'tmp/keyValStore4/keyValFileStoreName'
",vlaunch VM running Ubuntu 14 ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00i6h:,,,,,,,,cdaughtr,jjjjibm,,,,,,,,,,,,,,,master,,,true,01/Nov/16 6:36 PM;cdaughtr;http://gerrit.hyperledger.org/r/2151 is merged,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
fabric make all fails: orderer/solo/broadcast.go:152: github.com/hyperledger/fabric/orderer/atomicbroadcast.BroadcastResponse composite literal uses unkeyed fields,FAB-879,13210,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,jjjjibm,jjjjibm,26/Oct/16 3:52 PM,05/Nov/16 11:20 AM,26/Apr/18 6:50 AM,05/Nov/16 11:20 AM,,,,,,fabric-baseimage,,,,,,0,build-system,Usability,,,,,,"I cloned fabric from master today: git clone http://gerrit.hyperledger.org/r/fabric-sdk-node

I ran 'make all'.  Here are the error messages:
Running go vet
go vet ./core/...
go vet ./events/...
go vet ./examples/...
go vet ./membersrvc/...
go vet ./peer/...
go vet ./protos/...
go vet ./orderer/...
orderer/solo/broadcast.go:145: github.com/hyperledger/fabric/orderer/atomicbroadcast.BroadcastResponse composite literal uses unkeyed fields
orderer/solo/broadcast.go:147: github.com/hyperledger/fabric/orderer/atomicbroadcast.BroadcastResponse composite literal uses unkeyed fields
orderer/solo/broadcast.go:152: github.com/hyperledger/fabric/orderer/atomicbroadcast.BroadcastResponse composite literal uses unkeyed fields
exit status 1
make: *** [linter] Error 1
ibmadmin@jcwNodeSDK:~/work/src/github.com/hyperledger/fabric$



",vlaunch VM running Ubuntu.  No vagrant is involved.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00i49:,,,,,,,,jjjjibm,mastersingh24,,,,,,,,,,,,,,,,,,,05/Nov/16 11:19 AM;mastersingh24;duplicate of FAB-920,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
sendDeploymentProposal() in Member.js does not return the promised data properly,FAB-869,13200,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,jimthematrix,jimthematrix,26/Oct/16 5:03 AM,26/Oct/16 3:39 PM,26/Apr/18 6:50 AM,26/Oct/16 3:39 PM,,,,,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"The result is that the promise does not get resolved properly with the response data from the endorser, and the ""then()"" chaining doesn't get triggered properly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00i29:,,Sprint 4 - nodeSDK,,,,,,jimthematrix,,,,,,,,,,,,,,,,,,,,26/Oct/16 5:04 AM;jimthematrix;fix included in https://gerrit.hyperledger.org/r/#/c/2017/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
GetRows crashes if  rows are more than 100,FAB-860,13165,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,muralisr,wayoon,wayoon,25/Oct/16 2:35 PM,15/Mar/17 7:42 AM,26/Apr/18 6:50 AM,05/Nov/16 11:20 AM,v0.6,,,v0.6,,fabric-baseimage,,,,,,0,,,,,,,,"GetRows crashes with the following error when returning rows are more than 100.

{code}
14:13:22.585 [shim] DEBU : [5247bec6]Received message ERROR from shim
14:13:22.586 [shim] DEBU : [5247bec6]Handling ChaincodeMessage of type: ERROR(state:ready)
Error starting Simple chaincode: Error handling message: [5247bec6-0d75-4741-b7e1-a470cf1baf43]XXXXXXXXXXXXXXXXXX Chaincode handler FSM cannot handle message (ERROR) with payload size (30) while in state: ready
{code}

Here's my test code and output
{code}
func (t *SimpleChaincode) queryTest(stub shim.ChaincodeStubInterface, args []string) ([]byte, error) {
	mylogger.Debugf(""---queryTest %v"", args)

	userid := ""sally1111""
	dataitem := ""monitored_data""

	var keys = []shim.Column{}
	keyUser := shim.Column{Value: &shim.Column_String_{String_: userid}}
	keyData := shim.Column{Value: &shim.Column_String_{String_: dataitem}}

	keys = append(keys, keyUser)
	keys = append(keys, keyData)

	rowChannel, err := stub.GetRows(""UserData"", keys)
	if err != nil {
		return nil, fmt.Errorf(""getRows operation failed. %s"", err)
	}

	var rows []shim.Row
	for {
		select {
		case row, ok := <-rowChannel:
			if !ok {
				rowChannel = nil
			} else {
				rows = append(rows, row)
				mylogger.Debugf(""count = %v"", len(rows))
			}
		}
		if rowChannel == nil {
			break
		}
	}
	
	mylogger.Debugf(""total count = %v"", len(rows))

	return nil, nil
}
{code}

output:
{code}
14:13:22.550 [consetnt_mgm] DEBU : ---queryTest [WebAppAdmin DJY27pEnl16d consentmanager]
14:13:22.550 [shim] DEBU : [5247bec6]Sending GET_STATE
14:13:22.552 [shim] DEBU : [5247bec6]Received message RESPONSE from shim
14:13:22.552 [shim] DEBU : [5247bec6]Handling ChaincodeMessage of type: RESPONSE(state:ready)
14:13:22.552 [shim] DEBU : [5247bec6]before send
14:13:22.552 [shim] DEBU : [5247bec6]GetState received payload RESPONSE
14:13:22.552 [shim] DEBU : [5247bec6]after send
14:13:22.552 [shim] DEBU : [5247bec6]Received RESPONSE, communicated (state:ready)
14:13:22.552 [shim] DEBU : keyString= 8UserData9sally111114monitored_data
14:13:22.553 [shim] DEBU : [5247bec6]Sending RANGE_QUERY_STATE
14:13:22.580 [shim] DEBU : [5247bec6]Received message RESPONSE from shim
14:13:22.580 [shim] DEBU : [5247bec6]Handling ChaincodeMessage of type: RESPONSE(state:ready)
14:13:22.580 [shim] DEBU : [5247bec6]before send
14:13:22.580 [shim] DEBU : [5247bec6]after send
14:13:22.580 [shim] DEBU : [5247bec6]Received RESPONSE, communicated (state:ready)
14:13:22.580 [shim] DEBU : [5247bec6]Received RESPONSE. Successfully got range
14:13:22.581 [shim] DEBU : [5247bec6]Sending RANGE_QUERY_STATE_CLOSE
14:13:22.582 [shim] DEBU : [5247bec6]Received message RESPONSE from shim
14:13:22.582 [shim] DEBU : [5247bec6]Handling ChaincodeMessage of type: RESPONSE(state:ready)
14:13:22.582 [shim] DEBU : [5247bec6]before send
14:13:22.582 [shim] DEBU : [5247bec6]after send
14:13:22.582 [shim] DEBU : [5247bec6]Received RESPONSE, communicated (state:ready)
14:13:22.582 [shim] DEBU : [5247bec6]Received RESPONSE. Successfully got range
14:13:22.582 [consetnt_mgm] DEBU : count = 1
14:13:22.582 [consetnt_mgm] DEBU : count = 2
14:13:22.582 [consetnt_mgm] DEBU : count = 3
14:13:22.582 [consetnt_mgm] DEBU : count = 4
14:13:22.582 [consetnt_mgm] DEBU : count = 5
14:13:22.582 [consetnt_mgm] DEBU : count = 6
14:13:22.582 [consetnt_mgm] DEBU : count = 7
14:13:22.582 [consetnt_mgm] DEBU : count = 8
14:13:22.582 [consetnt_mgm] DEBU : count = 9
14:13:22.582 [consetnt_mgm] DEBU : count = 10
14:13:22.582 [consetnt_mgm] DEBU : count = 11
14:13:22.582 [consetnt_mgm] DEBU : count = 12
14:13:22.582 [consetnt_mgm] DEBU : count = 13
14:13:22.582 [consetnt_mgm] DEBU : count = 14
14:13:22.582 [consetnt_mgm] DEBU : count = 15
14:13:22.582 [consetnt_mgm] DEBU : count = 16
14:13:22.582 [consetnt_mgm] DEBU : count = 17
14:13:22.582 [consetnt_mgm] DEBU : count = 18
14:13:22.582 [consetnt_mgm] DEBU : count = 19
14:13:22.582 [consetnt_mgm] DEBU : count = 20
14:13:22.582 [consetnt_mgm] DEBU : count = 21
14:13:22.582 [consetnt_mgm] DEBU : count = 22
14:13:22.582 [consetnt_mgm] DEBU : count = 23
14:13:22.583 [consetnt_mgm] DEBU : count = 24
14:13:22.583 [consetnt_mgm] DEBU : count = 25
14:13:22.583 [consetnt_mgm] DEBU : count = 26
14:13:22.583 [consetnt_mgm] DEBU : count = 27
14:13:22.583 [consetnt_mgm] DEBU : count = 28
14:13:22.583 [consetnt_mgm] DEBU : count = 29
14:13:22.583 [consetnt_mgm] DEBU : count = 30
14:13:22.583 [consetnt_mgm] DEBU : count = 31
14:13:22.583 [consetnt_mgm] DEBU : count = 32
14:13:22.583 [consetnt_mgm] DEBU : count = 33
14:13:22.583 [consetnt_mgm] DEBU : count = 34
14:13:22.583 [consetnt_mgm] DEBU : count = 35
14:13:22.583 [consetnt_mgm] DEBU : count = 36
14:13:22.583 [consetnt_mgm] DEBU : count = 37
14:13:22.583 [consetnt_mgm] DEBU : count = 38
14:13:22.583 [consetnt_mgm] DEBU : count = 39
14:13:22.583 [consetnt_mgm] DEBU : count = 40
14:13:22.583 [consetnt_mgm] DEBU : count = 41
14:13:22.583 [consetnt_mgm] DEBU : count = 42
14:13:22.583 [consetnt_mgm] DEBU : count = 43
14:13:22.583 [consetnt_mgm] DEBU : count = 44
14:13:22.583 [consetnt_mgm] DEBU : count = 45
14:13:22.583 [consetnt_mgm] DEBU : count = 46
14:13:22.583 [consetnt_mgm] DEBU : count = 47
14:13:22.583 [consetnt_mgm] DEBU : count = 48
14:13:22.583 [consetnt_mgm] DEBU : count = 49
14:13:22.583 [consetnt_mgm] DEBU : count = 50
14:13:22.583 [consetnt_mgm] DEBU : count = 51
14:13:22.583 [consetnt_mgm] DEBU : count = 52
14:13:22.583 [consetnt_mgm] DEBU : count = 53
14:13:22.583 [consetnt_mgm] DEBU : count = 54
14:13:22.583 [consetnt_mgm] DEBU : count = 55
14:13:22.583 [consetnt_mgm] DEBU : count = 56
14:13:22.583 [consetnt_mgm] DEBU : count = 57
14:13:22.583 [consetnt_mgm] DEBU : count = 58
14:13:22.583 [consetnt_mgm] DEBU : count = 59
14:13:22.583 [consetnt_mgm] DEBU : count = 60
14:13:22.583 [consetnt_mgm] DEBU : count = 61
14:13:22.583 [consetnt_mgm] DEBU : count = 62
14:13:22.583 [consetnt_mgm] DEBU : count = 63
14:13:22.583 [consetnt_mgm] DEBU : count = 64
14:13:22.583 [consetnt_mgm] DEBU : count = 65
14:13:22.583 [consetnt_mgm] DEBU : count = 66
14:13:22.583 [consetnt_mgm] DEBU : count = 67
14:13:22.583 [consetnt_mgm] DEBU : count = 68
14:13:22.583 [consetnt_mgm] DEBU : count = 69
14:13:22.583 [consetnt_mgm] DEBU : count = 70
14:13:22.583 [consetnt_mgm] DEBU : count = 71
14:13:22.583 [consetnt_mgm] DEBU : count = 72
14:13:22.583 [consetnt_mgm] DEBU : count = 73
14:13:22.583 [consetnt_mgm] DEBU : count = 74
14:13:22.583 [consetnt_mgm] DEBU : count = 75
14:13:22.583 [consetnt_mgm] DEBU : count = 76
14:13:22.583 [consetnt_mgm] DEBU : count = 77
14:13:22.583 [consetnt_mgm] DEBU : count = 78
14:13:22.583 [consetnt_mgm] DEBU : count = 79
14:13:22.583 [consetnt_mgm] DEBU : count = 80
14:13:22.583 [consetnt_mgm] DEBU : count = 81
14:13:22.583 [consetnt_mgm] DEBU : count = 82
14:13:22.583 [consetnt_mgm] DEBU : count = 83
14:13:22.583 [consetnt_mgm] DEBU : count = 84
14:13:22.584 [consetnt_mgm] DEBU : count = 85
14:13:22.584 [consetnt_mgm] DEBU : count = 86
14:13:22.584 [consetnt_mgm] DEBU : count = 87
14:13:22.584 [consetnt_mgm] DEBU : count = 88
14:13:22.584 [consetnt_mgm] DEBU : count = 89
14:13:22.584 [consetnt_mgm] DEBU : count = 90
14:13:22.584 [consetnt_mgm] DEBU : count = 91
14:13:22.584 [consetnt_mgm] DEBU : count = 92
14:13:22.584 [consetnt_mgm] DEBU : count = 93
14:13:22.584 [consetnt_mgm] DEBU : count = 94
14:13:22.584 [consetnt_mgm] DEBU : count = 95
14:13:22.584 [consetnt_mgm] DEBU : count = 96
14:13:22.584 [consetnt_mgm] DEBU : count = 97
14:13:22.584 [consetnt_mgm] DEBU : count = 98
14:13:22.584 [consetnt_mgm] DEBU : count = 99
14:13:22.584 [shim] DEBU : [5247bec6]Sending RANGE_QUERY_STATE_NEXT
14:13:22.584 [consetnt_mgm] DEBU : count = 100
14:13:22.585 [shim] DEBU : [5247bec6]Received message ERROR from shim
14:13:22.586 [shim] DEBU : [5247bec6]Handling ChaincodeMessage of type: ERROR(state:ready)
Error starting Simple chaincode: Error handling message: [5247bec6-0d75-4741-b7e1-a470cf1baf43]XXXXXXXXXXXXXXXXXX Chaincode handler FSM cannot handle message (ERROR) with payload size (30) while in state: ready
vagrant@hyperledger-devenv:v0.0.11-ed90562:/opt/gopath/src/consentmanager$
{code}",,,,,,,,,,,,,,,,,,,FAB-2788,,,,,,,,,,,,,0|i00i0p:,,,,,,,,jorgedr,mastersingh24,muralisr,sachikoy,wayoon,,,,,,,,,,,,v0.6,,,true,25/Oct/16 3:00 PM;mastersingh24;what version of the fabric are you using?,25/Oct/16 3:13 PM;wayoon;it's version 0.6,"26/Oct/16 2:57 AM;muralisr;Working on this.

There are two problems with GetRow.

*Problem 1*
GetRow call from chaincode spins a goroutine to access the ledger for rows and returns. Chaincode then interacts with the goroutine to get rows.

Before return the GetRow call closes the iterator. If the iterator is closed before the chaincode is done with the iterator, it results in error - which is what happens typically with large rows.

*Problem 2*
As long as the chaincode fetches all rows, things will be fine. If the chaincode returns after reading a subset of rows, the goroutine will be blocked on he channell waiting to be drained. However the returned chaincode will close the iterator causing the blocked channel to raise an exception in the chaincode shim. The simplest way to handle this is to ignore the exception.

The ETA for the fix is this Friday, 10/28.","31/Oct/16 2:18 PM;sachikoy;Hi Murali,

Sorry that I still not fully understand your proposed fix.

> However the returned chaincode will close the iterator causing the blocked channel to raise an exception in the chaincode shim.

Am I right to understand that if the returned chaincode close the iterator, then the channel is closed before reading all the rows? Would it still mean that the chaincode cannot process all the rows in a table? If my understanding is correct, it is problematic because some use cases require reading through all the rows to process them. ","31/Oct/16 3:27 PM;muralisr;Hi Sachiko,
I should have been clearer. Let me rephrase it.

*Problem 2*
As long as the chaincode fetches all rows, things will be fine. If the chaincode completes the request after reading only a subset of rows, the goroutine will be blocked on the channel waiting to be drained of the remaining rows. However, completion of the request by the chaincode will cause the iterator to be closed, leading an exception to be raised in the blocked channel. The simplest way to handle this is to ignore the exception.

So to answer the question, the chaincode does not have to do anything different or special. Both Problems mentioned above will be fixed in the fabric.

The fix is in https://gerrit.hyperledger.org/r/#/c/2103/. It will be helpful if you have some time to try it out.","31/Oct/16 3:34 PM;muralisr;Hi [~wayoon], would you have some bandwidth to try out https://gerrit.hyperledger.org/r/#/c/2103/ and add comments as well ?","04/Nov/16 6:45 PM;muralisr;Merged in 0.6 under https://gerrit.hyperledger.org/r/#/c/2103/. 

Not checked into master as master is not ready for Table yet,","10/Nov/16 8:48 PM;wayoon;Hi [~muralisr], I tested the fix, and I confirm that it's working fine now. Thanks. ","10/Nov/16 8:52 PM;muralisr;Hi [~wayoon], thanks for confirming the fix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Running behave tests Exception ImportError: No module named google.protobuf,FAB-843,13148,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,jjjjibm,jjjjibm,24/Oct/16 7:04 PM,13/Apr/17 11:15 PM,26/Apr/18 6:50 AM,13/Apr/17 11:15 PM,,,,v1.0.0,,fabric-devenv,,,,,,0,,,,,,,,"I cloned fabric 'master' today and ran 'make all'.  The make fails running the behave tests:

Running behave tests
Exception ImportError: No module named google.protobuf
Traceback (most recent call last):
  File ""/usr/local/bin/behave"", line 11, in <module>
    sys.exit(main())
  File ""/usr/local/lib/python2.7/dist-packages/behave/__main__.py"", line 109, in main
    failed = runner.run()
  File ""/usr/local/lib/python2.7/dist-packages/behave/runner.py"", line 672, in run
    return self.run_with_paths()
  File ""/usr/local/lib/python2.7/dist-packages/behave/runner.py"", line 678, in run_with_paths
    self.load_step_definitions()
  File ""/usr/local/lib/python2.7/dist-packages/behave/runner.py"", line 658, in load_step_definitions
    exec_file(os.path.join(path, name), step_module_globals)
  File ""/usr/local/lib/python2.7/dist-packages/behave/runner.py"", line 304, in exec_file
    exec(code, globals, locals)
  File ""steps/bdd_grpc_util.py"", line 20, in <module>
    import devops_pb2
  File ""/home/ibmadmin/work/src/github.com/hyperledger/fabric/bddtests/devops_pb2.py"", line 6, in <module>
    from google.protobuf import descriptor as _descriptor
ImportError: No module named google.protobuf
make: *** [behave] Error 1
ibmadmin@jcwNodeSDK:~/work/src/github.com/hyperledger/fabric$

How to recreate:
1.cd to $GOPATH/src/github.com/hyperledger
2.git clone http://gerrit.hyperledger.org/r/fabric
3.cd fabric
4.make all   OR make behave

",vlaunch VM running Ubuntu 14.04.5 LTS (GNU/Linux 3.13.0-85-generic x86_64),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00hwx:,,,,,,,,ChristopherFerris,jjjjibm,,,,,,,,,,,,,,,,,,,13/Apr/17 11:15 PM;ChristopherFerris;believe this is fixed,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
eca.cert.chain: no such file or directory,FAB-765,13070,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,yelvxiuge,yelvxiuge,20/Oct/16 1:12 AM,02/Apr/17 12:26 PM,26/Apr/18 6:50 AM,02/Apr/17 12:26 PM,v0.6,,,WON'T FIX,,fabric-membersrvc,fabric-peer,,,,,0,Documentation,,,,,,,"Edit a file named docker-compose.yml via vim,here're content below:

membersrvc:
image: hyperledger/fabric-membersrvc
ports:
- ""7054:7054""
command: membersrvc
vp0:
image: hyperledger/fabric-peer
ports:
- ""7050:7050""
- ""7051:7051""
- ""7053:7053""
environment:
- CORE_PEER_ADDRESSAUTODETECT=true
- CORE_VM_ENDPOINT=unix:///var/run/docker.sock
- CORE_LOGGING_LEVEL=DEBUG
- CORE_PEER_ID=vp0
- CORE_PEER_PKI_ECA_PADDR=membersrvc:7054
- CORE_PEER_PKI_TCA_PADDR=membersrvc:7054
- CORE_PEER_PKI_TLSCA_PADDR=membersrvc:7054
- CORE_SECURITY_ENABLED=true
- CORE_SECURITY_ENROLLID=test_vp0
- CORE_SECURITY_ENROLLSECRET=MwYpmSRjupbT
links:
- membersrvc
command: sh -c ""sleep 20; peer node start --peer-chaincodedev""

run commands:

1,docker-composer up
return a warn:
[sysccapi] RegisterSysCC -> WARN 05e Currently system chaincode does support security(noop,github.com/hyperledger/fabric/bddtests/syschaincode/noop)

2, ./peer network login jim

3, ./peer chaincode deploy -n mycc -c '{ ""Args"" : [""init"", ""a"",""100"", ""b"", ""200""]}'

Error: Error building chaincode: rpc error: code = 5 desc = open /var/hyperledger/production/crypto/client/ks/raw/eca.cert.chain: no such file or directory",,,,,,,,,,,,,,FAB-754,,,,,,,,,,,,,,,,,,0|i00hjl:,,,,,,,,yelvxiuge,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
unit test preamble creates log file in chaincode_example02 folder,FAB-760,13065,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rennman,muralisr,muralisr,19/Oct/16 9:57 PM,28/Nov/16 4:42 AM,26/Apr/18 6:50 AM,28/Nov/16 4:42 AM,,,,,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"startExampleInDevMode in fabric/sdk/node/bin/run-unit-tests.sh creates log file in chaincode_example02 folder. This will cause chaincode_example04 based tests (such as TestChaincodeInvokeChaincode) to fail.

Suggest creating log file in some neutral folder such as /tmp.

[~rennman] please do reassign if you are not the right person to fix.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00hih:,,,,,,,,jimthematrix,muralisr,,,,,,,,,,,,,,,,,,,28/Nov/16 4:42 AM;jimthematrix;rejecting this bug as it's not happening to v1.0 any longer,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Intermittent ""Failed invoking CreateCertficatePair"" in core/crypto unit tests",FAB-751,13055,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,greg.haskins,greg.haskins,18/Oct/16 8:14 PM,15/Apr/17 11:02 AM,26/Apr/18 6:50 AM,15/Apr/17 11:02 AM,v0.6,,,WON'T FIX,,fabric-crypto,,,,,,0,,,,,,,,"We are seeing intermittent CI failures such as with the following merge:

https://gerrit.hyperledger.org/r/#/c/1501/

https://jenkins.hyperledger.org/job/fabric-merge-x86_64/238/console

",,,,,,,,,,,,,,,,,,,,,,,,18/Oct/16 8:12 PM;greg.haskins;crash.txt;https://jira.hyperledger.org/secure/attachment/10141/crash.txt,,,,,,,,0|i00hg9:,,,,,,,,ChristopherFerris,elli-androulaki,greg.haskins,,,,,,,,,,,,,,,,,,"14/Apr/17 12:42 AM;ChristopherFerris;[~ellaki] this needs to be verified for v1.0 please. If no longer relevant, please mark fixVersion WON'T FIX and close it. Thanks","14/Apr/17 9:19 AM;elli-androulaki;Ok, will do.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK] npm warnings from npm install in fabric-sdk-node,FAB-748,13052,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,jjjjibm,jjjjibm,18/Oct/16 5:58 PM,02/Apr/17 12:37 PM,26/Apr/18 6:50 AM,02/Apr/17 12:37 PM,,,,WON'T FIX,,,,,,,,0,,,,,,,,"Today, I cloned fabric-sdk-node, and ran 'npm install' from the fabric-sdk-node directory.

Npm issued these warnings:

:~/work/src/github.com/hyperledger/fabric-sdk-node$ npm install
npm WARN deprecated minimatch@2.0.10: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue
npm WARN deprecated minimatch@0.2.14: Please update to minimatch 3.0.2 or higher to avoid a RegExp DoS issue
npm WARN deprecated graceful-fs@1.2.3: graceful-fs v3.0.0 and before will fail on node releases >= v7.0. Please update to graceful-fs@^4.0.0 as soon as possible. Use 'npm ls graceful-fs' to find it in the tree.
npm WARN prefer global marked@0.3.6 should be installed with -g

We should avoid using deprecated software.

How to recreate:
1.cd $GOPATH/src/github.com/hyperledger/
2.git clone http://gerrit.hyperledger.org/r/fabric-sdk-node
3.cd fabric-sdk-node
4.sudo bash (or the npm install fails)
4.npm install 
",,,,,,,,,,,,,,,,,,,FAB-1248,,,,,,,,,,,,,0|i00hfl:,,,,,,,,jjjjibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"15:10:05.134 [eventhub_producer] Chat -> ERRO 017 Error during Chat, stopping handler: stream error: code = 1 desc = ""context canceled""",FAB-710,13014,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,jjjjibm,jjjjibm,13/Oct/16 8:56 PM,28/Nov/16 4:45 AM,26/Apr/18 6:50 AM,28/Nov/16 4:44 AM,,,,,,fabric-peer,,,,,,0,node-SDK,,,,,,,"This message appears on the peer console whenever I run Ratnakar's sample application, whether the application fails or succeeds:

+15:10:05.134 [eventhub_producer] Chat -> ERRO 017 Error during Chat, stopping handler: stream error: code = 1 desc = ""context canceled""
+
I attached logs from yesterday's run.  Peer logging level = DEBUG is set.
On the client side, I captured stdout and stderr. 

If you will look in the tracing, you'll see some interesting error messages:
*18:32:36.210 [ledger] CommitTxBatch -> DEBU 37e There were some erroneous transactions. We need to send a 'TX rejected' message here.
*
Here is a link to Ratnakar's sample: https://github.com/ratnakar-asara/NodeSdkSample/tree/master/events

I am running on a vlaunch VM.  Ratnakar runs in vagrant on a laptop, but he reports seeing the message too. 




",Vlaunch VM running Ubuntu 14 (Trusty).   There's no vagrant. ,,,,,,,,,,,,,,,,,,,,,,,13/Oct/16 8:43 PM;jjjjibm;event-sample.out;https://jira.hyperledger.org/secure/attachment/10129/event-sample.out,13/Oct/16 8:43 PM;jjjjibm;event-sample.stderr.out;https://jira.hyperledger.org/secure/attachment/10128/event-sample.stderr.out,13/Oct/16 8:40 PM;jjjjibm;peer.on.vlaunch.log;https://jira.hyperledger.org/secure/attachment/10130/peer.on.vlaunch.log,,,,,,0|i00h8z:,,,,,,,,jimthematrix,jjjjibm,,,,,,,,,,,,,,,,,,,28/Nov/16 4:45 AM;jimthematrix;rejecting as it's only happening in v0.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"disconnected Peer can't recover from lost connection, then start sending view change requests",FAB-707,13011,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,frankylu,frankylu,13/Oct/16 5:30 PM,29/Jun/17 12:47 PM,26/Apr/18 6:50 AM,07/Apr/17 8:06 PM,v0.6,,,WON'T FIX,,fabric-orderer,,,,,,1,0.6,,,,,,,"v0.6 code base

way to reproduce:

set K=10

Deploy chaincode
Stop vp3
Send vp0 any number of transactions (I have tried 3 and 50+, the latter will move it past peer's high watermark)
Start vp3
(at this point, if you query, vp3 will not return updated world state)
Stop vp3
Send vp0 a few more transactions 
Start vp3
query/invoke world state a few times
(at some point the vp3 peer will notice it is behind, and then it will stop broadcasting transactions until the network progresses to H, but before that it will start thinking the primary is bad and start sending view change requests to other peers. However this view change request will never stop, since other peers will think the view is ok and will not also send view change requests)

The biggest problem is once a node experience network failures and missed a tx or 2, then it will enter un-ending loop of view change requests even after restarting the node (in most cases, since this status is persisted, but there are cases the status don't get persisted so restart would work --- likely another bug).


*VP3 Log:*

2016-10-13T06:40:13.355382628Z 14:40:13.354 [rest] ProcessChaincode -> INFO 02c REST processing chaincode request...
2016-10-13T06:40:13.356770119Z 14:40:13.356 [rest] processChaincodeInvokeOrQuery -> INFO 02d REST query chaincode...
2016-10-13T06:40:13.358234467Z 14:40:13.357 [rest] processChaincodeInvokeOrQuery -> INFO 02e Local user 'WebAppAdmin' is already logged in. Retrieving login token.
2016-10-13T06:40:13.359274523Z 14:40:13.359 [devops] invokeOrQuery -> INFO 02f Transaction ID: a89051f6-ca8c-4209-893c-dfc7feea132d
2016-10-13T06:40:13.359763704Z 14:40:13.359 [crypto] InitClient -> INFO 030 Initializing client [WebAppAdmin]...
2016-10-13T06:40:13.531133086Z 14:40:13.530 [crypto] InitClient -> INFO 031 Initializing client [WebAppAdmin]...done!
2016-10-13T06:40:19.039016928Z 14:40:19.038 [crypto] closeClientInternal -> INFO 032 Closing client [WebAppAdmin]...
2016-10-13T06:40:19.101091198Z 14:40:19.100 [rest] processChaincodeInvokeOrQuery -> INFO 033 Successfully queried chaincode: 10000000
2016-10-13T06:40:19.102617413Z 14:40:19.101 [rest] ProcessChaincode -> INFO 034 REST successfully query chaincode: {""jsonrpc"":""2.0"",""result"":{""status"":""OK"",""message"":""10000000""},""id"":5}
2016-10-13T06:40:38.283587179Z 14:40:38.279 [rest] ProcessChaincode -> INFO 035 REST processing chaincode request...
2016-10-13T06:40:38.283647199Z 14:40:38.279 [rest] processChaincodeInvokeOrQuery -> INFO 036 REST invoke chaincode...
2016-10-13T06:40:38.283660184Z 14:40:38.279 [rest] processChaincodeInvokeOrQuery -> INFO 037 Local user 'WebAppAdmin' is already logged in. Retrieving login token.
2016-10-13T06:40:38.283669160Z 14:40:38.280 [devops] invokeOrQuery -> INFO 038 Transaction ID: 3deb8664-2ea1-4e07-895c-b838f61c9daf
2016-10-13T06:40:38.283676533Z 14:40:38.280 [crypto] InitClient -> INFO 039 Initializing client [WebAppAdmin]...
2016-10-13T06:40:38.449260250Z 14:40:38.449 [crypto] InitClient -> INFO 03a Initializing client [WebAppAdmin]...done!
2016-10-13T06:40:38.450076225Z 14:40:38.449 [crypto] closeClientInternal -> INFO 03b Closing client [WebAppAdmin]...
2016-10-13T06:40:38.514754101Z 14:40:38.514 [rest] processChaincodeInvokeOrQuery -> INFO 03c Successfully submitted invoke transaction with txid (3deb8664-2ea1-4e07-895c-b838f61c9daf)
2016-10-13T06:40:38.515365413Z 14:40:38.514 [rest] ProcessChaincode -> INFO 03d REST successfully submitted invoke transaction: {""jsonrpc"":""2.0"",""result"":{""status"":""OK"",""message"":""3deb8664-2ea1-4e07-895c-b838f61c9daf""},""id"":1}
2016-10-13T06:40:48.461565468Z 14:40:48.460 [consensus/pbft] ProcessEvent -> INFO 03e Replica 3 view change timer expired, sending view change: Batch outstanding requests
2016-10-13T06:40:48.463446964Z 14:40:48.463 [consensus/pbft] sendViewChange -> INFO 03f Replica 3 sending view-change, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:48.465177019Z 14:40:48.464 [consensus/pbft] recvViewChange -> INFO 040 Replica 3 received view-change from replica 3, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:50.465953533Z 14:40:50.465 [consensus/pbft] sendViewChange -> INFO 041 Replica 3 sending view-change, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:50.467386532Z 14:40:50.466 [consensus/pbft] recvViewChange -> INFO 042 Replica 3 received view-change from replica 3, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:50.468601501Z 14:40:50.468 [consensus/pbft] recvViewChange -> WARN 043 Replica 3 already has a view change message for view 1 from replica 3
2016-10-13T06:40:52.469097537Z 14:40:52.468 [consensus/pbft] sendViewChange -> INFO 044 Replica 3 sending view-change, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:52.472291299Z 14:40:52.471 [consensus/pbft] recvViewChange -> INFO 045 Replica 3 received view-change from replica 3, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:52.475499721Z 14:40:52.475 [consensus/pbft] recvViewChange -> WARN 046 Replica 3 already has a view change message for view 1 from replica 3
2016-10-13T06:40:54.473388350Z 14:40:54.472 [consensus/pbft] sendViewChange -> INFO 047 Replica 3 sending view-change, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:54.475203585Z 14:40:54.474 [consensus/pbft] recvViewChange -> INFO 048 Replica 3 received view-change from replica 3, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:54.477673544Z 14:40:54.477 [consensus/pbft] recvViewChange -> WARN 049 Replica 3 already has a view change message for view 1 from replica 3
2016-10-13T06:40:56.479023414Z 14:40:56.477 [consensus/pbft] sendViewChange -> INFO 04a Replica 3 sending view-change, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:56.479108449Z 14:40:56.477 [consensus/pbft] recvViewChange -> INFO 04b Replica 3 received view-change from replica 3, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:56.479122208Z 14:40:56.478 [consensus/pbft] recvViewChange -> WARN 04c Replica 3 already has a view change message for view 1 from replica 3
2016-10-13T06:40:58.479865467Z 14:40:58.479 [consensus/pbft] sendViewChange -> INFO 04d Replica 3 sending view-change, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:58.480836852Z 14:40:58.480 [consensus/pbft] recvViewChange -> INFO 04e Replica 3 received view-change from replica 3, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:58.482556746Z 14:40:58.482 [consensus/pbft] recvViewChange -> WARN 04f Replica 3 already has a view change message for view 1 from replica 3
2016-10-13T06:41:00.484739101Z 14:41:00.483 [consensus/pbft] sendViewChange -> INFO 050 Replica 3 sending view-change, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:41:00.486727018Z 14:41:00.486 [consensus/pbft] recvViewChange -> INFO 051 Replica 3 received view-change from replica 3, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:41:00.488710055Z 14:41:00.488 [consensus/pbft] recvViewChange -> WARN 052 Replica 3 already has a view change message for view 1 from replica 3
2016-10-13T06:41:02.488723335Z 14:41:02.488 [consensus/pbft] sendViewChange -> INFO 053 Replica 3 sending view-change, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:41:02.489028215Z 14:41:02.488 [consensus/pbft] recvViewChange -> INFO 054 Replica 3 received view-change from replica 3, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:41:02.490053942Z 14:41:02.489 [consensus/pbft] recvViewChange -> WARN 055 Replica 3 already has a view change message for view 1 from replica 3


*VP0 Log*


2016-10-13T06:21:51.229828941Z 14:21:51.226 [rest] ProcessChaincode -> INFO 0a2 REST processing chaincode request...
2016-10-13T06:21:51.229992941Z 14:21:51.226 [rest] processChaincodeInvokeOrQuery -> INFO 0a3 REST query chaincode...
2016-10-13T06:21:51.230271921Z 14:21:51.227 [rest] processChaincodeInvokeOrQuery -> INFO 0a4 Local user 'lukas' is already logged in. Retrieving login token.
2016-10-13T06:21:51.230306918Z 14:21:51.228 [devops] invokeOrQuery -> INFO 0a5 Transaction ID: 4063c51e-f7ba-474b-879f-5b8b244c54f4
2016-10-13T06:21:51.230332021Z 14:21:51.228 [crypto] InitClient -> INFO 0a6 Initializing client [lukas]...
2016-10-13T06:21:51.584828001Z 14:21:51.584 [crypto] InitClient -> INFO 0a7 Initializing client [lukas]...done!
2016-10-13T06:21:51.592824019Z 14:21:51.592 [crypto] closeClientInternal -> INFO 0a8 Closing client [lukas]...
2016-10-13T06:21:51.747391011Z 14:21:51.746 [rest] processChaincodeInvokeOrQuery -> INFO 0a9 Successfully queried chaincode: 9999995
2016-10-13T06:21:51.747541748Z 14:21:51.747 [rest] ProcessChaincode -> INFO 0aa REST successfully query chaincode: {""jsonrpc"":""2.0"",""result"":{""status"":""OK"",""message"":""9999995""},""id"":5}
2016-10-13T06:37:21.468108942Z 14:37:21.467 [peer] handleChat -> ERRO 0ab Error during Chat, stopping handler: stream error: code = 1 desc = ""context canceled""
2016-10-13T06:37:21.471550664Z 14:37:21.469 [peer] handleChat -> ERRO 0ac Error during Chat, stopping handler: stream error: code = 1 desc = ""context canceled""
2016-10-13T06:37:21.872733785Z 14:37:21.842 [peer] ensureConnected -> WARN 0ad Touch service indicates dropped connections, attempting to reconnect...
2016-10-13T06:37:22.845546290Z 2016/10/13 14:37:22 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 10.20.26.81:7051: getsockopt: connection refused""; Reconnecting to {""10.20.26.81:7051"" <nil>}
2016-10-13T06:37:24.462145845Z 2016/10/13 14:37:24 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 10.20.26.81:7051: getsockopt: connection refused""; Reconnecting to {""10.20.26.81:7051"" <nil>}
2016-10-13T06:37:24.847708157Z 14:37:24.844 [peer] chatWithPeer -> ERRO 0ae Error creating connection to peer address 10.20.26.81:7051: grpc: timed out when dialing
2016-10-13T06:37:24.847823427Z 2016/10/13 14:37:24 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 10.20.26.81:7051: getsockopt: connection refused""; Reconnecting to {""10.20.26.81:7051"" <nil>}
2016-10-13T06:37:27.842679082Z 14:37:27.841 [peer] ensureConnected -> WARN 0af Touch service indicates dropped connections, attempting to reconnect...
2016-10-13T06:37:28.843671599Z 2016/10/13 14:37:28 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 10.20.26.81:7051: getsockopt: connection refused""; Reconnecting to {""10.20.26.81:7051"" <nil>}
2016-10-13T06:37:30.225842377Z 2016/10/13 14:37:30 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 10.20.26.81:7051: getsockopt: connection refused""; Reconnecting to {""10.20.26.81:7051"" <nil>}
2016-10-13T06:37:30.843118277Z 2016/10/13 14:37:30 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 10.20.26.81:7051: getsockopt: connection refused""; Reconnecting to {""10.20.26.81:7051"" <nil>}
2016-10-13T06:37:30.843239157Z 14:37:30.842 [peer] chatWithPeer -> ERRO 0b0 Error creating connection to peer address 10.20.26.81:7051: grpc: timed out when dialing
2016-10-13T06:37:31.279993217Z 14:37:31.279 [rest] ProcessChaincode -> INFO 0b1 REST processing chaincode request...
2016-10-13T06:37:31.281168752Z 14:37:31.280 [rest] processChaincodeInvokeOrQuery -> INFO 0b2 REST invoke chaincode...
2016-10-13T06:37:31.282310162Z 14:37:31.281 [rest] processChaincodeInvokeOrQuery -> INFO 0b3 Local user 'lukas' is already logged in. Retrieving login token.
2016-10-13T06:37:31.282758145Z 14:37:31.282 [devops] invokeOrQuery -> INFO 0b4 Transaction ID: 70dbcb7e-3143-4e4b-aefc-634ced7cb29f
2016-10-13T06:37:31.283296499Z 14:37:31.282 [crypto] InitClient -> INFO 0b5 Initializing client [lukas]...
2016-10-13T06:37:31.660180347Z 14:37:31.659 [crypto] InitClient -> INFO 0b6 Initializing client [lukas]...done!
2016-10-13T06:37:31.661402134Z 14:37:31.661 [crypto] closeClientInternal -> INFO 0b7 Closing client [lukas]...
2016-10-13T06:37:31.662340520Z 14:37:31.662 [consensus/pbft] sendBatch -> INFO 0b8 Creating batch with 1 requests
2016-10-13T06:37:31.667011406Z 14:37:31.666 [consensus/pbft] executeOne -> INFO 0b9 Replica 0 executing/committing request batch for view=0/seqNo=7 and digest 6ta8XRrX4SxaIOdc2iZpt6zMeRCPLml5nGRdVbH+FBHGEkjV9/UMGoiO1gUSiwONBgmT4kVrtG2yTvtNLDZlvQ==
2016-10-13T06:37:31.684015940Z 14:37:31.683 [consensus/pbft] execDoneSync -> INFO 0ba Replica 0 finished execution 7, trying next
2016-10-13T06:37:31.818382756Z 14:37:31.817 [rest] processChaincodeInvokeOrQuery -> INFO 0bb Successfully submitted invoke transaction with txid (70dbcb7e-3143-4e4b-aefc-634ced7cb29f)
2016-10-13T06:37:31.819173365Z 14:37:31.818 [rest] ProcessChaincode -> INFO 0bc REST successfully submitted invoke transaction: {""jsonrpc"":""2.0"",""result"":{""status"":""OK"",""message"":""70dbcb7e-3143-4e4b-aefc-634ced7cb29f""},""id"":1}
2016-10-13T06:37:32.337394525Z 14:37:32.337 [rest] ProcessChaincode -> INFO 0bd REST processing chaincode request...
2016-10-13T06:37:32.337686237Z 14:37:32.337 [rest] processChaincodeInvokeOrQuery -> INFO 0be REST invoke chaincode...
2016-10-13T06:37:32.338081352Z 14:37:32.337 [rest] processChaincodeInvokeOrQuery -> INFO 0bf Local user 'lukas' is already logged in. Retrieving login token.
2016-10-13T06:37:32.338910705Z 14:37:32.338 [devops] invokeOrQuery -> INFO 0c0 Transaction ID: b9897c64-e1a9-429b-98c3-31387c3067ac
2016-10-13T06:37:32.338951454Z 14:37:32.338 [crypto] InitClient -> INFO 0c1 Initializing client [lukas]...
2016-10-13T06:37:32.602482645Z 14:37:32.602 [crypto] InitClient -> INFO 0c2 Initializing client [lukas]...done!
2016-10-13T06:37:32.603257787Z 14:37:32.602 [crypto] closeClientInternal -> INFO 0c3 Closing client [lukas]...
2016-10-13T06:37:32.604894548Z 14:37:32.603 [consensus/pbft] sendBatch -> INFO 0c4 Creating batch with 1 requests
2016-10-13T06:37:32.617868208Z 14:37:32.617 [consensus/pbft] executeOne -> INFO 0c5 Replica 0 executing/committing request batch for view=0/seqNo=8 and digest KlPFqVCzGcVhIVP4cIsNC33leUgtvd6d7lE0fimGg1Ppc6KUgfsJWZcKSSbz87COE7TmyNiawm7T8B5r1KomRg==
2016-10-13T06:37:32.624340340Z 14:37:32.624 [consensus/pbft] execDoneSync -> INFO 0c6 Replica 0 finished execution 8, trying next
2016-10-13T06:37:32.711900019Z 14:37:32.711 [rest] processChaincodeInvokeOrQuery -> INFO 0c7 Successfully submitted invoke transaction with txid (b9897c64-e1a9-429b-98c3-31387c3067ac)
2016-10-13T06:37:32.713054088Z 14:37:32.712 [rest] ProcessChaincode -> INFO 0c8 REST successfully submitted invoke transaction: {""jsonrpc"":""2.0"",""result"":{""status"":""OK"",""message"":""b9897c64-e1a9-429b-98c3-31387c3067ac""},""id"":1}
2016-10-13T06:37:33.230197104Z 14:37:33.229 [rest] ProcessChaincode -> INFO 0c9 REST processing chaincode request...
2016-10-13T06:37:33.231237410Z 14:37:33.230 [rest] processChaincodeInvokeOrQuery -> INFO 0ca REST invoke chaincode...
2016-10-13T06:37:33.232032614Z 14:37:33.231 [rest] processChaincodeInvokeOrQuery -> INFO 0cb Local user 'lukas' is already logged in. Retrieving login token.
2016-10-13T06:37:33.232570021Z 14:37:33.232 [devops] invokeOrQuery -> INFO 0cc Transaction ID: 4f010a3f-c78d-4e5c-b590-c60b601615a3
2016-10-13T06:37:33.233029088Z 14:37:33.232 [crypto] InitClient -> INFO 0cd Initializing client [lukas]...
2016-10-13T06:37:33.461031752Z 14:37:33.460 [crypto] InitClient -> INFO 0ce Initializing client [lukas]...done!
2016-10-13T06:37:33.461930764Z 14:37:33.461 [crypto] closeClientInternal -> INFO 0cf Closing client [lukas]...
2016-10-13T06:37:33.463469641Z 14:37:33.463 [consensus/pbft] sendBatch -> INFO 0d0 Creating batch with 1 requests
2016-10-13T06:37:33.467505766Z 14:37:33.467 [consensus/pbft] executeOne -> INFO 0d1 Replica 0 executing/committing request batch for view=0/seqNo=9 and digest nMZ7Ji6LoZOfbspMg++/xijd7+kza5J0mFMCj4aMva4VyAbtegnZ5iHE9de3F9QiIGAEqHchtPxrRYtAr8Wl8Q==
2016-10-13T06:37:33.474121935Z 14:37:33.473 [consensus/pbft] execDoneSync -> INFO 0d2 Replica 0 finished execution 9, trying next
2016-10-13T06:37:33.595336893Z 14:37:33.594 [rest] processChaincodeInvokeOrQuery -> INFO 0d3 Successfully submitted invoke transaction with txid (4f010a3f-c78d-4e5c-b590-c60b601615a3)
2016-10-13T06:37:33.596581346Z 14:37:33.595 [rest] ProcessChaincode -> INFO 0d4 REST successfully submitted invoke transaction: {""jsonrpc"":""2.0"",""result"":{""status"":""OK"",""message"":""4f010a3f-c78d-4e5c-b590-c60b601615a3""},""id"":1}
2016-10-13T06:37:33.842084449Z 14:37:33.841 [peer] ensureConnected -> WARN 0d5 Touch service indicates dropped connections, attempting to reconnect...
2016-10-13T06:37:34.124749386Z 14:37:34.121 [rest] ProcessChaincode -> INFO 0d6 REST processing chaincode request...
2016-10-13T06:37:34.124834070Z 14:37:34.122 [rest] processChaincodeInvokeOrQuery -> INFO 0d7 REST invoke chaincode...
2016-10-13T06:37:34.124851790Z 14:37:34.123 [rest] processChaincodeInvokeOrQuery -> INFO 0d8 Local user 'lukas' is already logged in. Retrieving login token.
2016-10-13T06:37:34.124863960Z 14:37:34.123 [devops] invokeOrQuery -> INFO 0d9 Transaction ID: 3aec3171-1458-4c49-bec4-74ee66a83c0b
2016-10-13T06:37:34.124874346Z 14:37:34.123 [crypto] InitClient -> INFO 0da Initializing client [lukas]...
2016-10-13T06:37:34.531384433Z 14:37:34.530 [crypto] InitClient -> INFO 0db Initializing client [lukas]...done!
2016-10-13T06:37:34.531695119Z 14:37:34.531 [crypto] closeClientInternal -> INFO 0dc Closing client [lukas]...
2016-10-13T06:37:34.535269117Z 14:37:34.535 [consensus/pbft] sendBatch -> INFO 0dd Creating batch with 1 requests
2016-10-13T06:37:34.552355562Z 14:37:34.552 [consensus/pbft] executeOne -> INFO 0de Replica 0 executing/committing request batch for view=0/seqNo=10 and digest qoI9m+K4bVdcjxidzvVZYEuuXeS/m3L/c+WwiZgiWFZ2+IiUoOnVmegVJ9bRnchhvnmyCyCktRnU8ZJL0sA9zw==
2016-10-13T06:37:34.563923547Z 14:37:34.563 [consensus/pbft] execDoneSync -> INFO 0df Replica 0 finished execution 10, trying next
2016-10-13T06:37:34.707032954Z 14:37:34.706 [rest] processChaincodeInvokeOrQuery -> INFO 0e0 Successfully submitted invoke transaction with txid (3aec3171-1458-4c49-bec4-74ee66a83c0b)
2016-10-13T06:37:34.707145460Z 14:37:34.706 [rest] ProcessChaincode -> INFO 0e1 REST successfully submitted invoke transaction: {""jsonrpc"":""2.0"",""result"":{""status"":""OK"",""message"":""3aec3171-1458-4c49-bec4-74ee66a83c0b""},""id"":1}
2016-10-13T06:37:34.844404641Z 2016/10/13 14:37:34 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 10.20.26.81:7051: getsockopt: connection refused""; Reconnecting to {""10.20.26.81:7051"" <nil>}
2016-10-13T06:37:35.115076792Z 14:37:35.113 [rest] ProcessChaincode -> INFO 0e2 REST processing chaincode request...
2016-10-13T06:37:35.115197084Z 14:37:35.114 [rest] processChaincodeInvokeOrQuery -> INFO 0e3 REST invoke chaincode...
2016-10-13T06:37:35.116530376Z 14:37:35.116 [rest] processChaincodeInvokeOrQuery -> INFO 0e4 Local user 'lukas' is already logged in. Retrieving login token.
2016-10-13T06:37:35.117497853Z 14:37:35.117 [devops] invokeOrQuery -> INFO 0e5 Transaction ID: bf037e08-34b4-47e9-97ad-27b33838da5a
2016-10-13T06:37:35.117737866Z 14:37:35.117 [crypto] InitClient -> INFO 0e6 Initializing client [lukas]...
2016-10-13T06:37:35.545628790Z 14:37:35.544 [crypto] InitClient -> INFO 0e7 Initializing client [lukas]...done!
2016-10-13T06:37:35.546807504Z 14:37:35.545 [crypto] closeClientInternal -> INFO 0e8 Closing client [lukas]...
2016-10-13T06:37:35.552462329Z 14:37:35.551 [consensus/pbft] sendBatch -> INFO 0e9 Creating batch with 1 requests
2016-10-13T06:37:35.559083458Z 14:37:35.558 [consensus/pbft] executeOne -> INFO 0ea Replica 0 executing/committing request batch for view=0/seqNo=11 and digest MJKi9GhsEZR8vntS2XiRWojo8J8du48anJFphvLOE93g6/Zy4S8+xpU+54yi6zVUlkZ0g4axV5rvu9Ql5mf2nQ==
2016-10-13T06:37:35.573009069Z 14:37:35.572 [consensus/pbft] execDoneSync -> INFO 0eb Replica 0 finished execution 11, trying next
2016-10-13T06:37:35.707578598Z 14:37:35.706 [rest] processChaincodeInvokeOrQuery -> INFO 0ec Successfully submitted invoke transaction with txid (bf037e08-34b4-47e9-97ad-27b33838da5a)
2016-10-13T06:37:35.707669568Z 14:37:35.706 [rest] ProcessChaincode -> INFO 0ed REST successfully submitted invoke transaction: {""jsonrpc"":""2.0"",""result"":{""status"":""OK"",""message"":""bf037e08-34b4-47e9-97ad-27b33838da5a""},""id"":1}
2016-10-13T06:37:36.206986228Z 14:37:36.206 [rest] ProcessChaincode -> INFO 0ee REST processing chaincode request...
2016-10-13T06:37:36.208553268Z 14:37:36.207 [rest] processChaincodeInvokeOrQuery -> INFO 0ef REST invoke chaincode...
2016-10-13T06:37:36.211221851Z 14:37:36.210 [rest] processChaincodeInvokeOrQuery -> INFO 0f0 Local user 'lukas' is already logged in. Retrieving login token.
2016-10-13T06:37:36.212795599Z 14:37:36.212 [devops] invokeOrQuery -> INFO 0f1 Transaction ID: 21784685-cd46-476c-bbf7-bcb4224958b0
2016-10-13T06:37:36.212958669Z 14:37:36.212 [crypto] InitClient -> INFO 0f2 Initializing client [lukas]...
2016-10-13T06:37:36.610699950Z 14:37:36.609 [crypto] InitClient -> INFO 0f3 Initializing client [lukas]...done!
2016-10-13T06:37:36.610798016Z 14:37:36.610 [crypto] closeClientInternal -> INFO 0f4 Closing client [lukas]...
2016-10-13T06:37:36.615280778Z 14:37:36.614 [consensus/pbft] sendBatch -> INFO 0f5 Creating batch with 1 requests
2016-10-13T06:37:36.622347777Z 14:37:36.621 [consensus/pbft] executeOne -> INFO 0f6 Replica 0 executing/committing request batch for view=0/seqNo=12 and digest 3grqqX046YtftLzvL+yGWW8raoZPY/T4WPOyqgBw4QfJdTPsL6YJ/XyGEtYAroGwBlMKTcmVbyOaWsLusHx/2Q==
2016-10-13T06:37:36.640666038Z 14:37:36.640 [consensus/pbft] execDoneSync -> INFO 0f7 Replica 0 finished execution 12, trying next
2016-10-13T06:37:36.749368157Z 2016/10/13 14:37:36 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 10.20.26.81:7051: getsockopt: connection refused""; Reconnecting to {""10.20.26.81:7051"" <nil>}
2016-10-13T06:37:36.797182869Z 14:37:36.796 [rest] processChaincodeInvokeOrQuery -> INFO 0f8 Successfully submitted invoke transaction with txid (21784685-cd46-476c-bbf7-bcb4224958b0)
2016-10-13T06:37:36.798528795Z 14:37:36.797 [rest] ProcessChaincode -> INFO 0f9 REST successfully submitted invoke transaction: {""jsonrpc"":""2.0"",""result"":{""status"":""OK"",""message"":""21784685-cd46-476c-bbf7-bcb4224958b0""},""id"":1}
2016-10-13T06:37:36.844327759Z 14:37:36.843 [peer] chatWithPeer -> ERRO 0fa Error creating connection to peer address 10.20.26.81:7051: grpc: timed out when dialing
2016-10-13T06:37:36.845258673Z 2016/10/13 14:37:36 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 10.20.26.81:7051: getsockopt: connection refused""; Reconnecting to {""10.20.26.81:7051"" <nil>}
2016-10-13T06:37:39.843999003Z 14:37:39.841 [peer] ensureConnected -> WARN 0fb Touch service indicates dropped connections, attempting to reconnect...
2016-10-13T06:37:40.844343667Z 2016/10/13 14:37:40 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 10.20.26.81:7051: getsockopt: connection refused""; Reconnecting to {""10.20.26.81:7051"" <nil>}
2016-10-13T06:37:42.507726779Z 2016/10/13 14:37:42 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 10.20.26.81:7051: getsockopt: connection refused""; Reconnecting to {""10.20.26.81:7051"" <nil>}
2016-10-13T06:37:42.843955917Z 2016/10/13 14:37:42 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 10.20.26.81:7051: getsockopt: connection refused""; Reconnecting to {""10.20.26.81:7051"" <nil>}
2016-10-13T06:37:42.844102530Z 14:37:42.843 [peer] chatWithPeer -> ERRO 0fc Error creating connection to peer address 10.20.26.81:7051: grpc: timed out when dialing
2016-10-13T06:37:45.842708885Z 14:37:45.841 [peer] ensureConnected -> WARN 0fd Touch service indicates dropped connections, attempting to reconnect...
2016-10-13T06:37:46.843545932Z 2016/10/13 14:37:46 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 10.20.26.81:7051: getsockopt: connection refused""; Reconnecting to {""10.20.26.81:7051"" <nil>}
2016-10-13T06:37:48.611421816Z 2016/10/13 14:37:48 grpc: addrConn.resetTransport failed to create client transport: connection error: desc = ""transport: dial tcp 10.20.26.81:7051: getsockopt: connection refused""; Reconnecting to {""10.20.26.81:7051"" <nil>}
2016-10-13T06:37:49.058964378Z 14:37:49.058 [peer] chatWithPeer -> ERRO 0fe Error creating connection to peer address 10.20.26.81:7051: grpc: timed out when dialing
2016-10-13T06:37:51.818871357Z 14:37:51.818 [consensus/util] RegisterChannel -> WARN 0ff Received duplicate connection from <nil>, switching to new connection
2016-10-13T06:37:51.828713114Z 14:37:51.828 [consensus/util] RegisterChannel -> WARN 100 Received duplicate connection from <nil>, switching to new connection
2016-10-13T06:37:51.842903489Z 14:37:51.842 [peer] ensureConnected -> WARN 101 Touch service indicates dropped connections, attempting to reconnect...
2016-10-13T06:37:51.850482549Z 14:37:51.850 [consensus/util] RegisterChannel -> WARN 102 Received duplicate connection from <nil>, switching to new connection
2016-10-13T06:37:52.022731602Z 14:37:52.020 [peer] handleChat -> ERRO 103 Error handling message: Peer FSM failed while handling message (DISC_HELLO): current state: created, error: transition canceled with error: Error registering Handler: Duplicate Handler error: {nam4锟?锟斤拷?锟?@锟?锟斤拷锟?$xB4I}锟
2016-10-13T06:37:52.048799374Z 14:37:52.048 [peer] handleChat -> ERRO 104 Error handling message: Peer FSM failed while handling message (DISC_HELLO): current state: created, error: transition canceled with error: Error registering Handler: Duplicate Handler error: {nam4锟?锟斤拷?锟?@锟?锟斤拷锟?$xB4I}锟
2016-10-13T06:39:18.962489454Z 14:39:18.949 [rest] ProcessChaincode -> INFO 105 REST processing chaincode request...
2016-10-13T06:39:18.962552617Z 14:39:18.949 [rest] processChaincodeInvokeOrQuery -> INFO 106 REST query chaincode...
2016-10-13T06:39:18.962563091Z 14:39:18.950 [rest] processChaincodeInvokeOrQuery -> INFO 107 Local user 'lukas' is already logged in. Retrieving login token.
2016-10-13T06:39:18.962570168Z 14:39:18.950 [devops] invokeOrQuery -> INFO 108 Transaction ID: c55b0c8d-e50c-4027-b35a-e9d919bb30ff
2016-10-13T06:39:18.962575451Z 14:39:18.950 [crypto] InitClient -> INFO 109 Initializing client [lukas]...
2016-10-13T06:39:19.148554725Z 14:39:19.148 [crypto] InitClient -> INFO 10a Initializing client [lukas]...done!
2016-10-13T06:39:19.152000888Z 14:39:19.151 [crypto] closeClientInternal -> INFO 10b Closing client [lukas]...
2016-10-13T06:39:19.240486787Z 14:39:19.240 [rest] processChaincodeInvokeOrQuery -> INFO 10c Successfully queried chaincode: 9999989
2016-10-13T06:39:19.240573389Z 14:39:19.240 [rest] ProcessChaincode -> INFO 10d REST successfully query chaincode: {""jsonrpc"":""2.0"",""result"":{""status"":""OK"",""message"":""9999989""},""id"":5}
2016-10-13T06:40:38.453276094Z 14:40:38.452 [consensus/pbft] sendBatch -> INFO 10e Creating batch with 1 requests
2016-10-13T06:40:38.455563360Z 14:40:38.455 [consensus/pbft] executeOne -> INFO 10f Replica 0 executing/committing request batch for view=0/seqNo=13 and digest N4vgPTO505CtdDiAO3mzjn9C6jomua50FiEXGycpRyh1JUgsMgngRwPml/PLtYnO9ZI66IWcyyPPsssMJ4VLmA==
2016-10-13T06:40:38.460485970Z 14:40:38.460 [consensus/pbft] execDoneSync -> INFO 110 Replica 0 finished execution 13, trying next
2016-10-13T06:40:48.465499225Z 14:40:48.464 [consensus/pbft] recvViewChange -> INFO 111 Replica 0 received view-change from replica 3, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:50.467753022Z 14:40:50.467 [consensus/pbft] recvViewChange -> INFO 112 Replica 0 received view-change from replica 3, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:50.467988605Z 14:40:50.467 [consensus/pbft] recvViewChange -> WARN 113 Replica 0 already has a view change message for view 1 from replica 3
2016-10-13T06:40:52.494670936Z 14:40:52.494 [consensus/pbft] recvViewChange -> INFO 114 Replica 0 received view-change from replica 3, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:52.495597126Z 14:40:52.494 [consensus/pbft] recvViewChange -> WARN 115 Replica 0 already has a view change message for view 1 from replica 3
2016-10-13T06:40:54.478574022Z 14:40:54.477 [consensus/pbft] recvViewChange -> INFO 116 Replica 0 received view-change from replica 3, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:54.478752042Z 14:40:54.478 [consensus/pbft] recvViewChange -> WARN 117 Replica 0 already has a view change message for view 1 from replica 3
2016-10-13T06:40:56.479320327Z 14:40:56.478 [consensus/pbft] recvViewChange -> INFO 118 Replica 0 received view-change from replica 3, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:56.479451685Z 14:40:56.479 [consensus/pbft] recvViewChange -> WARN 119 Replica 0 already has a view change message for view 1 from replica 3
2016-10-13T06:40:58.481718209Z 14:40:58.481 [consensus/pbft] recvViewChange -> INFO 11a Replica 0 received view-change from replica 3, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:40:58.481788220Z 14:40:58.481 [consensus/pbft] recvViewChange -> WARN 11b Replica 0 already has a view change message for view 1 from replica 3
2016-10-13T06:41:00.487043120Z 14:41:00.486 [consensus/pbft] recvViewChange -> INFO 11c Replica 0 received view-change from replica 3, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:41:00.487322230Z 14:41:00.487 [consensus/pbft] recvViewChange -> WARN 11d Replica 0 already has a view change message for view 1 from replica 3
2016-10-13T06:41:02.489947973Z 14:41:02.489 [consensus/pbft] recvViewChange -> INFO 11e Replica 0 received view-change from replica 3, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:41:02.490824393Z 14:41:02.490 [consensus/pbft] recvViewChange -> WARN 11f Replica 0 already has a view change message for view 1 from replica 3
2016-10-13T06:41:04.494719254Z 14:41:04.493 [consensus/pbft] recvViewChange -> INFO 120 Replica 0 received view-change from replica 3, v:1, h:0, |C|:1, |P|:2, |Q|:2
2016-10-13T06:41:04.495724962Z 14:41:04.495 [consensus/pbft] recvViewChange -> WARN 121 Replica 0 already has a view change message for view 1 from replica 3
","nodes are deployed on different machines 

but you can also simulate this behavior in BDD after setting K to 10",,,,,,,,,,,,,,,,,,FAB-840,FAB-841,FAB-1744,,,,,,,,,,,0|i00g9f:,,,,,,,,binhn,frankylu,jyellick,scottz,tuand,vukolic,,,,,,,,,,,,,,,13/Oct/16 5:41 PM;tuand;Hi [~scottz] take first crack at reproducing ?   Also [~bmos299],"13/Oct/16 5:52 PM;jyellick;This is a known issue/limitation.  For a thorough discussion, please see https://github.com/hyperledger-archives/fabric/issues/1120

Essentially, once a replica advances its view, it will ignore messages in views with a lower number.  In this case, vp3 has erroneously advanced its view to 1, but the rest of the network is in view=0, so, vp3 will ignore the messages from the rest of the network until the view advances.

The question is whether this is a bug or not.  By academic definitions, this is working as designed.  PBFT guarantees that f+1 correct replicas have the current state at any time, and to have a guarantee about a query result, it must be done as a strong read which goes through consensus (which requires 2f+1 replicas to participate).  In this case, f=1 of the replicas is out of sync, and this would be considered 'okay'.

Still, we anticipated that this might not be desirable for some clients, so there is a periodic view change which can be turned on, which causes the network to periodically advance the view.  When this happens, the network's view will catch up to the out of sync replica's view, and this replica will be able to participate again.  However, changing views does cause overhead, and so enabling this feature will slow network throughput.  Also note, because this is not default config, it is a less tested configuration.","14/Oct/16 1:18 AM;scottz;Even though the network can continue without it, I would say that if ""vp3 has erroneously advanced its view"", then it sounds like a real bug to me. Other statements from design have indicated that an ""extra"" peer will eventually catch up after a deterministic number of batches. If this peer vp3 does not do that, and/or continues causing confusion with its viewchanges, and has essentially become a non-participating member, then it sounds like it should be fixed. 

What happens if other peers do the same thing? Even if all is fine should the peer Nevertheless the network is not operating optimally, so we are not providing the best service possible, which is being paid for.

The decision of when (i.e. whether or not to fix in v0.6 urgently) is a different decision.","20/Oct/16 2:08 PM;frankylu;maybe the paper just didn't have enough space to cover this level of detail :) The problem comes when the request wait time is not long enough for rest of the network to push seqNo exceed the watermark by at least one checkpoint. the quick solution out of people's mind would be to increase the request timeout so that a reconnected replica will wait long enough for the network to move beyond its high watermark. However, in real life there will be many systems running 24/7 so the TPS will vary greatly depending on the time of the day/week, so you may need to set the request timeout very long just to prevent they system from failing when the TPS is very low, but this will of course trigger other problems if a replica got disconnected when the TPS is high during some peak hour of a normal working day.

just wondering,  I don’t remember the paper covered this, but intuitively speaking, if the view change is triggered by a replica’s own problem, shouldn’t the recovered replica return back to the original view when no one else on the network would agree with its view change request? thoughts? [~jyellick] [~marko.vukolic] [~cca88]

from business stand point, if the purpose of blockchain is for independent organizations to co-own a data service, then I am not sure if any “client” can accept the fact that their out of sync peer will be out of the network forever (unless you wipe out all the data and restart the network).

making view change a timed mandatory event would sort of work though, albeit not a very efficient option and is difficult to pick the right interval (same 24/7 problem).

","20/Oct/16 4:19 PM;jyellick;> Other statements from design have indicated that an ""extra"" peer will eventually catch up after a deterministic number of batches.

This is a true statement, but is perhaps misinterpreted.  The peer's _state_ will catch up after a deterministic number of batches, but this is not the same as saying that it will become an active participant in the PBFT network after a deterministic number of batches.  In fact, in this case the state will catch up, then it will fall behind, and catch up, and fall behind and so on until the network changes view.  Though this might sound somewhat pointless, the idea is that the peer's state will be 'nearly current' when the view advances so that it can quickly step in and participate.

> The decision of when (i.e. whether or not to fix in v0.6 urgently) is a different decision.

The reason that a 'fix' was not included in 0.5 was because it is an extremely non-trivial thing to fix.  As pointed out in the github issue linked, this would likely require introducing a new message type and logic around that message, which is not a minor undertaking.

> The problem comes when the request wait time is not long enough for rest of the network to push seqNo exceed the watermark by at least one checkpoint. 

The replica has actually missed a transaction, and missing a transaction is valid grounds to issue a view change request.  By setting the request timer to a very high value, the replica can retrieve the missing transaction via state transfer, but this is a bit of an odd end-around, and I agree, it's not a good solution because it will make recovery times very slow when real faults do happen.

> just wondering, I don’t remember the paper covered this, but intuitively speaking, if the view change is triggered by a replica’s own problem, shouldn’t the recovered replica return back to the original view when no one else on the network would agree with its view change request?

I think it's hard to define ""the replica's own problem"", because the replica does not know whether the primary is being byzantine and not sending the message, or whether it somehow just 'missed' the message.  The proposal outlined by [~marko.vukolic] in the Github issue is to issue 'Suspect' messages, which do not actually advance the view, but instead wait for a sufficient number of suspicions before doing so.  I'm not sure what the implications of continuing to participate in the network after sending a view change would be, but I suspect there are some corner cases this addresses as otherwise this would be the obvious behavior.

> from business stand point, if the purpose of blockchain is for independent organizations to co-own a data service, then I am not sure if any “client” can accept the fact that their out of sync peer will be out of the network forever (unless you wipe out all the data and restart the network).

The peer would rejoin the network if another failure ever occurred (causing a view change), but I agree, this is not optimal.  

> making view change a timed mandatory event would sort of work though, albeit not a very efficient option and is difficult to pick the right interval (same 24/7 problem).

A timer could be started on startup or new-view, which triggers a view change after some period of time.  This would be a pretty trivial code change.","22/Oct/16 3:57 AM;kchristidis;This is inline with what we discussed with Frank on the #fabric-consensus-dev channel a few weekends back as well.

I will give this a few days and then close it unless there are any objections.","23/Oct/16 4:21 AM;frankylu;>  The proposal outlined by Marko Vukolic in the Github issue is to issue 'Suspect' messages, which do not actually advance the view, but instead wait for a sufficient number of suspicions before doing so. I'm not sure what the implications of continuing to participate in the network after sending a view change would be, but I suspect there are some corner cases this addresses as otherwise this would be the obvious behavior.

I think 'suspect' message would be necessary to follow up protocols (eg. sbft) if we don't have another way to solve it. 

Switching view after a fixed number of checkpoints is still problematic because it will mean view changes will happen more frequently during peak tx hours. basically, you will slow the system down whenever you need the most throughput performance.

> A timer could be started on startup or new-view, which triggers a view change after some period of time. This would be a pretty trivial code change.

This would be a better option than triggering view change after a fixed number of checkpoints, though probably not that trivial consider timer on most nodes needs to be in sync.


 ","23/Oct/16 5:16 PM;scottz;I read many of those other issues, and have a better understanding. Correct me if I am wrong; you are saying it is OK for VP3 behave as it is behaving. As a result of restarting, VP3 has advanced its view and is ahead of the rest of the network. It would become an active participant in the network again at some unknown future time when the network advances its view.
* This could happen, for example, if VP2 stops, leaving only VP0 and VP1 in sync - so those two would request viewchanges and advance the network view to the point where VP3 could work with them to process transactions.
* This could also happen if we use a non-default value for a config parm to force viewchanges after some time or number of transactions.)

Questions: 
# Why did VP3 advance its view? Was that necessary? Nobody seemed to talk about that, so I suppose it might be part of the PBFT protocol (which I admit I am not an expert).
# As a Network Operations Manager/Observer, how can I determine the health of the network? Can I tell how many peer nodes that can be counted on, at any given moment? That would be the sum of the number of valid nodes plus any such as VP3. Or it might the the sum of functional nodes minus the number of byzantines. Let me rephrase: a network management tool could ping all the peers in the network to see which are functioning. It could also query them all to see their chainheights or chaincode data values. It would observe VP3 is lagging. Is it considered byzantine? Or, could the tool determine whether VP3 is ""giving an honest effort"" and is in such a state that it could help the network (eventually) if it becomes necessary due to other node faults? How could it distinguish between an OK node like this and a truly faulty/byzantine node?
","24/Oct/16 3:48 PM;jyellick;> Why did VP3 advance its view? Was that necessary? Nobody seemed to talk about that, so I suppose it might be part of the PBFT protocol (which I admit I am not an expert).

Vp3 observed the primary 'skip' a sequence number.  This happened because the primary broadcasted the message while vp3 was down.  When a primary skips a sequence number, this prevents execution and halts the network until view change, vp3 is contributing its vote because it thinks the network needs a view change to advance.

> As a Network Operations Manager/Observer, how can I determine the health of the network? Can I tell how many peer nodes that can be counted on, at any given moment? That would be the sum of the number of valid nodes plus any such as VP3. Or it might the the sum of functional nodes minus the number of byzantines. Let me rephrase: a network management tool could ping all the peers in the network to see which are functioning. It could also query them all to see their chainheights or chaincode data values. It would observe VP3 is lagging. Is it considered byzantine? Or, could the tool determine whether VP3 is ""giving an honest effort"" and is in such a state that it could help the network (eventually) if it becomes necessary due to other node faults? How could it distinguish between an OK node like this and a truly faulty/byzantine node?

Under true byzantine conditions, you can always be assured the there are f+1 correct peers actively participating in the network.  You may be able to identify replicas which are not actively participating by examining their chain heights, but this is not foolproof.  It's essentially impossible to determine byzantine from best effort, the best you could hope for is for the replica to report that it knows it is out of sync.  For future work, I think it would be a good idea to include a gRPC call to get replica state (whether its view is active, what view, what seqno, etc.), but in v0.5/0.6 there is nothing of this sort.","24/Oct/16 5:12 PM;binhn;> Vp3 observed the primary 'skip' a sequence number. This happened because the primary broadcasted the message while vp3 was down. When a primary skips a sequence number, this prevents execution and halts the network until view change, vp3 is contributing its vote because it thinks the network needs a view change to advance.

For next rev of the algo, perhaps we should consider that if a peer has not (re)joined consensus and has not received a view change request from other peers, then it should wait rather than keep sending useless view change requests. This certainly doesn't offer the ability for a peer to rejoin consensus. ","24/Oct/16 6:00 PM;scottz;OK, I will not object to closing this issue as ""design intent"". 

I will create two other issues, as suggested by Jason (an interface to provide status info) and Binh (optimization to reduce/eliminate the noisy useless viewchange requests in this situation which are occurring every 2 seconds).","08/Nov/16 5:47 AM;frankylu;Yes, if we think this problem as a pure academic topic when the protocol was designed then this issue is a ""design intent"", but if we think this implementation as something to be used by industries then it would become a ""design gap""

I vote to keep this open until we get a confirmation that some mechanism (such as the proposed SUSPECT message ) is added to the either this protocol or SBFT. [~marko.vukolic] [~kchristidis]","11/Nov/16 6:28 PM;scottz;This has been confirmed with testing. I am putting this back on the team's list of unassigned issues, and it can be fixed if it becomes critical in future.","12/Dec/16 2:36 PM;vukolic;I am aware of this issue and minding it for v1 (simple(p)bft implementation). The SUSPECTS would be a heavyweight and invasive change. I am more inclined to have a solution in which such a replica, while perhaps remaining ""stuck"" alone in a view change, obtains periodically updates from other replicas via a separate very lightweight ""state-transfer-like"" mechanism.",,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to deploy Java chaincode using docker-compose file,FAB-684,12986,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,Ratnakar,Ratnakar,12/Oct/16 3:01 PM,28/Apr/17 2:37 PM,26/Apr/18 6:50 AM,28/Apr/17 2:37 PM,v0.6,,,,,fabric-quality,,,,,,1,quality,,,,,,,"Can deploy Java chaincode on native peer *peer node start*

However when we use [docker-compose](https://github.com/hyperledger/fabric/blob/master/bddtests/bdd-docker/docker-compose-4-consensus-batch.yml) file to spin the peers, It is failed to deploy the chaincode and could see below error in PEER logs

{code:java}
vp3_1         | 03:35:16.117 [dockercontroller] deployImage -> ERRO 1a3 Error building images: API error (500): {""message"":""The Dockerfile (Dockerfile) cannot be empty""}
vp3_1         | 03:35:16.117 [dockercontroller] deployImage -> ERRO 1a4 Image Output:
vp3_1         | ********************
vp3_1         | 
vp3_1         | ********************
vp3_1         | 03:35:16.117 [container] unlockContainer -> DEBU 1a5 container lock deleted(dev-vp3-0f5b1d65041bc6d500bd0f1cab50eb6154c291ef0f4596d64b6797e8ef8f7c34a179b5a2cea82253ff3d74e768512fe0481503eadcf13d18f9761bbb8133efd0)
vp3_1         | 03:35:16.117 [chaincode] Launch -> ERRO 1a6 launchAndWaitForRegister failed Error starting container: API error (500): {""message"":""The Dockerfile (Dockerfile) cannot be empty""}
vp3_1         | 03:35:16.117 [state] TxFinish -> DEBU 1a7 txFinish() for txId [0f5b1d65041bc6d500bd0f1cab50eb6154c291ef0f4596d64b6797e8ef8f7c34a179b5a2cea82253ff3d74e768512fe0481503eadcf13d18f9761bbb8133efd0], txSuccessful=[false]
vp3_1         | 03:35:16.117 [state] GetHash -> DEBU 1a8 Enter - GetHash()
vp3_1         | 03:35:16.117 [buckettree] ComputeCryptoHash -> DEBU 1a9 Enter - ComputeCryptoHash()
vp3_1         | 03:35:16.118 [buckettree] ComputeCryptoHash -> DEBU 1aa Returing existing crypto-hash as recomputation not required
vp3_1         | 03:35:16.118 [state] GetHash -> DEBU 1ab Exit - GetHash()
vp3_1         | 03:35:16.118 [consensus/pbft] ProcessEvent -> DEBU 1ac Replica 3 batch main thread looping

{code}

enclosed debug logs",,,,,,,,,,,,,,,,,,,,,,,,12/Oct/16 3:00 PM;Ratnakar;docker-peer-logs.txt;https://jira.hyperledger.org/secure/attachment/10125/docker-peer-logs.txt,17/Oct/16 2:24 PM;Ratnakar;logs-with-membersrvc.txt;https://jira.hyperledger.org/secure/attachment/10140/logs-with-membersrvc.txt,,,,,,,0|i00h49:,,,,,,,,bfuentes@fr.ibm.com,Ratnakar,wutongtree,zamrokk,,,,,,,,,,,,,,,,,"17/Oct/16 2:24 PM;Ratnakar;We do see the above issue when trying to deploy with Security and Privacy enabled.

Steps to reproduce the issue:

*vagrant ssh*

+Terminal1:+ 
*membersrvc*

+Terminal2:+
*CORE_LOGGING_LEVEL=debug CORE_SECURITY_ENABLED=true CORE_SECURITY_PRIVACY=true peer node start*


{color:#333333}From REST Client:{color}

_Registrar payload :_

POST : http://127.0.0.1:7050/registrar

{code:java}

{
  ""enrollId"": ""test_user0"",
  ""enrollSecret"": ""MS9qrN8hFjlE""
}
{code}

_Deploy Payload:_

POST : http://127.0.0.1:7050/chaincode

{code:java}
{
  ""jsonrpc"": ""2.0"",
  ""method"": ""deploy"",
  ""params"": {
    ""type"": 4,
    ""chaincodeID"":{
        ""path"":""examples/chaincode/java/SimpleSample""
    },
    ""ctorMsg"": {
        ""function"" : ""init"",
        ""args"":[""a"",""100"",""b"",""200""]
    },
    ""secureContext"":""test_user0""
  },
  ""id"": 1
}
{code}

 [^logs-with-membersrvc.txt] 
",24/Nov/16 11:57 AM;bfuentes@fr.ibm.com;I have same problem with security enabled,"14/Apr/17 7:30 AM;zamrokk;Tagging java docker image to :latest tag, works as a workaround",28/Apr/17 2:36 PM;Ratnakar;This is no more relevant. As per the work around suggested by [~bfuentes@fr.ibm.com] closing this issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK] chain.eventHubDisconnect() description is wrong ,FAB-676,12978,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,pmullaney,jjjjibm,jjjjibm,11/Oct/16 5:39 PM,08/Feb/17 3:22 PM,26/Apr/18 6:50 AM,08/Feb/17 3:22 PM,,,,,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"The documentation for chain.eventHubDisconnect is incorrect: 

eventHub*Disconnec**t
*eventHub*Disconnect*(): void

Defined in src/hfc.ts:578



Set and* connect *to the peer to be used as the event source.

Returns void

Recreate:
1.Clone the fabric/sdk/node directory as usual
2.Make doc
3.Find eventHubDisconnect in the chain class documentation",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00h2x:,,,,,,,,jjjjibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
chaincode unit test fails on zLinux,FAB-622,12924,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,gongsu,gongsu,06/Oct/16 8:55 PM,10/Apr/17 11:30 AM,26/Apr/18 6:50 AM,10/Apr/17 11:30 AM,v0.6,,,WON'T FIX,,fabric-peer,,,,,,0,,,,,,,,"Code leve:

commit 3ed2416fd8729f5c0954b55f9f95330a3e723c97
Merge: 448d207 4e9dd2b
Author: Gari Singh <gari.r.singh@gmail.com>
Date:   Thu Oct 6 12:08:47 2016 +0000

    Merge ""Utility to assist in writing Node SDK Unit tests""

Running ""make unit-test"" on zLinux produces the following error:

Running unit tests using hyperledger/fabric-peer:s390x-0.7.0-snapshot-3ed2416
Cleaning membership services folder
Obtaining list of tests to run..DONE!
Starting peer..DONE!
Running tests...
?   	github.com/hyperledger/fabric/bddtests/chaincode/go/table	[no test files]
ok  	github.com/hyperledger/fabric/bddtests/syschaincode/noop	0.017s	coverage: 71.0% of statements
?   	github.com/hyperledger/fabric/consensus	[no test files]
?   	github.com/hyperledger/fabric/consensus/controller	[no test files]
ok  	github.com/hyperledger/fabric/consensus/executor	0.020s	coverage: 79.7% of statements
ok  	github.com/hyperledger/fabric/consensus/helper	0.019s	coverage: 0.5% of statements
ok  	github.com/hyperledger/fabric/consensus/helper/persist	0.006s	coverage: 0.0% of statements
?   	github.com/hyperledger/fabric/consensus/noops	[no test files]
ok  	github.com/hyperledger/fabric/consensus/pbft	73.389s	coverage: 80.1% of statements
ok  	github.com/hyperledger/fabric/consensus/util	0.084s	coverage: 88.9% of statements
ok  	github.com/hyperledger/fabric/consensus/util/events	0.206s	coverage: 91.2% of statements
ok  	github.com/hyperledger/fabric/core	0.017s	coverage: 3.3% of statements
16:44:42.997 [chaincode] NewChaincodeSupport -> INFO 001 Chaincode support using peerAddress: 0.0.0.0:21212
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example01"" > ctorMsg:<args:""init"" args:""a"" args:""100"" args:""b"" args:""200"" >
16:44:42.999 [container] WriteGopathSrc -> INFO 002 rootDirectory = /opt/openchain/src
16:44:42.999 [container] WriteFolderToTarPackage -> INFO 003 rootDirectory = /opt/openchain/src
16:44:47.225 [state] loadConfig -> INFO 004 Loading configurations...
16:44:47.226 [state] loadConfig -> INFO 005 Configurations loaded. stateImplName=[buckettree], stateImplConfigs=map[bucketCacheSize:%!s(int=100) numBuckets:%!s(int=1000003) maxGroupingAtEachLevel:%!s(int=5)], deltaHistorySize=[500]
16:44:47.226 [state] NewState -> INFO 006 Initializing state implementation [buckettree]
16:44:47.226 [buckettree] initConfig -> INFO 007 configs passed during initialization = map[string]interface {}{""maxGroupingAtEachLevel"":5, ""bucketCacheSize"":100, ""numBuckets"":1000003}
16:44:47.226 [buckettree] initConfig -> INFO 008 Initializing bucket tree state implemetation with configurations &{maxGroupingAtEachLevel:5 lowestLevel:9 levelToNumBucketsMap:map[9:1000003 8:200001 4:321 2:13 5:1601 7:40001 6:8001 3:65 1:3 0:1] hashFunc:0x8060d3d0}
16:44:47.226 [buckettree] newBucketCache -> INFO 009 Constructing bucket-cache with max bucket cache size = [100] MBs
16:44:47.226 [buckettree] loadAllBucketNodesFromDB -> INFO 00a Loaded buckets data in cache. Total buckets in DB = [0]. Total cache size:=0
16:45:20.246 [chaincode] processStream -> ERRO 00b Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
set GOPATH to: ""/opt/openchain/:/tmp/foo:/tmp/bar""
16:45:22.589 [chaincode] NewChaincodeSupport -> INFO 00c Chaincode support using peerAddress: 0.0.0.0:21212
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example01"" > ctorMsg:<args:""init"" args:""a"" args:""100"" args:""b"" args:""200"" >
16:45:22.591 [container] WriteGopathSrc -> INFO 00d rootDirectory = /opt/openchain/src
16:45:22.591 [container] WriteFolderToTarPackage -> INFO 00e rootDirectory = /opt/openchain/src
16:45:29.842 [chaincode] processStream -> ERRO 00f Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
16:45:32.170 [chaincode] NewChaincodeSupport -> INFO 010 Chaincode support using peerAddress: 0.0.0.0:21212
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""http://gopkg.in/mastersingh24/fabric-test-resources.v0"" > ctorMsg:<args:""init"" args:""a"" args:""100"" args:""b"" args:""200"" >
16:45:34.882 [container] WriteGopathSrc -> INFO 011 rootDirectory = /opt/openchain/src
16:45:34.882 [container] WriteFolderToTarPackage -> INFO 012 rootDirectory = /opt/openchain/src
16:46:12.294 [chaincode] processStream -> ERRO 013 Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
16:46:14.639 [chaincode] NewChaincodeSupport -> INFO 014 Chaincode support using peerAddress: 0.0.0.0:21212
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" > ctorMsg:<args:""init"" args:""a"" args:""100"" args:""b"" args:""200"" >
16:46:15.851 [container] WriteGopathSrc -> INFO 015 rootDirectory = /opt/openchain/src
16:46:15.851 [container] WriteFolderToTarPackage -> INFO 016 rootDirectory = /opt/openchain/src
16:46:49.971 [chaincode] processStream -> ERRO 017 Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
Got string: 90
Aval = 90, Bval = 210
Invoke test passed
16:47:03.810 [chaincode] processStream -> ERRO 018 Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
16:47:06.128 [chaincode] NewChaincodeSupport -> INFO 019 Chaincode support using peerAddress: 0.0.0.0:21212
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" > ctorMsg:<args:""init"" args:""a"" args:""100"" args:""b"" args:""200"" >
16:47:07.322 [container] WriteGopathSrc -> INFO 01a rootDirectory = /opt/openchain/src
16:47:07.322 [container] WriteFolderToTarPackage -> INFO 01b rootDirectory = /opt/openchain/src
16:47:16.882 [chaincode] processStream -> ERRO 01c Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
16:47:19.219 [chaincode] NewChaincodeSupport -> INFO 01d Chaincode support using peerAddress: 0.0.0.0:21212
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" > ctorMsg:<args:""init"" args:""a"" args:""100"" args:""b"" args:""200"" >
16:47:20.430 [container] WriteGopathSrc -> INFO 01e rootDirectory = /opt/openchain/src
16:47:20.430 [container] WriteFolderToTarPackage -> INFO 01f rootDirectory = /opt/openchain/src
16:47:28.914 [chaincode] processStream -> ERRO 020 Got error: Incorrect number of arguments. Expecting 3
16:47:28.942 [chaincode] processStream -> ERRO 021 Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
16:47:31.284 [chaincode] NewChaincodeSupport -> INFO 022 Chaincode support using peerAddress: 0.0.0.0:21212
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example03"" > ctorMsg:<args:""init"" args:""a"" args:""100"" >
16:47:31.285 [container] WriteGopathSrc -> INFO 023 rootDirectory = /opt/openchain/src
16:47:31.285 [container] WriteFolderToTarPackage -> INFO 024 rootDirectory = /opt/openchain/src
16:48:04.882 [chaincode] processStream -> ERRO 025 Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
16:48:07.221 [chaincode] NewChaincodeSupport -> INFO 026 Chaincode support using peerAddress: 0.0.0.0:21212
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" > ctorMsg:<args:""init"" args:""a"" args:""100"" args:""b"" args:""200"" >
16:48:08.404 [container] WriteGopathSrc -> INFO 027 rootDirectory = /opt/openchain/src
16:48:08.404 [container] WriteFolderToTarPackage -> INFO 028 rootDirectory = /opt/openchain/src
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example04"" > ctorMsg:<args:""init"" args:""e"" args:""0"" >
16:48:16.952 [container] WriteGopathSrc -> INFO 029 rootDirectory = /opt/openchain/src
16:48:16.952 [container] WriteFolderToTarPackage -> INFO 02a rootDirectory = /opt/openchain/src
16:48:35.585 [chaincode] processStream -> ERRO 02b Got error: [5776c8e8-bcb2-4e9a-9c4b-a0e6fdff2c28]Chaincode handler FSM cannot handle message (ERROR) with payload size (269) while in state: ready
16:48:35.614 [chaincode] processStream -> ERRO 02c Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
--- FAIL: TestChaincodeInvokeChaincode (30.86s)
	exectransaction_test.go:797: TestChaincodeInvokeChaincode starting
	db_test_exports.go:47: Creating testDB
	exectransaction_test.go:862: deployed chaincode_example02 got cID1:path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" name:""ef78c8752e03b7381af614a50fbe425de38a6eed9dbee2b443efdd6668bd374ecf62a523705aeb48e582cf05f480b7eb3f7e174d728a9e1eed5356b7f6a85b46"" ,
		 chaincodeID1:ef78c8752e03b7381af614a50fbe425de38a6eed9dbee2b443efdd6668bd374ecf62a523705aeb48e582cf05f480b7eb3f7e174d728a9e1eed5356b7f6a85b46
	exectransaction_test.go:898: Error invoking <44d53a299f3f92fafcb0452877148f5d699247f20caa8756bf204d829338f73ee0a8168d8060a090330fd56cb770c3daa9dece75064532e2b2b2ca731e3f4ff6>: Error invoking chaincode: Transaction or query returned with failure: [5776c8e8-bcb2-4e9a-9c4b-a0e6fdff2c28]Chaincode handler FSM cannot handle message (ERROR) with payload size (269) while in state: ready
	exectransaction_test.go:833: Failed chaincode invoke chaincode : Error invoking chaincode: Transaction or query returned with failure: [5776c8e8-bcb2-4e9a-9c4b-a0e6fdff2c28]Chaincode handler FSM cannot handle message (ERROR) with payload size (269) while in state: ready
16:48:38.090 [ca] NewCA -> INFO 02d Fresh start; creating databases, key pairs, and certificates.
16:48:38.148 [aca] Start -> INFO 02e Staring ACA services...
16:48:38.148 [aca] startACAP -> INFO 02f ACA PUBLIC gRPC API server started
16:48:38.148 [aca] Start -> INFO 030 ACA services started
16:48:38.148 [eca] Start -> INFO 031 Starting ECA...
16:48:38.148 [eca] startECAP -> INFO 032 ECA PUBLIC gRPC API server started
16:48:38.148 [eca] startECAA -> INFO 033 ECA ADMIN gRPC API server started
16:48:38.148 [eca] Start -> INFO 034 ECA started.
16:48:38.148 [tca] Start -> INFO 035 Staring TCA services...
16:48:38.148 [tca] startTCAP -> INFO 036 TCA PUBLIC gRPC API server started
16:48:38.148 [tca] startTCAA -> INFO 037 TCA ADMIN gRPC API server started
16:48:38.148 [tca] Start -> INFO 038 TCA started.
16:48:38.148 [tlsca] Start -> INFO 039 TLSCA started.
16:48:40.151 [crypto] RegisterValidator -> INFO 03a Registering validator [vp] with name [vp]...
16:48:40.202 [crypto] RegisterValidator -> INFO 03b Registering validator [vp] with name [vp]...done!
16:48:40.202 [crypto] InitValidator -> INFO 03c Initializing validator [vp]...
16:48:40.208 [crypto] InitValidator -> INFO 03d Initializing validator [vp]...done!
16:48:40.208 [chaincode] NewChaincodeSupport -> INFO 03e Chaincode support using peerAddress: 0.0.0.0:21212
16:48:40.208 [crypto] RegisterClient -> INFO 03f Registering client [jim] with name [jim]...
16:48:40.265 [crypto] Info -> INFO 040 [client.jim]  Register crypto engine...
16:48:40.265 [crypto] Info -> INFO 041 [client.jim]  Register crypto engine...done.
16:48:40.265 [crypto] RegisterClient -> INFO 042 Registering client [jim] with name [jim]...done!
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" > ctorMsg:<args:""init"" args:""a"" args:""100"" args:""b"" args:""200"" > secureContext:""jim""
16:48:41.449 [container] WriteGopathSrc -> INFO 043 rootDirectory = /opt/openchain/src
16:48:41.449 [container] WriteFolderToTarPackage -> INFO 044 rootDirectory = /opt/openchain/src
16:48:45.662 [crypto] InitClient -> INFO 045 Initializing client [jim]...
16:48:45.672 [crypto] InitClient -> INFO 046 Initializing client [jim]...done!
16:48:47.488 [crypto] closeClientInternal -> INFO 047 Closing client [jim]...
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example04"" > ctorMsg:<args:""init"" args:""e"" args:""0"" > secureContext:""jim""
16:48:51.788 [container] WriteGopathSrc -> INFO 048 rootDirectory = /opt/openchain/src
16:48:51.788 [container] WriteFolderToTarPackage -> INFO 049 rootDirectory = /opt/openchain/src
16:48:55.966 [crypto] InitClient -> INFO 04a Initializing client [jim]...
16:48:57.067 [crypto] InitClient -> INFO 04b Initializing client [jim]...done!
16:48:57.207 [crypto] closeClientInternal -> INFO 04c Closing client [jim]...
16:49:01.236 [chaincode] processStream -> ERRO 04d Got error: [9655e7f3-53e8-4b58-b152-fd3887e16b4a]Chaincode handler FSM cannot handle message (ERROR) with payload size (269) while in state: ready
16:49:01.274 [chaincode] processStream -> ERRO 04e Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
--- FAIL: TestChaincodeInvokeChaincodeWithSec (27.64s)
	db_test_exports.go:47: Creating testDB
	exectransaction_test.go:862: deployed chaincode_example02 got cID1:path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" name:""ef78c8752e03b7381af614a50fbe425de38a6eed9dbee2b443efdd6668bd374ecf62a523705aeb48e582cf05f480b7eb3f7e174d728a9e1eed5356b7f6a85b46"" ,
		 chaincodeID1:ef78c8752e03b7381af614a50fbe425de38a6eed9dbee2b443efdd6668bd374ecf62a523705aeb48e582cf05f480b7eb3f7e174d728a9e1eed5356b7f6a85b46
	exectransaction_test.go:898: Error invoking <44d53a299f3f92fafcb0452877148f5d699247f20caa8756bf204d829338f73ee0a8168d8060a090330fd56cb770c3daa9dece75064532e2b2b2ca731e3f4ff6>: Error invoking chaincode: Transaction or query returned with failure: [9655e7f3-53e8-4b58-b152-fd3887e16b4a]Chaincode handler FSM cannot handle message (ERROR) with payload size (269) while in state: ready
	exectransaction_test.go:964: Error executing test Error invoking chaincode: Transaction or query returned with failure: [9655e7f3-53e8-4b58-b152-fd3887e16b4a]Chaincode handler FSM cannot handle message (ERROR) with payload size (269) while in state: ready
16:49:05.724 [chaincode] NewChaincodeSupport -> INFO 04f Chaincode support using peerAddress: 0.0.0.0:21212
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" > ctorMsg:<args:""init"" args:""a"" args:""100"" args:""b"" args:""200"" >
16:49:06.929 [container] WriteGopathSrc -> INFO 050 rootDirectory = /opt/openchain/src
16:49:06.929 [container] WriteFolderToTarPackage -> INFO 051 rootDirectory = /opt/openchain/src
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/passthru"" > ctorMsg:<args:""init"" >
16:49:15.369 [container] WriteGopathSrc -> INFO 052 rootDirectory = /opt/openchain/src
16:49:15.369 [container] WriteFolderToTarPackage -> INFO 053 rootDirectory = /opt/openchain/src
16:49:34.057 [chaincode] processStream -> ERRO 054 Got error: Incorrect number of arguments. Expecting 3
16:49:34.057 [chaincode] processStream -> ERRO 055 Got error: Incorrect number of arguments. Expecting 3
16:49:34.086 [chaincode] processStream -> ERRO 056 Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
16:49:34.434 [chaincode] processStream -> ERRO 057 Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
16:49:36.794 [crypto] RegisterValidator -> INFO 058 Registering validator [vp] with name [vp]...
16:49:36.794 [crypto] RegisterValidator -> INFO 059 Registering validator [vp] with name [vp]...done. Already initialized.
16:49:36.794 [crypto] InitValidator -> INFO 05a Initializing validator [vp]...
16:49:36.794 [crypto] InitValidator -> INFO 05b Validator already initiliazied [vp]. Increasing counter from [1]
16:49:36.795 [chaincode] NewChaincodeSupport -> INFO 05c Chaincode support using peerAddress: 0.0.0.0:21212
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" > ctorMsg:<args:""init"" args:""a"" args:""100"" args:""b"" args:""200"" >
16:49:38.001 [container] WriteGopathSrc -> INFO 05d rootDirectory = /opt/openchain/src
16:49:38.001 [container] WriteFolderToTarPackage -> INFO 05e rootDirectory = /opt/openchain/src
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05"" > ctorMsg:<args:""init"" args:""sum"" args:""0"" >
16:49:46.446 [container] WriteGopathSrc -> INFO 05f rootDirectory = /opt/openchain/src
16:49:46.446 [container] WriteFolderToTarPackage -> INFO 060 rootDirectory = /opt/openchain/src
16:50:05.206 [chaincode] processStream -> ERRO 061 Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
16:50:05.562 [chaincode] processStream -> ERRO 062 Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
16:50:07.898 [chaincode] NewChaincodeSupport -> INFO 063 Chaincode support using peerAddress: 0.0.0.0:21212
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" > ctorMsg:<args:""init"" args:""a"" args:""100"" args:""b"" args:""200"" >
16:50:09.087 [container] WriteGopathSrc -> INFO 064 rootDirectory = /opt/openchain/src
16:50:09.087 [container] WriteFolderToTarPackage -> INFO 065 rootDirectory = /opt/openchain/src
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/passthru"" > ctorMsg:<args:""init"" >
16:50:17.555 [container] WriteGopathSrc -> INFO 066 rootDirectory = /opt/openchain/src
16:50:17.555 [container] WriteFolderToTarPackage -> INFO 067 rootDirectory = /opt/openchain/src
16:50:25.798 [chaincode] processStream -> ERRO 068 Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
16:50:26.170 [chaincode] processStream -> ERRO 069 Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
16:50:28.506 [ca] NewCA -> INFO 06a Fresh start; creating databases, key pairs, and certificates.
16:50:28.562 [aca] Start -> INFO 06b Staring ACA services...
16:50:28.562 [aca] startACAP -> INFO 06c ACA PUBLIC gRPC API server started
16:50:28.562 [aca] Start -> INFO 06d ACA services started
16:50:28.562 [eca] Start -> INFO 06e Starting ECA...
16:50:28.562 [eca] startECAP -> INFO 06f ECA PUBLIC gRPC API server started
16:50:28.562 [eca] startECAA -> INFO 070 ECA ADMIN gRPC API server started
16:50:28.562 [eca] Start -> INFO 071 ECA started.
16:50:28.562 [tca] Start -> INFO 072 Staring TCA services...
16:50:28.562 [tca] startTCAP -> INFO 073 TCA PUBLIC gRPC API server started
16:50:28.562 [tca] startTCAA -> INFO 074 TCA ADMIN gRPC API server started
16:50:28.562 [tca] Start -> INFO 075 TCA started.
16:50:28.562 [tlsca] Start -> INFO 076 TLSCA started.
16:50:30.563 [crypto] RegisterValidator -> INFO 077 Registering validator [vp] with name [vp]...
16:50:30.563 [crypto] RegisterValidator -> INFO 078 Registering validator [vp] with name [vp]...done. Already initialized.
16:50:30.563 [crypto] InitValidator -> INFO 079 Initializing validator [vp]...
16:50:30.563 [crypto] InitValidator -> INFO 07a Validator already initiliazied [vp]. Increasing counter from [2]
16:50:30.563 [chaincode] NewChaincodeSupport -> INFO 07b Chaincode support using peerAddress: 0.0.0.0:21212
16:50:30.563 [crypto] RegisterClient -> INFO 07c Registering client [jim] with name [jim]...
16:50:30.619 [crypto] Info -> INFO 07d [client.jim]  Register crypto engine...
16:50:30.619 [crypto] Info -> INFO 07e [client.jim]  Register crypto engine...done.
16:50:30.619 [crypto] RegisterClient -> INFO 07f Registering client [jim] with name [jim]...done!
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" > ctorMsg:<args:""init"" args:""a"" args:""100"" args:""b"" args:""200"" > secureContext:""jim""
16:50:31.815 [container] WriteGopathSrc -> INFO 080 rootDirectory = /opt/openchain/src
16:50:31.815 [container] WriteFolderToTarPackage -> INFO 081 rootDirectory = /opt/openchain/src
16:50:35.969 [crypto] InitClient -> INFO 082 Initializing client [jim]...
16:50:35.979 [crypto] InitClient -> INFO 083 Initializing client [jim]...done!
16:50:37.782 [crypto] closeClientInternal -> INFO 084 Closing client [jim]...
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example05"" > ctorMsg:<args:""init"" args:""sum"" args:""0"" > secureContext:""jim""
16:50:42.070 [container] WriteGopathSrc -> INFO 085 rootDirectory = /opt/openchain/src
16:50:42.070 [container] WriteFolderToTarPackage -> INFO 086 rootDirectory = /opt/openchain/src
16:50:46.234 [crypto] InitClient -> INFO 087 Initializing client [jim]...
16:50:47.334 [crypto] InitClient -> INFO 088 Initializing client [jim]...done!
16:50:47.479 [crypto] closeClientInternal -> INFO 089 Closing client [jim]...
16:50:51.526 [chaincode] processStream -> ERRO 08a Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
16:50:51.862 [chaincode] processStream -> ERRO 08b Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
16:50:56.189 [chaincode] NewChaincodeSupport -> INFO 08c Chaincode support using peerAddress: 0.0.0.0:21212
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/map"" > ctorMsg:<args:""init"" >
16:50:56.190 [container] WriteGopathSrc -> INFO 08d rootDirectory = /opt/openchain/src
16:50:56.190 [container] WriteFolderToTarPackage -> INFO 08e rootDirectory = /opt/openchain/src
16:51:13.866 [chaincode] processStream -> ERRO 08f Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
16:51:16.198 [chaincode] NewChaincodeSupport -> INFO 090 Chaincode support using peerAddress: 0.0.0.0:21212
getting deployment spec for chaincode spec: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/eventsender"" > ctorMsg:<args:""init"" >
16:51:16.199 [container] WriteGopathSrc -> INFO 091 rootDirectory = /opt/openchain/src
16:51:16.199 [container] WriteFolderToTarPackage -> INFO 092 rootDirectory = /opt/openchain/src
16:51:34.830 [chaincode] processStream -> ERRO 093 Error handling chaincode support stream: stream error: code = 1 desc = ""context canceled""
FAIL
coverage: 63.0% of statements
FAIL	github.com/hyperledger/fabric/core/chaincode	414.235s
error: exit status 1
panic: EOF

goroutine 1 [running]:
panic(0x171b40, 0xc82000a130)
	/usr/lib/go-1.6/src/runtime/panic.go:464 +0x400
main.main()
	/opt/golang/src/github.com/AlekSi/gocov-xml/gocov-xml.go:60 +0x15e
Stopping peer..
Makefile:91: recipe for target 'unit-test' failed
make: *** [unit-test] Error 2
",Linux s390x Debian 8 Jessie,,,,,,,,,,,,,,,,,,,,,,,11/Oct/16 7:59 PM;gongsu;unit-test-chaincode.log;https://jira.hyperledger.org/secure/attachment/10119/unit-test-chaincode.log,,,,,,,,0|i00grt:,,,,,,,,gongsu,rameshthoomu,SriramaSharma,,,,,,,,,,,,,,,,,,"06/Oct/16 11:33 PM;rameshthoomu;[~gongsu] I could see chaincode ID is changed in the above log. This only happens when you run *node-sdk-unit-tests* first and then run *""make unit-tests""*. Could you please confirm.

chaincodeID1:ef78c8752e03b7381af614a50fbe425de38a6eed9dbee2b443efdd6668bd374ecf62a523705aeb48e582cf05f480b7eb3f7e174d728a9e1eed5356b7f6a85b46
exectransaction_test.go:898: Error invoking <44d53a299f3f92fafcb0452877148f5d699247f20caa8756bf204d829338f73ee0a8168d8060a090330fd56cb770c3daa9dece75064532e2b2b2ca731e3f4ff6>: Error invoking 

For more reference, please refer JIRA issue#https://jira.hyperledger.org/browse/FAB-287","07/Oct/16 12:47 AM;gongsu;No I did not run node-sdk-unit-tests before running unit-test. Also note that I ran ""make unit-test"", not ""make unit-tests"".","07/Oct/16 2:41 PM;SriramaSharma;I am able to reproduce the same issue when I run 'make unit-test' on v0.6 branch on ppc64le architecture as well. Currently in v0.6 branch, I am at the below specified commit level:

commit adc16001552cfff073c8e7004ae4f1a093a7a350
Author: Christopher Ferris <chrisfer@us.ibm.com>
Date:   Sat Oct 1 14:45:16 2016 +0200

    Fix FAB-578
    
    Fix FAB-578 incorrect chaincode signature in REST API
    fix rest_api.json
    
    NB: Cherry-picked from a96b9edc80e86 after reverting
    inadvertent merge of master - GMH
    
    Change-Id: I852de103d902d5630f27b43a8057e0ee82f1b020
    Signed-off-by: Christopher Ferris <chrisfer@us.ibm.com>
    Signed-off-by: Greg Haskins <gregory.haskins@gmail.com>
","11/Oct/16 8:00 PM;gongsu;Here is the log of running the failed chaincode unit-test with DEBUG level using the command:

# CORE_LOGGING_LEVEL=DEBUG go test -ldflags ""-X github.com/hyperledger/fabric/metadata.Version=0.7.0-snapshot-c8e6615"" github.com/hyperledger/fabric/core/chaincode -p 1 -timeout=20m

 [^unit-test-chaincode.log] ","12/Oct/16 6:15 PM;gongsu;OK here is the problem although I don't know yet why this is happening on z but not x86. When chaincode_example02 is deployed on z, it gets an ef78... ID, as shown below:

{quote}--- FAIL: TestChaincodeInvokeChaincode (94.57s)
        exectransaction_test.go:797: TestChaincodeInvokeChaincode starting
        db_test_exports.go:47: Creating testDB
        exectransaction_test.go:862: deployed chaincode_example02 got cID1:path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" name:""ef78c8752e03b7381af614a50fbe425de38a6eed9dbee2b443efdd6668bd374ecf62a523705aeb48e582cf05f480b7eb3f7e174d728a9e1eed5356b7f6a85b46"" ,
                 *chaincodeID1:ef78c8752e03b7381af614a50fbe425de38a6eed9dbee2b443efdd6668bd374ecf62a523705aeb48e582cf05f480b7eb3f7e174d728a9e1eed5356b7f6a85b46*{quote}

However, when later when invoked, the chaincode ID became ee5b...

{quote}13:37:09.747 [chaincode] afterInvokeChaincode -> DEBU 8b3 Received INVOKE_CHAINCODE in state busyxact, invoking another chaincode
13:37:09.747 [chaincode] func1 -> DEBU 8b4 [5ecacdd4]state is busyxact
13:37:09.747 [chaincode] func1 -> DEBU 8b5 [5ecacdd4] C-call-C
13:37:09.747 [chaincode] func1 -> DEBU 8b6 [5ecacdd4] *C-call-C ee5b24a1f17c356dd5f6e37307922e39ddba12e5d2e203ed93401d7d05eb0dd194fb9070549c5dc31eb63f4e654dbd5a1d86cbb30c48e3ab1812590cd0f78539*
13:37:09.747 [chaincode] func1 -> DEBU 8b7 [5ecacdd4]Failed to launch invoked chaincode. Sending ERROR
{quote}

On x86, chaincode_example02 gets the correct ID ee5b... when it was deployed.","14/Oct/16 5:27 PM;gongsu;OK the bug has been chased down. When chaincode_example02 gets deployed, the calculation of the hashcode includes ALL files in the chaincode_example02 directory. I have some stray files there over the course of playing with various things. So the hashcode came out as ef78... Later when chaincode_example04 invokes chaincode_example02, the ""correct"" hashcode ee5b... is hardcoded in chaincode_example04.go.

Instead of hardcoding the hashcode of chaincode_example02, a better solution would be to have exectransaction_test.go pass in whatever the deployment hashcode of chaincode_example02 into chaincode_example04. I will push a patch to gerrit.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Switch the fabric-starter-kit Dockerfile to install HFC from npm instead of local file system,FAB-541,12842,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,jimthematrix,jimthematrix,30/Sep/16 2:35 PM,09/Oct/16 6:29 AM,26/Apr/18 6:50 AM,09/Oct/16 6:26 AM,,,,,,,,,,,08/Oct/16 12:00 AM,0,node-SDK,,,,,,,"The last line of the Dockerfile is currently like this:

# install the hfc locally for use by the application
RUN npm install $GOPATH/src/github.com/hyperledger/fabric/sdk/node

This means the version of HFC can get out of sync with what the application developers are told to use, namely the version published in npm.

Also the publishing of this image could be lagging behind the publishing of HFC in npm, resulting in errors seen with the starter kit that have already been fixed in npm.

Should really switch to ""RUN npm install hfc""",,;09/Oct/16 6:29 AM;mastersingh24;3600,,,,3600,0,3600,100%,3600,0,3600,,,,,,,,,,,,,,,,,,,,0|i00gdd:,,Sprint 2,,,,,,jimthematrix,mastersingh24,,,,,,,,,,,,,,,master,,,true,"08/Oct/16 1:34 PM;mastersingh24;
Here's what the contents of the Dockerfile should be:


{noformat}
FROM hyperledger/fabric-peer:latest
# setup the chaincode sample
WORKDIR $GOPATH/src/github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02
RUN go build
# install the hfc locally for use by the application
RUN npm install hfc{noformat}


",08/Oct/16 5:03 PM;mastersingh24;I'll take this unless someone else has it?,08/Oct/16 7:30 PM;mastersingh24;https://gerrit.hyperledger.org/r/#/c/1621/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Networking issue with Docker Compose file for BDD tests,FAB-540,12841,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jeffgarratt,kchristidis,kchristidis,30/Sep/16 3:46 AM,31/May/17 1:58 PM,26/Apr/18 6:50 AM,30/Sep/16 4:29 PM,,,,,,fabric-orderer,,,,,,0,consensus,,,,,,,"As a reminder, we are dealing with three components when we talk about the Kafka orderer:

# The Kafka/ZooKeeper container [0]
# The Kafka orderer [1]
# A client that interacts with the orderer (sample client [2])

Everything works great in both localhost and the Vagrant environment.

Things start to fail interesting ways if you bring up the Kafka orderer in its own container. Consider the Docker Compose file [4] which takes care of bringing up Kafka/Zookeeper and the orderer. A successful connection is established between these two containers, however an attempt to interact with the orderer via the client (bd_counter -rpc broadcast -count 1 -server 127.0.0.1:5005) fails with the following error:

{quote}2016/09/29 22:36:09 grpc: ClientConn.resetTransport failed to create client transport: connection error: desc = ""transport: write tcp 127.0.0.1:60785->127.0.0.1:5005: write: broken pipe""; Reconnecting to ""127.0.0.1:5005""
[22:36:09]    broadcast.go:55: [DEBUG] Sent broadcast message ""0"" to orderer
2016/09/29 22:36:09 transport: http2Client.notifyError got notified that the client transport was broken read tcp 127.0.0.1:60787->127.0.0.1:5005: read: connection reset by peer.
panic: Failed to receive a broadcast reply from orderer: rpc error: code = 13 desc = ""transport is closing""{quote}

All scenarios in the orderer-kafka.feature [4] file fail as well.

The only way I could finally get it to work was by modifying the Docker Compose file so as to have both Kafka/ZooKeeper and the orderer use the Docker host's (i.e. the Vagrant environment's) network interfaces (net: ""host""), and hard-coding references to ""localhost"" in both the Docker Compose file [5] and orderer_util.py [6].

Do we have any idea what's going wrong here?







[0] docker run -p 2181:2181 -p 9092:9092 --env ADVERTISED_HOST=0.0.0.0 --env ADVERTISED_PORT=9092 --name kafka kchristidis/kafka
[1] https://github.com/kchristidis/fabric/tree/803297429738731542148a043f49e368c2d0e09e/orderer (go install; ORDERER_GENERAL_ORDERERTYPE=kafka orderer)
[2] https://github.com/kchristidis/fabric/tree/803297429738731542148a043f49e368c2d0e09e/orderer/sample_clients/bd_counter (go install; bd_counter -rpc broadcast -count 1)
[3] https://github.com/kchristidis/fabric/blob/06b0fd0ddf5b97e220f26aee87f5a9668499832d/bddtests/docker-compose-orderer-kafka.yml
[4] https://github.com/kchristidis/fabric/blob/803297429738731542148a043f49e368c2d0e09e/bddtests/orderer-kafka.feature
[5] https://github.com/kchristidis/fabric/commit/803297429738731542148a043f49e368c2d0e09e#diff-78b987050d93022b0ba15ff7f82b0944
[6] https://github.com/kchristidis/fabric/commit/803297429738731542148a043f49e368c2d0e09e#diff-94b9f1f04698ba57fc7283087f8194cf",,,,,,,,,,,,,,FAB-32,,,,,,,,,,,,,,,,,FAB-32,0|hzzzza:6wi,,Sprint 2,,,,,,jeffgarratt,kchristidis,,,,,,,,,,,,,,,,,,,30/Sep/16 4:28 PM;jeffgarratt;Let me know if this is not resolved.  Thanks.,30/Sep/16 4:28 PM;kchristidis;Resolved thanks to Jeff's help - thanks!,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
deploying Java chaincode doesn't work through REST Client in netmode,FAB-512,12813,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,satheeshk,Ratnakar,Ratnakar,29/Sep/16 1:39 PM,12/Oct/16 2:37 AM,26/Apr/18 6:50 AM,12/Oct/16 2:37 AM,v0.6,,,,,fabric-devenv,,,,,,0,.6,chaincode,,,,,,"Unable to deploy Java chaincode using REST Client when peer started in net mode as per the instructions given in https://github.com/hyperledger/fabric/blob/master/docs/Setup/JAVAChaincode.md


{code:java}
peer node start
{code}

Deploy request :

post: http://127.0.0.1:7050/chaincode

{code:java}

{
  ""jsonrpc"": ""2.0"",
  ""method"": ""deploy"",
  ""params"": {
    ""type"": 3,
    ""chaincodeID"":{
        ""path"":""/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/java/SimpleSample""
    },
    ""ctorMsg"": {
        ""args"":[""init"",""a"",""100"",""b"",""200""]
    }
  },
  ""id"": 1
}
{code}

Fails with below error:


{code:java}
{
  ""jsonrpc"": ""2.0"",
  ""error"": {
    ""code"": -32001,
    ""message"": ""Deployment failure"",
    ""data"": ""Error when deploying chaincode: Error getting chaincode package bytes: Error generating hashcode: Error reading file: read /opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/java/SimpleSample: is a directory""
  },
  ""id"": 1
}
{code}

NOTE:
* Works fine when peer is started in DEV mode
* Attached screenshot for reference",,,,,,,,,,,,,,,,,,,,,,,,07/Oct/16 2:24 PM;Ratnakar;core.yaml;https://jira.hyperledger.org/secure/attachment/10108/core.yaml,30/Sep/16 3:03 PM;Ratnakar;java-cc-deploy-dev.png;https://jira.hyperledger.org/secure/attachment/10101/java-cc-deploy-dev.png,30/Sep/16 3:03 PM;Ratnakar;java-cc-query-dev.png;https://jira.hyperledger.org/secure/attachment/10102/java-cc-query-dev.png,29/Sep/16 1:36 PM;Ratnakar;java-net-mode.png;https://jira.hyperledger.org/secure/attachment/10098/java-net-mode.png,11/Oct/16 2:44 PM;satheeshk;peer.log;https://jira.hyperledger.org/secure/attachment/10117/peer.log,07/Oct/16 2:00 PM;Ratnakar;peer_logs.txt;https://jira.hyperledger.org/secure/attachment/10107/peer_logs.txt,,,0|i00gax:,,,,,,,,bmos299,Clayton Sims,mastersingh24,Ratnakar,satheeshk,,,,,,,,,,,,,,,,29/Sep/16 2:51 PM;Clayton Sims;removing fix version.  lets get Gari's agreement before setting that field.  ,30/Sep/16 9:40 AM;mastersingh24;[~satheeshk] - would you mind taking a look at this one?,"30/Sep/16 1:19 PM;satheeshk;[~mastersingh24][~Ratnakar]The type should be 4, instead of  ""type"": 3 in the deployment request.","30/Sep/16 3:03 PM;Ratnakar;[~satheeshk] 


/opt/gopath/src/github.com/hyperledger/fabric/core/rest/rest_api.json

{code:java}
""ChaincodeSpec"": {
            ""type"": ""object"",
            ""properties"": {
                ""type"": {
                    ""type"": ""string"",
                    ""default"": ""GOLANG"",
                    ""example"": ""GOLANG"",
                    ""enum"":[
                        ""UNDEFINED"",
                        ""GOLANG"",
                        ""NODE"",
                        ""JAVA""
                    ],
                    ""description"": ""Chaincode specification language.""
                },
       .....
} 
{code}

Is it not the enum here starts from 0, Since for GOLANG we are using 1 and also I could see 3 works  for JAVA chaincode when running in dev mode.
Do you mean we should use 4 in NET mode ?

PS: Attached screenshots (java-cc-deploy-dev.png, java-cc-query-dev.png) when running the java chaincode in DEV mode","07/Oct/16 12:24 PM;satheeshk;[~Ratnakar] I am referring to enum from chaincode.proto

{code:java}
    enum Type {
        UNDEFINED = 0;
        GOLANG = 1;
        NODE = 2;
        CAR = 3;
        JAVA = 4;
    }
{code}

Type may not be used in dev mode, since it doesn't have to prepare the chaincode deployment package, all that is needed is the chaincode id.

Try using 4 and please report back.
","07/Oct/16 2:00 PM;Ratnakar;[~satheeshk] I have changed the value to 4 as per your suggestion. However it seems Deploy is still failing 

here is the JSON request I have used for Deploy

{code:java}

{ 
  ""jsonrpc"": ""2.0"",
  ""method"": ""deploy"",
  ""params"": {
    ""type"": 4,
    ""chaincodeID"":{
        ""path"":""/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/java/SimpleSample""
    },
    ""ctorMsg"": {
        ""args"":[""init"",""a"",""100"",""b"",""200""]
    },
    ""secureContext"": ""test_user0""
  },
  ""id"": 1
}
{code}
 

Here is the error logs (attached complete debug logs)

{code:java}

13:49:06.556 [dockercontroller] createContainer -> DEBU 47c Create container: dev-jdoe-9ad27c7b81fd084130948bee121799b4f9e88c247904415d02c37e7a2d49eeff4d1216eab8965dc8dbe1bdd590cd88395263816dfade78614c04f01451e990ad
13:49:06.558 [dockercontroller] Start -> DEBU 47d start-could not find image ...attempt to recreate image no such image
13:49:07.537 [dockercontroller] deployImage -> ERRO 47e Error building images: API error (500): {""message"":""The Dockerfile (Dockerfile) cannot be empty""}
13:49:07.537 [dockercontroller] deployImage -> ERRO 47f Image Output:
********************

********************
13:49:07.537 [container] unlockContainer -> DEBU 480 container lock deleted(dev-jdoe-9ad27c7b81fd084130948bee121799b4f9e88c247904415d02c37e7a2d49eeff4d1216eab8965dc8dbe1bdd590cd88395263816dfade78614c04f01451e990ad)
13:49:07.537 [chaincode] Launch -> ERRO 481 launchAndWaitForRegister failed Error starting container: API error (500): {""message"":""The Dockerfile (Dockerfile) cannot be empty""}

{code}

 [^peer_logs.txt] ","07/Oct/16 2:19 PM;satheeshk;[~Ratnakar]Could you please post the contents of core.yaml ? By the looks of it, it doesn't have a valid value for chaincode.java.Dockerfile","07/Oct/16 2:25 PM;Ratnakar;Enclosed core.yaml file [^core.yaml] 

I am Verifying on the commit level :  *adc1600*","10/Oct/16 5:16 PM;bmos299;Hi Satheesh, should this issue be assigned to you?

Thanks,
Barry","11/Oct/16 2:44 PM;satheeshk;Hi [~Ratnakar] I am able to deploy via rest on your commit level after building peer and the images,

$/opt/gopath/src/github.com/hyperledger/fabric$ docker images | grep javaenv
hyperledger/fabric-javaenv                                                                                                                  latest                                  d17aaa6080db        About an hour ago   793.1 MB
hyperledger/fabric-javaenv                                                                                                                  x86_64-0.6.1-preview-snapshot-{color:red}adc1600 {color}  d17aaa6080db        About an hour ago   793.1 MB
hyperledger/fabric-javaenv                                                                                                                  x86_64-0.7.0-SNAPSHOT-e7138ae           c5ea8c3fe017        3 weeks ago         793.1 MB



{noformat}

{
  ""jsonrpc"": ""2.0"",
  ""method"": ""deploy"",
  ""params"": {
    ""type"": 4,
    ""chaincodeID"":{
        ""path"":""/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode/java/SimpleSample""
    },
    ""ctorMsg"": {
        ""args"":[""init"",""a"",""100"",""b"",""200""]
    }
  },
  ""id"": 1
}
{noformat}


Response


{noformat}


    {
        ""jsonrpc"": ""2.0"",
        ""result"":
        {
            ""status"": ""OK"",
            ""message"": ""081d2419d0f56f66e41a145c99e9dce19780f3c5ead80c638bb6c6c006e7bc00eeeae37d1c734399e8846ec55fefda21f1b5ce42a8e5c4d69eff5aad7d0bf83d""
        },
        ""id"": 1
    }
{noformat}


I am attaching the peer logs, we will switch to slack to resolve this quickly.
","12/Oct/16 2:36 AM;Ratnakar;Missing the below images caused the problem 

{code:java}
hyperledger/fabric-javaenv      latest                                  e40a555aed54        About an hour ago   791 MB
hyperledger/fabric-javaenv      x86_64-0.6.1-preview-snapshot-e4a9b47   e40a555aed54        About an hour ago   791 MB
{code}

After following the below  two steps issue is no more reproducible
* Vagrant destory 
* make all",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK] chaincode event support (aka custom events plug-in) test,FAB-494,12795,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,pmullaney,jjjjibm,jjjjibm,27/Sep/16 8:13 PM,03/May/17 9:18 PM,26/Apr/18 6:50 AM,03/May/17 9:18 PM,,,,,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"Create and implement a test plan for the node-sdk -custom event plug-in- +chaincode event support.
+
'Custom events' is synonymous with chaincode events.  Using the term plug-in is misleading.   Here is a chat concerning nomenclature.


pmullaney [1:11 PM]  
right

[1:13]  
plug-in implies that you need a special piece of software loaded for something to work

jjjjibm [1:13 PM]  
yes, and I wasn't seeing that

[1:13]  
maybe it was a plug-in at one time :slightly_smiling_face:

new messages
pmullaney [1:13 PM]  
so thats not the case, chaincode events has support in the sdk and on the fabric side by default",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzs2:5i,,Sprint 2,Sprint 5 - Consensus,,,,,inatatsu,jjjjibm,yoheiueda,,,,,,,,,,,,,,,,,,"18/Oct/16 5:18 PM;jjjjibm;'Custom events' is synonymous with chaincode events. Using the term plug-in is misleading. Here is a chat concerning nomenclature.

pmullaney [1:11 PM] 
 right

[1:13] 
 plug-in implies that you need a special piece of software loaded for something to work

jjjjibm [1:13 PM] 
 yes, and I wasn't seeing that

[1:13] 
 maybe it was a plug-in at one time :slightly_smiling_face:

new messages
 pmullaney [1:13 PM] 
 so thats not the case, chaincode events has support in the sdk and on the fabric side by default
",03/May/17 9:18 PM;jimthematrix;this was already addressed by rest/integration/events.js that [~pmullaney] wrote,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Ledger is not using the Action.SimulationResult protobuf message,FAB-491,12792,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,denyeart,denyeart,denyeart,27/Sep/16 5:16 PM,06/Dec/16 1:46 PM,26/Apr/18 6:50 AM,30/Sep/16 1:49 PM,,,,,,fabric-ledger,,,,,,0,Ledger,,,,,,,"When creating the transaction in the app constructTransaction(), the serialized TxReadWriteSet (simulationResults in the code) is getting added to the EndorseAction.ActionBytes.
And when parsing out the TxReadWriteSet in LockBasedTxMgr.ValidateAndPrepare() you get the tx.EndorsedActions[0].ActionBytes.

There is a layer missing... the serialized TxReadWriteSet should go into the Action.SimulationResult bytes (along with other fields), and then the whole Action should get serialized again into EndorsedAction.ActionBytes.
",,,,,,7200,7200,,0%,7200,7200,,,,,,,,,,,,,,,,,,,,,0|i00dzq:qxi,,Sprint 2,,,,,,denyeart,,,,,,,,,,,,,,,,feature/convergence,master,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
REST is not enabled for multiple peer through block-listner,FAB-446,12747,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,VenkyMadgundi,VenkyMadgundi,26/Sep/16 11:01 AM,07/Apr/17 12:48 PM,26/Apr/18 6:50 AM,07/Apr/17 12:48 PM,,,,v0.6,WON'T FIX,fabric-peer,,,,,,0,,,,,,,,"I was running steps which are given in 'fabric/examples/events/block-listener/README.md', Peer is started but REST IS not enabled. Although I am peer is showing logs:

_vp0_1         | 10:09:48.360 [consensus/noops] newNoops -> DEBU 073 Creating a NOOPS object
vp0_1         | 10:09:48.367 [consensus/noops] newNoops -> INFO 074 NOOPS consensus type = *noops.Noops
vp0_1         | 10:09:48.367 [consensus/noops] newNoops -> INFO 075 NOOPS block size = 500
vp0_1         | 10:09:48.367 [consensus/noops] newNoops -> INFO 076 NOOPS block wait = 1s
vp0_1         | 10:09:48.370 [peer] chatWithSomePeers -> DEBU 077 Starting up the first peer of a new network
vp0_1         | 10:09:48.371 [consensus/statetransfer] verifyAndRecoverBlockchain -> DEBU 078 Validating existing blockchain, highest validated block is 0, valid through 0
vp0_1         | 10:09:48.371 [consensus/statetransfer] blockThread -> INFO 079 Validated blockchain to the genesis block
vp0_1         | 10:09:48.371 [consensus/handler] 1 -> DEBU 07a Starting up message thread for consenter
vp0_1         | 10:09:48.372 [nodeCmd] serve -> INFO 07b Starting peer with ID=name:""vp0"" , network ID=dev, address=172.17.0.3:7051, rootnodes=, validator=true
vp0_1         | 10:09:48.373 [peer] ensureConnected -> DEBU 07c Starting Peer reconnect service (touch service), with period = 6s
vp0_1         | 10:09:48.374 [rest] StartOpenchainRESTServer -> INFO 07d Initializing the REST service on 0.0.0.0:7050, TLS is disabled._",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00g47:,,,,,,,,VenkyMadgundi,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Java chaincode build fails on Fabric V0.6 branch ,FAB-439,12740,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,satheeshk,Ratnakar,Ratnakar,25/Sep/16 7:47 PM,26/Jan/17 4:38 PM,26/Apr/18 6:50 AM,30/Sep/16 2:45 PM,v0.6,,,v0.6,,fabric-devenv,,,,,,0,0.6,chaincode,,,,,,"Unable to build Java chaincode on Fabric V0.6 branch as per the below link
https://github.com/hyperledger/fabric/blob/master/docs/Setup/JAVAChaincode.md#java-chaincode-deployment-in-dev-mode

Build fails with below error


{code:java}
FAILURE: Build failed with an exception.

* What went wrong:
Could not resolve all dependencies for configuration ':examples:chaincode:java:SimpleSample:compileClasspath'.
> Could not find org.hyperledger:shim-client:1.0.
  Searched in the following locations:
      file:/home/vagrant/.m2/repository/org/hyperledger/shim-client/1.0/shim-client-1.0.pom
      file:/home/vagrant/.m2/repository/org/hyperledger/shim-client/1.0/shim-client-1.0.jar
      https://repo1.maven.org/maven2/org/hyperledger/shim-client/1.0/shim-client-1.0.pom
      https://repo1.maven.org/maven2/org/hyperledger/shim-client/1.0/shim-client-1.0.jar
  Required by:
      fabric.examples.chaincode.java:SimpleSample:unspecified

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.

BUILD FAILED

{code}


NOTE : 
- The problem is seen when running in dev mode works fine in net mode. ",,,,,,,,,,,,,,,,,,,,,,,,25/Sep/16 7:49 PM;Ratnakar;java_chaincode_build_failure.txt;https://jira.hyperledger.org/secure/attachment/10096/java_chaincode_build_failure.txt,,,,,,,,0|i00g3z:,,,,,,,,mastersingh24,Ratnakar,satheeshk,,,,,,,,,,,,,,v0.6,feature/convergence,master,true,28/Sep/16 11:05 AM;mastersingh24;[~satheeshk] - can you take a look at this?   I'd like to say we have support for Java chaincode with the v0.6 release,"28/Sep/16 1:08 PM;satheeshk;Hi  [~mastersingh24],

It needs a documentation update, I have submitted a patch
https://gerrit.hyperledger.org/r/#/c/1309/
",28/Sep/16 6:21 PM;mastersingh24;many thanks [~satheeshk],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Docker image build is not portable,FAB-427,12728,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,bcbrock,bcbrock,22/Sep/16 9:16 PM,02/Apr/17 12:41 PM,26/Apr/18 6:50 AM,02/Apr/17 12:41 PM,v0.6,,,v1.0.0,,,,,,,,0,,,,,,,,"I work on many different systems (X86 + POWER), so it is handy to maintain a single Hyperledger fabric tree on a network file system... except that it doesn't work anymore. This network file system quite reasonably does not allow the local ""root"" user to have any special privileges. Docker runs as root, so Docker can not access any of my files. This is the exact message I'm seeing (below). Is there a quick fix that will allow this process to complete on a network file system, or do I have to start maintaining redundant trees on every machine I use?

{code:java}
Building docker src-image
docker build -t hyperledger/fabric-src build/image/src
Sending build context to Docker daemon 12.26 MB
Step 1 : FROM hyperledger/fabric-baseimage:latest
 ---> 16a67cc02985
Step 2 : ADD gopath.tar.bz2 $GOPATH/src/github.com/hyperledger/fabric
 ---> 22d8393a8d20
Removing intermediate container d8168242f66d
Successfully built 22d8393a8d20
docker tag hyperledger/fabric-src hyperledger/fabric-src:x86_64-0.7.0-SNAPSHOT-81fd105
Building build/image/ccenv/bin/protoc-gen-go
docker: Error response from daemon: stat /gsa/ausgsa-h2/03/bcbrock/hyperledger/gopath/src/github.com/hyperledger/fabric/vendor/github.com/golang/protobuf: permission denied.
Makefile:126: recipe for target 'build/image/ccenv/bin/protoc-gen-go' failed
make: *** [build/image/ccenv/bin/protoc-gen-go] Error 125
[bcbrock@arlab178]$ 
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00egf:,,,,,,,,Annbot,bcbrock,mastersingh24,,,,,,,,,,,,,,,,,,05/Nov/16 11:22 AM;mastersingh24;I think this has been resolved?,02/Apr/17 12:41 PM;mastersingh24;I don't think this is an issue any more,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to deploy chaincode in Hyperledger,FAB-412,12713,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,hitarshi,hitarshi,20/Sep/16 1:10 PM,28/Sep/16 11:22 AM,26/Apr/18 6:50 AM,28/Sep/16 11:21 AM,,,,,,fabric-baseimage,,,,,,0,,,,,,,,"I have setup a 2 node Hyperledger network using Docker images by creating 2 containers as per the steps @ http://hyperledger-fabric.readthedocs.io/en/latest/Setup/Network-setup/#leveraging-published-docker-images

Then I tried to deploy a chaincode, which compiles without errors, by calling POST /chaincode API and got response 200 with the hash for the deployed chaincode. 

But immediately after that I got the following error in the docker logs:

08:44:26.560 [consensus/noops] processTransactions -> DEBU 053 Starting TX batch with timestamp: seconds:1473929066 nanos:560229743
08:44:26.560 [consensus/noops] processTransactions -> DEBU 054 Executing batch of 1 transactions with timestamp seconds:1473929066 nanos:560229743
08:44:26.563 [chaincode] getArgsAndEnv -> DEBU 055 Executable is /opt/gopath/bin/1e90b51f9129b97d5312d5c24364085777602a06d40d6e2c9209b4f30d7e66facb26e956443028611539962acc6de550eba03bbb1fd0e7bbd655cb19c5a6ef84
08:44:26.564 [chaincode] Deploy -> DEBU 056 deploying chaincode 1e90b51f9129b97d5312d5c24364085777602a06d40d6e2c9209b4f30d7e66facb26e956443028611539962acc6de550eba03bbb1fd0e7bbd655cb19c5a6ef84(networkid:dev,peerid:vp0)
08:44:26.564 [container] lockContainer -> DEBU 057 waiting for container(dev-vp0-1e90b51f9129b97d5312d5c24364085777602a06d40d6e2c9209b4f30d7e66facb26e956443028611539962acc6de550eba03bbb1fd0e7bbd655cb19c5a6ef84) lock
08:44:26.564 [container] lockContainer -> DEBU 058 got container (dev-vp0-1e90b51f9129b97d5312d5c24364085777602a06d40d6e2c9209b4f30d7e66facb26e956443028611539962acc6de550eba03bbb1fd0e7bbd655cb19c5a6ef84) lock
*{color:#d04437}08:44:26.565 [dockercontroller] deployImage -> ERRO 059 Error building images: cannot connect to Docker endpoint {color}*

So how do I resolve this?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00fzj:,,,,,,,,ericmvaughn,hitarshi,mastersingh24,,,,,,,,,,,,,,,,,,"28/Sep/16 11:10 AM;mastersingh24;You need to make sure that you have the right setting for `CORE_VM_ENDPOINT`.  Typically this ends up being the remote port for the Docker daemon which is not running by default.  You'll need to start the Docker daemon with the `-H` option to and specify the remote IP:Port you want it to listen on (e.g. `-H tcp://0.0.0.0:2375` ) and then specify that as the value for `CORE_VM_ENDPOINT` .  If you use `-H tcp://0.0.0.0:2375` , then the default value in the docs should work","28/Sep/16 11:20 AM;hitarshi;Thanks a lot for the solution. I just tried the same as someone on stackoverflow provided the same.

Additionally I had to do the following to make it work
 
docker pull hyperledger/fabric-baseimage:x86_64-0.1.0
docker tag hyperledger/fabric-baseimage:x86_64-0.1.0 hyperledger/fabric-baseimage:latest

I think it is high time someone updated the official documentation @ http://hyperledger-fabric.readthedocs.io/en/latest/Setup/Network-setup/#leveraging-published-docker-images",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
State snapshot channel buffer exhausted with no remedy,FAB-380,12681,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jyellick,jyellick,jyellick,13/Sep/16 1:54 PM,31/May/17 1:58 PM,26/Apr/18 6:50 AM,13/Sep/16 1:55 PM,v0.5-developer-preview,v0.6,,v0.5-developer-preview,v0.6,fabric-orderer,,,,,12/Sep/16 12:00 AM,0,Consensus,,,,,,,"During state transfer of a state snapshot, one peer sends its full world state to another.  The receiving peer puts messages into a buffer, but in fast systems, the receiving peer may not be able to keep up with the pace of the sending peer.

For this reason, the snapshot channel was created with a buffer, but, there is no feedback in place to slow transmission when the buffer fills, and for sufficiently fast systems with large world states, available RAM will be exhausted before the channel is large enough to handle the whole transmission.

The state snapshot transfer code needs to provide flow control to prevent this buffer overflowing and transfer aborting.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00dvq:sv,,Sprint 1,,,,,,jyellick,,,,,,,,,,,,,,,,feature/convergence,master,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Crash fault during ledger state portion of state transfer not handled correctly,FAB-379,12680,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jyellick,jyellick,jyellick,13/Sep/16 1:50 PM,31/May/17 1:58 PM,26/Apr/18 6:50 AM,13/Sep/16 1:54 PM,v0.5-developer-preview,v0.6,,v0.5-developer-preview,v0.6,fabric-orderer,,,,,12/Sep/16 12:00 AM,0,Consensus,,,,,,,"State transfer has two components, transfer of blocks, and transfer of ledger state.

If block transfer occurs before ledger state transfer, and then a peer crash-faults, the ledger state will not match the block state.  Because peers are assumed to have correct ledger state at startup, this could result in a fork of the blockchain or replying with incorrect data to queries.

The solution to this is to invalidate the state at startup, and verify it before replying to queries or executing invokes.  If the state is invalid, then it should be retrieved from another peer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00dvq:sr,,Sprint 1,,,,,,jyellick,,,,,,,,,,,,,,,,feature/convergence,master,,true,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
JIRA sign-up page confounds new users,FAB-368,12669,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,ryjones,ChristopherFerris,ChristopherFerris,13/Sep/16 2:24 AM,14/Sep/16 1:29 AM,26/Apr/18 6:50 AM,14/Sep/16 1:29 AM,,,,,,,,,,,,0,build-system,,,,,,,"[1] https://jira.hyperledger.org/secure/Signup!default.jspa
[2] identity.linuxfoundation.org

The login has a link to sign-up for a JIRA account that leads to [1] rather than [2]. Then , after creating a JIRA ""account"" users cannot login. This confuses nearly everyone. Then they try to change their password thinking they got it wrong, and that doesn't help.

Can we disable the sign-up and make it clear that the LF ID is needed to login?",,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,,,,,,,,,0|i00dw1:,,Sprint 1,,,,,,ChristopherFerris,ryjones,,,,,,,,,,,,,,,,,,,"13/Sep/16 4:42 AM;ryjones;visit https://jira.hyperledger.org/secure/Dashboard.jspa in an incognito window. that is about as good as I can make it - the text under the login pane, unfortunately, is baked in to JIRA

signup is disabled now, but it tells you to contact the admins to get an account. This is not optimal","14/Sep/16 1:29 AM;ChristopherFerris;Good enough, thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Enroll member request fails with signature verification,FAB-367,12668,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,malik-altaf,malik-altaf,13/Sep/16 12:59 AM,06/Dec/16 9:45 PM,26/Apr/18 6:50 AM,22/Sep/16 6:57 PM,,,,,,fabric-membersrvc,,,,,,0,MembershipServices,Security,,,,,,"When we try to enroll a user, the call to membersrvc fails with ""Signature verification failed"" message. Further investigation shows that the unmarshalling of signature R and S fields is not working correctly on lines 170-171 of ecap.go:
 r.UnmarshalText(sig.R)
 s.UnmarshalText(sig.S)

After these statement if we add a debug, we find that the value of r and s is still 0. If we change these lines to :
 r.SetBytes(sig.R)
 s.SetBytes(sig.S)

the user is enrolled correctly. Can you please provide a fix for this issue or advise any work-around?

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00frz:,,,,,,,,malik-altaf,muralisr,Pardha,satheeshk,,,,,,,,,,,,,,,,,13/Sep/16 2:28 AM;malik-altaf;Same problem with Register User as well,"15/Sep/16 7:00 PM;muralisr;Pardha brought this to my attention...

It does seem strange (to me at least :-)) that Unmarshall can be simply replaced with SetBytes to make it work. Without too much digging in I'd say somehow unmarshal has been done upstream. 

[~jimthematrix]  [~mastersingh24] can you comment please ?","16/Sep/16 12:48 AM;malik-altaf;If it helps, the Signature struct is defined in ca.pb.go as:
type Signature struct {
	Type CryptoType `protobuf:""varint,1,opt,name=type,enum=protos.CryptoType"" json:""type,omitempty""`
	R    []byte     `protobuf:""bytes,2,opt,name=r,proto3"" json:""r,omitempty""`
	S    []byte     `protobuf:""bytes,3,opt,name=s,proto3"" json:""s,omitempty""`
}

which is the same what we got when converted protofile to java class. My understanding is that at some point the proto definition was changed to use byte[] but the code using that was not.","22/Sep/16 1:00 PM;malik-altaf;I found a way to send a byte[] that gets Unmarshalled properly, the solution is no longer needed.

Please close this issue","22/Sep/16 6:58 PM;Pardha;Marked as ""done"" as per Altaf's comment",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
hyperledger/fabric-javaenv Docker image build failures on s390x platform,FAB-358,12659,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,sanchezl,harrijk,harrijk,12/Sep/16 6:09 PM,12/Apr/17 3:23 PM,26/Apr/18 6:50 AM,12/Apr/17 3:23 PM,,,,v1.0.0,,fabric-peer,,,,,,0,,,,,,,,"I am running on an Ubuntu 16.04 KVM image within a zKVM LPAR on the z Systems platform (s390x) and using Hyperledger Fabric build *03c8bad*.

I have run into two issues when issuing the *make peer* command and both issues are related to the building of the *hyperledger/fabric-javaenv* Docker image.

h3. Issue #1
The *Dockerfile.in* located in fabric/images/javaenv is pulling down an x86 platform Docker image ( openjdk:8 ) from Docker Hub and using it as a base image to build the javaenv Docker image.  As a result, during the execution of step 2 within the javaenv Dockerfile, an *exec format* error occurs when attempting to run the wget command.

{quote}Step 2 : RUN wget https://services.gradle.org/distributions/gradle-2.12-bin.zip -P /tmp --quiet
 ---> Running in 090e83e1e6f2
rpc error: code = 2 desc = ""oci runtime error: exec format error""{quote}

As it is currently coded in the *fabric/images/javaenv/Dockerfile.in* file, the s390x platform cannot execute Docker containers built from Docker images created on non-s390x platforms.

I was able to resolve the issue, by changing the *FROM *statement within the Dockerfile.in file to use *hyperledger/fabric-baseimage* that is built during the make process and add a *RUN* statement to install openjdk-8-jdk, which is pulled from s390x Ubuntu repositories.

NOTE: The numbers  listed in the file below are # (hashtags) and got formatted as numbers. I still need to get up to speed with this editor. :)

The contents of *fabric/images/javaenv/Dockerfile.in* were changed to:

FROM hyperledger/fabric-baseimage
# FROM openjdk:8
RUN apt-get install -y openjdk-8-jdk
RUN wget https://services.gradle.org/distributions/gradle-2.12-bin.zip -P /tmp --quiet
RUN unzip -q /tmp/gradle-2.12-bin.zip -d /opt && rm /tmp/gradle-2.12-bin.zip
RUN ln -s /opt/gradle-2.12/bin/gradle /usr/bin
ADD javashimsrc.tar.bz2 /root
ADD protos.tar.bz2 /root
WORKDIR /root
# Build java shim after copying proto files from fabric/proto
RUN core/chaincode/shim/java/javabuild.sh


h3. Issue #2
After I updated the fabric/images/javaenv/Dockerfile.in file to use the hyperledger/fabric-baseimage instead of the x86 openjdk:8 Docker image, the building of the javaenv Docker image progressed until step 8, where an error occurred while building the Java shim:

{quote}Step 8 : RUN core/chaincode/shim/java/javabuild.sh
 ---> Running in 3c66c3d93df9

FAILURE: Build failed with an exception.

* Where:
Build file '/root/core/chaincode/shim/java/build.gradle' line: 29

* What went wrong:
An exception occurred applying plugin request [id: 'java']
> Failed to apply plugin [id 'osdetector']
   > Could not create an instance of type com.google.gradle.osdetector.OsDetectorExtension_Decorated.

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.
The command '/bin/sh -c core/chaincode/shim/java/javabuild.sh' returned a non-zero code: 1
Makefile:217: recipe for target 'build/image/javaenv/.dummy' failed
make: *** [build/image/javaenv/.dummy] Error 1{quote}

At this point I suspected that the s390x platform was not supported for this shim build.  To confirm this I performed the following operations:

I commented out the following line from fabric/images/javaenv/Dockerfile.in:
{quote}RUN core/chaincode/shim/java/javabuild.sh{quote}

I then ran the make and this allowed for a modified hyperledger/fabric-javaenv image to be built for debugging.

Next I ran a Docker container using the modified hyperledger/fabric-javaenv Docker image. Once inside the javaenv container, I issued the following commands:

{quote}apt-get install -y vim
vim /root/core/chaincode/shim/java/javabuild.sh

Change:
gradle -q -b ${PARENTDIR}/core/chaincode/shim/java/build.gradle clean

TO:
gradle --stacktrace --debug -b ${PARENTDIR}/core/chaincode/shim/java/build.gradle clean

Save the javabuild.sh file

cd /root
core/chaincode/shim/java/javabuild.sh
{quote}
After running the javabuild.sh script the following stacktrace was displayed:

{quote}17:47:11.825 [INFO] [com.google.gradle.osdetector.OsDetector] ------------------------------------------------------------------------
17:47:11.826 [INFO] [com.google.gradle.osdetector.OsDetector] Detecting the operating system and CPU architecture
17:47:11.827 [INFO] [com.google.gradle.osdetector.OsDetector] ------------------------------------------------------------------------
17:47:11.828 [INFO] [com.google.gradle.osdetector.OsDetector] os.detected.name=linux
17:47:11.829 [INFO] [com.google.gradle.osdetector.OsDetector] os.detected.arch=unknown
17:47:11.829 [INFO] [com.google.gradle.osdetector.OsDetector] os.detected.classifier=linux-unknown
17:47:11.831 [DEBUG] [org.gradle.configuration.project.BuildScriptProcessor] Timing: Running the build script took 3.703 secs
17:47:11.874 [ERROR] [org.gradle.BuildExceptionReporter]
17:47:11.875 [ERROR] [org.gradle.BuildExceptionReporter] FAILURE: Build failed with an exception.
17:47:11.876 [ERROR] [org.gradle.BuildExceptionReporter]
17:47:11.876 [ERROR] [org.gradle.BuildExceptionReporter] * Where:
17:47:11.877 [ERROR] [org.gradle.BuildExceptionReporter] Build file '/root/core/chaincode/shim/java/build.gradle' line: 29
17:47:11.877 [ERROR] [org.gradle.BuildExceptionReporter]
17:47:11.878 [ERROR] [org.gradle.BuildExceptionReporter] * What went wrong:
17:47:11.879 [ERROR] [org.gradle.BuildExceptionReporter] An exception occurred applying plugin request [id: 'java']
17:47:11.879 [ERROR] [org.gradle.BuildExceptionReporter] > Failed to apply plugin [id 'osdetector']
17:47:11.880 [ERROR] [org.gradle.BuildExceptionReporter]    > Could not create an instance of type com.google.gradle.osdetector.OsDetectorExtension_Decorated.
17:47:11.881 [ERROR] [org.gradle.BuildExceptionReporter]
17:47:11.881 [ERROR] [org.gradle.BuildExceptionReporter] * Exception is:
17:47:11.884 [ERROR] [org.gradle.BuildExceptionReporter] org.gradle.api.plugins.InvalidPluginException: An exception occurred applying plugin request [id: 'java']
17:47:11.884 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.plugin.use.internal.DefaultPluginRequestApplicator.applyPlugin(DefaultPluginRequestApplicator.java:178)
17:47:11.885 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.plugin.use.internal.DefaultPluginRequestApplicator.applyPlugins(DefaultPluginRequestApplicator.java:139)
17:47:11.886 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.configuration.DefaultScriptPluginFactory$ScriptPluginImpl.apply(DefaultScriptPluginFactory.java:137)
17:47:11.886 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:38)
17:47:11.887 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.configuration.project.BuildScriptProcessor.execute(BuildScriptProcessor.java:25)
17:47:11.887 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.configuration.project.ConfigureActionsProjectEvaluator.evaluate(ConfigureActionsProjectEvaluator.java:34)
17:47:11.888 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.configuration.project.LifecycleProjectEvaluator.evaluate(LifecycleProjectEvaluator.java:55)
17:47:11.888 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.project.AbstractProject.evaluate(AbstractProject.java:532)
17:47:11.889 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.project.AbstractProject.evaluate(AbstractProject.java:93)
17:47:11.890 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.execution.TaskPathProjectEvaluator.configureHierarchy(TaskPathProjectEvaluator.java:47)
17:47:11.890 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.configuration.DefaultBuildConfigurer.configure(DefaultBuildConfigurer.java:35)
17:47:11.891 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.initialization.DefaultGradleLauncher$2.run(DefaultGradleLauncher.java:125)
17:47:11.891 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.internal.Factories$1.create(Factories.java:22)
17:47:11.892 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)
17:47:11.892 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:52)
17:47:11.893 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:122)
17:47:11.893 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.initialization.DefaultGradleLauncher.access$200(DefaultGradleLauncher.java:32)
17:47:11.894 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:99)
17:47:11.894 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:93)
17:47:11.894 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)
17:47:11.895 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:62)
17:47:11.895 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.initialization.DefaultGradleLauncher.doBuild(DefaultGradleLauncher.java:93)
17:47:11.896 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.initialization.DefaultGradleLauncher.run(DefaultGradleLauncher.java:82)
17:47:11.896 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.exec.InProcessBuildActionExecuter$DefaultBuildController.run(InProcessBuildActionExecuter.java:94)
17:47:11.897 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:28)
17:47:11.898 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)
17:47:11.898 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:43)
17:47:11.899 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:28)
17:47:11.899 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:75)
17:47:11.900 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:45)
17:47:11.900 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.exec.DaemonUsageSuggestingBuildActionExecuter.execute(DaemonUsageSuggestingBuildActionExecuter.java:51)
17:47:11.901 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.exec.DaemonUsageSuggestingBuildActionExecuter.execute(DaemonUsageSuggestingBuildActionExecuter.java:28)
17:47:11.901 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.cli.RunBuildAction.run(RunBuildAction.java:43)
17:47:11.902 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.internal.Actions$RunnableActionAdapter.execute(Actions.java:170)
17:47:11.902 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:237)
17:47:11.903 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:210)
17:47:11.903 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.cli.JavaRuntimeValidationAction.execute(JavaRuntimeValidationAction.java:35)
17:47:11.904 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.cli.JavaRuntimeValidationAction.execute(JavaRuntimeValidationAction.java:24)
17:47:11.904 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:206)
17:47:11.905 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:169)
17:47:11.905 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:33)
17:47:11.906 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:22)
17:47:11.906 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.Main.doAction(Main.java:33)
17:47:11.907 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.bootstrap.EntryPoint.run(EntryPoint.java:45)
17:47:11.907 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:54)
17:47:11.908 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:35)
17:47:11.908 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.launcher.GradleMain.main(GradleMain.java:23)
17:47:11.908 [ERROR] [org.gradle.BuildExceptionReporter] Caused by: org.gradle.api.internal.plugins.PluginApplicationException: Failed to apply plugin [id 'osdetector']
17:47:11.909 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.plugins.DefaultPluginManager.doApply(DefaultPluginManager.java:153)
17:47:11.909 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.plugins.DefaultPluginManager.apply(DefaultPluginManager.java:112)
17:47:11.910 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.plugins.DefaultObjectConfigurationAction.applyType(DefaultObjectConfigurationAction.java:112)
17:47:11.910 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.plugins.DefaultObjectConfigurationAction.access$200(DefaultObjectConfigurationAction.java:35)
17:47:11.911 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.plugins.DefaultObjectConfigurationAction$3.run(DefaultObjectConfigurationAction.java:79)
17:47:11.912 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.plugins.DefaultObjectConfigurationAction.execute(DefaultObjectConfigurationAction.java:135)
17:47:11.912 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.project.AbstractPluginAware.apply(AbstractPluginAware.java:46)
17:47:11.913 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.plugins.PluginAware$apply.call(Unknown Source)
17:47:11.913 [ERROR] [org.gradle.BuildExceptionReporter]        at com.google.protobuf.gradle.ProtobufPlugin.doApply(ProtobufPlugin.groovy:104)
17:47:11.914 [ERROR] [org.gradle.BuildExceptionReporter]        at com.google.protobuf.gradle.ProtobufPlugin$_apply_closure1.doCall(ProtobufPlugin.groovy:86)
17:47:11.914 [ERROR] [org.gradle.BuildExceptionReporter]        at com.sun.proxy.$Proxy28.execute(Unknown Source)
17:47:11.914 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.plugins.DefaultPluginManager$2.execute(DefaultPluginManager.java:209)
17:47:11.915 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.plugins.DefaultPluginManager$2.execute(DefaultPluginManager.java:207)
17:47:11.915 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.listener.ActionBroadcast.execute(ActionBroadcast.java:39)
17:47:11.916 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.DefaultDomainObjectCollection.doAdd(DefaultDomainObjectCollection.java:165)
17:47:11.916 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.DefaultDomainObjectCollection.add(DefaultDomainObjectCollection.java:159)
17:47:11.917 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.plugins.DefaultPluginManager$1.run(DefaultPluginManager.java:91)
17:47:11.917 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.plugins.DefaultPluginManager.doApply(DefaultPluginManager.java:147)
17:47:11.918 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.plugins.DefaultPluginManager.apply(DefaultPluginManager.java:104)
17:47:11.918 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.plugin.use.internal.DefaultPluginRequestApplicator$6.run(DefaultPluginRequestApplicator.java:141)
17:47:11.919 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.plugin.use.internal.DefaultPluginRequestApplicator.applyPlugin(DefaultPluginRequestApplicator.java:166)
17:47:11.919 [ERROR] [org.gradle.BuildExceptionReporter]        ... 46 more
17:47:11.920 [ERROR] [org.gradle.BuildExceptionReporter] Caused by: org.gradle.internal.reflect.ObjectInstantiationException: Could not create an instance of type com.google.gradle.osdetector.OsDetectorExtension_Decorated.
17:47:11.920 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.internal.reflect.DirectInstantiator.newInstance(DirectInstantiator.java:51)
17:47:11.921 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.ClassGeneratorBackedInstantiator.newInstance(ClassGeneratorBackedInstantiator.java:36)
17:47:11.921 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.plugins.DefaultConvention.create(DefaultConvention.java:106)
17:47:11.922 [ERROR] [org.gradle.BuildExceptionReporter]        at com.google.gradle.osdetector.OsDetectorPlugin.apply(OsDetectorPlugin.groovy:23)
17:47:11.922 [ERROR] [org.gradle.BuildExceptionReporter]        at com.google.gradle.osdetector.OsDetectorPlugin.apply(OsDetectorPlugin.groovy)
17:47:11.923 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.plugins.ImperativeOnlyPluginApplicator.applyImperative(ImperativeOnlyPluginApplicator.java:35)
17:47:11.923 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.plugins.RuleBasedPluginApplicator.applyImperative(RuleBasedPluginApplicator.java:43)
17:47:11.924 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.api.internal.plugins.DefaultPluginManager.doApply(DefaultPluginManager.java:137)
17:47:11.924 [ERROR] [org.gradle.BuildExceptionReporter]        ... 66 more
17:47:11.925 [ERROR] [org.gradle.BuildExceptionReporter] Caused by: java.lang.ExceptionInInitializerError
17:47:11.925 [ERROR] [org.gradle.BuildExceptionReporter]        at com.google.gradle.osdetector.OsDetectorExtension.<init>(OsDetectorPlugin.groovy:28)
17:47:11.926 [ERROR] [org.gradle.BuildExceptionReporter]        at com.google.gradle.osdetector.OsDetectorExtension_Decorated.<init>(Unknown Source)
17:47:11.926 [ERROR] [org.gradle.BuildExceptionReporter]        at org.gradle.internal.reflect.DirectInstantiator.newInstance(DirectInstantiator.java:49)
17:47:11.927 [ERROR] [org.gradle.BuildExceptionReporter]        ... 73 more
17:47:11.927 [ERROR] [org.gradle.BuildExceptionReporter] Caused by: kr.motd.maven.os.DetectionException: unknown os.arch: s390x
17:47:11.928 [ERROR] [org.gradle.BuildExceptionReporter]        at kr.motd.maven.os.Detector.detect(Detector.java:54)
17:47:11.928 [ERROR] [org.gradle.BuildExceptionReporter]        at com.google.gradle.osdetector.OsDetector$Impl.<init>(OsDetector.java:55)
17:47:11.929 [ERROR] [org.gradle.BuildExceptionReporter]        at com.google.gradle.osdetector.OsDetector.<clinit>(OsDetector.java:27)
17:47:11.929 [ERROR] [org.gradle.BuildExceptionReporter]        ... 76 more
17:47:11.930 [ERROR] [org.gradle.BuildExceptionReporter]
17:47:11.930 [LIFECYCLE] [org.gradle.BuildResultLogger]
17:47:11.931 [LIFECYCLE] [org.gradle.BuildResultLogger] BUILD FAILED{quote}

As can be seen in the stacktrace above, the s390x platform is not supported when attempting to build the Java shim.
",,,,,,,,,,,,,,FAB-273,,,FAB-1794,,,,,,,,,,,,,,,0|i00fqn:,,,,,,,,bsmita,ChristopherFerris,denyeart,harrijk,inatatsu,rameshthoomu,samding01,satheeshk,silliman,SriramaSharma,vpaprots,,,,,,,,,,13/Sep/16 2:48 AM;ChristopherFerris;we should stub out java shim build on Z for now.,"13/Sep/16 12:27 PM;harrijk;In addition to the stubbing out of the java shim, the javaenv Dockerfile FROM statement needs to be changed to something other than an x86-only base image.  Otherwise, the build will still fail.","13/Sep/16 2:02 PM;satheeshk;Java docker env needs only openjdk, gradle and maven. So this can follow the same approach as Base image to figure out the architecture and use that as the base image `FROM _BASE_`, then add openjdk, gradle and maven to it. 

Gradle use osdetector plugin to figure out OS architecture information to generate java source from .proto for compilation, and it fails there. We can try the new gradle protobuf plugin that uses maven's latest osdetector plugin.","14/Sep/16 3:02 PM;SriramaSharma;The same issue is applicable for ppc64le platform as well. 

Maven's osdetector plugin (version >1.3.0 ) has support for s390x and ppc64le. so using that plugin would help surpass the first issue. However subsequently, in build.gradle file, 'protoc' and 'grpc-jaca' is being pulled from public maven repository which only has x86_64 binaries. 

So as a next step, if we can make use of 'hyperledger/fabric-baseimage' directly in the javaenv Dockerfile FROM statement,  and add openjdk, gradle, and maven on top of it. Then we could even point the path in build.gradle to pick local 'protoc' which is part of the fabric base image (as against to pulling it from maven repo).","20/Sep/16 6:33 PM;rameshthoomu;Observed below error while testing [~SriramaSharma] patch (https://github.com/SriramaSharma/fabric/tree/v0.6) on Power node:

00:21:56.855 ?   	github.com/hyperledger/fabric/core/chaincode/platforms/car	[no test files]
00:22:09.645 2016/09/20 17:52:43 setting Number of procs to -1, was 8
00:22:09.645 2016/09/20 17:52:47 Failed Chaincode docker build:
00:22:09.645 Step 1 : FROM hyperledger/fabric-ccenv:ppc64le-0.6.1-preview-snapshot-9fca22a
00:22:09.645  ---> 0baa76e0f8c8
00:22:09.645 Step 2 : COPY package.car /tmp/package.car
00:22:09.645  ---> 0dfc7155ca77
00:22:09.645 Removing intermediate container accd4658da32
00:22:09.645 Step 3 : RUN chaintool buildcar /tmp/package.car -o $GOPATH/bin/c54f83ff2d38a4b9ebf0e7ea1ce35e2022c8144048a664e89bb2a7d43c2f6df063703721c804eef8a53a91e3f74f902fdd7b8e75bc1c5f16b6eba079db4cc55f && rm /tmp/package.car
00:22:09.645  ---> Running in a32c8cdc0ca1
00:22:09.645 [91mUnrecognized option: -client
00:22:09.645 Error: Could not create the Java Virtual Machine.
00:22:09.645 Error: A fatal exception has occurred. Program will exit.
00:22:09.645 [0m
00:22:09.645 --- FAIL: TestCar_BuildImage (3.40s)
00:22:09.645 	car_test.go:53: Error building Chaincode container: The command '/bin/sh -c chaintool buildcar /tmp/package.car -o $GOPATH/bin/c54f83ff2d38a4b9ebf0e7ea1ce35e2022c8144048a664e89bb2a7d43c2f6df063703721c804eef8a53a91e3f74f902fdd7b8e75bc1c5f16b6eba079db4cc55f && rm /tmp/package.car' returned a non-zero code: 1
00:22:09.645 FAIL
00:22:09.645 coverage: 0.0% of statements
00:22:09.645 FAIL	github.com/hyperledger/fabric/core/chaincode/platforms/car/test	3.438s
00:22:09.657 error: exit status

Build file: https://jenkins.hyperledger.org/sandbox/job/fabric-on-power/27/console.

[~ghaskins] [~bsmita] [~harrijk] [~muralisr] inputs please?","21/Sep/16 3:51 PM;bsmita;With Power it seems chaintool gives the following error:
Unrecognized option: -client
Error: Could not create the Java Virtual Machine.
Error: A fatal exception has occurred. Program will exit.

This is because JVM on Power does not take -client flag. 

Greg Haskins put in a patch for chaintool :  :jvm-opts [""-server""]
He will be dropping in this patch soon, may be version v0.9.1","21/Sep/16 8:07 PM;samding01;The issue seems to me that gradle uses os-maven-plugin  that identifies the OS, however the default version (1.2.3) does not know s390x. After replacing it with version 1.4.0, it can progress, but failed in a new place:

  git diff core/chaincode/shim/java/build.gradle
diff --git a/core/chaincode/shim/java/build.gradle b/core/chaincode/shim/java/build.gradle
index 871ae83..1c3f58a 100644
--- a/core/chaincode/shim/java/build.gradle
+++ b/core/chaincode/shim/java/build.gradle
@@ -22,12 +22,14 @@ buildscript {
     }
     dependencies {
         classpath 'com.google.protobuf:protobuf-gradle-plugin:0.7.6'
+        classpath ""gradle.plugin.com.google.gradle:osdetector-gradle-plugin:1.4.0""
     }
 }

 plugins {
     id ""java""
     id ""com.google.protobuf"" version ""0.7.6""
+    id ""com.google.osdetector"" version ""1.4.0""
     id ""eclipse""
     id ""maven-publish""

and
   {quote} $  gradle -b core/chaincode/shim/java/build.gradle clean
        ............
         FAILURE: Build failed with an exception.

        * What went wrong:
        A problem occurred configuring project ':core:chaincode:shim:java'.
       > Could not resolve all dependencies for configuration ':core:chaincode:shim:java:protobufToolsLocator_protoc'.
        > Could not find protoc-linux-s390_64.exe (com.google.protobuf:protoc:3.0.0-beta-2).
           Searched in the following locations:
                 https://repo1.maven.org/maven2/com/google/protobuf/protoc/3.0.0-beta-2/protoc-3.0.0-beta-2-linux-s390_64.exe

         * Try:
         Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.

          BUILD FAILED
 {quote}

""protoc-3.0.0-beta-2-linux-s390_64.exe""  is not existing. ","26/Sep/16 2:26 PM;harrijk;Hi Sam.

I believe this issue you are seeing was supposed to be addressed with a pull request that was done on Github before they moved to Gerrit.

See https://github.com/hyperledger-archives/fabric/pull/2280

I'm not sure why all of these pull requests didn't get moved into gerrit.","26/Sep/16 2:43 PM;samding01;Hi John,

Yes, the  #2280 lets us build ""protoc"". but the java images needs another ""protoc-gen-grpc-java"" from grpc-java, 
do yo have any updated information to build    ""protoc-gen-grpc-java""?

Thanks,

","26/Sep/16 2:57 PM;harrijk;Hi Sam.

I don't have any information on building protoc-gen-grpc-java.  You can check with Gong Su as he seems to be on top off the latest issues. ","07/Nov/16 3:41 PM;harrijk;Here are the list of issues with building the javaenv docker image for the z Systems (s390x) platform:

*1.* The version of os.detector used in the java shim's build.gradle file does not recognize the s390x platform.
*Mitigation Path:* include the classpath ""gradle.plugin.com.google.gradle:osdetector-gradle-plugin:1.4.0"" in the build.gradle file's buildscript dependency list.

*2.* The protoc:3.0.0-beta-2 and protoc-gen-grpc-java-0.13.2 dependencies to build the java shim do not exist on the maven repositories for the s390x platforms.
*Mitigation Path:* Both of the above dependencies (protoc and protoc-gen-grpc-java) need to be manually built for the s390x platform.  I am working on a solution to include both of the dependencies when the javaenv docker image is built with minimal changes to the build.gradle and the main fabric/Makefile files as well as reducing the build time for the s390x version of the javaenv docker image.

As soon as these issues are resolved, we can take the next step of incorporating z Systems into the CI Pipeline for Fabric builds.","07/Nov/16 4:19 PM;vpaprots;We need opinion from developers at DTCC, [~satheeshk] perhaps. If they miss spam from JIRA, it might be good to ask for their opinion/review at #fabric-sdk-java. There are two other considerations:
- Greg Haskins had mentioned, why don't we use baseimage for javaenv base?
- on #fabric-sdk-java there was talk about moving to maven, which doesn't/shouldn't require as much arm-twisting to get to work on p/z, maybe that is getting ready?","07/Nov/16 4:28 PM;harrijk;One of the solutions that I'm looking at is to include both of the java shim build dependencies in the s390x fabric-baseimage and then use fabric-baseimage for the javeenv docker image build.

I have not done anything with the #fabric-sdk-java channel, but will take a look.","08/Nov/16 5:26 AM;satheeshk;We moved away from the the common base image to make the Java chaincode runtime docker image leaner. If this solves problem with the build then we can start to use the fabric-base image again. The reason we use osdetector plugin is to generate Java classes from proto files using native protoc binaries. Moving to Maven does not actually solve this.

We can work around this with 2 approaches,
1. Checking the generated source files in the repository ( There was some discussion to remove the checked in code from git)
2. Try to use the pure java code generator (https://github.com/psaradhi/protobuf) currently in the works. I am testing this and we can hope to integrate this soon.
By doing this we would no longer need protoc:3.0.0-beta-2 and protoc-gen-grpc-java-0.13.2.

Besides, this is something I could see it happen again, if we were to include other native code libraries in the future and its not supported in p/z platforms. ","08/Nov/16 9:04 PM;harrijk;[~satheeshk], ideally option #1 would be my preference.  If I read it correctly, this option would eliminate any need to compile the proto files into java source files.

Option #2 would be my second choice.

What would it take to move forward with option #1?  Is there anything that I could do to accelerate this effort?

[~ghaskins], your thoughts?","11/Apr/17 8:45 PM;denyeart;[~harrijk][~rameshthoomu][~sanchezl][~greg.haskins]
Any update on this one? Is it still a valid defect?  Should the target be 1.0.0 or 1.1?",11/Apr/17 9:47 PM;denyeart;Is this related to FAB-1794?,"11/Apr/17 10:20 PM;harrijk;[~denyeart] [~sanchezl] [~greg.haskins] ...This issue relates for FAB-1794.  Although changes have been made to the Java SHIM build process, the issue still remains that the Java SHIM cannot build on z and p due to architecture specific pre-reqs that are currently not available.  The end result of this issue is that Java chaincode is not currently supported on z or p.

I had attempted to bump up the priority of FAB-1794 to ""highest"", but it was brought back down to ""high"".  I would like to have Java chaincode support in HL 1.0, if possible

Luis has started to take a look at what is involved to resolve this Java SHIM build issue for z and p.  ",12/Apr/17 1:52 AM;denyeart;[~harrijk] Can either FAB-358 or FAB-1794 be closed as dup of the other one?  Or do we need two different fixes?,12/Apr/17 2:11 PM;harrijk;[~denyeart] You can close out FAB-358 as a dup of FAB-1794. ,,,,,,,,,,,,,,,,,,,,,,
Chaincode Deployment Issue using HFC Node SDK with the latest version of Hyperledger,FAB-347,12648,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,hgabre,gauravgiri,gauravgiri,12/Sep/16 7:55 AM,07/Apr/17 12:49 PM,26/Apr/18 6:50 AM,07/Apr/17 12:49 PM,,,,v0.6,WON'T FIX,fabric-peer,,,,,,0,,,,,,,,"Issue related to chaincode deployment using HFC Node SDK with error message: Incorrect number of arguments

Creating this issue for deployment error using HFC https://www.npmjs.com/package/hfc (with both current version 0.5.2, and previous version 0.6.0) on the latest version of hyperledger/fabric from gerrit http://gerrit.hyperledger.org/r/fabric
This issue has is linked to a previous issue of deployment, but this is specifically related to HFC related deployment: https://jira.hyperledger.org/browse/FAB-208

Steps to reproduce the issue:
1. checked out the latest version of hyperledger fabric source from gerrit repository 
2. vagrant up 
3. start membersrvc: i) make membersrvc ii) membersrvc
4. start peer node: i) change peer/core.yaml and enable security enabled: true ii) make peer iii) peer node start
4. copy from fabric\examples\chaincode\go\chaincode_example02 to $GOPATH/src/github.com/chaincode_example02 and setup the vendor directory with latest source of hyperledger fabric at  vendor/github.com/hyperledger/fabric
5. try to deploy $GOPATH/src/github.com/chaincode_example02 using the latest version of the hfc node sdk version 0.5.2, using the attachment sample.js using command ""node sample.js""
6. check the peer logs for issue related to number of arguments, the number of arguments being recieved by the init method is always coming as 0.

Error messages in peer server logs during chaincode deployment:
[chaincode] processStream -> ERRO 031 Got error: Incorrect number of arguments. Expecting 4
[chaincode] Launch -> ERRO 032 sending init failed(Error initializing container 9f192841dd07b37f7d95ea364df838b37bc8be29d2babf15f42f478ff395c7cb: Incorrect number of arguments. Expecting 4)",Vagrant Virtual Machine,,,,,,,,,,,,,FAB-208,,,,,,,,,,12/Sep/16 7:52 AM;gauravgiri;sample.js;https://jira.hyperledger.org/secure/attachment/10089/sample.js,,,,,,,,0|i00fof:,,,,,,,,angrbrd,gauravgiri,hgabre,manali_test,mastersingh24,ryokawajp,,,,,,,,,,,,,,,"12/Sep/16 8:16 AM;ryokawajp;[~gauravgiri]
I also observed similar problem in chaincode query.
* I deployed chaincode_example02
** CORE_SECURITY_ENABLED=true CORE_SECURITY_PRIVACY=true build/bin/peer chaincode deploy  -p chaincode_example02 -c '{""args"":[""init"",""a"",""100"",""b"",""50""]}' -u test_user0
* I confirmed that a query works with CLI.
** CORE_SECURITY_ENABLED=true CORE_SECURITY_PRIVACY=true build/bin/peer chaincode query -n a1e74746efaec3a6521f3b27b5962651302199d9cc51bd517e81fd55bffab1b964e8a7cfa7a54d00317d51a3691033d7efe60dce8edac5ecb2fba7630e328000 -c '{""args"":[""query"",""a""]}' -u test_user0
** Query Result: 100
* I queried the chaincode from HFC program, but it returns the error message. (code snipped is as below.)
**  Incorrect number of arguments. Expecting name of the person to query

Through printf debugging, it is found that the chaincode receives 0 arguments on query. The function name is correct. I also tried to put the function name into the beginning of args but the error message did not change. As indicated in hfc.ts, fcn and args fields are still used in query and invoke requests and concatenated into a single array inside HFC..
https://github.com/hyperledger/fabric/blob/master/sdk/node/src/hfc.ts#L1883

I use the following versions:
* HFC 0.6.0, 0.5.1, 0.5.2
* Fabric : latest master (on Sep. 11, commit ID : 165c0ed147b805696b53208ba0068c5e9506c6bf)
* ""net"" mode (chain.setDevMode(false)).

{code}
      var fcn = ""query"";
      var args = [""a""];
      var user = test_user_Member1;
      var chaincodeID = ""a1e74746efaec3a6521f3b27b5962651302199d9cc51bd517e81fd55bffab1b964e8a7cfa7a54d00317d51a3691033d7efe60dce8edac5ecb2fba7630e328000"";

      var queryRequest = {
        chaincodeID: chaincodeID,
        fcn: fcn,
        args: args
     };
     var tx = user.query(queryRequest);
{code}","12/Sep/16 9:44 AM;ryokawajp;Hi,
I have just peeked at version 0.5.2 of the hfc installation directory to see the source code (around L1429 of hfc.js) and found that it is using the old protocol for the chaincode argument (separate function and args), which differes from the latest master version of hfc.ts (linked in the above comment.). Does 0.5.2 correspond to the latest master? or does this release support Fabric 0.5 DP only?
{code:hfc.js} 
               // Set chaincodeID
                chaincodeSpec.setChaincodeID(chaincodeID);
                // Set ctorMsg
                var chaincodeInput = new _chaincodeProto.ChaincodeInput();
                chaincodeInput.setFunction(request.fcn);
                chaincodeInput.setArgs(request.args);
                chaincodeSpec.setCtorMsg(chaincodeInput);
{code} 
","12/Sep/16 11:15 AM;hgabre;Fabric master with the js code from sdk/node (from the same repo, the same version) seems to work. v0.6 with the js code from sdk/node (from the same repo, the same version) also seems to work.","13/Sep/16 2:13 AM;ryokawajp;Thank you [~hgabre].
I also tried to build hfc in the source code repository by simply typing ""make"" at fabric/sdk/node directory, but it did not work. The following error message was printed.
Is there any documentation for building hfc by myself?

{code}
vagrant@hyperledger-devenv:v0.0.11-165c0ed:/opt/gopath/src/github.com/hyperledger/fabric/sdk/node$ make
[INSTALL] node_modules/.bin/typings
npm install typings
hfc@0.0.2 /opt/gopath/src/github.com/hyperledger/fabric/sdk/node
├── any-promise@1.3.0  extraneous
├── archy@1.0.0  extraneous
├── bluebird@3.4.6  extraneous
├── columnify@1.5.4  extraneous
├── has-unicode@2.0.1  extraneous
├── listify@1.0.0  extraneous
├── update-notifier@1.0.2  extraneous
├── wordwrap@1.0.0  extraneous
└── xtend@4.0.1  extraneous

npm WARN hfc@0.0.2 No repository field.
npm WARN hfc@0.0.2 No license field.
npm ERR! Linux 3.13.0-93-generic
npm ERR! argv ""node"" ""/usr/local/bin/npm"" ""install"" ""typings""
npm ERR! node v0.12.7
npm ERR! npm  v3.10.7
npm ERR! path ../loose-envify/cli.js
npm ERR! code EPROTO
npm ERR! errno -71

npm ERR! EPROTO, symlink '../loose-envify/cli.js'
npm ERR!
npm ERR! If you need help, you may report this error at:
npm ERR!     <https://github.com/npm/npm/issues>

npm ERR! Please include the following file with any support request:
npm ERR!     /opt/gopath/src/github.com/hyperledger/fabric/sdk/node/npm-debug.log
make: *** [node_modules/.bin/typings] Error 185
{code}
","14/Sep/16 7:33 AM;ryokawajp;Sorry. The above problem was caused by the file sharing capability of Vagrant.
I should have used directory which is not shared with the host OS, or have run Vagrant with Administrator authority, otherwise one cannot create a symbolic link.
Now the error message was fixed.
Thank you.
","14/Sep/16 11:03 AM;hgabre;Ryo, does it work for you? One has to try it with matching versions (hfc 0.5 from npm repo with fabric 0.5; hfc from Gerrit master with fabric from Gerrit master; hfc 0.6 - that will be uploaded soon - with fabric 0.6). If it works we could close this issue.","14/Sep/16 2:49 PM;angrbrd;[~hgabre] I will be publishing an update to npm for version 0.6.x in the next day or two. That should address several issues. If this is still broken in the npm package, it will be fixed then too.

Thanks!","15/Sep/16 2:07 AM;ryokawajp;Thank you, [~hgabre].

I successfully built hfc with make at fabric/sdk/node/ directory which was copied to a non-shared directory.
I can now execute deploy and query transactions from a Node.js app.
However, the returned value is different from the expected value. It returns the following message:
{code}
completed query: {""result"":""323030""}
results.result: 323030
{code}
where the expected value is b=200. CLI returns the correct value:
{code}
CORE_SECURITY_ENABLED=true CORE_SECURITY_PRIVACY=true build/bin/peer chaincode query -n 508a2be58384aad8909bd2417a51f022c7966c877b7ee5fdc46be6a079ee40c0 -c '{""args"":[""query"",""b""]}' -u test_user0
Query Result: 200
{code}
The situation did not change when I deployed the chaincode with CLI and queried with Node.js app.

When I was reading asset_mgmt.js, I realized that one needs to put ""confidential: true"" to the request, otherwise the returned value is not readable. What does this mean? I suppose there is a change in the format of the returned value. The above results were obtained with ""confidential: true"".
https://github.com/hyperledger/fabric/blob/master/sdk/node/test/unit/asset-mgmt.js#L290

Environment and sample program is as follows:
- Vagrant env.
- chaincode_example02
{code}
var initA = ""100"";
var initB = ""200"";
function deploysample() {
  var deployRequest = {
    fcn: ""init"",
    args: [""a"", initA, ""b"", initB],
    confidential: true,
  };
  var deployTx = test_user_Member1.deploy(deployRequest);
  console.log(""deployTx %j"", deployTx);
 ...
{code}
{code}
function querysample() {
      var fcn = ""query"";
      var args = [""b""];
      var user = test_user_Member1;
      var chaincodeID = ""508a2be58384aad8909bd2417a51f022c7966c877b7ee5fdc46be6a079ee40c0"";

      var queryRequest = {
        chaincodeID: chaincodeID,
        fcn: fcn,
        args: args,
        confidential: true,
     };
     var tx = user.query(queryRequest);
     tx.on('complete', function(results) {
        console.log(""completed query: %j"",results);
        data = results.result;
        console.log(""results.result: %s"",data);
     });
{code}
","15/Sep/16 2:11 AM;ryokawajp;Hi [~angrbrd], thank you.
I am looking forward to see the new version.
","20/Sep/16 1:51 PM;ryokawajp;Thank you for the release of HFC 0.6.1. I have tested HFC 0.6.1 with Fabric (master at Sep. 11, 165c0ed147b805696b53208ba0068c5e9506c6bf) and the above sample program showed the same result with the case of HFC in the Fabric source repository.
{code}
completed query: {""result"":""323030""}
results.result: 323030
{code}
The expected output is ""200"".
I have not yet tried HFC 0.6.1 with V0.6 branch of Fabric.
I realized that the above output is equivalent to the output of CLI with -x option (hex). So, I implemented like:
{code}
        data = results.result;
	buffer = new Buffer(data, 'hex');
        console.log(""buffer: %s"", buffer.toString('utf8'));
{code}
and finally I obtained the expected result, ""200"". Is this the designed behavior of HFC? 
Is it OK for us to assume that the returned value of query is a hex representation of utf8 string?
Or is there any option to switch the returned value from a hex string to a utf8 string like -x option of CLI ?","20/Sep/16 3:00 PM;hgabre;As I know 0.6.1 should work with brach v0.6.
On the other side, I will try to have a look at it and find why it returns a hex. I don't know about such an option. [Anna Derbakova|https://jira.hyperledger.org/secure/ViewProfile.jspa?name=angrbrd]?",28/Sep/16 11:12 AM;mastersingh24;[~angrbrd] I assume this is not an issue when using hfc 0.6.x with fabric v0.6 images?,"28/Sep/16 1:29 PM;gauravgiri;It is working as per the last comment on this by Ryo Kawahara by using the confidential: true parameter in the invoke/query requests. Also, the result is a hex string which needs a conversion.

We have another issue. Because of dependency of HFC(0.6.*) npm library on node-gyp, we are unable to work with HFC npm client library on windows machine, as it fails to install because of issues related to python & Microsoft Visual studio c++ which needs to be present on windows.

Is there any recommended way to work with HFC(0.6.*) client libraries from windows?

Error stack trace while installing HFC:
C:\Gaurav\IBM\workspace\BTMU\phase2\source\poc_hfc2\node_modules\hashtable>if no
t defined npm_config_node_gyp (node ""C:\sft\node\node6.5.0\node_modules\npm\bin\
node-gyp-bin\\..\..\node_modules\node-gyp\bin\node-gyp.js"" configure build )  el
se (node """" configure build )
gyp ERR! configure error
gyp ERR! stack Error: Can't find Python executable ""python"", you can set the PYT
HON env variable.
gyp ERR! stack     at failNoPython (C:\sft\node\node6.5.0\node_modules\npm\node_
modules\node-gyp\lib\configure.js:401:14)
gyp ERR! stack     at C:\sft\node\node6.5.0\node_modules\npm\node_modules\node-g
yp\lib\configure.js:356:11
gyp ERR! stack     at FSReqWrap.oncomplete (fs.js:123:15)
gyp ERR! System Windows_NT 6.1.7601
gyp ERR! command ""C:\\sft\\node\\node6.5.0\\node.exe"" ""C:\\sft\\node\\node6.5.0\
\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js"" ""configure"" ""build
""
gyp ERR! cwd C:\Gaurav\IBM\workspace\BTMU\phase2\source\poc_hfc2\node_modules\ha
shtable
gyp ERR! node -v v6.5.0
gyp ERR! node-gyp -v v3.3.1
gyp ERR! not ok
","29/Sep/16 2:13 AM;ryokawajp;Thank you. Gaurav [~gauravgiri].

Since Fabric v0.6.0 is released, I also tried HFC 0.6.1 and HFC 0.6.2 with Hyperledger Fabric tagged as v0.6.0-preview.
The results are the same as in the comment by me on September 15th.
https://jira.hyperledger.org/browse/FAB-347?focusedCommentId=18948&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-18948

- I removed the old chaincode container and deployed chaincode_example02 with CLI v0.6.0 preview.
- Other options and arguments are the same with the previous comment.
The returned value is hex.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,
General Jenkins network issues,FAB-346,12647,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,juliancarrivick,juliancarrivick,12/Sep/16 6:49 AM,14/Feb/17 3:51 AM,26/Apr/18 6:50 AM,14/Feb/17 3:51 AM,,,,,,,,,,,,0,build-system,,,,,,,"There seems to be general network instability in the Jenkins environment which does not exhibit itself that often.

It seems to show itself as one of many things
* A panic in the unit tests that a request took longer than 60 seconds (see FAB-101)
* Not being able to download a copy of the source code ([fabric-merge-168|https://jenkins.hyperledger.org/job/fabric-merge-x86_64/168], [fabric-verify-1065|https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-x86_64/1065] and [fabric-merge-143|https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-x86_64/143])
* Failing to push images to docker-hub ([fabric-merge-153|https://jenkins.hyperledger.org/job/fabric-merge-x86_64/153])
* Gradle failing to download ([fabric-merge-162|https://jenkins.hyperledger.org/view/fabric/job/fabric-merge-x86_64/162] and [fabric-verify-behave-2|https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-behave-x86_64/2])

A few of the behave tests also exhibit what seems to be general network issues:
* HTTP GET timing out ([fabric-verify-behave-3|https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-behave-x86_64/3])
* Containers taking much longer than normal to startup and timing out ([fabric-verify-behave-19|https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-behave-x86_64/19/])",Jenkins CI Environment,,,,,28800,28800,,0%,28800,28800,,,,,,,,,,,,,12/Sep/16 6:46 AM;juliancarrivick;fabric-merge-143.log;https://jira.hyperledger.org/secure/attachment/10088/fabric-merge-143.log,12/Sep/16 6:49 AM;juliancarrivick;fabric-merge-153.log;https://jira.hyperledger.org/secure/attachment/10084/fabric-merge-153.log,12/Sep/16 6:49 AM;juliancarrivick;fabric-merge-162.log;https://jira.hyperledger.org/secure/attachment/10083/fabric-merge-162.log,12/Sep/16 6:46 AM;juliancarrivick;fabric-merge-168.log;https://jira.hyperledger.org/secure/attachment/10086/fabric-merge-168.log,12/Sep/16 6:46 AM;juliancarrivick;fabric-verify-1065.log;https://jira.hyperledger.org/secure/attachment/10087/fabric-verify-1065.log,12/Sep/16 6:49 AM;juliancarrivick;fabric-verify-behave-2.log;https://jira.hyperledger.org/secure/attachment/10085/fabric-verify-behave-2.log,12/Sep/16 6:49 AM;juliancarrivick;fabric-verify-behave-3.log;https://jira.hyperledger.org/secure/attachment/10082/fabric-verify-behave-3.log,,0|hzzzvn:,,Sprint 2,Sprint 3,,,,,juliancarrivick,rameshthoomu,,,,,,,,,,,,,,,,,,,"14/Feb/17 3:51 AM;rameshthoomu;[~juliancarrivick]: Seems all these issues are resolved now.. Closing this issue for now, please re-open is you see any of the above mentioned issues..",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Admin enrollment issue via HFC client,FAB-317,12618,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,nhrishi,nhrishi,07/Sep/16 10:10 AM,13/Apr/17 11:46 PM,26/Apr/18 6:50 AM,13/Apr/17 11:46 PM,v0.6,,,WON'T FIX,,fabric-ca,,,,,,0,,,,,,,,"I'm trying to enroll admin user from nodejs script on the hyperledger network but getting below errors- 
-----------------------------------------------------------------------------
root@be16b3e72515:/opt/gopath/src/github.com/hyperledger/fabric/sdk/node# export DEPLOY_MODE='net'
root@be16b3e72515:/opt/gopath/src/github.com/hyperledger/fabric/sdk/node# node test/unit/referencedata.js
I0907 07:33:45.439377037      35 ev_epoll_linux.c:84]        epoll engine will be using signal: 36
D0907 07:33:45.439468148      35 ev_posix.c:106]             Using polling engine: epoll
TAP version 13
# registrar test
not ok 1 Failure: [registrarTest]: [Error]
  ---
    operator: fail
    at: fail (/opt/gopath/src/github.com/hyperledger/fabric/sdk/node/test/unit/referencedata.js:63:7)
  ...
not ok 2 Error
  ---
    operator: error
    expected: |-
      undefined
    actual: |-
      { [Error] code: 14, metadata: { _internal_repr: {} } }
    at: fail (/opt/gopath/src/github.com/hyperledger/fabric/sdk/node/test/unit/referencedata.js:64:7)
    stack: |-
      Error
          at /usr/local/lib/node_modules/hfc/node_modules/grpc/src/node/src/client.js:417:17
  ...
---------------------------------------------------------------------------------------------------------------
On the membership service log - 
membersrvc0_1 | 2016/09/07 07:16:31 grpc: Server.Serve failed to complete security handshake.

-----------------------------------------------------------------------------------------------------------------
Membersrvc.yaml -

 admin: 1 Xurw3yU9zI0l broadridge '{""registrar"":{""roles"":[""client"",""peer"",""validator"",""auditor""],""delegateRoles"":[""client""]}}'
                WebAppAdmin: 1 DJY27pEnl16d broadridge '{""registrar"":{""roles"":[""client""]}}'
                jpm_us_user: 1 NPKYL39uKbkj jpm_us
                system_chaincode_invoker: 1 DRJ20pEql15a broadridge
                jpm_ln_user: 1 DRJ23pEQl16a jpm_ln
                jim: 1 6avZQLwcUe9b jpm_hk
                jpm_hk_user: 1 7avZQLwcUe9q jpm_hk

                # Users for asset transfer with roles test located at
                # sdk/node/test/unit/asset-mgmt-with-roles.js
                #alice: 1 CMS10pEQlB16 bank_a
                #bob: 1 NOE63pEQbL25 bank_a
                #assigner: 1 Tc43PeqBl11 bank_a

                vp: 4 f3489fy98ghf

                test_vp0: 4 MwYpmSRjupbT
                test_vp1: 4 5wgHK9qqYaPy
-----------------------------------------------------------------------------------------------------------------
Nodejs script -


",,,,,,,,,,,,,,,,,,,,,,,,07/Sep/16 10:09 AM;nhrishi;referencedata.js;https://jira.hyperledger.org/secure/attachment/10065/referencedata.js,,,,,,,,0|i00fjr:,,,,,,,,binhn,ChristopherFerris,mastersingh24,nhrishi,,,,,,,,,,,,,,,,,"07/Sep/16 11:36 AM;mastersingh24;It cannot connect to the URL you provided for membersrvcs

What environment are you running on?  Vagrant?

","07/Sep/16 11:40 AM;nhrishi;Thanks Gari, Yes, running on vagrant and nodes in docker containers. Sorry but what could be reasons for not able to connect.
","07/Sep/16 11:58 AM;mastersingh24;It's possible that membership services is not actually bound to that IP address.  How are you starting membership services and peer containers?

The typical things to look at:

{{ping 172.17.0.2}}  - make sure you can actually access this

{{docker ps}}    - should show which containers are running and if they are exposing any ports.  If you see membership services container with ports exposed, then you can use ""localhost:7054"" rather than ""172.17.0.2:7054""

From the `docker ps` command you'll get the ID and / or name of the membership services container - you can then run
{{docker inspect $NAME}} where $NAME is the name of the container.  This will give you the IP that the container is listening on

","07/Sep/16 12:28 PM;nhrishi;okay. We manage ping the IP address successfully. but I see ports are not exposed. is there anyway to do? We also tried using localhost but had same issue.

-------------------------------
vagrant@hyperledger-devenv:v0.0.10-0581047:~$ docker ps -a
CONTAINER ID        IMAGE                    COMMAND                  CREATED             STATUS              PORTS               NAMES
b5a1b2e60fe1        refdata-poc-peer         ""sh -c 'sleep 15; pee""   5 hours ago         Up 5 hours                              bddtests_vp2_1
1556cd4670f9        refdata-poc-peer         ""sh -c 'sleep 15; pee""   5 hours ago         Up 5 hours                              bddtests_vp1_1
be16b3e72515        refdata-poc-peer         ""sh -c 'sleep 15; pee""   5 hours ago         Up 5 hours                              bddtests_vp0_1
0cdafe57073c        refdata-poc-membersrvc   ""membersrvc""             5 hours ago         Up 5 hours                              bddtests_membersrvc0_1
---------------------------------------

Btw we also tried to enroll using curl command but gives same error.",07/Apr/17 9:00 PM;binhn;I assume this is resolved or no longer valid as v1.0.0-alpha has been out,13/Apr/17 11:46 PM;ChristopherFerris;closed as no longer relevant v0.6 is deprecated,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to build with latest master,FAB-309,12610,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,SriramaSharma,pharshal,pharshal,06/Sep/16 10:52 AM,10/Sep/16 6:36 PM,26/Apr/18 6:50 AM,07/Sep/16 11:04 AM,,,,,,,,,,,,0,build-system,,,,,,,"Failed with following error,

==> default:          
==> default:  
==> default:    
==> default:                     Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100  1582  100  1582    0     0   2289      0 --:--:-- --:--:-- --:--:--  2289
==> default: 
==> default: [gmock-1.7.0.zip]
==> default:   End-of-central-directory signature not found.  Either this file is not
==> default:   a zipfile, or it constitutes one disk of a multi-part archive.  In the
==> default:   latter case the central directory and zipfile comment will be found on
==> default:   the last disk(s) of this archive.
==> default: unzip:  cannot find zipfile directory in one of gmock-1.7.0.zip or
==> default:         gmock-1.7.0.zip.zip, and cannot find gmock-1.7.0.zip.ZIP, period.
==> default: 
==> default: The command '/bin/sh -c /hyperledger/baseimage/scripts/common/setup.sh' returned a non-zero code: 9
==> default: make[1]: *** [docker] Error 9
==> default: make[1]: Leaving directory `/opt/gopath/src/github.com/hyperledger/fabric/images/base'
==> default: ERROR: Build-cache could not be compiled locally
==> default: make: *** [build/image/base/.dummy] Error 255
The SSH command responded with a non-zero exit status. Vagrant
assumes that this means the command failed. The output for this command
should be in the log above. Please read the output to determine what
went wrong.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00dvk:k,,,,,,,,ChristopherFerris,pharshal,SriramaSharma,,,,,,,,,,,,,,feature/convergence,master,,true,"07/Sep/16 8:40 PM;SriramaSharma;While protobuf is getting built , autogen.sh pulls gmock 1.7.0 zip archive and unzips the same. Since the link to gmock 1.7.0 has been recently moved, unzip of the download tarball was failing causing build failure.

Have created https://gerrit.hyperledger.org/r/#/c/945/ to fix the issue. ",10/Sep/16 6:36 PM;ChristopherFerris;this is fixed by https://gerrit.hyperledger.org/r/#/c/991 submitted by nao.nishijima@hal.hitachi.com,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Building Hyperledger peer on s390x (z Systems) fails on Step 11,FAB-286,12587,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,holocron,holocron,holocron,31/Aug/16 4:00 PM,08/Sep/16 2:51 PM,26/Apr/18 6:50 AM,08/Sep/16 2:51 PM,,,,,,,,,,,,0,build-system,,,,,,,"With a clean ubuntu s390x system, no docker images and no build artifacts, ""make peer"" fails.


{code:java}
Step 11 : RUN /hyperledger/scripts/provision/common.sh
 ---> Running in dd5fbd1985bb
E: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/xenial/main/binary-s390x/by-hash/SHA256/0956d9bdd044570b5d8f1b3e186bb7bddb01b786174329ffa87c9596678defcb  Hash Sum mismatch
E: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/xenial/restricted/binary-s390x/Packages  Hash Sum mismatch
E: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/xenial/universe/binary-s390x/by-hash/SHA256/ab9ab7276ffd6ca36851b3036aa5a1e6e1d349a63a312405feca365599f7045f  Hash Sum mismatch
E: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/xenial/multiverse/binary-s390x/by-hash/SHA256/a2a04833fa0398c1a0d1512f8ba7643e0d9c4600a49250c00b398a2faf62ba29  Hash Sum mismatch
E: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/xenial-updates/main/binary-s390x/by-hash/SHA256/8218b5abf4c8a98249b48413f55c6b2ceaf80a646f6ee02a21afc5abb2bf006d  Hash Sum mismatch
E: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/xenial-updates/restricted/binary-s390x/Packages  Hash Sum mismatch
E: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/xenial-updates/universe/binary-s390x/by-hash/SHA256/a95c2981e3b7a9a0a83199acb6e6ac7b4a3d38be84b922762ebb1736fa1c025c  Hash Sum mismatch
E: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/xenial-updates/multiverse/binary-s390x/Packages  Hash Sum mismatch
E: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/xenial-backports/main/binary-s390x/Packages  Hash Sum mismatch
E: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/xenial-backports/restricted/binary-s390x/Packages  Hash Sum mismatch
E: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/xenial-backports/universe/binary-s390x/Packages  Writing more data than expected (3368 > 1655) [Mirror: http://ubuntu.localmsp.org/ubuntu/]
E: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/xenial-backports/multiverse/binary-s390x/Packages  Hash Sum mismatch
E: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/xenial-security/main/binary-s390x/by-hash/SHA256/a61ca740474bf495bf9885f48891a4f2a146e9969386cdc52ae9ed6536bb1855  Hash Sum mismatch
E: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/xenial-security/restricted/binary-s390x/Packages  Hash Sum mismatch
E: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/xenial-security/universe/binary-s390x/by-hash/SHA256/642101fdf1cfc4fb6b66cc7a33aadc44b8e1c7f3661b465a2bb6bb8742f8ace9  Hash Sum mismatch
E: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/xenial-security/multiverse/binary-s390x/Packages  Hash Sum mismatch
E: Some index files failed to download. They have been ignored, or old ones used instead.

{code}


",Ubuntu 16.04 LTS (Xenial Xerus) s390x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00fdj:,,,,,,,,holocron,tdietter,,,,,,,,,,,,,,,,,,,07/Sep/16 3:26 PM;tdietter;Any chance this is going to get fixed?  Thanks.,"08/Sep/16 2:50 PM;holocron;This particular problem was resolved yesterday. I'm now running into an issue with openjdk8 that's being tracked here:
https://github.ibm.com/IBM-Blockchain/z-dev/issues/303",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
[node-SDK] improve Documentation -- class Peer,FAB-272,12573,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jimthematrix,jjjjibm,jjjjibm,30/Aug/16 5:42 PM,28/Oct/16 3:25 AM,26/Apr/18 6:50 AM,28/Oct/16 3:25 AM,,,,,,fabric-sdk-node,,,,,,0,Fabric05,node-SDK,,,,,,"This issue is related to FAB-271.


From the generated documentation here: file:///C:/go/src/github.com/hyperledger/fabric/sdk/node/doc

I've copied the page for class Peer into an odt file and annotated it with document suggestions. 

General principles of API documentation: Documentation for each API should answer these questions:
◾Result: What's the result of issuing this API
◾Requirements: What's required to issue this API ?
◾Restrictions: List any restrictions
◾Tips: If you can ignore what the tip says, it's a valid tip. Otherwise, it must be a result, requirement, or restriction.

Some IBM documentation actually has headings: Results, Requirements, Restrictions (and optionally) Tips. 

I will attach the odt document. It is based on hfc 0.0.2 (just before moving from github to Gerrit). 
","Win7 laptop, vagrant running Ubuntu, hfc 0.0.2",,,,,,,,,,,,,,,,,,,,,,,30/Aug/16 6:08 PM;jjjjibm;node-sdk peer documentation.odt;https://jira.hyperledger.org/secure/attachment/10057/node-sdk+peer+documentation.odt,30/Aug/16 6:06 PM;jjjjibm;node-sdk peer documentation.odt;https://jira.hyperledger.org/secure/attachment/10055/node-sdk+peer+documentation.odt,,,,,,,0|i00faf:,,Sprint 4 - nodeSDK,,,,,,jjjjibm,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failed to build peer,FAB-269,12570,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,baohua,baohua,30/Aug/16 6:24 AM,22/Sep/16 4:52 PM,26/Apr/18 6:50 AM,02/Sep/16 11:38 PM,,,,,,,,,,,,0,build-system,,,,,,,"With latest code at the master branch.

Under $GOPATH/src/github.com/hyperledger/fabric/peer, to build or install, both trigger complains.

# CGO_CFLAGS="" "" CGO_LDFLAGS=""-lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy"" go build
../core/crypto/attributes/attributes.go:28:2: no buildable Go source files in /go/src/github.com/hyperledger/fabric/core/crypto/attributes/proto
../core/crypto/client_tca.go:20:2: no buildable Go source files in /go/src/github.com/hyperledger/fabric/membersrvc/protos","Ubuntu 14.04, Golang 1.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|hzzzym:zi,,Sprint 1,Sprint 2,,,,,baohua,mastersingh24,warm3snow,,,,,,,,,,,,,,,,,,02/Sep/16 11:38 PM;mastersingh24;[~baohua] - can you pull the latest from the master branch?  I think this should be resolved now that the compile protobufs have been added back to the repo.  There was a prior change which required you to precompile the protos (done in the Makefile as well),"03/Sep/16 1:36 AM;baohua;Yes, it's built now with latest code.
Thanks!",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Node sdk tests are failing in net mode on commit# 17f69bd,FAB-267,12568,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,angrbrd,rameshthoomu,rameshthoomu,29/Aug/16 7:08 PM,06/Dec/16 2:21 PM,26/Apr/18 6:50 AM,02/Sep/16 1:55 AM,,,,,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"Node sdk tests are failing in net mode on commit# 17f69bd. Observed same issue in Jenkins and vagrant environment.

Please check the attached log file:
Jenkins Build reference: https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-x86_64/676/console",,,,,,,,,,,,,,,,,,,,,,,,29/Aug/16 7:19 PM;rameshthoomu;node-sdk-test-failes-.txt;https://jira.hyperledger.org/secure/attachment/10053/node-sdk-test-failes-.txt,,,,,,,,0|i00f9b:,,,,,,,,angrbrd,rameshthoomu,,,,,,,,,,,,,,,,,,,"29/Aug/16 7:25 PM;angrbrd;I have reproduced this issue on the following commit:

commit d40a0040e1d79fa7908d9f1b4c41aa15ff7e70ba
Author: Caroline Daughtrey <cdaughtr@us.ibm.com>
Date:   Fri Aug 26 15:06:09 2016 -0400

    node-SDK: Change hfc Peer constructor description
    
    There are two incomplete descriptions.  ""config"" should be
    ""configuration"" and the url description is incomplete.
    Fix parameter chain and add parameter pem with description.
    https://jira.hyperledger.org/browse/FAB-233
    
    Change-Id: I82e678abcc26bacfb48b712dd35b47f9647f6b3a
    Signed-off-by: Caroline Daughtrey <cdaughtr@us.ibm.com>
","29/Aug/16 7:29 PM;angrbrd;I believe the issue is caused by the following commit:

https://gerrit.hyperledger.org/r/gitweb?p=fabric.git;a=commit;h=a98c59a15249d1da67ad162bb8fafe7ebbc70f92

This change removes the compiled protobuf files from the repository. This has an effect on the SDK unit tests as the unit tests clone into the fabric repo master branch to test deployment in network mode (packaging .tar.gz for Docker). Therefore, if the .pb.go files have been removed, the tests will likely fail.","01/Sep/16 10:25 PM;angrbrd;Hi [~rameshthoomu]. As this issue has now been resolved, can this bug be closed?

Thanks!",02/Sep/16 1:55 AM;rameshthoomu;Node-sdk-unit-tests are working as expected on latest gerrit code base. Closing this issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Behave tests are failing with error ""Exception AttributeError: 'Context' object has no attribute 'compose_containers'""",FAB-262,12563,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,jeffgarratt,rameshthoomu,rameshthoomu,29/Aug/16 1:01 PM,09/Mar/17 10:50 PM,26/Apr/18 6:50 AM,09/Mar/17 10:50 PM,,,,,,,,,,,,0,build-system,,,,,,,"We are observing builds are failing in Jenkins with the below error in behave tests scenario *""Scenario chaincode example02 with 4 peers and 1 membersrvc, issue #567 -- @1.1 Consensus Options""*

Exception AttributeError: 'Context' object has no attribute 'compose_containers'
Jenkins Build Reference# https://jenkins.hyperledger.org/view/fabric/job/fabric-verify-x86_64/666/console
Please see the attached log file:
",Jenkins CI machines runs on openstack VM's,,,,,57600,57600,,0%,57600,57600,,,,,,,,,,,,,29/Aug/16 1:00 PM;rameshthoomu;Behave tests failed.txt;https://jira.hyperledger.org/secure/attachment/10051/Behave+tests+failed.txt,,,,,,,,0|hzzzvq:,,Sprint 1,Sprint 2,Sprint 3,,,,jeffgarratt,rameshthoomu,ryjones,,,,,,,,,,,,,,,,,,04/Oct/16 11:45 PM;rameshthoomu;[~jeffgarratt]: We are still getting the above error inconsistently in Jenkins builds. I could still see behave build failures with the above error message even after merge patch https://gerrit.hyperledger.org/r/#/c/771/. Could you please help me in debugging this issue.,05/Dec/16 11:28 PM;ryjones;behave tests disabled. they have not worked in over a month,09/Mar/17 10:50 PM;jeffgarratt;Behave is coming back in CI currently.  This issue is no longer relevant.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"""vagrant up"" does not work on commit a087441bcf8b143cd1776d1c866be59cdddceb29",FAB-257,12558,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,ghaskins,JamesYu,JamesYu,28/Aug/16 1:04 AM,22/Apr/17 1:48 PM,26/Apr/18 6:50 AM,09/Sep/16 5:38 PM,,,,,,,,,,,,0,build-system,,,,,,,"This is the error I got when I tried to start from ground zero after a clean git clone

$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Box 'hyperledger/fabric-baseimage' could not be found. Attempting to find and install...
    default: Box Provider: virtualbox
    default: Box Version: 0.0.11
==> default: Loading metadata for box 'hyperledger/fabric-baseimage'
    default: URL: https://atlas.hashicorp.com/hyperledger/fabric-baseimage
==> default: Adding box 'hyperledger/fabric-baseimage' (v0.0.11) for provider: virtualbox
    default: Downloading: {color:#d04437}https://atlas.hashicorp.com/hyperledger/boxes/fabric-baseimage/versions/0.0.11/providers/virtualbox.box{color}
An error occurred while downloading the remote file. The error
message, if any, is reproduced below. Please fix this error and try
again.

Couldn't resolve host '{color:#d04437}binstore-test.hashicorp.com{color}'

First of all, I thought the image is to be downloaded from ""atlas.hashicorp.com"" why does ""binstore-test.hashicorp.com"" has anything to do with it?

Then I tried to test the network connectivity with port 443 given the protocol is https
$ telnet binstore-test.hashicorp.com 443
Trying 52.4.205.238...
Connected to prod-binstore-914876835.us-east-1.elb.amazonaws.com.
Escape character is '^]'.
^]
telnet> quit
Connection closed.

The connectivity seems OK, so I don't know why it gives me ""Couldn't resolve host 'binstore-test.hashicorp.com'""","$ vagrant version
Installed Version: 1.8.5

hyperledger fabric commit: a087441bcf8b143cd1776d1c866be59cdddceb29
 !image-2016-08-28-09-03-38-547.png|thumbnail! ",,,,,,,,,,,,,,,,,,,,,,,28/Aug/16 1:03 AM;JamesYu;image-2016-08-28-09-03-38-547.png;https://jira.hyperledger.org/secure/attachment/10050/image-2016-08-28-09-03-38-547.png,,,,,,,,0|i00dwi:v,,Sprint 1,,,,,,greg.haskins,JamesYu,rameshthoomu,,,,,,,,,,,,,,,,,,"28/Aug/16 9:50 AM;JamesYu;Traffic seems to go through, however the following provision give the following error

==> default: protoc --proto_path=/opt/gopath/src/github.com/hyperledger/fabric/consensus/pbft --go_out=plugins=grpc:/opt/gopath/src/github.com/hyperledger/fabric/consensus/pbft /opt/gopath/src/github.com/hyperledger/fabric/consensus/pbft/*.proto
{color:#d04437}==> default: protoc-gen-go
==> default: : program not found or is not executable
==> default: --go_out
==> default: : 
==> default: protoc-gen-go: Plugin failed with status code 1.
==> default: make: 
==> default: *** [consensus/pbft/messages.pb.go] Error 1{color}
The SSH command responded with a non-zero exit status. Vagrant
assumes that this means the command failed. The output for this command
should be in the log above. Please read the output to determine what
went wrong.
",09/Sep/16 4:55 PM;greg.haskins;Is this reproducible?  It seems to be working fine for me as of yesterday.  I will try again today with the latest.,09/Sep/16 5:40 PM;greg.haskins;I think the issue that precipitated the protoc-gen-go has been reverted.  I am not able to reproduce the atlas access issue with v0.0.11 but I suspect it was environmental to the user.  I confirmed that a fresh vagrant destroy/up works as expected on f6403a8.  Recommend closing for now.  Can be reopened if persists.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
REST API does not work,FAB-234,12535,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,JamesYu,JamesYu,23/Aug/16 12:07 AM,24/Aug/16 1:42 PM,26/Apr/18 6:50 AM,24/Aug/16 1:42 PM,,,,,,,,,,,,0,REST,,,,,,,"I followed the document on http://hyperledger-fabric.readthedocs.io/en/latest/Setup/Chaincode-setup/ to issue some REST API and failed.

I tried to get chain info with:
curl -sb -X GET http://localhost:7051/chain
and I got ""??"" as response

in peer's log, I see:
{color:#d04437}2016/08/23 00:02:28 transport: http2Server.HandleStreams received bogus greeting from client: ""GET /chain HTTP/1.1\r\nUse""{color}","vagrant: 1.8.5
hyperledger: clone that latest on 8/21",,,,,,,,,,,,,,,,,,,,,,,23/Aug/16 4:20 PM;JamesYu;Screen Shot 2016-08-24 at 00.08.46.gif;https://jira.hyperledger.org/secure/attachment/10040/Screen+Shot+2016-08-24+at+00.08.46.gif,23/Aug/16 4:22 PM;JamesYu;Screen Shot 2016-08-24 at 00.12.23.gif;https://jira.hyperledger.org/secure/attachment/10041/Screen+Shot+2016-08-24+at+00.12.23.gif,23/Aug/16 4:22 PM;JamesYu;Screen Shot 2016-08-24 at 00.12.37.gif;https://jira.hyperledger.org/secure/attachment/10042/Screen+Shot+2016-08-24+at+00.12.37.gif,23/Aug/16 4:22 PM;JamesYu;Screen Shot 2016-08-24 at 00.12.50.gif;https://jira.hyperledger.org/secure/attachment/10043/Screen+Shot+2016-08-24+at+00.12.50.gif,,,,,0|i00f1z:,,,,,,,,corecode,JamesYu,,,,,,,,,,,,,,,,,,,"23/Aug/16 12:10 AM;JamesYu;sorry, I just switched from github's version and miss-looked the port.
REST should go port 7050.
my bad.","23/Aug/16 12:14 AM;JamesYu;However, this REST API call still not working

curl -sb -X POST -d '{ ""jsonrpc"": ""2.0"", ""method"": ""query"", ""params"": { ""type"": 1, ""chaincodeID"":{ ""name"":""0588c9b192603a2d39f2223ec524e30119698a36e77369c9d6df2ca16b85043406c67502787362e99f46d68b81b3f59000a149041ddba90047cf72e56fdfce96"" }, ""ctorMsg"": { ""function"":""query"", ""args"":[""a""] } }, ""id"": 5 }' localhost:7050/chaincode; echo

{""jsonrpc"":""2.0"",""error"":{""code"":-32700,""message"":""Parse error"",""data"":""Error unmarshalling chaincode request payload: illegal base64 data at input byte 0""},""id"":null}

on peer side:
00:13:07.436 [rest] ProcessChaincode -> INFO 016 REST processing chaincode request...
00:13:07.441 [rest] ProcessChaincode -> ERRO 017 Error unmarshalling chaincode request payload: illegal base64 data at input byte 0
","23/Aug/16 4:22 PM;JamesYu;Just post a question on stackoverflow
http://stackoverflow.com/questions/39106190/unmarshalling-error-in-hyperledgers-rest-api

I sent this request to hyperledger's REST API:
$ curl -X POST --header ""Content-Type: application/json"" -d '{ ""jsonrpc"": ""2.0"", ""method"": ""deploy"", ""params"": { ""type"": 1, ""chaincodeID"":{ ""path"":""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" }, ""ctorMsg"": { ""args"":[""init"", ""a"", ""1000"", ""b"", ""2000""] } }, ""id"": 1 }' localhost:7050/chaincode

and this is the error message I got in return:
{""jsonrpc"":""2.0"",""error"":{""code"":-32700,""message"":""Parse error"",""data"":""Error unmarshalling chaincode request payload: illegal base64 data at input byte 0""},""id"":null}

I then added debug log in rest_api.go to check whatever is received by the peer
 !Screen Shot 2016-08-24 at 00.08.46.gif! 

and got this log:
16:03:46.323 [rest] ProcessChaincode -> DEBU 027 reqBody = { ""jsonrpc"": ""2.0"", ""method"": ""deploy"", ""params"": { ""type"": 1, ""chaincodeID"":{ ""path"":""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" }, ""ctorMsg"": { ""args"":[""init"", ""a"", ""1000"", ""b"", ""2000""] } }, ""id"": 1 }
16:03:46.331 [rest] ProcessChaincode -> ERRO 028 Error unmarshalling chaincode request payload: illegal base64 data at input byte 0

The received message seems to match with the definition of ""rpcRequest"", ""ChaincodeSpec"", and ""ChaincodeInput"", I don't understand why it keeps throwing unmarshalling error to me...
 !Screen Shot 2016-08-24 at 00.12.23.gif! 
 !Screen Shot 2016-08-24 at 00.12.37.gif! 
 !Screen Shot 2016-08-24 at 00.12.50.gif! 
",24/Aug/16 1:42 PM;corecode;should be fixed by https://gerrit.hyperledger.org/r/#/c/639/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
SDK should retain absolute paths when deploying chaincode,FAB-212,12512,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,zmanian,zmanian,22/Aug/16 12:54 AM,05/Apr/17 6:41 PM,26/Apr/18 6:50 AM,05/Apr/17 6:41 PM,,,,WON'T FIX,,fabric-sdk-node,,,,,,0,node-SDK,,,,,,,"When deploying chaincode, the SDK currently copies source code to $GOPATH/src/build-chaincode. This is will have the effect of breaking the build process of the chaincode is organized into sub-packages. 

The rest API retains the absolute paths to code during the container build process. This should behavior should be retained in the SDK",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00exb:,,,,,,,,angrbrd,zmanian,,,,,,,,,,,,,,,,,,,"30/Aug/16 8:21 PM;angrbrd;Hi [~zmanian], I'm trying to understand the problem you're citing.

Currently, the Dockerfile command for the SDK chaincode deployment contains: ""COPY . $GOPATH/src/build-chaincode/"". This copies everything contained inside the original chaincode directory under /src/build-chaincode directory. This includes any packages that the original chaincode directory had. Maybe I am misunderstanding, but I believe this process should work. Do you have a concrete example? Have you seen this fail such that I can reproduce?

Thanks!","30/Aug/16 10:12 PM;zmanian;So lets you have an a chaincode application with the following structure

src/github.com/alice/app
src/github.com/alice/app/app.go
src/github.com/alice/app/foo/
src/github.com/alice/app/foo/foo.go
src/github.com/alice/app/bar/
src/github.com/alice/app/bar/bar.go

Now if you deploy the chaincode path github.com/alice/app via the REST API, the code will be fetched from github into the normal paths before the chaincode is built.

If instead, you use the sdk the go binary will attempt to be built from /src/build-chaincode and the compillation will fail because the paths will have changed.

Basically the way to template the dockerfile in the SDK will pretty much only work for single file chaincode apps.

You can try this with https://github.com/skuchain/doc_proofs


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
"The Docker compose yaml for ""Running the Peer and CA"" is incorrect in Chaincode-setup.md",FAB-209,12509,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,mastersingh24,mastersingh24,mastersingh24,21/Aug/16 10:22 AM,28/Aug/16 10:52 PM,26/Apr/18 6:50 AM,28/Aug/16 10:52 PM,,,,,,,,,,,,0,,,,,,,,"There are a couple of errors:

1) security is not actually enabled
2) need to specify the endpoints for the various CAs",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00ewv:,,,,,,,,ChristopherFerris,mastersingh24,,,,,,,,,,,,,,,feature/ca,feature/convergence,master,true,28/Aug/16 10:52 PM;ChristopherFerris;resolved by https://gerrit.hyperledger.org/r/#/c/593/,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unable to do query on a deployed chaincode,FAB-208,12508,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,hgabre,JamesYu,JamesYu,21/Aug/16 9:23 AM,02/Apr/17 12:35 PM,26/Apr/18 6:50 AM,02/Apr/17 12:35 PM,v0.6,,,,,,,,,,,0,chaincode,,,,,,,"I successfully deployed and invoked chaincode, but not query.
Following is the CLI command I entered and the response I got:
{color:#14892c}$ peer chaincode deploy -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{""Function"":""init"", ""Args"": [""a"",""100"", ""b"", ""200""]}'{color}
a5389f7dfb9efae379900a41db1503fea2199fe400272b61ac5fe7bd0c6b97cf10ce3aa8dd00cd7626ce02f18accc7e5f2059dae6eb0786838042958352b89fb
{color:#14892c}$ peer chaincode invoke -n a5389f7dfb9efae379900a41db1503fea2199fe400272b61ac5fe7bd0c6b97cf10ce3aa8dd00cd7626ce02f18accc7e5f2059dae6eb0786838042958352b89fb -c '{""Function"": ""invoke"", ""Args"": [""a"", ""b"", ""10""]}'{color}
c6c63b02-829f-4511-ab11-b77ee3b9abf5
{color:#14892c}$ peer chaincode query -n a5389f7dfb9efae379900a41db1503fea2199fe400272b61ac5fe7bd0c6b97cf10ce3aa8dd00cd7626ce02f18accc7e5f2059dae6eb0786838042958352b89fb -c '{""Function"": ""query"", ""Args"": [""b""]}'{color}

Usage:
peer chaincode query [flags]

Flags:
-x, --hex[=false]: If true, output the query value byte array in hexadecimal. Incompatible with --raw
-r, --raw[=false]: If true, output the query value as raw bytes, otherwise format as a printable string


Global Flags:
-a, --attributes=""[]"": User attributes for the chaincode in JSON format
-c, --ctor=""{}"": Constructor message for the chaincode in JSON format
-l, --lang=""golang"": Language the chaincode is written in
--logging-level="""": Default logging level and overrides, see core.yaml for full syntax
-n, --name="""": Name of the chaincode returned by the deploy transaction
-p, --path="""": Path to chaincode
--test.coverprofile=""coverage.cov"": Done
-t, --tid="""": Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64
-u, --username="""": Username for chaincode operations when security is enabled
-v, --version[=false]: Display current version of fabric peer server

{color:red}Error: Error querying chaincode: rpc error: code = 2 desc = ""Error:Failed to launch chaincode spec(Could not get deployment transaction for a5389f7dfb9efae379900a41db1503fea2199fe400272b61ac5fe7bd0c6b97cf10ce3aa8dd00cd7626ce02f18accc7e5f2059dae6eb0786838042958352b89fb - LedgerError - ResourceNotFound: ledger: resource not found)""{color}

","Vagrant: 1.8.5
Virtualbox: 5.0.4
Hyperleger: commit 5cb39849ec2adc35055e5233556848eb7370cc85, Date:   Tue Aug 16 14:33:26 2016 -0400",,,,,,,,,,,,,,,,,,,,,,,21/Aug/16 2:26 PM;JamesYu;screenshot-1.png;https://jira.hyperledger.org/secure/attachment/10017/screenshot-1.png,21/Aug/16 2:27 PM;JamesYu;screenshot-2.png;https://jira.hyperledger.org/secure/attachment/10018/screenshot-2.png,21/Aug/16 3:21 PM;muralisr;screenshot-3.png;https://jira.hyperledger.org/secure/attachment/10019/screenshot-3.png,,,,,,0|i00ewn:,,,,,,,,hgabre,ibmamnt,inatatsu,JamesYu,mastersingh24,muralisr,,,,,,,,,,,,,,,21/Aug/16 11:45 AM;mastersingh24;My best guess here is that the chaincode was not actually deployed successfully.  Do you have the logs for the peer to which you deployed the chaincode?,"21/Aug/16 12:03 PM;JamesYu;[~mastersingh24], here comes the log:
vagrant@hyperledger-devenv:v0.0.10-5cb3984:~$ peer node start
14:14:14.290 [main] serve -> INFO 002 Security enabled status: false
14:14:14.292 [main] serve -> INFO 003 Privacy enabled status: false
14:14:14.293 [chaincode] NewChaincodeSupport -> INFO 004 Chaincode support using peerAddress: 0.0.0.0:30303
14:14:14.290 [eventhub_producer] start -> INFO 001 event processor started
14:14:14.295 [sysccapi] RegisterSysCC -> INFO 005 system chaincode (noop,github.com/hyperledger/fabric/bddtests/syschaincode/noop) disabled
14:14:14.317 [state] loadConfig -> INFO 006 Loading configurations...
14:14:14.319 [state] loadConfig -> INFO 007 Configurations loaded. stateImplName=[buckettree], stateImplConfigs=map[numBuckets:%!s(int=1000003) maxGroupingAtEachLevel:%!s(int=5) bucketCacheSize:%!s(int=100)], deltaHistorySize=[500]
14:14:14.320 [state] NewState -> INFO 008 Initializing state implementation [buckettree]
14:14:14.322 [buckettree] initConfig -> INFO 009 configs passed during initialization = map[string]interface {}{""numBuckets"":1000003, ""maxGroupingAtEachLevel"":5, ""bucketCacheSize"":100}
14:14:14.323 [buckettree] initConfig -> INFO 00a Initializing bucket tree state implemetation with configurations &{maxGroupingAtEachLevel:5 lowestLevel:9 levelToNumBucketsMap:map[1:3 7:40001 3:65 5:1601 2:13 0:1 9:1000003 4:321 8:200001 6:8001] hashFunc:0xa8d6d0}
14:14:14.324 [buckettree] newBucketCache -> INFO 00b Constructing bucket-cache with max bucket cache size = [100] MBs
14:14:14.326 [buckettree] loadAllBucketNodesFromDB -> INFO 00c Loaded buckets data in cache. Total buckets in DB = [0]. Total cache size:=0
14:14:14.331 [consensus/controller] NewConsenter -> INFO 00d Creating default consensus plugin (noops)
14:14:14.335 [consensus/statetransfer] blockThread -> INFO 00e Validated blockchain to the genesis block
14:14:14.337 [consensus/noops] newNoops -> INFO 00f NOOPS consensus type = *noops.Noops
14:14:14.338 [consensus/noops] newNoops -> INFO 010 NOOPS block size = 500
14:14:14.338 [consensus/noops] newNoops -> INFO 011 NOOPS block wait = 1s
14:14:14.341 [rest] StartOpenchainRESTServer -> INFO 013 Initializing the REST service on 0.0.0.0:5000, TLS is disabled.
14:14:14.340 [main] serve -> INFO 012 Starting peer with ID=name:""jdoe"" , network ID=dev, address=0.0.0.0:30303, rootnodes=, validator=true
14:16:20.746 [container] WriteGopathSrc -> INFO 014 rootDirectory = /opt/gopath/src
14:16:33.637 [dockercontroller] Start -> ERRO 015 start-could not start container API error (400): {""message"":""starting container with HostConfig was deprecated since v1.10 and removed in v1.12""}
14:16:33.638 [chaincode] Launch -> ERRO 016 launchAndWaitForRegister failed Error starting container: API error (400): {""message"":""starting container with HostConfig was deprecated since v1.10 and removed in v1.12""}
14:18:45.153 [devops] invokeOrQuery -> INFO 017 Transaction ID: c6c63b02-829f-4511-ab11-b77ee3b9abf5
14:19:34.549 [devops] invokeOrQuery -> INFO 018 Transaction ID: 80d30f78-f73f-4b57-a102-2221fab972fd
14:19:59.808 [devops] invokeOrQuery -> INFO 019 Transaction ID: 6003629e-0893-456b-b922-c1435e31809d
","21/Aug/16 12:53 PM;muralisr;_>14:16:33.637 [dockercontroller] Start -> ERRO 015 start-could not start container API error (400):
{""message"":""starting container with HostConfig was deprecated since v1.10 and removed in v1.12""}_

This should have been fixed in this commit
{quote}commit a76dd3d4723f902b15f81559430c88c98b30f70c
Author: xiejunan <xiejunan@huawei.com>
Date:   Fri Aug 5 17:38:42 2016 +0800

    start container with HostConfig was deprecated since v1.10 and removed since v1.12

{quote}
","21/Aug/16 2:09 PM;JamesYu;[~muralisr], I just checkout the latest commit from github and still got the same issue.
The revision info:
{color:#14892c}$ git rev-parse HEAD{color}
5cb39849ec2adc35055e5233556848eb7370cc85

during the process of ""vargrant up"", I spotted some error message such as:
==> default: update-alternatives: error: no alternatives for mozilla-javaplugin.so
==> default: update-java-alternatives: plugin alternative does not exist: /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64/IcedTeaPlugin.so
==> default: docker rmi -f hyperledger/fabric-baseimage
==> default: Error response from daemon: No such image: hyperledger/fabric-baseimage:latest
==> default: make: 
==> default: [base-image-clean] Error 1 (ignored)
==> default: docker rmi -f hyperledger/fabric-src
==> default: Error response from daemon: No such image: hyperledger/fabric-src:latest
==> default: make: 
==> default: [src-image-clean] Error 1 (ignored)
==> default: docker rmi -f hyperledger/fabric-ccenv
==> default: Error response from daemon: No such image: hyperledger/fabric-ccenv:latest
==> default: make: 
==> default: [ccenv-image-clean] Error 1 (ignored)
==> default: docker rmi -f hyperledger/fabric-peer
==> default: Error response from daemon: No such image: hyperledger/fabric-peer:latest
==> default: make: 
==> default: [peer-image-clean] Error 1 (ignored)
==> default: docker rmi -f hyperledger/fabric-membersrvc
==> default: Error response from daemon: No such image: hyperledger/fabric-membersrvc:latest
==> default: make: 
==> default: [membersrvc-image-clean] Error 1 (ignored)

Yet, I got same error message when I deploy the chaincode:
>> the deploying end's terminal
$ peer chaincode deploy -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{""Function"":""init"", ""Args"": [""a"",""100"", ""b"", ""200""]}'
a5389f7dfb9efae379900a41db1503fea2199fe400272b61ac5fe7bd0c6b97cf10ce3aa8dd00cd7626ce02f18accc7e5f2059dae6eb0786838042958352b89fb
>> the peer's terminal
$ peer node start
13:57:27.173 [main] serve -> INFO 001 Security enabled status: false
13:57:27.174 [main] serve -> INFO 003 Privacy enabled status: false
13:57:27.173 [eventhub_producer] start -> INFO 002 event processor started
13:57:27.174 [chaincode] NewChaincodeSupport -> INFO 004 Chaincode support using peerAddress: 0.0.0.0:30303
13:57:27.176 [sysccapi] RegisterSysCC -> INFO 005 system chaincode (noop,github.com/hyperledger/fabric/bddtests/syschaincode/noop) disabled
13:57:27.193 [state] loadConfig -> INFO 006 Loading configurations...
13:57:27.194 [state] loadConfig -> INFO 007 Configurations loaded. stateImplName=[buckettree], stateImplConfigs=map[maxGroupingAtEachLevel:%!s(int=5) bucketCacheSize:%!s(int=100) numBuckets:%!s(int=1000003)], deltaHistorySize=[500]
13:57:27.194 [state] NewState -> INFO 008 Initializing state implementation [buckettree]
13:57:27.194 [buckettree] initConfig -> INFO 009 configs passed during initialization = map[string]interface {}{""maxGroupingAtEachLevel"":5, ""bucketCacheSize"":100, ""numBuckets"":1000003}
13:57:27.195 [buckettree] initConfig -> INFO 00a Initializing bucket tree state implemetation with configurations &{maxGroupingAtEachLevel:5 lowestLevel:9 levelToNumBucketsMap:map[7:40001 9:1000003 4:321 8:200001 3:65 6:8001 0:1 2:13 1:3 5:1601] hashFunc:0xa8d6d0}
13:57:27.195 [buckettree] newBucketCache -> INFO 00b Constructing bucket-cache with max bucket cache size = [100] MBs
13:57:27.195 [buckettree] loadAllBucketNodesFromDB -> INFO 00c Loaded buckets data in cache. Total buckets in DB = [0]. Total cache size:=0
13:57:27.196 [genesis] func1 -> INFO 00d Creating genesis block.
13:57:27.202 [consensus/controller] NewConsenter -> INFO 00e Creating default consensus plugin (noops)
13:57:27.202 [consensus/statetransfer] blockThread -> INFO 00f Validated blockchain to the genesis block
13:57:27.204 [consensus/noops] newNoops -> INFO 010 NOOPS consensus type = *noops.Noops
13:57:27.204 [consensus/noops] newNoops -> INFO 011 NOOPS block size = 500
13:57:27.204 [consensus/noops] newNoops -> INFO 012 NOOPS block wait = 1s
13:57:27.205 [rest] StartOpenchainRESTServer -> INFO 013 Initializing the REST service on 0.0.0.0:5000, TLS is disabled.
13:57:27.206 [main] serve -> INFO 014 Starting peer with ID=name:""jdoe"" , network ID=dev, address=0.0.0.0:30303, rootnodes=, validator=true
13:59:51.945 [container] WriteGopathSrc -> INFO 015 rootDirectory = /opt/gopath/src
14:00:04.234 [dockercontroller] Start -> ERRO 016 start-could not start container API error (400): {""message"":""starting container with HostConfig was deprecated since v1.10 and removed in v1.12""}
14:00:04.235 [chaincode] Launch -> ERRO 017 launchAndWaitForRegister failed Error starting container: API error (400): {""message"":""starting container with HostConfig was deprecated since v1.10 and removed in v1.12""}

Given the chaincode is not deployed correctly, I can still invoke the chaincode without a problem, strange...
>> the deploying end's terminal
$ peer chaincode invoke -n a5389f7dfb9efae379900a41db1503fea2199fe400272b61ac5fe7bd0c6b97cf10ce3aa8dd00cd7626ce02f18accc7e5f2059dae6eb0786838042958352b89fb -c '{""Function"": ""invoke"", ""Args"": [""a"", ""b"", ""10""]}'
aa12ec17-f762-414b-a2b8-7a5f2cf76f76
>> peer's terimal
14:07:17.870 [devops] invokeOrQuery -> INFO 018 Transaction ID: aa12ec17-f762-414b-a2b8-7a5f2cf76f76

I will give commit a76dd3d4723f902b15f81559430c88c98b30f70c a try later and see how it goes.","21/Aug/16 2:27 PM;JamesYu;I just had a closer look to the repository I cloned from github (following instruction provided in http://hyperledger-fabric.readthedocs.io/en/latest/dev-setup/devenv/) 
 !screenshot-2.png|thumbnail! 
I did my clone with this command:
$ git clone https://github.com/hyperledger/fabric.git
and found no commit on Fri Aug 5 2016
 !screenshot-1.png|thumbnail! 

","21/Aug/16 3:22 PM;muralisr;[~cyu021] github is deprecated and been moved to gerrit. Can you try from there please ?

 !screenshot-3.png|thumbnail! ","21/Aug/16 4:38 PM;JamesYu;[~muralisr] I cloned the latest code from gerrit
Both CLI command and REST API provided on http://hyperledger-fabric.readthedocs.io/en/latest/Setup/Chaincode-setup/ works no more.
When I adjust CLI command according to the error message (1 key + 4 values), I get a new error message...

>> deploy end's terminal
vagrant@hyperledger-devenv:v0.0.10-47c3f6c:~$ {color:#14892c}peer chaincode deploy -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{""Function"":""init"", ""Args"": [""a"",""100"", ""b"", ""200""]}'{color}
{color:#d04437}Error: Non-empty JSON chaincode parameters must contain exactly 1 key: 'Args'{color}
Usage:
  peer chaincode deploy [flags]

Global Flags:
  -a, --attributes string          User attributes for the chaincode in JSON format (default ""[]"")
  -c, --ctor string                Constructor message for the chaincode in JSON format (default ""{}"")
  -l, --lang string                Language the chaincode is written in (default ""golang"")
      --logging-level string       Default logging level and overrides, see core.yaml for full syntax
  -n, --name string                Name of the chaincode returned by the deploy transaction
  -p, --path string                Path to chaincode
      --test.coverprofile string   Done (default ""coverage.cov"")
  -t, --tid string                 Name of a custom ID generation algorithm (hashing and decoding) e.g. sha256base64
  -u, --username string            Username for chaincode operations when security is enabled
  -v, --version                    Display current version of fabric peer server

vagrant@hyperledger-devenv:v0.0.10-47c3f6c:~$ {color:#14892c}curl -sb -X POST -d '{ ""jsonrpc"": ""2.0"", ""method"": ""deploy"", ""params"": { ""type"": 1, ""chaincodeID"":{ ""path"": ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" }, ""ctorMsg"": { ""function"":""init"", ""args"":[""a"", ""100"", ""b"", ""200""] }, ""secureContext"": ""jim"" }, ""id"": 1 }' localhost:7051/chaincode; echo{color}
{color:#d04437}??{color}
vagrant@hyperledger-devenv:v0.0.10-47c3f6c:~$ {color:#14892c}peer chaincode deploy -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{""Args"": [""a"",""100"", ""b"", ""200""]}'{color}
vagrant@hyperledger-devenv:v0.0.10-47c3f6c:~$ 

>> peer's terminal
vagrant@hyperledger-devenv:v0.0.10-47c3f6c:/opt/gopath/src/github.com/hyperledger/fabric$ peer node start
16:16:03.225 [nodeCmd] serve -> INFO 002 Security enabled status: false
16:16:03.225 [nodeCmd] serve -> INFO 003 Privacy enabled status: false
16:16:03.224 [eventhub_producer] start -> INFO 001 event processor started
16:16:03.242 [chaincode] NewChaincodeSupport -> INFO 004 Chaincode support using peerAddress: 0.0.0.0:7051
16:16:03.243 [sysccapi] RegisterSysCC -> INFO 005 system chaincode (noop,github.com/hyperledger/fabric/bddtests/syschaincode/noop) disabled
16:16:03.246 [state] loadConfig -> INFO 006 Loading configurations...
16:16:03.247 [state] loadConfig -> INFO 007 Configurations loaded. stateImplName=[buckettree], stateImplConfigs=map[bucketCacheSize:%!s(int=100) numBuckets:%!s(int=1000003) maxGroupingAtEachLevel:%!s(int=5)], deltaHistorySize=[500]
16:16:03.247 [state] NewState -> INFO 008 Initializing state implementation [buckettree]
16:16:03.248 [buckettree] initConfig -> INFO 009 configs passed during initialization = map[string]interface {}{""bucketCacheSize"":100, ""numBuckets"":1000003, ""maxGroupingAtEachLevel"":5}
16:16:03.248 [buckettree] initConfig -> INFO 00a Initializing bucket tree state implemetation with configurations &{maxGroupingAtEachLevel:5 lowestLevel:9 levelToNumBucketsMap:map[9:1000003 3:65 1:3 0:1 6:8001 8:200001 7:40001 5:1601 4:321 2:13] hashFunc:0xa5e130}
16:16:03.250 [buckettree] newBucketCache -> INFO 00b Constructing bucket-cache with max bucket cache size = [100] MBs
16:16:03.251 [buckettree] loadAllBucketNodesFromDB -> INFO 00c Loaded buckets data in cache. Total buckets in DB = [0]. Total cache size:=0
16:16:03.252 [genesis] func1 -> INFO 00d Creating genesis block.
16:16:03.272 [consensus/controller] NewConsenter -> INFO 00e Creating default consensus plugin (noops)
16:16:03.275 [consensus/statetransfer] blockThread -> INFO 00f Validated blockchain to the genesis block
16:16:03.277 [consensus/noops] newNoops -> INFO 010 NOOPS consensus type = *noops.Noops
16:16:03.277 [consensus/noops] newNoops -> INFO 011 NOOPS block size = 500
16:16:03.277 [consensus/noops] newNoops -> INFO 012 NOOPS block wait = 1s
16:16:03.280 [nodeCmd] serve -> INFO 013 Starting peer with ID=name:""jdoe"" , network ID=dev, address=0.0.0.0:7051, rootnodes=, validator=true
16:16:03.281 [rest] StartOpenchainRESTServer -> INFO 014 Initializing the REST service on 0.0.0.0:7050, TLS is disabled.
2016/08/21 16:18:56 transport: http2Server.HandleStreams received bogus greeting from client: ""POST /chaincode HTTP/1.1""
16:21:42.867 [container] WriteGopathSrc -> INFO 015 rootDirectory = /opt/gopath/src
16:21:56.155 [chaincode] processStream -> ERRO 016 Got error: Incorrect number of arguments. Expecting 4
16:21:56.155 [chaincode] Launch -> ERRO 017 sending init failed(Error initializing container b20954c346f2efec1679f5054bc7ab153398b791882b0af95f0cbd22c1065590586897149f8552a93684eb1c1b322a5c5de08ec4fc88fb18073d6b931c3d9544: Incorrect number of arguments. Expecting 4)
16:21:56.177 [chaincode] processStream -> ERRO 018 Error handling chaincode support stream: connection error: desc = ""transport is closing""

Since http://hyperledger-fabric.readthedocs.io/ is no longer up-to-date, where can new comers find helpful documents / instructions / tutorials ?
","21/Aug/16 7:56 PM;muralisr;There have been recent changes to API that require you no longer have to provide ""Function"" argument (it is now part of the ""Args""). Can you try this please

peer chaincode deploy -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{""Args"" [""init"",""a"",""100"", ""b"", ""200""]}'

I think there's either a request for doc change or there'll one (hopefully soon). Thanks for your patience!","21/Aug/16 10:04 PM;JamesYu;[~muralisr] Thanks for the heads up, these CLI commands works:
vagrant@hyperledger-devenv:v0.0.10-47c3f6c:~$ {color:#14892c}CORE_LOGGING_LEVEL=debug peer chaincode deploy -p github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02 -c '{""Args"": [""init"",""a"",""100"", ""b"", ""200""]}'{color}
21:57:39.809 [logging] LoggingInit -> DEBU 001 Setting default logging level to DEBUG for command 'chaincode'
21:57:43.288 [chaincodeCmd] chaincodeDeploy -> INFO 002 Deploy result: type:GOLANG chaincodeID:<path:""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" name:""{color:#14892c}0588c9b192603a2d39f2223ec524e30119698a36e77369c9d6df2ca16b85043406c67502787362e99f46d68b81b3f59000a149041ddba90047cf72e56fdfce96{color}"" > ctorMsg:<args:""init"" args:""a"" args:""100"" args:""b"" args:""200"" > 
21:57:43.300 [main] main -> INFO 003 Exiting.....
vagrant@hyperledger-devenv:v0.0.10-47c3f6c:~$ 
vagrant@hyperledger-devenv:v0.0.10-47c3f6c:~$ 
vagrant@hyperledger-devenv:v0.0.10-47c3f6c:~$ {color:#14892c}CORE_LOGGING_LEVEL=debug peer chaincode query -n 0588c9b192603a2d39f2223ec524e30119698a36e77369c9d6df2ca16b85043406c67502787362e99f46d68b81b3f59000a149041ddba90047cf72e56fdfce96 -c '{""Args"": [""query"",""a""]}'{color}
21:58:39.451 [logging] LoggingInit -> DEBU 001 Setting default logging level to DEBUG for command 'chaincode'
21:58:39.478 [chaincodeCmd] chaincodeInvokeOrQuery -> INFO 002 Successfully queried transaction: chaincodeSpec:<type:GOLANG chaincodeID:<name:""0588c9b192603a2d39f2223ec524e30119698a36e77369c9d6df2ca16b85043406c67502787362e99f46d68b81b3f59000a149041ddba90047cf72e56fdfce96"" > ctorMsg:<args:""query"" args:""a"" > > 
{color:#14892c}Query Result: 100{color}
21:58:39.481 [main] main -> INFO 003 Exiting.....

So do I close this one and open another request for document change or else?

","21/Aug/16 11:31 PM;JamesYu;BTW, I suppose the changes also apply to REST API?

I issued the following requests:
vagrant@hyperledger-devenv:v0.0.10-47c3f6c:~$ {color:#14892c}curl -sb -X POST -d '{ ""jsonrpc"": ""2.0"", ""method"": ""deploy"", ""params"": { ""type"": 1, ""chaincodeID"":{ ""path"": ""github.com/hyperledger/fabric/examples/chaincode/go/chaincode_example02"" }, ""ctorMsg"": { ""args"":[""init"", ""a"", ""100"", ""b"", ""200""] }}}' localhost:7051/chaincode; echo{color}
{color:#d04437}??{color}
vagrant@hyperledger-devenv:v0.0.10-47c3f6c:~$ {color:#14892c}curl -sb -X POST -d '{ ""jsonrpc"": ""2.0"", ""method"": ""query"", ""params"": { ""type"": 1, ""chaincodeID"":{ ""name"":""0588c9b192603a2d39f2223ec524e30119698a36e77369c9d6df2ca16b85043406c67502787362e99f46d68b81b3f59000a149041ddba90047cf72e56fdfce96"" }, ""ctorMsg"": { ""function"":""query"", ""args"":[""a""] } }, ""id"": 5 }' localhost:7051/chaincode; echo{color}
{color:#d04437}??{color}

ang peers seems to treat them as bogus greetings:
2016/08/21 23:00:00 transport: {color:#d04437}http2Server.HandleStreams received bogus greeting from client{color}: ""POST /chaincode HTTP/1.1""
2016/08/21 23:01:11 transport: {color:#d04437}http2Server.HandleStreams received bogus greeting from client{color}: ""POST /chaincode HTTP/1.1""
","26/Aug/16 12:25 AM;ibmamnt;I see this error too.  I can no longer deploy chaincode with Node.sdk. I'm using v0.5-developer-preview version to sync with IBM Bluemix services ( I guess this service can not import latest code, just to fix this problem, not sure at this point).

Is there any quick work around for this ? Down grade docker engine to 1.11 ?","02/Sep/16 11:10 AM;hgabre;I tried the process described and it worked:
vagrant@hyperledger-devenv:v0.0.10-457635a:/opt/gopath/src/github.com/hyperledger/fabric$ ./build/bin/peer chaincode query -n 980d4bb7f69578592e5775a6da86d81a221887817d7164d3e9d4d4df1c981440abf9a61417eaf8ad6f7fc79893da36de2cf4709131e9af39bca6ebc2e5a1cd9d -c '{""Function"": ""query"", ""Args"": [""b""]}'
11:08:59.056 [logging] LoggingInit -> DEBU 001 Setting default logging level to DEBUG for command 'chaincode'
11:08:59.326 [chaincodeCmd] chaincodeInvokeOrQuery -> INFO 002 Successfully queried transaction: chaincodeSpec:<type:GOLANG chaincodeID:<name:""980d4bb7f69578592e5775a6da86d81a221887817d7164d3e9d4d4df1c981440abf9a61417eaf8ad6f7fc79893da36de2cf4709131e9af39bca6ebc2e5a1cd9d"" > ctorMsg:<args:""query"" args:""b"" > >
*Query Result: 210*
11:08:59.327 [main] main -> INFO 003 Exiting.....",02/Apr/17 12:35 PM;mastersingh24;This was not really a bug but more of a question. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Should not commit prior version chaincode execution results to chain running at later version of chaincode,FAB-198,12498,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,,denyeart,denyeart,20/Aug/16 11:14 AM,03/May/17 10:34 AM,26/Apr/18 6:50 AM,03/May/17 10:34 AM,,,,v1.0.0,,fabric-peer,,,,,14/Oct/16 12:00 AM,0,committer,endorser,Ledger,,,,,"At endorsement time, need to store chaincode version number in the proposal response (ChaincodeAction), and then at commit time verify that the version is still the latest/active chaincode version.",,,,,,,,,,,,,,FAB-1516,,,,,,,,,,,,,,,,,FAB-758,0|hzzz76:zzx,,Sprint 10 - Ledger,Sprint 12 - Ledger,Sprint 13 - Ledger,Sprint 14  - Ledger,Sprint 15  - Ledger,Sprint 16  - Ledger,binhn,denyeart,Honglei,inatatsu,jiangyaoguo,muralisr,troyronda,,,,,,,,,,,,,,"11/Apr/17 6:38 PM;denyeart;[~muralisr] Now that chaincode upgrade is complete, what is your opinion of the additional validation check mentioned in the Description here?","18/Apr/17 10:13 PM;binhn;I hope nothing else is needed, but as we chatted, we might want to look into chaincode version during upgrade to check that the version of a chaincode hasn't been changed on the transactions when we commit; if version has been changed, the transaction must be invalid.","18/Apr/17 11:11 PM;denyeart;[~binhn] [~muralisr]
Thanks for the pointer to the discussion in https://gerrit.hyperledger.org/r/#/c/7831.
I always assumed the chaincode version would have to go into the proposal response somewhere, so that it could be validated to be the same at commit time.

Question - Would the version have to go into the RWSet per se? Or could it simply be a new field in the ChaincodeAction? I think of RWSet as the chaincode data. Metadata about the execution of the chaincode could go in ChaincodeAction couldn't it?","19/Apr/17 2:48 AM;muralisr;[~denyeart] [~binhn]
there are 3 ways we can do this with
# add it to RW set
# just set the Version field in ChaincodeHeaderExtension.ChaincodeID at endorsement time
# have user set the Version field in ChaincodeHeaderExtension.ChaincodeID at proposal time
# add a new version field to ChaincodeAction 

2 is out (we cannot modify signed structures) 
3 is possible but users have to keep track of version (which is kinda silly given we support only one - the latest)

Its between 1 and 4. Agree with [~denyeart] that it might be best to handle it as part of chaincode processing as opposed to ledger processing. We have all the chaincode level structures available for processing at the top level instead of relegating to ledger to extract it (or process it later in the validation callpath).

The work is straightforward
* add a version field to ChaincodeAction
* set the version in endorser (we have all the information)
* validate the information at committer (we have all the information)

What do you think [~jiangyaoguo]
",19/Apr/17 3:14 AM;jiangyaoguo;Agree with 4.  Way 1 needs reserved key in RW-set to save version. it might be overwritten by cc.,"21/Apr/17 12:18 PM;denyeart;Ok, since it will be in peer (endorser/committer) logic rather than ledger, I will move to component fabric-peer.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cut an ERROR log message if a checkpoint failure occurs,FAB-189,12489,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,kchristidis,bmos299,bmos299,19/Aug/16 8:26 PM,31/May/17 1:58 PM,26/Apr/18 6:50 AM,11/Sep/16 4:13 PM,,,,v0.6,,fabric-orderer,,,,,,0,consensus,fabric05,,,,,,If the pbft checkpoint incurs a failure (different hash's) and can not proceed.  The fabric needs to cut and ERROR message.   This has cost us a lot of PD time. ,,;13/Sep/16 6:39 AM;kchristidis;28800,,,,28800,0,28800,100%,28800,0,28800,,,,,,,,,,,,,,,,,,,,0|i00es7:,,Sprint 1,,,,,,bmos299,corecode,kchristidis,mastersingh24,tuand,,,,,,,,,,,,feature/convergence,master,,true,"19/Aug/16 9:25 PM;kchristidis;I want to double-check with our team to make sure I'm not missing anything, but I think f+2 observed different checkpoints for the same sequence number could act as such a halting condition.",20/Aug/16 2:36 AM;bmos299;In Slack'ing with Kostas and Info message may be best. ,22/Aug/16 11:35 AM;corecode;I'd say the peer should panic,"22/Aug/16 1:02 PM;tuand;We spit out a debug message saying ""out of sequence numbers"" and ignore the incoming request.  Probably should panic at this point.","30/Aug/16 6:30 PM;bmos299;Hi Simon and Tuan, once I am out of sequence...is it true to say I will never get back in sequence? If that is true, then I think a panic is the right solution.
Thanks, 
Barry","30/Aug/16 8:42 PM;kchristidis;Barry, just making sure that the phrasing is clear --

If *the network* finds no stable certificate for the checkpoint then it'll be stuck, and panicking every peer is the right way to go.

If *a peer* gets out of sequence while the rest of the network is making progress normally (i.e. a stable certificate is found, etc.) then *the peer* will get back on track. (I've explained how this works at a very low level in our internal z repo - see issue 164.)

It's not clear from the original description whether you focus on the network as a whole, or a specific peer (you write ""I"" in your most recent comment for instance). I was the one who debugged the IGF issue a couple of weeks so I'm pretty certain you refer to the network, but I want to make sure we're all on the same page.",31/Aug/16 9:32 AM;corecode;I still would suggest panicing the local peer that diverged.  It should never happen and is an indication of some fatal failure.,"01/Sep/16 2:05 PM;bmos299;Thanks for the updates.  I am thinking in the case where the hash for a particular block is different  between peers.  I assume they will never converge? I understand there is a difference between being out of sequence (at a different block height) vs calculating a different hash for a particular block.  Is my understanding correct?  If so,  I like Simon's solution of panicing the peer and cutting a message that provides useful information.

If my understanding is incorrect, please ping me and we can chat.   ...and Kostas, yes Issue 164 has become the key document!

Thanks, Barry","01/Sep/16 2:15 PM;kchristidis;If you cannot get 2f+1 peers to agree, then the network cannot converge, yes.

I do not find anything wrong with Simon's suggestion.","08/Sep/16 3:15 PM;mastersingh24;[~kchristidis] - this is done and merged already, correct?","09/Sep/16 4:42 AM;kchristidis;Incorrect. (You were probably thinking of the warning message which has indeed already been merged.)

I just submitted two PRs that address the two scenarios we examine:

1. No stable cert for the network: If the peer identifies > f+1 different checkpoint values for the same sequence number, it panics. This indicates a network that won't be able to acquire a stable checkpoint certificate for this sequence number, and will therefore stop doing progress.

2. Peer's own state diverging: If the peer's own checkpoint differs from a witnessed weak checkpoint certificate, it panics.

Will mark the task as done when the PRs are merged.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
peer incorrectly reports internal Docker IP,FAB-4,12302,Bug,Done,FAB,Fabric,software,ChristopherFerris,,,High,Done,rseeger,ChristopherFerris,ChristopherFerris,09/Aug/16 5:19 PM,10/Aug/16 5:19 PM,26/Apr/18 6:50 AM,10/Aug/16 5:19 PM,,,,,,,,,,,,0,discovery,,,,,,,"
rseeger [12:54 PM]  
Hello -- I have a peer discovery issue. The peers are reporting their internal Docker IPs (172.x.x.x) instead of their external IP addresses, so other peers are unable to connect e.g. here's the info a peer received about peer ID HL2:

```16:49:55.556 [peer] beforePeers -> DEBU 2b4f9 Received PeersMessage with Peers: peers:<ID:<name:""HL2"" > address:""172.17.0.28:7051"" type:VALIDATOR > peers:<ID:<name:""Cisco-hl3"" > address:""172.17.0.2:7051"" type:VALIDATOR >```

Anyone familiar with this particular issue?

rseeger [1:04 PM]  
i.e. 
Peer1 starts up. Peer2 starts up pointing to Peer1's CORE_PEER_DISCOVERY_ROOTNODE external IP. Peer2 says ""Hi, in case anyone asks, my IP is 172.17.41.1"" (wrong). Peer3 starts up also pointing to Peer1's CORE_PEER_DISCOVERY_ROOTNODE external IP and asks for peers. Peer1 says it knows about Peer2 at 172.17.41.1. Peer3 tries to connect to Peer2 at that IP, but times out because that's an internal docker IP on a different machine. (edited)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0|i00dvz:,,,,,,,,bgorman,ChristopherFerris,rseeger,,,,,,,,,,,,,,,,,,"09/Aug/16 5:49 PM;rseeger;First peer is started with:

{{docker run -d -it -e CORE_VM_ENDPOINT=http://172.17.42.1:2375 -e CORE_LOGGING_LEVEL=DEBUG -e CORE_PEER_ID=HL1 -e CORE_PEER_ADDRESSAUTODETECT=true -p 7051:7051 hyperledger/fabric-peer peer node start}}

Then we start subsequent peers (on different machines) to point to the external IP of the first (let's say it's 10.20.30.40):

{{docker run -d -it -e CORE_VM_ENDPOINT=http://172.17.0.1:2375 -e CORE_PEER_ID=HL2 -e CORE_PEER_ADDRESSAUTODETECT=true -e CORE_PEER_DISCOVERY_ROOTNODE=10.20.30.40:7051 -e CORE_LOGGING_LEVEL=DEBUG -p 7051:7051 hyperledger/fabric-peer peer node start}}

All the peers can talk to the first one (because the external IP is explicitly specified) but not each other (because they only announce their Docker IPs)","09/Aug/16 10:01 PM;rseeger;I think the solution would be to pass the host IP to the docker container (as -e argument), then modify GetLocaIP() to check for that first. The docker-ized peer would then announce the correct IP to the network. I could make a pull request for this if it the correct approach. Thoughts?","10/Aug/16 2:34 AM;bgorman;Turn off autodetection and supply the external IP or hostname manually:
-e CORE_PEER_ADDRESSAUTODETECT=false -e CORE_PEER_ADDRESS=routable.host.name.or.ip:7051",10/Aug/16 5:19 PM;rseeger;Perfect! Thanks,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
